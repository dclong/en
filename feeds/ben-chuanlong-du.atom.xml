<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ben Chuanlong Du's Blog - Ben Chuanlong Du</title><link href="https://www.legendu.net/en/" rel="alternate"></link><link href="https://www.legendu.net/en/feeds/ben-chuanlong-du.atom.xml" rel="self"></link><id>https://www.legendu.net/en/</id><updated>2025-06-19T11:03:55-07:00</updated><subtitle>And let it direct your passion with reason.</subtitle><entry><title>Tips on the find command in Linux</title><link href="https://www.legendu.net/en/blog/find-tips/" rel="alternate"></link><published>2014-09-06T09:43:30-07:00</published><updated>2025-06-19T11:03:55-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-09-06:/en/blog/find-tips/</id><summary type="html">&lt;h2 id="better-alternatives-to-find"&gt;Better Alternatives to &lt;code&gt;find&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;There are some better alternatives to find.
The Python module &lt;code&gt;pathlib&lt;/code&gt; is the most suitable one for relatively complex jobs.
&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;ripgrep&lt;/code&gt;, &lt;code&gt;fselect&lt;/code&gt; and &lt;code&gt;osquery&lt;/code&gt; 
are other alternatives.&lt;/p&gt;
&lt;table class="comparison-table"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://man7.org/linux/man-pages/man1/find.1.html"&gt;find&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://man7.org/linux/man-pages/man1/find.1.html"&gt;fd&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://github.com/jhspetersson/fselect"&gt;fselect&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://github.com/jhspetersson/fselect"&gt;osquery&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://github.com/BurntSushi/ripgrep "&gt;ripgrep (rg)&lt;/a&gt; 
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Primary Use Case&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;File metadata search &amp; execution&lt;/strong&gt; (scripting)&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Interactive file name search …&lt;/strong&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h2 id="better-alternatives-to-find"&gt;Better Alternatives to &lt;code&gt;find&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;There are some better alternatives to find.
The Python module &lt;code&gt;pathlib&lt;/code&gt; is the most suitable one for relatively complex jobs.
&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;ripgrep&lt;/code&gt;, &lt;code&gt;fselect&lt;/code&gt; and &lt;code&gt;osquery&lt;/code&gt; 
are other alternatives.&lt;/p&gt;
&lt;table class="comparison-table"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://man7.org/linux/man-pages/man1/find.1.html"&gt;find&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://man7.org/linux/man-pages/man1/find.1.html"&gt;fd&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://github.com/jhspetersson/fselect"&gt;fselect&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://github.com/jhspetersson/fselect"&gt;osquery&lt;/a&gt;
            &lt;/th&gt;
            &lt;th&gt;
                &lt;a href="https://github.com/BurntSushi/ripgrep "&gt;ripgrep (rg)&lt;/a&gt; 
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Primary Use Case&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;File metadata search &amp; execution&lt;/strong&gt; (scripting)&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Interactive file name search&lt;/strong&gt; (developer productivity)&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;SQL-based file attribute search&lt;/strong&gt; (data analysis)&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;System instrumentation &amp; security&lt;/strong&gt; (fleet management)&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;File content search&lt;/strong&gt; (code searching)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Usability/Syntax&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;Low&lt;/strong&gt;. Powerful but arcane, non-intuitive syntax.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Very High&lt;/strong&gt;. Simple, ergonomic, sensible defaults.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;High&lt;/strong&gt;. SQL-like syntax is very readable for complex queries.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Low&lt;/strong&gt;. Requires knowledge of SQL and specific OS schemas.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Very High&lt;/strong&gt;. Simple, &lt;code&gt;grep&lt;/code&gt;-like, sensible defaults.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;Fair&lt;/strong&gt;. Single-threaded by default. Slow in codebases.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Excellent&lt;/strong&gt;. Parallel, ignores gitignored/hidden files by default.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Very Good&lt;/strong&gt;. Optimized for its complex query execution.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Good&lt;/strong&gt;. Optimized for low-overhead daemon, not raw traversal speed.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Exceptional&lt;/strong&gt;. The gold standard for file content search speed.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;C&lt;/strong&gt;. Universally available, part of &lt;code&gt;findutils&lt;/code&gt;.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;. Single static binary, needs installation.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;. Single static binary, needs installation.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;C++&lt;/strong&gt;. Cross-platform framework, needs installation.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Rust&lt;/strong&gt;. Single static binary, needs installation.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Key Strength&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;Ubiquity &amp; &lt;code&gt;-exec&lt;/code&gt;&lt;/strong&gt;. The POSIX standard, powerful actions.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Speed &amp; Ergonomics&lt;/strong&gt;. The perfect interactive &lt;code&gt;find&lt;/code&gt; replacement.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Expressive Query Language&lt;/strong&gt;. Unmatched for complex attribute filters.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Holistic System View&lt;/strong&gt;. Queries files alongside processes, users, etc.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Raw Speed for Content Search&lt;/strong&gt;. The fastest tool for finding text in files.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Key Weakness&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;&lt;strong&gt;Clunky syntax &amp; poor defaults&lt;/strong&gt;. Not user-friendly.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Less powerful expressions&lt;/strong&gt; than &lt;code&gt;find&lt;/code&gt; for edge cases.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Niche use case&lt;/strong&gt;. Overkill for simple searches.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Massive overkill&lt;/strong&gt; for just finding files. Steep learning curve.&lt;/td&gt;
            &lt;td&gt;&lt;strong&gt;Not a file finder&lt;/strong&gt;. Only lists files as a secondary function (&lt;code&gt;-l&lt;/code&gt;).&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th scope="row"&gt;&lt;strong&gt;Best For...&lt;/strong&gt;&lt;/th&gt;
            &lt;td&gt;Shell scripts, system administration, guaranteed portability.&lt;/td&gt;
            &lt;td&gt;Developers, daily interactive use, searching in git repos.&lt;/td&gt;
            &lt;td&gt;Data analysts, sysadmins running complex filesystem audits.&lt;/td&gt;
            &lt;td&gt;Security engineers, SREs, IT compliance teams.&lt;/td&gt;
            &lt;td&gt;Developers, searching for code, log analysis.&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="example-usages"&gt;Example Usages&lt;/h2&gt;
&lt;h3 id="search-files-by-name"&gt;Search Files By Name&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find all files with the extension ".out" in the current directory and its subdirectory, 
    and then make them executable.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-iname&lt;span class="w"&gt; &lt;/span&gt;*.out&lt;span class="w"&gt; &lt;/span&gt;-exec&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{}&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\;&lt;/span&gt;
&lt;span class="c1"&gt;# or you can use &lt;/span&gt;
find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-iname&lt;span class="w"&gt; &lt;/span&gt;*.out&lt;span class="w"&gt; &lt;/span&gt;-print0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;-0&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find files whose names contain "conflicted" and remove them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-iname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*conflicted*&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-print0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;-0&lt;span class="w"&gt; &lt;/span&gt;rm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find Python scripts in the current directory recursively
    but ignore those under directories with the name &lt;code&gt;.ipynb_checkpoints&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-iname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-not&lt;span class="w"&gt; &lt;/span&gt;-path&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*/.ipynb_checkpoints/*&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="search-files-by-size"&gt;Search Files by Size&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find files with 0 size and delete them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/path/to/files&lt;span class="w"&gt; &lt;/span&gt;-size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-ok&lt;span class="w"&gt; &lt;/span&gt;-exec&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\;&lt;/span&gt;
&lt;span class="c1"&gt;# or you can use&lt;/span&gt;
find&lt;span class="w"&gt; &lt;/span&gt;/path/to/files&lt;span class="w"&gt; &lt;/span&gt;-size&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-ok&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;rm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find empty directories. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;d&lt;span class="w"&gt; &lt;/span&gt;-empty
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find files greater than 1G.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-xdev&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-size&lt;span class="w"&gt; &lt;/span&gt;+1G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First find files and then pass them to other commands is a very useful trick.
    For example, 
    you can use the following command to find all R scripts containing the word &lt;code&gt;paste&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-iname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.r&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;--color&lt;span class="o"&gt;=&lt;/span&gt;auto&lt;span class="w"&gt; &lt;/span&gt;paste
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="search-files-by-time"&gt;Search Files by Time&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find files created with in 60 minutes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-cmin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;60&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find files more than 30 days ago&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-ctime&lt;span class="w"&gt; &lt;/span&gt;+30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find file less than 30 days ago.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-ctime&lt;span class="w"&gt; &lt;/span&gt;-30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find files that are exactly 30 days ago.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-ctime&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find all files modified on the June 7, 2007 in the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-newermt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2007&lt;/span&gt;-06-07&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;-newermt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2007&lt;/span&gt;-06-08
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find all files accessed on the Sep 29, 2008 in the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-newerat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2008&lt;/span&gt;-09-29&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;-newerat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2008&lt;/span&gt;-09-30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find files which had their permission changed on the same day.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-newerct&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2008&lt;/span&gt;-09-29&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;-newerct&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2008&lt;/span&gt;-09-30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="search-files-by-type"&gt;Search Files by Type&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find broken symbolic links.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-xtype&lt;span class="w"&gt; &lt;/span&gt;l
&lt;span class="c1"&gt;# or&lt;/span&gt;
find&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find executable files in current directory &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt;  &lt;/span&gt;-maxdepth&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;-executable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check file type of all files under the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;f&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="search-files-by-user-permission"&gt;Search Files by User Permission&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find files that belong to a user but writable by its group or other people.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/path/to/file&lt;span class="w"&gt; &lt;/span&gt;-user&lt;span class="w"&gt; &lt;/span&gt;user1&lt;span class="w"&gt; &lt;/span&gt;-perm&lt;span class="w"&gt; &lt;/span&gt;/022
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-perm mode&lt;/code&gt;: File's permission bits are exactly mode (octal or symbolic).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-perm -mode&lt;/code&gt;: All  of  the  permission bits mode are set for the file. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;-perm /mode&lt;/code&gt;: Any of the permission bits mode are set for the file. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following command finds all files that readable or writable by the group or (readable or writable) by others.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/path/to/file&lt;span class="w"&gt; &lt;/span&gt;-user&lt;span class="w"&gt; &lt;/span&gt;user1&lt;span class="w"&gt; &lt;/span&gt;-perm&lt;span class="w"&gt; &lt;/span&gt;/066
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following command find all files that readable and writable by the group and (readable and writable) by others.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/path/to/file&lt;span class="w"&gt; &lt;/span&gt;-user&lt;span class="w"&gt; &lt;/span&gt;user1&lt;span class="w"&gt; &lt;/span&gt;-perm&lt;span class="w"&gt; &lt;/span&gt;-066
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following command find all files that readable or writable by the group and (readable or writable) by others.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/path/to/file&lt;span class="w"&gt; &lt;/span&gt;-user&lt;span class="w"&gt; &lt;/span&gt;user1&lt;span class="w"&gt; &lt;/span&gt;-perm&lt;span class="w"&gt; &lt;/span&gt;/060&lt;span class="w"&gt; &lt;/span&gt;-perm&lt;span class="w"&gt; &lt;/span&gt;/006
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/faq/find-command-exclude-ignore-files/"&gt;Find command Exclude or Ignore Files (e.g. Ignore All Hidden .dot Files )&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://linuxconfig.org/how-to-explicitly-exclude-directory-from-find-command-s-search"&gt;How to Exclude Directories from the Find Command Search in Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="Linux"></category><category term="find"></category><category term="tips"></category><category term="search"></category><category term="locate"></category></entry><entry><title>My Docker Images</title><link href="https://www.legendu.net/en/blog/my-docker-images/" rel="alternate"></link><published>2018-10-18T09:10:17-07:00</published><updated>2025-05-27T12:02:53-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-10-18:/en/blog/my-docker-images/</id><summary type="html">&lt;h2 id="recommended-docker-images"&gt;Recommended Docker Images and Tags&lt;/h2&gt;

&lt;p&gt;Most of my Docker images have different variants 
(corresponding to tags &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, etc) 
for different use cases.
And each tag might have histocial versions 
with the pattern &lt;code&gt;mmddhh&lt;/code&gt; 
(&lt;code&gt;mm&lt;/code&gt;, &lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;hh&lt;/code&gt; stand for the month, day and hour) 
for fallback if a tag …&lt;/p&gt;</summary><content type="html">&lt;h2 id="recommended-docker-images"&gt;Recommended Docker Images and Tags&lt;/h2&gt;

&lt;p&gt;Most of my Docker images have different variants 
(corresponding to tags &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, etc) 
for different use cases.
And each tag might have histocial versions 
with the pattern &lt;code&gt;mmddhh&lt;/code&gt; 
(&lt;code&gt;mm&lt;/code&gt;, &lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;hh&lt;/code&gt; stand for the month, day and hour) 
for fallback if a tag is broken.
Please refer to the following tag table for more details.&lt;/p&gt;
&lt;table class="tg"&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class="tg-0pky"&gt; Tag &lt;/th&gt;
    &lt;th class="tg-0pky"&gt; Base Image OS &lt;/th&gt;
    &lt;th class="tg-0lax"&gt; Comment &lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt; latest &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Ubuntu LTS (or newer if necessary and well tested) 
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        The most recent stable version of the Docker image. 
        &lt;span style="color:green"&gt;
            The latest tag is what most users should use.
        &lt;/span&gt;
        &lt;br&gt;
        It cares more about user friendliness than Docker image size, load speed and even security.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt; next &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Ubuntu LTS (or newer if necessary and well tested) 
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt;
        The most recent testing version of the Docker image.
        &lt;br&gt;
        New features/tools will be added into the next tag 
        before entering other tags.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt; 23.04 &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Ubuntu 23.04
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt;
        For any of the following situations: &lt;br&gt;
        1. a specific Ubuntu/kernel version is required &lt;br&gt;
        2. trying out newer Ubuntu versions than LTS
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt; mmddhh &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Histoical versions corresponding to the latest tag.
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Fallback tags (for latest) if the latest tag is broken.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt; next_mmddhh &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Histoical versions corresponding to the next tag.
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt; 
        Fallback tags (for next) if the next tag is broken.
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table class="tg"&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th class="tg-0lax"&gt; Docker Image &lt;/th&gt;
    &lt;th class="tg-0pky"&gt; Comment &lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;&lt;a href="https://github.com/legendu-net/docker-vscode-server" target="_blank" rel="noopener noreferrer"&gt;dclong/vscode-server&lt;/a&gt;&lt;/td&gt;
    &lt;td class="tg-0lax"&gt;Cloud IDE &lt;a href="https://github.com/coder/code-server" target="_blank" rel="noopener noreferrer"&gt;code-server&lt;/a&gt; (based on VSCode)&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;&lt;a href="https://github.com/legendu-net/docker-jupyterhub-ds" target="_blank" rel="noopener noreferrer"&gt;dclong/jupyterhub-ds&lt;/a&gt;&lt;/td&gt;
    &lt;td class="tg-0lax"&gt;Traditional ML&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;&lt;a href="https://github.com/legendu-net/docker-jupyterhub-pytorch" target="_blank" rel="noopener noreferrer"&gt;dclong/jupyterhub-pytorch&lt;/a&gt;&lt;/td&gt;
    &lt;td class="tg-0lax"&gt;Deep Learning&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;&lt;a href="https://github.com/legendu-net/docker-python-portable" target="_blank" rel="noopener noreferrer"&gt;dclong/python-portable&lt;/a&gt;&lt;/td&gt;
    &lt;td class="tg-0lax"&gt;Build portable Python using &lt;a href="https://github.com/indygreg/python-build-standalone" target="_blank" rel="noopener noreferrer"&gt;python-build-standalone&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;&lt;a href="https://github.com/legendu-net/docker-jupyterhub-sagemath" target="_blank" rel="noopener noreferrer"&gt;dclong/jupyterhub-sagemath&lt;/a&gt;&lt;/td&gt;
    &lt;td class="tg-0lax"&gt;Math / Calculus&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;
        &lt;a href="https://hub.docker.com/layers/dclong/jupyterhub-ds/blog_071520/images/sha256-f6f9f15d18a856786c37a370157e81c9e0acbc80050656858be9330c6213b5fe?context=repo" target="_blank" rel="noopener noreferrer"&gt;dclong/jupyterhub-ds:blog_071520&lt;/a&gt;
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt;
        For publishing &lt;a href="https://github.com/legendu-net/blog" target="_blank" rel="noopener noreferrer"&gt;legendu.net/blog&lt;/a&gt;
        using CICD. 
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;&lt;a href="https://github.com/legendu-net/docker-gitpod" target="_blank" rel="noopener noreferrer"&gt;dclong/gitpod&lt;/a&gt;&lt;/td&gt;
    &lt;td class="tg-0lax"&gt;Editing other GitHub repos using GitPod&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;
        &lt;a href="https://github.com/legendu-net/docker-jupyterhub-kotlin" target="_blank" rel="noopener noreferrer"&gt;dclong/jupyterhub-kotlin&lt;/a&gt; &lt;br&gt;
        &lt;a href="https://github.com/legendu-net/docker-jupyterhub-ganymede" target="_blank" rel="noopener noreferrer"&gt;dclong/jupyterhub-ganymede&lt;/a&gt;
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt;JVM languages&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td class="tg-0lax"&gt;
        &lt;a href="https://github.com/legendu-net/docker-rustpython" target="_blank" rel="noopener noreferrer"&gt;dclong/rustpython&lt;/a&gt;
    &lt;/td&gt;
    &lt;td class="tg-0lax"&gt;
        RustPython
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;h3 id="install-docker"&gt;Install Docker&lt;/h3&gt;
&lt;p&gt;Please refer to
&lt;a href="http://www.legendu.net/en/blog/docker-installation/"&gt;Install Docker&lt;/a&gt;
for instructions on how to install and configure Docker.&lt;/p&gt;
&lt;h3 id="pull-the-docker-image"&gt;Pull the Docker Image&lt;/h3&gt;
&lt;p&gt;Taking &lt;code&gt;dclong/jupyterhub-ds&lt;/code&gt; as an example,
you can pull it using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;dclong/jupyterhub-ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For people in mainland of China,
please refer to the post
&lt;a href="http://www.legendu.net/en/blog/speedup-docker-pulling-and-pushing/"&gt;Speedup Docker Pulling and Pushing&lt;/a&gt;
on ways to speed up pushing/pulling of Docker images.
If you don't bother,
then just use the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;pull&lt;span class="w"&gt; &lt;/span&gt;registry.docker-cn.com/dclong/jupyterhub-ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="start-a-container-using-ldc"&gt;Start a Container using &lt;code&gt;ldc&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The recommended way to start containers for Docker images &lt;code&gt;dclong/*&lt;/code&gt;
is to use the &lt;code&gt;ldc&lt;/code&gt; command which comes with 
&lt;a href="https://github.com/legendu-net/icon"&gt;icon&lt;/a&gt;
.&lt;/p&gt;
&lt;h3 id="start-a-container-manually"&gt;Start a Container Manually&lt;/h3&gt;
&lt;p&gt;Below are explanation of some environment variable passed by the option &lt;code&gt;-e&lt;/code&gt; to the Docker command.
Keep the default if you don't know what are the best to use.
&lt;code&gt;DOCKER_PASSWORD&lt;/code&gt; is probably the only one you want to and should change.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DOCKER_USER&lt;/code&gt;: The user to be created (dynamically) in the Docker container.
    The shell command &lt;code&gt;id -un&lt;/code&gt; gets the name of the current user (on the host),
    so the option &lt;code&gt;-e DOCKER_USER=$(id -un)&lt;/code&gt; instructs the script &lt;code&gt;/scripts/sys/init.sh&lt;/code&gt;
    to create a user in the Docker container whose name is the same as the current user on the host.
    &lt;font color="red"&gt;
    WARNING: the shell script &lt;code&gt;/scripts/sys/init.sh&lt;/code&gt; cannot create a user named &lt;code&gt;root&lt;/code&gt; 
    as it already exists in the Docker container.
    If you start a Docker container using &lt;code&gt;root&lt;/code&gt;, 
    make sure to pass a different user name to the envrionment variable &lt;code&gt;DOCKER_USER&lt;/code&gt;,
    e.g., &lt;code&gt;-e DOCKER_USER=dclong&lt;/code&gt;.
    &lt;/font&gt;
    For more discussion, 
    please refer to &lt;a href="https://github.com/dclong/docker-jupyterhub/issues/3"&gt;this issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_USER_ID&lt;/code&gt;: The ID of the user to be created in the Docker container.
    The shell command &lt;code&gt;id -u&lt;/code&gt; gets the user ID of the current user (on the host),
    so the option &lt;code&gt;-e DOCKER_USER_ID=$(id -u)&lt;/code&gt; instructs the script &lt;code&gt;/scripts/sys/init.sh&lt;/code&gt;
    to create a user in the Docker container whose user ID is the same as the user ID of the current user on the host.
    This means that the user in the Docker container is essentailly the current user on the host,
    which helps resolve file permissions between the Docker container and the host.
    This option is similar to the option &lt;code&gt;--user&lt;/code&gt; of the command &lt;code&gt;docker run&lt;/code&gt;,
    and you want to keep it unchanged, generally speaking.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_PASSWORD&lt;/code&gt;: The password of the user to be created in the Docker container.
    The shell command &lt;code&gt;id -un&lt;/code&gt; get the name of the current user (on the host),
    so the option &lt;code&gt;-e DOCKER_PASSWORD=$(id -un)&lt;/code&gt; instructs the script &lt;code&gt;/scripts/sys/init.sh&lt;/code&gt;
    to create a user in the Docker container whose password is the name of the current user on the host.
    &lt;font color="red"&gt;
    WARNING: You'd better change the default value for security reasons.
    Of course, users can always change it later using the command &lt;code&gt;passwd&lt;/code&gt; inside the Docker container.
    &lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_GROUP_ID&lt;/code&gt;: The group ID of the user to be created in the Docker container.
    The shell command &lt;code&gt;id -g&lt;/code&gt; gets the group ID of the current user (on the host),
    so the option &lt;code&gt;-e DOCKER_GROUP_ID=$(id -g)&lt;/code&gt; instructs the script &lt;code&gt;/scripts/sys/init.sh&lt;/code&gt;
    to create a user in the Docker container whose group ID is the same as the group ID of the current user on the host.
    You want to keep this option unchanged, generally speaking.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_ADMIN_USER&lt;/code&gt;: This environment variable applies to Docker images &lt;code&gt;dclong/jupyterhub*&lt;/code&gt; only. 
    It specifies the admin user of the JupyterHub server.
    It should be the same as &lt;code&gt;DOCKER_USER&lt;/code&gt; generally speaking.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USER_MEM_LIMIT&lt;/code&gt;: This environment variable applies to Docker images &lt;code&gt;dclong/jupyterhub*&lt;/code&gt; only.
    It limits the memory that each user can use.
    Note: this optional is not in effect currently.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The root directory of JupyterLab/Jupyter notebooks is &lt;code&gt;/workdir&lt;/code&gt; in the container.
You can mount directory on the host to it as you wish.
Below are illustration using the Docker image &lt;code&gt;dclong/jupyterhub-ds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following command starts a container 
and mounts the current working directory and &lt;code&gt;/home&lt;/code&gt; on the host machine 
to &lt;code&gt;/workdir&lt;/code&gt; and &lt;code&gt;/home_host&lt;/code&gt; in the container respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;--init&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--platform&lt;span class="w"&gt; &lt;/span&gt;linux/amd64&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--hostname&lt;span class="w"&gt; &lt;/span&gt;jupyterhub-ds&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--log-opt&lt;span class="w"&gt; &lt;/span&gt;max-size&lt;span class="o"&gt;=&lt;/span&gt;50m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8000&lt;/span&gt;:8000&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5006&lt;/span&gt;:5006&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_USER_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-u&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_GROUP_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_ADMIN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;:/workdir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;dirname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;:/home_host&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;dclong/jupyterhub-ds&lt;span class="w"&gt; &lt;/span&gt;/scripts/sys/init.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following command (only works on Linux) does the same as the above one 
except that it limits the use of CPU and memory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;--init&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--platform&lt;span class="w"&gt; &lt;/span&gt;linux/amd64&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--name&lt;span class="w"&gt; &lt;/span&gt;jupyterhub-ds&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--log-opt&lt;span class="w"&gt; &lt;/span&gt;max-size&lt;span class="o"&gt;=&lt;/span&gt;50m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--memory&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(($(&lt;/span&gt;head&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/proc/meminfo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;k&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;--cpus&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;nproc&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8000&lt;/span&gt;:8000&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5006&lt;/span&gt;:5006&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_USER_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-u&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_GROUP_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_ADMIN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;:/workdir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;-v&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;dirname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;:/home_host&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;dclong/jupyterhub-ds&lt;span class="w"&gt; &lt;/span&gt;/scripts/sys/init.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="add-a-new-user-inside-a-docker-container"&gt;Add a New User Inside a Docker Container&lt;/h2&gt;
&lt;p&gt;You can of course use the well know commands &lt;code&gt;useradd&lt;/code&gt;, &lt;code&gt;adduser&lt;/code&gt;, etc. to achive it.
To make things easier for you,
there are some shell scripts in the directory &lt;code&gt;/scripts/sys/&lt;/code&gt; to create usres for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user.sh&lt;/code&gt;: Create a new user. It's the base script for creating users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user_group.sh&lt;/code&gt;: Create a new user with the given (existing) group.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user_nogroup.sh&lt;/code&gt;: Create a new user with group name &lt;code&gt;nogroup&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user_docker.sh&lt;/code&gt;: Create a new user with group name &lt;code&gt;docker&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use the option &lt;code&gt;-h&lt;/code&gt; to print help doc for these commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/scripts/sys/create_user_nogroup.sh&lt;span class="w"&gt; &lt;/span&gt;-h
Create&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;new&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nogroup&amp;quot;&lt;/span&gt;.
Syntax:&lt;span class="w"&gt; &lt;/span&gt;create_user_nogroup&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;user_id&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;password&lt;span class="o"&gt;]&lt;/span&gt;
Arguments:
user:&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;name
user_id:&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;id
password:&lt;span class="w"&gt; &lt;/span&gt;Optional&lt;span class="w"&gt; &lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;user.&lt;span class="w"&gt; &lt;/span&gt;If&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;provided,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;used&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;password.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now suppose you want to create a new user &lt;code&gt;dclong&lt;/code&gt; with user ID &lt;code&gt;2000&lt;/code&gt; and group name &lt;code&gt;nogroup&lt;/code&gt;,
you can use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;/scripts/sys/create_user_nogroup.sh&lt;span class="w"&gt; &lt;/span&gt;dclong&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since we didn't specify a password for the user,
the default password (same as the user name) is used.&lt;/p&gt;
&lt;h2 id="use-the-jupyterhub-server"&gt;Use the JupyterHub Server&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open your browser and and visit &lt;code&gt;your_host_ip:8000&lt;/code&gt;
    where &lt;code&gt;your_host_ip&lt;/code&gt; is the URL/ip address of your server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login to the JupyterHub server 
    using your user name (by default your user name on the host machine)
    and password (by default your user name on the host machine). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is strongly suggested (for security reasons) that you change your password (using the command &lt;code&gt;passwd&lt;/code&gt;)
    in the container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enjoy JupyterLab notebook!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="get-information-of-running-jupyterlab-servers"&gt;Get Information of Running Jupyter/Lab Servers&lt;/h2&gt;
&lt;p&gt;If you are using the Jupyter/Lab server instead of JupyterHub,
you will be asked for a token at login.
If you have started the Docker container in interactive mode (option &lt;code&gt;-i&lt;/code&gt; instead of &lt;code&gt;-d&lt;/code&gt;),
the token for login is printed to the console.
Otherwise,
the tokens (and more information about the servers) can be found 
by running the following command outside the Docker container.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;jupyterlab&lt;span class="w"&gt; &lt;/span&gt;/scripts/list_jupyter.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above command tries to be smart in the sense that 
it first figures out the user that started the JupyterLab server 
and then query running Jupyter/Lab servers of that user.
An equivalently but more specifically command 
(if the Docker is launched by the current user in the host)
is as below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-u&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;jupyterlab&lt;span class="w"&gt; &lt;/span&gt;/scripts/sys/list_jupyter.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you are inside the Docker container, 
then run the following command to get the tokens (and more information about the servers).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/scripts/list_jupyter.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or equivalently if the Jupyter/Lab server is launched by the current user,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/scripts/sys/list_jupyter.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To sum up, 
most of time you can rely on &lt;code&gt;/scripts/list_jupyter.py&lt;/code&gt;
to find the tokens of the running Jupyter/Lab servers,
no matter you are root or the user that launches the Docker/JupyterLab server,
and no matter you are inside the Docker container or not.
Yet another way to get information of the running JupyterLab server 
is to check the log. 
Please refer to the section 
&lt;a href="http://www.legendu.net/en/blog/my-docker-images/#debug-docker-containers"&gt;Debug Docker Containers&lt;/a&gt;
for more information.&lt;/p&gt;
&lt;h2 id="add-a-new-user-for-jupyterhub"&gt;Add a New User for JupyterHub&lt;/h2&gt;
&lt;p&gt;By default,
any user in a Docker container of &lt;code&gt;dclong/jupyterhub-*&lt;/code&gt; can visit the JupyterHub server.
So if you want to grant access to a new user,
just create an account for him in the Docker container.
Please refer to 
&lt;a href="https://www.legendu.net/en/blog/my-docker-images/#add-a-new-user-inside-a-docker-container"&gt;Add a New User Inside a Docker Container&lt;/a&gt;
on how to create a new user inside a Docker container.&lt;/p&gt;
&lt;h2 id="easy-install-of-other-kernels"&gt;Easy Install of Other Kernels&lt;/h2&gt;
&lt;p&gt;Install and configure PySpark for use with the Python kernel.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;icon&lt;span class="w"&gt; &lt;/span&gt;spark&lt;span class="w"&gt; &lt;/span&gt;-ic&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;icon&lt;span class="w"&gt; &lt;/span&gt;pyspark&lt;span class="w"&gt; &lt;/span&gt;-ic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install the evcxr Rust kernel.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;icon&lt;span class="w"&gt; &lt;/span&gt;evcxr&lt;span class="w"&gt; &lt;/span&gt;-ic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install the Almond Scala kernel.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;icon&lt;span class="w"&gt; &lt;/span&gt;almond&lt;span class="w"&gt; &lt;/span&gt;-ic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install the ITypeScript kernel.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;icon&lt;span class="w"&gt; &lt;/span&gt;its&lt;span class="w"&gt; &lt;/span&gt;-ic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Many other software/tools can be easily install by 
&lt;a href="https://github.com/legendu-net/icon"&gt;icon&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="debug-docker-containers"&gt;Debug Docker Containers&lt;/h2&gt;
&lt;p&gt;You can change the option &lt;code&gt;docker run -d ...&lt;/code&gt; to &lt;code&gt;docker run -it ...&lt;/code&gt; 
to show logs of processes in the Docker container which helps debugging. 
If you have already started a Docker container using &lt;code&gt;docker run -d ...&lt;/code&gt;,
you can use the command 
&lt;a href="https://docs.docker.com/engine/reference/commandline/logs/"&gt;docker logs&lt;/a&gt;
to get the log of the container
(which contains logs of all processes in it).&lt;/p&gt;
&lt;h2 id="use-spark-in-jupyterlab-notebooks"&gt;Use Spark in JupyterLab Notebooks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/spark-almond-jupyterlab/"&gt;Use Spark with the Almond Scala Kernel in JupyterLab&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/use-spark-with-the-beakerx-scala-kernel/"&gt;Use Spark With the BeakerX Scala Kernel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is suggested that you use the Almond Scala kernel. 
I will gradually drop support of the BeakerX Scala kernel in my Docker images. &lt;/p&gt;
&lt;h2 id="pyspark-pyspark-and-findspark"&gt;PySpark - pyspark and findspark&lt;/h2&gt;
&lt;p&gt;To use PySpark in a container of the Docker image
&lt;a href="https://github.com/dclong/docker-jupyterhub-ds"&gt;dclong/jupyterhub-ds&lt;/a&gt;
you need to install Spark and the Python package &lt;code&gt;pyspark&lt;/code&gt; first,
which can be achieved using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;icon&lt;span class="w"&gt; &lt;/span&gt;spark&lt;span class="w"&gt; &lt;/span&gt;-ic&lt;span class="w"&gt; &lt;/span&gt;--loc&lt;span class="w"&gt; &lt;/span&gt;/opt/&lt;span class="w"&gt;  &lt;/span&gt;
icon&lt;span class="w"&gt; &lt;/span&gt;pyspark&lt;span class="w"&gt; &lt;/span&gt;-ic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Follow the steps below to use PySpark after it is installed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open a JupyterLab notebook with the Python kernel from the launcher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find and initialize PySpark.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;findspark&lt;/span&gt;
&lt;span class="c1"&gt;# A symbolic link of the Spark Home is made to /opt/spark for convenience&lt;/span&gt;
&lt;span class="n"&gt;findspark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/spark&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;
&lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PySpark Example&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enableHiveSupport&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Spark as usual.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;df1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;some_hive_table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select * from some_table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="remote-connection-to-desktop-in-the-container"&gt;Remote Connection to Desktop in the Container&lt;/h2&gt;
&lt;p&gt;If you are running a Docker container with a desktop environment (&lt;code&gt;dclong/lubuntu*&lt;/code&gt; or &lt;code&gt;dclong/xubuntu*&lt;/code&gt;),
you can connect to the desktop environment in the Docker container using NoMachine.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the NoMachine client from &lt;a href="https://www.nomachine.com/download"&gt;https://www.nomachine.com/download&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install the NoMachine client on your computer.&lt;/li&gt;
&lt;li&gt;Create a new connection from your computer 
    to the desktop environment in the Docker image using the NX protocol and port 4000.
    You will be asked for a user name and password.
    By default,
    the user name used to start the Docker container on the host machine 
    is used as both the user name and password in the Docker container.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-of-images-and-detailed-information"&gt;List of Images and Detailed Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/base/"&gt;dclong/base&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OS: Ubuntu LTS
Time Zone: US Pacific Time&lt;br&gt;
Desktop Environment: None&lt;br&gt;
Remote Desktop: None  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/samba/"&gt;dclong/samba&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/nfs/"&gt;dclong/nfs&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/nodejs/"&gt;dclong/nodejs&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/typescript/"&gt;dclong/typescript&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jdk/"&gt;dclong/jdk&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python-portable/"&gt;dclong/python-portable&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python/"&gt;dclong/python&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 3.12.x  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python-jdk/"&gt;dclong/python-jdk&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/mlflow/"&gt;dclong/mlflow&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/dryscrape/"&gt;dclong/dryscrape&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python-nodejs/"&gt;dclong/python-nodejs&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterlab"&gt;dclong/jupyterlab&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JupyterLab: latest stable version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub/"&gt;dclong/jupyterhub&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JupyterHub: latest stable version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-ts/"&gt;dclong/jupyterhub-ts&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-julia/"&gt;dclong/jupyterhub-julia&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Julia stable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-cuda/"&gt;dclong/jupyterhub-cuda&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-pytorch/"&gt;dclong/jupyterhub-pytorch&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-jdk/"&gt;dclong/jupyterhub-jdk&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenJDK: 11&lt;br&gt;
Maven: 3.6.x  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-more/"&gt;dclong/jupyterhub-more&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Go&lt;br&gt;
Rust&lt;br&gt;
JavaScript/ TypeScript  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/vscode-server/"&gt;dclong/vscode-server&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/cdr/code-server"&gt;code-server&lt;/a&gt;: latest stable version&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-ds/"&gt;dclong/jupyterhub-ds&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python packages:&lt;br&gt;
    - loguru pysnooper&lt;br&gt;
    - numpy scipy pandas pyarrow&lt;br&gt;
    - scikit-learn lightgbm&lt;br&gt;
    - graphviz matplotlib bokeh holoviews[recommended] hvplot&lt;br&gt;
    - tabulate&lt;br&gt;
    - JPype1 sqlparse&lt;br&gt;
    - requests[socks] lxml notifiers&lt;br&gt;
    - dsutil  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/gitpod/"&gt;dclong/gitpod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/rust/"&gt;dclong/rust&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/rustpython/"&gt;dclong/rustpython&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/ubuntu_cn/"&gt;dclong/ubuntu_cn&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu/"&gt;dclong/lubuntu&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-pyside2/"&gt;dclong/lubuntu-pyside2&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-jdk/"&gt;dclong/lubuntu-jdk&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="build-my-docker-images"&gt;Build my Docker Images&lt;/h2&gt;
&lt;p&gt;My Docker images are auto built leveraging GitHub Actions workflow 
in the GitHub repository 
&lt;a href="https://github.com/dclong/docker_image_builder"&gt;docker_image_builder&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="tips-for-maintaining-docker-images-for-my-own-reference"&gt;Tips for Maintaining Docker Images (for My own Reference)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do NOT update the &lt;code&gt;latest&lt;/code&gt; tag 
    until you have fully tested the corresponding &lt;code&gt;next&lt;/code&gt; tag.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do NOT add new features or tools unless you really need them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It generally a good idea to restrict versions of non-stable packages to be a specific (working) version 
    or a range of versions that is unlike to break.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you REALLY have to update some Bash script a Docker image,
    do not update it in the GitHub repository directly 
    and build the Docker image to test whether it works.
    Instead,
    make a copy of the Bash script outside the Docker container, 
    update it, 
    and mount it into the container to test whether it work.
    If the updated Bash script work as you expected,
    then go ahead to update it in the GitHub repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="on-failure-of-github-actions-workflow-for-building-docker-images"&gt;On Failure of GitHub Actions Workflow for Building Docker Images&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;If the Docker image buidling workflow fails due to network issues,
    it might not work to rerun failed pipelines in GitHub Actions
    (as the network issue is like due to probalematic network nodes
    and retrying failed pipelines sending jobs to the same nodes).
    In such situtions,
    it is better to trigger a new run of the workflow.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="known-issues"&gt;Known Issues&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;NeoVim fails to work 
    if a Docker image (with NeoVim installed) is run on &lt;strong&gt;Mac with the M1 chip&lt;/strong&gt;
    even if you pass the option &lt;code&gt;--platform linux/amd64&lt;/code&gt; to &lt;code&gt;docker run&lt;/code&gt;.
    A possible fix is to manually uninstall NeoVim using the following command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;purge&lt;span class="w"&gt; &lt;/span&gt;neovim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then install Vim instead.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;wajig&lt;/code&gt; fails to cache password 
    if a Docker image (with &lt;code&gt;wajig&lt;/code&gt; installed) is run on &lt;strong&gt;Mac with the M1 chip&lt;/strong&gt;
    even if you pass the option &lt;code&gt;--platform linux/amd64&lt;/code&gt; to &lt;code&gt;docker run&lt;/code&gt;.
    Fortunately, 
    this is not a big issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;dclong/xubuntu*&lt;/code&gt; Docker images due to Xfce on Ubuntu 18.04.
    It is suggested that you use the corresponding &lt;code&gt;dclong/lubuntu*&lt;/code&gt; Docker images instead (which are based on LXQt)
    if a desktop environment is needed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="software"></category><category term="Docker"></category><category term="Docker image"></category><category term="Ubuntu"></category><category term="JupyterLab"></category><category term="Lubuntu"></category><category term="dclong"></category></entry><entry><title>Use pdftk to Manipulating PDF Files</title><link href="https://www.legendu.net/en/blog/pdftk-examples/" rel="alternate"></link><published>2013-10-06T11:44:58-07:00</published><updated>2025-03-10T11:48:31-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-06:/en/blog/pdftk-examples/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that 
    you use Python modules or &lt;a href="https://misc.legendu.net/blog/editing-pdf-files-using-stirling-pdf/"&gt;Stirling-PDF&lt;/a&gt; 
    instead of &lt;code&gt;pdftk&lt;/code&gt; to manipulating PDFs for several reasons.
    First, 
    even though &lt;code&gt;pdftk&lt;/code&gt; is a great command-line tool,
    it is hard to remember its syntax.
    On the contratry, 
    Python code is easy to read and understand (even though it is …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that 
    you use Python modules or &lt;a href="https://misc.legendu.net/blog/editing-pdf-files-using-stirling-pdf/"&gt;Stirling-PDF&lt;/a&gt; 
    instead of &lt;code&gt;pdftk&lt;/code&gt; to manipulating PDFs for several reasons.
    First, 
    even though &lt;code&gt;pdftk&lt;/code&gt; is a great command-line tool,
    it is hard to remember its syntax.
    On the contratry, 
    Python code is easy to read and understand (even though it is more verbose).
    Second,
    it is not easy to have &lt;code&gt;pdftk&lt;/code&gt; installed and configured on macOS.
    If you prefer a GUI-based application for manipulating PDF files,
    &lt;a href="https://github.com/Stirling-Tools/Stirling-PDF"&gt;Stirling-PDF&lt;/a&gt; 
    is is a robust, locally hosted web-based PDF manipulation tool using Docker.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Please refer to 
    &lt;a href="http://www.legendu.net/misc/blog/pypdf2-examples/"&gt;PyPDF2 Examples&lt;/a&gt;
    for a simple example of extracting PDF pages using the Python package &lt;code&gt;PyPDF2&lt;/code&gt;. 
    If you need to edit PDF pages,
    please refer to
    &lt;a href="http://www.legendu.net/misc/blog/editing-PDF-files/"&gt;Editing PDF Files&lt;/a&gt;
    for possible tools.
    If you do have to stick with &lt;code&gt;pdftk&lt;/code&gt;,
    below are concrete examples on how to use it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="install-pdftk-on-ubuntu-debian"&gt;Install pdftk on Ubuntu / Debian&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install pdftk-java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="examples-of-using-pdftk"&gt;Examples of Using pdftk&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fill in forms in an I-9 doc. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# dump fields in the form (optional, for human examination only)&lt;/span&gt;
pdftk&lt;span class="w"&gt; &lt;/span&gt;i9.pdf&lt;span class="w"&gt; &lt;/span&gt;dump_data_fields&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;fields.txt&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="c1"&gt;# generate a FDF data file&lt;/span&gt;
pdftk&lt;span class="w"&gt; &lt;/span&gt;i9.pdf&lt;span class="w"&gt; &lt;/span&gt;generate_fdf&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;data.fdf&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="c1"&gt;# after fill in fileds in the FDF file, run the following command&lt;/span&gt;
pdftk&lt;span class="w"&gt; &lt;/span&gt;i9.pdf&lt;span class="w"&gt; &lt;/span&gt;fill_form&lt;span class="w"&gt; &lt;/span&gt;data.fdf&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;i9_2.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the PDF form to fill in using &lt;code&gt;pdftk&lt;/code&gt; is encrypted, 
you have to decrypt it first. 
&lt;a href="http://smallpdf.com/"&gt;SmallPDF&lt;/a&gt; is a good online service,
which can help you unlock PDF documents if you don't have the encryption password.&lt;/p&gt;
&lt;p&gt;Notice that some PDF forms (e.g., time card, I-9 form, etc.) 
cannot be saved (only a blank copy can be saved). 
after filled in using Adobe Reader.
&lt;code&gt;pdftk&lt;/code&gt; provides a solution to this problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract pages (from 149 to 186) 
    from the PDF file "training.pdf" 
    as "chap_05.pdf"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftk&lt;span class="w"&gt; &lt;/span&gt;training.pdf&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;149&lt;/span&gt;-186&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;chap_05.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combine all my i-20s (all PDF files in current directory) into a single file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftk&lt;span class="w"&gt; &lt;/span&gt;*.pdf&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;i-20_all.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combine scaned pages into the right order.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20141206171918820&lt;/span&gt;.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;20141206171951015&lt;/span&gt;.pdf&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;A1&lt;span class="w"&gt; &lt;/span&gt;B1&lt;span class="w"&gt; &lt;/span&gt;A2-3&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;i-20.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rotate the first PDF page to 90 degrees clockwise&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;.pdf&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;1east&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;-end&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;out.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rotate all pages in the second PDF file to 180 degrees&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;m11.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;m25.pdf&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;A&lt;span class="w"&gt; &lt;/span&gt;Bsouth&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;comed.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rotate an entire PDF document to 180 degrees&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;.pdf&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;-endsouth&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;out.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.legendu.net/en/blog/editing-PDF-files"&gt;Editing PDF Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="pdftk"></category><category term="software"></category><category term="examples"></category><category term="PDF"></category></entry><entry><title>Editing PDF Files</title><link href="https://www.legendu.net/en/blog/editing-PDF-files/" rel="alternate"></link><published>2016-06-30T10:21:47-07:00</published><updated>2024-12-04T19:19:24-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-30:/en/blog/editing-PDF-files/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;
&lt;div style="overflow-x:auto;"&gt;
&lt;style&gt;
    tr:nth-child(even) {background-color: #f2f2f2}
&lt;/style&gt;
&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Type &lt;/th&gt;
    &lt;th&gt; Name &lt;/th&gt;
    &lt;th&gt; Comments &lt;/th&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td rowspan="6"&gt; Web Tools &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://github.com/Stirling-Tools/Stirling-PDF"&gt;Stirling-PDF&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
      - robust &lt;br&gt;
      - local hosted &lt;br&gt;
      - Docker container based &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://app.parseur.com/"&gt;Parseur&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
      - AI-based PDF parser
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://www.docusign.com/"&gt;DocuSign&lt;/a&gt;  &lt;/td&gt;
    &lt;td&gt; 
        - Great for convert PDF files to MS Office files …&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Things on this page are fragmentary and immature notes/thoughts of the author. Please read with your own judgement!&lt;/strong&gt;&lt;/p&gt;
&lt;div style="overflow-x:auto;"&gt;
&lt;style&gt;
    tr:nth-child(even) {background-color: #f2f2f2}
&lt;/style&gt;
&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Type &lt;/th&gt;
    &lt;th&gt; Name &lt;/th&gt;
    &lt;th&gt; Comments &lt;/th&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td rowspan="6"&gt; Web Tools &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://github.com/Stirling-Tools/Stirling-PDF"&gt;Stirling-PDF&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
      - robust &lt;br&gt;
      - local hosted &lt;br&gt;
      - Docker container based &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://app.parseur.com/"&gt;Parseur&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
      - AI-based PDF parser
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://www.docusign.com/"&gt;DocuSign&lt;/a&gt;  &lt;/td&gt;
    &lt;td&gt; 
        - Great for convert PDF files to MS Office files, etc. &lt;br&gt;
        - non-free: 1 file per 30 minutes &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://www.freepdfconvert.com/"&gt;Free PDF Convert&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt; 
        - Great for convert PDF files to MS Office files, etc. &lt;br&gt;
        - non-free: 1 file per 30 minutes &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://www.adobe.com/acrobat/online/rearrange-pdf.html"&gt;Adobe Rearrage PDF&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
      - Sign in needed &lt;br&gt;
      - Paid service but free trial available &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://www.ilovepdf.com/"&gt;I Love PDF&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
      - No need to sign in &lt;br&gt;
      - Paid service but free trial available &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td rowspan="4"&gt; Linux Desktop &lt;/td&gt;
    &lt;td&gt; 
      &lt;a href="https://github.com/pdfarranger/pdfarranger"&gt;PDFArranger&lt;/a&gt; 
    &lt;/td&gt;
    &lt;td&gt;  
        - Opensource and free &lt;br&gt;
        - Easy to use &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;  
    Okular
    &lt;/td&gt;
    &lt;td&gt;  
        - support annotating PDFs &lt;br&gt;
        - does NOT support removing/adding PDF pages &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
      &lt;a href="https://help.gnome.org/users/evince/stable/"&gt;Evince&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
        - most popular PDF viewer in Linux &lt;br&gt;
        - does NOT support editing PDF files in any way &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
      &lt;a href="https://code-industry.net/masterpdfeditor/"&gt;Master PDF Editor&lt;/a&gt; 
    &lt;/td&gt;
    &lt;td&gt;  
        - Free version available but with very limited features. &lt;br&gt;
        - Not recommended.  &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td&gt; macOS Desktop &lt;/td&gt;
    &lt;td&gt;Preview&lt;/td&gt;
    &lt;td&gt;  
        - Default PDF viewer on macOS &lt;br&gt;
        - Support rotating, adding and removing pages &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td rowspan="4"&gt; Windows Desktop &lt;/td&gt;
    &lt;td&gt; 
      &lt;a href="https://code-industry.net/masterpdfeditor/"&gt;Master PDF Editor&lt;/a&gt; 
    &lt;/td&gt;  
    &lt;td&gt;  
        - Free version available but with very limited features. &lt;br&gt;
        - Not recommended. &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; Wondershare PDFelement &lt;/td&gt;
    &lt;td&gt;  
      - Great one &lt;br&gt;
      - support Chinese font when filling forms &lt;br&gt;
      - need to purchase a licence &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://www.pdffiller.com/"&gt;PDFfiller&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
        - good one &lt;br&gt;
        - does NOT support Chinese font when filling forms &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.pdffiller.com/"&gt;Bluebeam Revue eXtreme&lt;/a&gt; 
    &lt;/td&gt;
    &lt;td&gt;  
      - Great one &lt;br&gt;
      - support Chinese fonts when filling forms &lt;br&gt;
      - need to purchase a license but 30 days free trial available &lt;br&gt;
    &lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
    &lt;td rowspan="7"&gt; Python Libraries &lt;/td&gt;
    &lt;td&gt; 
    &lt;a href="https://github.com/py-pdf/pypdf"&gt;PyPDF&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;  
      A utility to read and write PDFs with Python.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
      &lt;a href="https://github.com/jsvine/pdfplumber"&gt;pdfplumber&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;  
    Plumbs a PDF for detailed information about each char, rectangle, line, et cetera,
    and easily extract text and tables.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://github.com/jalan/pdftotext"&gt;pdftotext&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
    Great at parsing text from PDFs which also keeps the original layout as much as possible.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://github.com/pdfminer/pdfminer.six"&gt;pdfminer.six&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
    A Python library for parsing PDF.
    It is good for manipulating PDF files 
    but weak at parsing text from PDF files.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://github.com/socialcopsdev/camelot/"&gt;camelot&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
    A Python library for extracting data tables in PDF files.
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://github.com/chezou/tabula-py"&gt;tabula-py&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
    A Python binding for [tabulapdf/tabula](https://github.com/tabulapdf/tabula).
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; &lt;a href="https://github.com/chrismattmann/tika-python"&gt;tika-python&lt;/a&gt; &lt;/td&gt;
    &lt;td&gt;  
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id="java-libraries"&gt;Java Libraries&lt;/h2&gt;
&lt;h3 id="tabulapdftabula"&gt;&lt;a href="https://github.com/tabulapdf/tabula"&gt;tabulapdf/tabula&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A Java library for liberating data tables trapped inside PDF files.&lt;/p&gt;
&lt;h3 id="apachetika"&gt;&lt;a href="https://github.com/apache/tika"&gt;apache/tika&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Apache Tika™ toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF). 
All of these file types can be parsed through a single interface, making Tika useful for search engine indexing, content analysis, translation, and much more. &lt;/p&gt;
&lt;h2 id="command-line-tools"&gt;Command-line Tools&lt;/h2&gt;
&lt;h3 id="pdftk"&gt;pdftk&lt;/h3&gt;
&lt;p&gt;A command-line tool for filling fileds in PDF docs.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://misc.legendu.net/blog/extracting-data-from-pdf-files/"&gt;Extracting Data from PDF Files&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://towardsdatascience.com/python-for-pdf-ef0fac2808b0"&gt;Python for PDF&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/hands-on-the-python-library-pdfplumber"&gt;Hands on the Python Library pdfplumber&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/python-pdf-pypdf2"&gt;Extracting PDF pages using the Python Package PyPDF2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/pdftk-examples"&gt;Use pdftk to Manipulating PDF Files&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/okular-tips"&gt;View and Edit PDF Documents Using Okular&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/hands-on-the-python-library-pdfplumber"&gt;Hands on the Python Library Pdfplumber&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="software"></category><category term="PDF"></category><category term="tools"></category><category term="edit"></category><category term="convert"></category><category term="PDFfiller"></category></entry><entry><title>Android Emulators</title><link href="https://www.legendu.net/en/blog/android-emulators/" rel="alternate"></link><published>2018-09-12T23:41:58-07:00</published><updated>2024-08-25T13:00:48-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-09-12:/en/blog/android-emulators/</id><summary type="html">&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Name &lt;/th&gt;
    &lt;th&gt; Free &lt;/th&gt;
    &lt;th&gt; OS &lt;/th&gt;
    &lt;th&gt; Hyper-v Compat on Win&lt;/th&gt;
    &lt;th&gt; ARM-only App Support &lt;/th&gt;
    &lt;th&gt; Development &lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.genymotion.com"&gt; GenyMotion &lt;/a&gt;
    &lt;a href="#footnote1"&gt;[1]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; Partial &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.bluestacks.com"&gt; BlueStacks &lt;/a&gt;
    &lt;a href="#footnote2"&gt;[2]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows, macOS &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.ldplayer.net"&gt; LDPlayer &lt;/a&gt;
    &lt;a href="#footnote3"&gt;[3]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.linzhuotech.com/index.php/home/index/xdroid.html"&gt; xDroid &lt;/a&gt;
    &lt;a href="#footnote1"&gt;[9]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Linux &lt;/td&gt;
    &lt;td&gt; NA &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://mumu.163.com"&gt; MuMu App Player &lt;/a&gt;
    &lt;a href="#footnote5"&gt;[5]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; macOS (M chip …&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><content type="html">&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Name &lt;/th&gt;
    &lt;th&gt; Free &lt;/th&gt;
    &lt;th&gt; OS &lt;/th&gt;
    &lt;th&gt; Hyper-v Compat on Win&lt;/th&gt;
    &lt;th&gt; ARM-only App Support &lt;/th&gt;
    &lt;th&gt; Development &lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.genymotion.com"&gt; GenyMotion &lt;/a&gt;
    &lt;a href="#footnote1"&gt;[1]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; Partial &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.bluestacks.com"&gt; BlueStacks &lt;/a&gt;
    &lt;a href="#footnote2"&gt;[2]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows, macOS &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.ldplayer.net"&gt; LDPlayer &lt;/a&gt;
    &lt;a href="#footnote3"&gt;[3]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.linzhuotech.com/index.php/home/index/xdroid.html"&gt; xDroid &lt;/a&gt;
    &lt;a href="#footnote1"&gt;[9]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Linux &lt;/td&gt;
    &lt;td&gt; NA &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://mumu.163.com"&gt; MuMu App Player &lt;/a&gt;
    &lt;a href="#footnote5"&gt;[5]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; macOS (M chip) &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://syzs.qq.com/"&gt; 腾讯手游助手 &lt;/a&gt;
    &lt;a href="#footnote5"&gt;[6]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://waydro.id/"&gt; Waydroid &lt;/a&gt;
    &lt;a href="#footnote1"&gt;[11]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Linux &lt;/td&gt;
    &lt;td&gt; NA &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://anbox-cloud.io/"&gt; AnBox Cloud &lt;/a&gt;
    &lt;a href="#footnote4"&gt;[4]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; NA &lt;/td&gt;
    &lt;td&gt; ? &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.android-x86.org"&gt; Android-x86 + VirtualBox &lt;/a&gt;
    &lt;a href="#footnote6"&gt;[7]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://developer.android.com/studio"&gt; Android SDK + Android Studio &lt;/a&gt;
    &lt;a href="#footnote7"&gt;[8]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; ? &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://github.com/budtmo/docker-android"&gt; docker-android &lt;/a&gt;
    &lt;a href="#footnote1"&gt;[10]&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; Limited &lt;/td&gt;
    &lt;td&gt; Active &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;[1] &lt;a href="https://www.genymotion.com/"&gt;GenyMotion&lt;/a&gt;
is a great cross-platform choice.
A free version with limited features is available.
The desktop version of GenyMotion 
can be downloaded at
&lt;a href="https://www.genymotion.com/fun-zone/"&gt;https://www.genymotion.com/fun-zone/&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;[2] &lt;a href="https://www.bluestacks.com/"&gt;BlueStacks&lt;/a&gt; 
is a good free Android emulator for Windows and Mac.&lt;/p&gt;
&lt;p&gt;[3] &lt;a href="https://www.ldplayer.net/"&gt;LDPlayer&lt;/a&gt; (also called 雷电模拟器 in Chinese) 
is a good free Android emulator for Windows only.&lt;/p&gt;
&lt;p&gt;[4] &lt;a href="https://anbox.io/"&gt;AnBox&lt;/a&gt;
is an open-source WINE-like Android emulator for Linux only (CANNOT be run on macOS).
ARM apps can be run on x86-based Linux OS with Android 11+ images.
For more details,
please refer to
&lt;a href="https://android-developers.googleblog.com/2020/03/run-arm-apps-on-android-emulator.html"&gt;Run ARM apps on the Android Emulator&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;[5] &lt;a href="https://mumu.163.com/"&gt;MuMu App Player&lt;/a&gt;
is an Android emulator develop by the Chinese company Wangyi for Windows and macOS.
An English version is also availabe at https://mumu.163.com/global/download/en/.
Tribal Pioneer works on MuMu App Player on macOS!!!&lt;/p&gt;
&lt;p&gt;[7] &lt;a href="https://www.android-x86.org/"&gt;Android X86&lt;/a&gt;
is a project to port Android Open Source Project to x86 platform.
It works across operating systems (Windows, macOS and Linux).
Android X86 supports provides ISO and RPM files
rather than an out-of-the-box application.
You have to install an ISO or RPM file to you device 
which will add an Android operating system to your device.
You can of course install it into a virutal environemnt (e.g., using VirtualBox)
which is essentially what other out-of-the-box applications does.&lt;/p&gt;
&lt;p&gt;[8] Android SDK and Android Studio works together to emulate software found on Android 
using the resources of your PC. 
Android developers mostly use Android SDK tools for testing and development purposes, 
but it'll work for casual use and play as well.&lt;/p&gt;
&lt;p&gt;[9] xDroid is an Android emulator 
(seems to be a commerical software based on AnBox) 
for Linux only.
The x86_64 version is free for personal use.&lt;/p&gt;
&lt;p&gt;[10] Docker-Android is a docker image 
built to be used for everything 
related to mobile website testing and Android project.&lt;/p&gt;
&lt;p&gt;[11] Waydroid is a container-based approach to boot a full Android system on a regular GNU/Linux system like Ubuntu.
It is a successor of AnBox.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://android-developers.googleblog.com/2020/03/run-arm-apps-on-android-emulator.html"&gt;Run ARM apps on the Android Emulator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://blog.csdn.net/weixin_39991222/article/details/109897655?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.control"&gt;安卓虚拟键盘_干货分享：推荐几款性能不错的安卓模拟器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://emulation.gametechwiki.com/index.php/Android_emulators"&gt;Android Emulators @ GameTechWiki&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/virtualbox-tip"&gt;Tips on Virtualbox&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://copy.sh/v86/"&gt;x86 Virtualization in Browser&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="software"></category><category term="Android"></category><category term="emulation"></category><category term="emulator"></category><category term="AnBox"></category><category term="VirtualBox"></category><category term="xDroid"></category></entry><entry><title>Make Traffic Follow Through Proxies Using ProxyChains</title><link href="https://www.legendu.net/en/blog/proxychains-tips/" rel="alternate"></link><published>2017-06-30T14:34:01-07:00</published><updated>2023-08-01T09:14:37-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-30:/en/blog/proxychains-tips/</id><summary type="html">&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;h3 id="ubuntu"&gt;Ubuntu&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install proxychains4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="mac"&gt;Mac&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install proxychains-ng
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the proxychains-ng installed using Homebrew on Mac does not work well right now (as of 2019-03-07).
An alternative way is to use proxychains via Docker on Mac.
The Docker image
&lt;a href="https://cloud.docker.com/repository/docker/dclong/jupyterhub-ds"&gt;dclong/jupyterhub-ds&lt;/a&gt;
has proxychains (NOT proxychains-ng) installed.&lt;/p&gt;
&lt;h2 id="syntax"&gt;Syntax&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;proxychains4 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;h3 id="ubuntu"&gt;Ubuntu&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install proxychains4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="mac"&gt;Mac&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install proxychains-ng
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the proxychains-ng installed using Homebrew on Mac does not work well right now (as of 2019-03-07).
An alternative way is to use proxychains via Docker on Mac.
The Docker image
&lt;a href="https://cloud.docker.com/repository/docker/dclong/jupyterhub-ds"&gt;dclong/jupyterhub-ds&lt;/a&gt;
has proxychains (NOT proxychains-ng) installed.&lt;/p&gt;
&lt;h2 id="syntax"&gt;Syntax&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;proxychains4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;--help&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;-q&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;-f config_file&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;program_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nl"&gt;help&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;makes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;proxychains&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quiet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;overrides&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setting&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;allows&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;manually&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specify&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;configfile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="use-case-of-proxychains"&gt;Use Case of ProxyChains&lt;/h2&gt;
&lt;p&gt;There are multiple typical use cases of ProxyChains.
First,
ProxyChains can be used to circumstance a firewall through a single proxy. 
In this case, 
there can only be 1 proxy defined for ProxyChains
and it is best to specify the &lt;code&gt;strict_chain&lt;/code&gt; option for ProxyChains.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;strict_chain
quiet_mode
tcp_read_time_out 15000
tcp_connect_time_out 8000
localnet 127.0.0.1/255.0.0.0

[ProxyList]
socks5     127.0.0.1 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Second,
ProxyChains can be used to cirumstance a firewall through a chain of proxies (in a certain order).
In this situation, 
a single proxy is not enough but you must redict your connection 
through multiple proxies in a certain order (a chain of proxies).
You have to list the proxies to use in the order you want to connect 
and specify the &lt;code&gt;strict_chain&lt;/code&gt; option. 
Different types of proxies can be used.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;strict_chain
quiet_mode
tcp_read_time_out 15000
tcp_connect_time_out 8000
localnet 127.0.0.1/255.0.0.0

[ProxyList]
socks5     proxy_ip_1 1080
http     proxy_ip_2 1080
socks5     proxy_ip_3 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Last,
ProxyChains can be used to hide your identity similar to what tor can do for you. 
In order to do this, 
you have to define multiple proxies 
and redirect your connection through a chain of those proxies (in random order).
You have to specify the &lt;code&gt;dynamic_chain&lt;/code&gt; or &lt;code&gt;random_chain&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dynamic_chain
quiet_mode
tcp_read_time_out 15000
tcp_connect_time_out 8000
localnet 127.0.0.1/255.0.0.0

[ProxyList]
socks5     proxy_ip_1 1080
http     proxy_ip_2 1080
socks5     proxy_ip_3 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="tricks-and-traps"&gt;Tricks and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ProxyChains supports only &lt;code&gt;IP PORT&lt;/code&gt; but not &lt;code&gt;DNS_NAME PORT&lt;/code&gt; now.
    Notably, 
    &lt;code&gt;127.0.0.1&lt;/code&gt; is OK but not &lt;code&gt;localhost&lt;/code&gt;.
    For more details, 
    please refer to the issue 
    &lt;a href="https://github.com/rofl0r/proxychains-ng/issues/246"&gt;How to specify server by DOMAIN PORT not IP PORT?&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no special requirement on the SSH configuration file (&lt;code&gt;$HOME/.ssh/config&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;socks5&lt;/code&gt; is prefer to &lt;code&gt;socks4&lt;/code&gt; when you use a socks proxy (SSH tunnel).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="example-of-proxychains-configuration"&gt;Example of ProxyChains Configuration&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;strict_chain
quiet_mode
tcp_read_time_out 15000
tcp_connect_time_out 8000
localnet 127.0.0.1/255.0.0.0

[ProxyList]
socks5     127.0.0.1 1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="error-message"&gt;Error Message&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SSH Configuration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;muxserver_listen bind(): No such file or directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is probably due to configuration of SSH.
For example,
if you have the following line in the config file for SSH,
you have to make sure that the directory &lt;code&gt;~/.ssh/control&lt;/code&gt; exists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ControlPath&lt;span class="w"&gt; &lt;/span&gt;~/.ssh/control/ssh_%h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shell Alias&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[proxychains] config file found: /home/dclong/.proxychains/proxychains.conf
[proxychains] preloading /usr/local/lib/libproxychains4.so
proxychains can't load process....: No such file or directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is possibly due to alias used with ProxyChains.
For example,
I have the alias defined.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ssh.analytics&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh analytics_server_ip&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;proxychains4 ssh.analytics&lt;/code&gt; throws the above error message
while &lt;code&gt;proxychains4 ssh analytics_server_ip&lt;/code&gt; works well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There seems to be an issue if ProxyChains is directly in a VM,
    but it works well if used in a Docker on the VM ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="advanced-discussions"&gt;Advanced Discussions&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/rofl0r/proxychains-ng/issues/246"&gt;How to specify server by DOMAIN PORT not IP PORT?&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="use-different-proxies-for-different-servers"&gt;Use Different Proxies for Different Servers&lt;/h3&gt;
&lt;p&gt;ProxyChains does not support configuring different proxies for different servers directly, 
however,
tinyproxy can be configured to use different upstream proxies for different destinations, 
and you can run tinyproxy on localhost and put its address into your proxychains configuration.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://linuxhint.com/proxychains-tutorial/"&gt;ProxyChains Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.milesweb.com/blog/technology-hub/concatenate-multiple-proxies-proxychains/"&gt;Concatenate Multiple Proxies Using ProxyChains&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="Software"></category><category term="ProxyChains"></category><category term="network"></category><category term="web"></category><category term="proxy"></category></entry><entry><title>SSH Tunnel</title><link href="https://www.legendu.net/en/blog/ssh-tunnel/" rel="alternate"></link><published>2018-09-07T21:32:57-07:00</published><updated>2023-08-01T09:13:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-09-07:/en/blog/ssh-tunnel/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The StackOverflow discussion 
    &lt;a href="https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot#:~:text=Introduction,port%20on%20the%20remote%20side.&amp;amp;text=remote%3A%20%2DR%20Specifies%20that%20the,port%20on%20the%20local%20side."&gt;What's ssh port forwarding and what's the difference between ssh local and remote port forwarding [duplicate]&lt;/a&gt;
    has a good visual comparison/explanation of the difference 
    between the &lt;code&gt;ssh -L&lt;/code&gt; (&lt;code&gt;-L&lt;/code&gt; stands for local) and &lt;code&gt;ssh -R&lt;/code&gt; (&lt;code&gt;-R&lt;/code&gt; stands for remote).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/pahaz/sshtunnel"&gt;sshtunnel&lt;/a&gt;
    is a Python implementation of SSH …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The StackOverflow discussion 
    &lt;a href="https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot#:~:text=Introduction,port%20on%20the%20remote%20side.&amp;amp;text=remote%3A%20%2DR%20Specifies%20that%20the,port%20on%20the%20local%20side."&gt;What's ssh port forwarding and what's the difference between ssh local and remote port forwarding [duplicate]&lt;/a&gt;
    has a good visual comparison/explanation of the difference 
    between the &lt;code&gt;ssh -L&lt;/code&gt; (&lt;code&gt;-L&lt;/code&gt; stands for local) and &lt;code&gt;ssh -R&lt;/code&gt; (&lt;code&gt;-R&lt;/code&gt; stands for remote).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/pahaz/sshtunnel"&gt;sshtunnel&lt;/a&gt;
    is a Python implementation of SSH tunnel 
    (based on &lt;a href="https://github.com/paramiko/paramiko"&gt;paramiko&lt;/a&gt;)
    .&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="ssh-tunnel"&gt;SSH Tunnel&lt;/h2&gt;
&lt;p&gt;You can create a SSH tunnel from your local machine to a server using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;/path_to_key&lt;span class="w"&gt; &lt;/span&gt;-fND&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1080&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;user@server_ip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The created SSH tunnel is essentially a socks5 proxy 
and can be accessed as &lt;code&gt;localhost:1080&lt;/code&gt;.
If you want the tunnel (socks5 proxy) to be accessible by other machines as well
rathe than the localhost only, 
you can bind it to all IPs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;/path_to_key&lt;span class="w"&gt; &lt;/span&gt;-fND&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*:1080&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;user@server_ip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can verify that the tunnel (socks5 proxy) is working using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;netstat&lt;span class="w"&gt; &lt;/span&gt;-tlnp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or you can try to visit a website using curl through the socks5 proxy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class="w"&gt; &lt;/span&gt;--socks5&lt;span class="w"&gt; &lt;/span&gt;localhost:1080&lt;span class="w"&gt; &lt;/span&gt;www.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="reverse-ssh-tunnel"&gt;Reverse SSH Tunnel&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-fN&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8888&lt;/span&gt;:localhost:8888&lt;span class="w"&gt; &lt;/span&gt;user@domain.com
ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh &amp;lt;bastion_server&amp;gt; -W %h:%p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20000&lt;/span&gt;:localhost:22&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;target_server&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more discussions,
please refer to
&lt;a href="https://www.howtoforge.com/reverse-ssh-tunneling"&gt;reverse-ssh-tunneling&lt;/a&gt;
,
&lt;a href="https://unix.stackexchange.com/questions/46235/how-does-reverse-ssh-tunneling-work"&gt;how-does-reverse-ssh-tunneling-work&lt;/a&gt;
and
&lt;a href="https://blog.devolutions.net/2017/3/what-is-reverse-ssh-port-forwarding"&gt;what-is-reverse-ssh-port-forwarding&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="advanced-usage-1-ssh-into-a-server-using-proxy"&gt;Advanced Usage 1: SSH into a Server Using Proxy&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh bastion_server -W %h:%p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;target_server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="advanced-usage-2-ssh-tunnel-to-avoid-2fa"&gt;Advanced Usage 2: SSH Tunnel to Avoid 2FA&lt;/h2&gt;
&lt;p&gt;Suppose you have 2 machines A and B. 
Machine B is only accssible from machine A using SSH through 2FA.
You can create and persist a SSH tunnel from machine A to machine B 
(2FA is still required when creating the SSH tunnel).
Then you can avoid 2FA when connecting from machine A to machine B 
by using the created SSH tunnel as socks5 proxy through tools such as ProxyChains. &lt;/p&gt;
&lt;p&gt;If you do not want to rely another another tools (such as ProxyChains),
you can configure SSH to persist and reuse connections.
For more discussions on this, 
please refer to the 
&lt;a href="https://www.legendu.net/en/blog/ssh-tips/#multiplexing-controlmaster"&gt;SSH Tunnel - Multiplexing / ControlMaster&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="advanced-usage-3-access-service-in-an-indirectly-accessible-remote-server"&gt;Advanced Usage 3: Access Service in an Indirectly Accessible Remote Server&lt;/h2&gt;
&lt;p&gt;Suppose you have 2 machines A and B. 
Machine B cannot visit the public network nor machine A.
However, 
machine B is accssible (directly or via a bastion server) 
from machine A using SSH and machine A can visit the public network. 
You can follow the steps below to access service running on machine B.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start the service on machine B if it is not already running.
    Let use the JupyterLab server as an example here,
    and assume it is running on the port 8888 on machine B.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the following command on machine A 
    to forward visits of the port 3333 on machine A to the port 8888 on machine B.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-fNL&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3333&lt;/span&gt;:localhost:8888&lt;span class="w"&gt; &lt;/span&gt;ip_of_machine_b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can then visit &lt;code&gt;ip_of_machine_a:3333&lt;/code&gt; to access the JupyterLab service running on machine B.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="advanced-usage-4-ssh-reverse-tunnel-ssh-tunnel"&gt;Advanced Usage 4: SSH Reverse Tunnel + SSH Tunnel&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh bastion_server -W %h:%p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20000&lt;/span&gt;:localhost:22&lt;span class="w"&gt; &lt;/span&gt;target_server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="advanced-usage-5-ssh-reverse-tunnel-ssh-tunnel"&gt;Advanced Usage 5: SSH Reverse Tunnel + SSH Tunnel&lt;/h2&gt;
&lt;p&gt;Suppose you have 2 machines A and B. 
Machine B cannot visit the public network nor machine A.
However, 
machine B is accssible (directly or via a bastion server) from machine A 
using SSH and machine A can visit the public network. 
You can follow the steps below to access the public network from machine B.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a Reversed SSH tunnel from machine A to machine B.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;/path_to_key&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh bastion_server -W %h:%p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20000&lt;/span&gt;:localhost:22&lt;span class="w"&gt; &lt;/span&gt;ip_of_machine_b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a SSH Tunnel on machine B.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;/path_to_key&lt;span class="w"&gt; &lt;/span&gt;-fND&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1080&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the created SSH Tunnel as a socks5 proxy to visit the public network via proxychains.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;proxychains&lt;span class="w"&gt; &lt;/span&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;pytorch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/pahaz/sshtunnel"&gt;sshtunnel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot#:~:text=Introduction,port%20on%20the%20remote%20side.&amp;amp;text=remote%3A%20%2DR%20Specifies%20that%20the,port%20on%20the%20local%20side."&gt;What's ssh port forwarding and what's the difference between ssh local and remote port forwarding [duplicate]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://benjlindsay.com/posts/running-jupyter-lab-remotely"&gt;Running Jupyter Lab Remotely&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.systutorials.com/944/proxy-using-ssh-tunnel/"&gt;Proxy Using SSH Tunnel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.revsys.com/writings/quicktips/ssh-tunnel.html"&gt;Quick-Tip: SSH Tunneling Made Easy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://agent-jay.github.io/2018/03/jupyterserver/"&gt;Setting up a Jupyter Lab remote server&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://superuser.com/questions/303251/how-to-check-if-a-socks5-proxy-works"&gt;How to check if a Socks5 proxy works&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="software"></category><category term="SSH tunnel"></category><category term="socks proxy"></category><category term="reverse"></category><category term="SSH"></category></entry><entry><title>Working with Spreadsheet in Python</title><link href="https://www.legendu.net/en/blog/working-with-spreadsheet-with-python/" rel="alternate"></link><published>2015-05-09T08:43:45-07:00</published><updated>2023-08-01T09:11:55-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-09:/en/blog/working-with-spreadsheet-with-python/</id><summary type="html">&lt;p&gt;It is suggested that you avoid using Excel files (or other spreadsheet tools) for storing data.
Parquet file is currently the best format for storing table-like data.
If you do want to interact and manipulate your data using Excel (or other spreadsheet tools),
dump your data into CSV files
and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is suggested that you avoid using Excel files (or other spreadsheet tools) for storing data.
Parquet file is currently the best format for storing table-like data.
If you do want to interact and manipulate your data using Excel (or other spreadsheet tools),
dump your data into CSV files
and then load them into Excel when needed.
However, 
if you do want to work with spreadsheet in Python,
below are some options.&lt;/p&gt;
&lt;h2 id="quadratic"&gt;&lt;a href="https://app.quadratichq.com/"&gt;Quadratic&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://app.quadratichq.com/"&gt;Quadratic&lt;/a&gt;
is a data science spreadsheet
which has Python (JavaScript and SQL) built-in.&lt;/p&gt;
&lt;h2 id="google-spreadsheet"&gt;&lt;a href="https://www.google.com/sheets/about/"&gt;Google Spreadsheet&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Please refer to
&lt;a href="https://www.legendu.net/misc/blog/use-python-with-google-spreadsheet/"&gt;Use Python with Google Spreadsheet&lt;/a&gt;
for detailed discussions.&lt;/p&gt;
&lt;h2 id="pandas"&gt;&lt;a href="https://github.com/pandas-dev/pandas"&gt;pandas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you just want to read an Excel spreadsheet to a pandas DataFrame 
or write a pandas DataFrame to an Excel file, 
it is best to use the pandas library directly.
Notice that 
&lt;a href="https://foss.heptapod.net/openpyxl/openpyxl"&gt;openpyxl&lt;/a&gt;
is required if you read/write Excel files using pandas.&lt;/p&gt;
&lt;h2 id="openpyxl"&gt;&lt;a href="https://foss.heptapod.net/openpyxl/openpyxl"&gt;openpyxl&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://foss.heptapod.net/openpyxl/openpyxl"&gt;openpyxl&lt;/a&gt;
is the underlying library that pandas leverages for reading/writing Excel files.&lt;/p&gt;
&lt;h2 id="xlsxwriter"&gt;&lt;a href="https://github.com/jmcnamara/XlsxWriter"&gt;xlsxwriter&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/jmcnamara/XlsxWriter"&gt;xlsxwriter&lt;/a&gt;
is a Python module for writing files in the Excel 2007+ XLSX file format.
XlsxWriter is designed only as a file writer. 
It cannot read or modify an existing Excel file.
However,
if an Excel file is created from data (understandable by Python),
you can create a new Excel file from the same data to overwrite the existing one. 
This sort of gives you a flavor of updating an existing Excel file.&lt;/p&gt;
&lt;h2 id="xlwings"&gt;&lt;a href="https://www.xlwings.org/"&gt;xlwings&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;xlwings is a commerical software but has a opensource community edition. 
It requires an installation of Excel and therefore only works on Windows and macOS. 
Note that macOS currently does not support UDFs.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/xlwings/xlwings"&gt;xlwings @ GitHub&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://xlsxwriter.readthedocs.io/"&gt;Creating Excel files with Python and XlsxWriter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://xlsxwriter.readthedocs.io/faq.html"&gt;XlsxWriter - Frequently Asked Questions&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://xlsxwriter.readthedocs.io/examples.html"&gt;XlsxWriter - Examples&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="Spreadsheet"></category><category term="Excel"></category><category term="pandas"></category><category term="xlsxwriter"></category></entry><entry><title>Summary on Random Number Generators</title><link href="https://www.legendu.net/en/blog/summary-random-number-generators/" rel="alternate"></link><published>2012-07-27T21:14:07-07:00</published><updated>2023-07-22T22:16:05-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-27:/en/blog/summary-random-number-generators/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="xoshiro"&gt;&lt;a href="https://prng.di.unimi.it/"&gt;Xoshiro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Xoshiro is a family of fast, space-efficient and high quality PRNGs.
It is considered the state-of-the-art (SOTA) family of non-cryptographic pseudo random number generators (PRNGs).
The Rust crate
&lt;a href="https://crates.io/crates/rand_xoshiro"&gt;rand_xoshiro&lt;/a&gt;
(which is part of the popular Rust crate &lt;a href="https://crates.io/crates/rand"&gt;rand&lt;/a&gt;)
has implementations of 
&lt;a href="https://docs.rs/rand_xoshiro/latest/rand_xoshiro/struct.Xoshiro256Plus.html"&gt;Xoshiro256Plus&lt;/a&gt;
and
&lt;a href="https://docs.rs/rand_xoshiro/latest/rand_xoshiro/struct.Xoshiro256PlusPlus.html"&gt;Xoshiro256PlusPlus&lt;/a&gt;
.
&lt;a href="https://docs.rs/rand_xoshiro/latest/rand_xoshiro/struct.Xoshiro256PlusPlus.html"&gt;Xoshiro256PlusPlus&lt;/a&gt;
is a very good …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="xoshiro"&gt;&lt;a href="https://prng.di.unimi.it/"&gt;Xoshiro&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Xoshiro is a family of fast, space-efficient and high quality PRNGs.
It is considered the state-of-the-art (SOTA) family of non-cryptographic pseudo random number generators (PRNGs).
The Rust crate
&lt;a href="https://crates.io/crates/rand_xoshiro"&gt;rand_xoshiro&lt;/a&gt;
(which is part of the popular Rust crate &lt;a href="https://crates.io/crates/rand"&gt;rand&lt;/a&gt;)
has implementations of 
&lt;a href="https://docs.rs/rand_xoshiro/latest/rand_xoshiro/struct.Xoshiro256Plus.html"&gt;Xoshiro256Plus&lt;/a&gt;
and
&lt;a href="https://docs.rs/rand_xoshiro/latest/rand_xoshiro/struct.Xoshiro256PlusPlus.html"&gt;Xoshiro256PlusPlus&lt;/a&gt;
.
&lt;a href="https://docs.rs/rand_xoshiro/latest/rand_xoshiro/struct.Xoshiro256PlusPlus.html"&gt;Xoshiro256PlusPlus&lt;/a&gt;
is a very good PRNG for statistical simulation purpose. 
Specially,
it supports jumping ahead
which means that you can implement a fast and &lt;strong&gt;correct&lt;/strong&gt; parallel PRNG based on it.&lt;/p&gt;
&lt;h2 id="mersenne-twister"&gt;Mersenne Twister&lt;/h2&gt;
&lt;p&gt;Mersenne Twister was the state-of-the-art (SOTA) non-cryptographic pseudo random number generator (PRNG) 
before the 
&lt;a href="https://prng.di.unimi.it/"&gt;Xoshiro faimily of PRNGs&lt;/a&gt;
.
It was implemented in many programming languages 
and was the default in many software and programming languages.
Mersenne Twister has many different versions, 
among which the MT19937 is the most widely used one. 
The period of MT19937 is extreemly long (&lt;span class="math"&gt;\(2^{19937}-1\)&lt;/span&gt;)
and is equidistributed for generating vectors up to dimension 623. 
The MT19937 generate 32 bits random numbers. 
Combining two random blocks, 
one can generate 64 bits random numbers.
This is often implemented together with the 32 bit version, 
and usually call MT19937_64.
The MT19937_64 is equidistributed for generating vectors up to dimension 311.&lt;/p&gt;
&lt;h2 id="well"&gt;WELL&lt;/h2&gt;
&lt;p&gt;A more modern family of random number generators than Mersenne Twister 
is the WELL random number generators, 
which have better equidistribution property and are better to escape the zeroland 
(initialization array contains many zero bits). 
However, 
the speed of the WELL generators is about 0.6 to 0.7 compared to the Mersenne Twister generators. 
Also the WELL random number generators has a large inner state 
(e.g., the WELL44497b uses about 33kb for its inner state while the MT19937 uses only about 2.5kb). 
This is usually not a problem on modern computers, 
but if you use lots of random number generators at the same time 
or if the code is run on a embedded device, 
it might worth considering the consume of memories of these generators. 
Among different versions of WELL generators, 
WELL19937c and WELL44497b are commonly used. &lt;/p&gt;
&lt;h2 id="sfmt"&gt;SFMT&lt;/h2&gt;
&lt;p&gt;SIMD-oriented Fast Mersenne Twister (SFMT) is an improved version of Mersenne Twister. 
It uses parallelism of modern CPUs and is about twice faster than mersenne Twister. 
SFMT also has better equidistribution property than Mersenne Twister, 
but not as good as WELL.
SFMT recovers from 0-excess initial state faster than Mersenne Twister, 
but not faster than WELL.
C++ implementations are available but I don't see a popular Java implementation so far.&lt;/p&gt;
&lt;h2 id="pcg"&gt;&lt;a href="http://www.pcg-random.org/"&gt;PCG&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;PCG is a family of simple fast space-efficient statistically good algorithms 
for random number generation. 
Unlike many general-purpose RNGs, 
they are also hard to predict.
C++ implementations are available,
and the Rust crate 
&lt;a href="https://crates.io/crates/rand_pcg"&gt;rand_pcg&lt;/a&gt;
(which is part of the popular Rust crate &lt;a href="https://crates.io/crates/rand"&gt;rand&lt;/a&gt;)
has implementation of 
&lt;a href="https://rust-random.github.io/rand/rand_pcg/type.Pcg32.html"&gt;PCG32&lt;/a&gt;
and 
&lt;a href="https://rust-random.github.io/rand/rand_pcg/type.Pcg64.html"&gt;PCG64&lt;/a&gt;
.
I don't see a popular Java implementation for PCG at this time.&lt;/p&gt;
&lt;h2 id="libraries-for-random-number-generators"&gt;Libraries for Random Number Generators&lt;/h2&gt;
&lt;h3 id="java"&gt;Java&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://commons.apache.org/proper/commons-math/javadocs/api-3.6/org/apache/commons/math3/random/RandomDataGenerator.html"&gt;org.apache.commons.math3.random.RandomDataGenerator&lt;/a&gt;
    is a popular one. 
    By default it uses a Well19937c generator.
    A customized RandomGenerator can be provided in the constructor.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="python"&gt;Python&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;a href="https://docs.python.org/3/library/random.html"&gt;random&lt;/a&gt; model.
    It is based on a Mersenne Twister random number generator.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="rust"&gt;Rust&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://crates.io/crates/rand"&gt;rand&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://crates.io/crates/rand_xoshiro"&gt;rand_xoshiro&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prng.di.unimi.it/"&gt;Xoshiro / Xoroshiro Generators and the PRNG Shootout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.legendu.net/en/blog/thread-safe-random-number-generator"&gt;Thread Safe Random Number Generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="AI"></category><category term="WELL"></category><category term="RNG"></category><category term="statistics"></category><category term="SFMT"></category><category term="dimension"></category><category term="MT"></category><category term="PCG"></category><category term="Java"></category><category term="Python"></category></entry><entry><title>Thread Safe Random Number Generator</title><link href="https://www.legendu.net/en/blog/thread-safe-random-number-generator/" rel="alternate"></link><published>2012-07-08T00:00:00-07:00</published><updated>2023-07-22T22:16:05-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-08:/en/blog/thread-safe-random-number-generator/</id><summary type="html">&lt;p&gt;In pratice,
the approach of separate RNGs with different seeds for threads/processes
is widely used 
(even though theoretically those RNGs might have overlaping sequences, 
which is undesirable).
For more discussions on this approach,
please refer to
&lt;a href="https://rust-random.github.io/book/guide-parallel.html"&gt;The Rust Rand Book - Parallel RNGs&lt;/a&gt;
and
&lt;a href="https://www.legendu.net/en/blog/seed-many-rngs-in-rust/"&gt;Seed Many RNGs in Rust&lt;/a&gt;
.
The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In pratice,
the approach of separate RNGs with different seeds for threads/processes
is widely used 
(even though theoretically those RNGs might have overlaping sequences, 
which is undesirable).
For more discussions on this approach,
please refer to
&lt;a href="https://rust-random.github.io/book/guide-parallel.html"&gt;The Rust Rand Book - Parallel RNGs&lt;/a&gt;
and
&lt;a href="https://www.legendu.net/en/blog/seed-many-rngs-in-rust/"&gt;Seed Many RNGs in Rust&lt;/a&gt;
.
The following of this article discusses about thread-safe RNGs based on Mersenne Twister.
Note that Mersenne Twister is no longer considered the state-of-the-art non-cryptographic PRNG. 
For more discussions on this,
please refer to
&lt;a href="https://www.legendu.net/en/blog/summary-random-number-generators/"&gt;Summary on Random Number Generators&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;In statistical simulation, a thread safe random number generator is often useful. 
Thread safty can be achieved by synchronize public methods of random number generator engines. 
In C++, 
this can be done through mutex (see more about my post on multithreading in C++). 
I implemented a &lt;a href="http://www.legendu.net/media/rng/smt.h"&gt;Thread Safe Random Number Generator&lt;/a&gt; (based on the Mersenne Twister RNG).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#ifndef DCLONG_SMT_H_&lt;/span&gt;
&lt;span class="cp"&gt;#define DCLONG_SMT_H_&lt;/span&gt;

&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;random&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;mutex&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;UIntType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;smt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mersenne_twister_engine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;private&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kr"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_mutex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kr"&gt;public&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;()(){&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;lock_guard&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;mutex&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lck&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_mutex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mersenne_twister_engine&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="kr"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;()();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;UIntType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutex&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UIntType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;::&lt;/span&gt;&lt;span class="n"&gt;_mutex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;uint32_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;351&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;175&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xccab8ee7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xffffffff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x31b6ab00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xffe50000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1812433253&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt11213b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;uint32_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;624&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;397&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x9908b0df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xffffffff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0x9d2c5680&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mh"&gt;0xefc60000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1812433253&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt19937&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#if !defined(BOOST_NO_INT64_T) &amp;amp;&amp;amp; !defined(BOOST_NO_INTEGRAL_INT64_T)&lt;/span&gt;
&lt;span class="kr"&gt;typedef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;uint64_t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;312&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;156&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UINT64_C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xb5026f5aa96619e9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UINT64_C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x5555555555555555&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UINT64_C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0x71d67fffeda60000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UINT64_C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xfff7eee000000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UINT64_C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6364136223846793005&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smt19937_64&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;

&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To test whether this random number generator is truely thread safe, 
I generated a bunch of integer from negative binomial distribution 
using both this random number generator and mt19937_64 
with a same seed (on which the random number generator implemented here is based) 
as the underlying engines, 
and compare whether they are the same set. 
Surprisingly, 
the two sets of integers I got were different. 
I was very confused and ask this problem to &lt;a href="http://bartoszmilewski.com/"&gt;Bartosz Milewski&lt;/a&gt; 
who published a series of video tutorials on multithreading in C++11. 
After discussing with Bartosz Milewski, 
he pointed out that the problem was because 
the negative binomial distribution calls the method &lt;code&gt;operator()()&lt;/code&gt; multiple times 
to generate a single random integer. 
This does not mean that anything is wrong with the implementation of the negative binomial distribution. 
It is thread safe as long as the underlying random number generator it uses is thread safe. 
Due to the fact that a negative binomial distribution calls the method &lt;code&gt;operator()()&lt;/code&gt; 
of the underlying random number generator multiple times to generate a single integer, 
the random numbers it generates based on a synchronized random number generator
is not necessarily the same set as the one 
that the corresponding serial random number generator generates from the same seed. 
I verified that the numbers generated by the negative binomial distribution 
using the thread safe random number generator here come from the right distribution. 
Another way to validate the implementation of the thread safe random number generator here is that 
if a distribution call the method &lt;code&gt;operator()()&lt;/code&gt; only once to generate a random number, 
then the numbers it generates based on smt and mt19937_64 should be the same set. 
I verified that this is true for a bernoulli distribution. &lt;/p&gt;
&lt;p&gt;Short after I implemented this thread safe random number generator, 
I found betters ways to generate random numbers in parallel. 
The basic is to make the random number engine to jump forward a long enough distance quickly. 
Currently many popular random number generators can jump forward a long enough distance 
in a acceptable short time. 
For example, 
the Mersenne Twister can jump forward in milliseconds. 
For more information, please see &lt;a href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/#dSFMT"&gt;SFMT&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.legendu.net/en/blog/summary-random-number-generators"&gt;Summary on Random Number Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rust-random.github.io/book/guide-parallel.html"&gt;The Rust Rand Book - Parallel RNGs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="C++"></category><category term="RNG"></category><category term="programming"></category><category term="thread"></category><category term="distribution"></category><category term="HPC"></category><category term="fun problems"></category><category term="MT"></category><category term="Concurrency"></category></entry><entry><title>Operate Remote Servers Using SSH</title><link href="https://www.legendu.net/en/blog/ssh-tips/" rel="alternate"></link><published>2013-10-22T11:03:15-07:00</published><updated>2023-07-13T00:51:20-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-22:/en/blog/ssh-tips/</id><summary type="html">&lt;h2 id="general-tips-and-traps"&gt;General Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The permissions of the directory &lt;code&gt;~/.ssh&lt;/code&gt; and its subcontents
    on &lt;strong&gt;both the local machine and the remote server&lt;/strong&gt; must be properly set 
    in order for SSH login via public key to work.
    A good pratice is to set the permission of &lt;code&gt;~/.ssh&lt;/code&gt; to &lt;code&gt;700&lt;/code&gt; (on both …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="general-tips-and-traps"&gt;General Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The permissions of the directory &lt;code&gt;~/.ssh&lt;/code&gt; and its subcontents
    on &lt;strong&gt;both the local machine and the remote server&lt;/strong&gt; must be properly set 
    in order for SSH login via public key to work.
    A good pratice is to set the permission of &lt;code&gt;~/.ssh&lt;/code&gt; to &lt;code&gt;700&lt;/code&gt; (on both the local machine and the rmeote server)
    and set permissions of files under &lt;code&gt;~/.ssh&lt;/code&gt; to  &lt;code&gt;600&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSH automatically maintains and checks a database containing identification 
    for all hosts it has ever been used with. 
    Host keys are stored in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; in the user's home directory. 
    Additionally, 
    the file &lt;code&gt;/etc/ssh/ssh_known_hosts&lt;/code&gt; is automatically checked for known hosts. 
    Any new hosts are automatically added to the user's file. 
    If a host's identification ever changes, 
    SSH warns about this and disables password authentication 
    to prevent server spoofing or man-in-the-middle attacks, 
    which could otherwise be used to circumvent the encryption. 
    The option &lt;code&gt;-o StrictHostKeyChecking=no&lt;/code&gt; can be used to turn off strict host key checking
    (on both new host keys and changed host keys).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;StrictHostKeyChecking&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;your_server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also turn of strickt host key checking permanently by adding the following line into &lt;code&gt;~/.ssh/config&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;StrictHostKeyChecking no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is helpful for automation when you are in a safe environment (e.g., private VPN). 
However, 
be aware of the risk and avoid using it in public environment.
For more details, 
please refer to
&lt;a href="https://linux.die.net/man/1/ssh"&gt;ssh(1) - Linux man page&lt;/a&gt;
and
&lt;a href="http://bencane.com/2013/07/22/ssh-disable-host-checking-for-scripts-automation/"&gt;SSH: Disable Host Checking for Scripts &amp;amp; Automation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the option &lt;code&gt;-o ProxyCommand='ssh proxy_server -W %h:%p'&lt;/code&gt; 
    to SSH into a machine via a proxy server.
    Below is an illustration.
    For more details,
    please refer to
    &lt;a href="https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Proxies_and_Jump_Hosts"&gt;SSH Proxies and Jump Hosts&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssh proxy_server -W %h:%p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;target_server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When using &lt;code&gt;sshfs&lt;/code&gt; and &lt;code&gt;fuse&lt;/code&gt;, 
    make sure to add your user account into the &lt;code&gt;fuse&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpasswd&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;id&lt;span class="w"&gt; &lt;/span&gt;-un&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fuse
newgrp&lt;span class="w"&gt; &lt;/span&gt;fuse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you do not set any password for your SSH keys. 
    First, setting passwords for SSH keys defeats the purpose of using SSH keys.
    Seconds, 
    settings passwords for SSH keys might causes problems to other applicatons 
    (e.g., keyring management, cron jobs, duplicity, etc.) rely on SSH.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use SSH to run commands on a remote server in non-interactive mode.
    For example, 
    the following command logs into a server named &lt;code&gt;vm1.example.com&lt;/code&gt; using SSH 
    and then use &lt;code&gt;rsync&lt;/code&gt; to synchronize the directory &lt;code&gt;/workdir/&lt;/code&gt; on the server &lt;code&gt;vm2.example.com&lt;/code&gt;
    to the directory &lt;code&gt;/workdir/&lt;/code&gt; on the server &lt;code&gt;vm1.example.com&lt;/code&gt; (which is the local machine of &lt;code&gt;rsync&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;vm1.example.com&lt;span class="w"&gt; &lt;/span&gt;rsync&lt;span class="w"&gt; &lt;/span&gt;-avh&lt;span class="w"&gt; &lt;/span&gt;--info&lt;span class="o"&gt;=&lt;/span&gt;progress2&lt;span class="w"&gt; &lt;/span&gt;--delete&lt;span class="w"&gt; &lt;/span&gt;vm2.example.com:/workdir/&lt;span class="w"&gt; &lt;/span&gt;/workdir/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;backup.log&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;backup.err
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="multiplexing-controlmaster"&gt;Multiplexing / ControlMaster&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;ControlMaster auto&lt;/code&gt; option can be used to allow SSH reuse an existing connection.
    The &lt;code&gt;ControlPersist yes&lt;/code&gt; option goes one step further to persist a connection once it's established.
    This means that there will essentially be one long-term SSH connection to each host. 
    Those 2 options together is a very good way to avoid frequently SSH logins 
    especially when you have to rely on bastion servers to login (e.g., in an Enterprise environment).
    Notice that you must also specify a &lt;code&gt;ControlPath&lt;/code&gt; 
    if you use &lt;code&gt;ControlMaster&lt;/code&gt;.
    For more discussions, 
    please refer to
    &lt;a href="https://www.cyberciti.biz/faq/linux-unix-reuse-openssh-connection/"&gt;How To Reuse SSH Connection To Speed Up Remote Login Process Using Multiplexing&lt;/a&gt;
    .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host *
# ControlMaster: persist connections for reuse
    ControlPath ~/.ssh/control/%r@%h:%p
    ControlMaster auto
    ControlPersist yes
#
    SendEnv LANG LC_*
    HashKnownHosts yes
    GSSAPIAuthentication yes
    GSSAPIDelegateCredentials no
# make connection alive
    ServerAliveInterval 10
    ServerAliveCountMax 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are some potential drawbacks with &lt;code&gt;ControlMaster&lt;/code&gt; turned on though. 
    It is mainly due to limited bandwidth.
    This is, generally speaking, not really an issue 
    unless you transfer huge amount of data over SSH.
    For more discussions,
    please refer to
    &lt;a href="https://www.anchor.com.au/blog/2010/02/ssh-controlmaster-the-good-the-bad-the-ugly/"&gt;SSH ControlMaster: The Good, The Bad, The Ugly&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/faq/linux-unix-reuse-openssh-connection/"&gt;How To Reuse SSH Connection To Speed Up Remote Login Process Using Multiplexing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anchor.com.au/blog/2010/02/ssh-controlmaster-the-good-the-bad-the-ugly/"&gt;SSH ControlMaster: The Good, The Bad, The Ugly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Proxies_and_Jump_Hosts&lt;/p&gt;
&lt;p&gt;https://www.cyberciti.biz/faq/linux-unix-ssh-proxycommand-passing-through-one-host-gateway-server/&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/22635613/what-is-the-difference-between-ssh-proxycommand-w-nc-exec-nc&lt;/p&gt;</content><category term="Software"></category><category term="tips"></category><category term="SSH"></category><category term="software"></category><category term="remote"></category><category term="Linux"></category><category term="ControlMaster"></category><category term="ControlPersist"></category><category term="ProxyCommand"></category><category term="ControlPath"></category></entry><entry><title>Manage Docker Images and Containers</title><link href="https://www.legendu.net/en/blog/docker-image-and-container-management/" rel="alternate"></link><published>2017-03-15T10:29:33-07:00</published><updated>2023-06-27T23:47:30-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-15:/en/blog/docker-image-and-container-management/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;It is suggested that you use &lt;a href="https://osquery.io/"&gt;osquery&lt;/a&gt;
    or &lt;a href="https://github.com/legendu-net/dockeree"&gt;dockeree&lt;/a&gt;
    to query Docker images, containers, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="remove-containers"&gt;Remove Containers&lt;/h2&gt;
&lt;p&gt;Note that running containers will NOT be removed by default.
This is what users want generally speaking. 
You can use the option &lt;code&gt;-f&lt;/code&gt; to force removing running containers,
but use it with caution …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;It is suggested that you use &lt;a href="https://osquery.io/"&gt;osquery&lt;/a&gt;
    or &lt;a href="https://github.com/legendu-net/dockeree"&gt;dockeree&lt;/a&gt;
    to query Docker images, containers, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="remove-containers"&gt;Remove Containers&lt;/h2&gt;
&lt;p&gt;Note that running containers will NOT be removed by default.
This is what users want generally speaking. 
You can use the option &lt;code&gt;-f&lt;/code&gt; to force removing running containers,
but use it with caution and at your own risk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove all existing containers (not images).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-aq&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# or you can use pipe&lt;/span&gt;
docker&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-aq&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rm
&lt;span class="c1"&gt;# or you can osquery&lt;/span&gt;
osqueryi&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select id from docker_containers&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--list&lt;span class="w"&gt; &lt;/span&gt;--header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove exited containers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-aqf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rm
osqueryi&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select id from docker_containers where state=exited&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--list&lt;span class="w"&gt; &lt;/span&gt;--header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="remove-images"&gt;Remove Images&lt;/h2&gt;
&lt;p&gt;Note that images required by running containers will NOT be removed by default.
This is what users want generally speaking. 
You can use the option &lt;code&gt;-f&lt;/code&gt; to force removing images,
but use it with caution and at your own risk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove images without names (with the help of &lt;code&gt;awk&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;images&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ if ($1 == &amp;quot;&amp;lt;none&amp;gt;&amp;quot;) print $3 }&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove images without versions (with the help of &lt;code&gt;awk&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;images&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ if ($2 == &amp;quot;&amp;lt;none&amp;gt;&amp;quot;) print $3 }&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove images without names or versions (with the help of &lt;code&gt;awk&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;images&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ if ($1 == &amp;quot;&amp;lt;none&amp;gt;&amp;quot; || $2 == &amp;quot;&amp;lt;none&amp;gt;&amp;quot;) print $3 }&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove images without names or versions (with the help of &lt;code&gt;osquery&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;osqueryi&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select id from docker_images where tags = &amp;#39;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--list&lt;span class="w"&gt; &lt;/span&gt;--header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all images belong to the eclipse organization with the help of &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;q&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;images&lt;span class="w"&gt; &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s/ \+/\t/g&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;q&lt;span class="w"&gt; &lt;/span&gt;-tH&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select [image id] from - where repository like &amp;#39;eclipse/%&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all images belong to the eclipse organization with the help of &lt;code&gt;osquery&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;osqueryi&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;select id from docker_images where tags like &amp;#39;eclipse/%&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--list&lt;span class="w"&gt; &lt;/span&gt;--header&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can force removing an image with the &lt;code&gt;--force&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;rmi&lt;span class="w"&gt; &lt;/span&gt;ubuntu&lt;span class="w"&gt; &lt;/span&gt;--force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have multiple tags on the same docker image, 
    you cannot remove the docker image by image id (without using &lt;code&gt;--force&lt;/code&gt;.)
    One way (without using &lt;code&gt;--force&lt;/code&gt;) is to specify the tag name to remove.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="get-container-id-inside-container"&gt;Get Container ID Inside Container&lt;/h2&gt;
&lt;p&gt;You can get the container ID inside the docker container 
by running the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat&lt;span class="w"&gt; &lt;/span&gt;/proc/self/cgroup&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt;  &lt;/span&gt;-e&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;docker-.*.scope&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;head&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/docker-\(.*\).scope/\\1/&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or another simpler way is to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$HOSTNAME&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But it will not work in the following two cases. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;if hostname is explicitly specified with &lt;code&gt;--hostname&lt;/code&gt; flag. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when using &lt;code&gt;--net=host&lt;/code&gt; mode.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="importexport-docker-containerimages"&gt;Import/Export Docker Container/Images&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://blog.giantswarm.io/moving-docker-container-images-around/"&gt;Moving Docker Containers and Images Around&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Save a docker image to a tar.gz file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;save&lt;span class="w"&gt; &lt;/span&gt;image&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;gzip&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;image.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load a docker image from tar file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;load&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="w"&gt; &lt;/span&gt;image.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="kill-a-process-in-a-container"&gt;Kill a Process in a Container&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;container_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;kill&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;process_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="volume"&gt;Volume&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can mount both a file and a directory into a Docker container. 
    However, 
    ALWAYS use absolutely paths for mounting (using the option &lt;code&gt;-v&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ALWAYS create a directory in the Docker container first
    before you mount a volume into it.
    If the directory (to mount into) in the Docker container does not exists,
    it will be created automatically by the root user
    (unless you specified a different user to run the Docker container).
    The newly created directory is owned by the root,
    which might not be as expected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AVOID mounting a volume into your home directory in the Docker container.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You might screw up the permission of your home directory in the Docker container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you mount your home on the host into your home in the Docker container,
    you might accidentally overwrite things in your home directory on the host.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is recommend that you always mount a volume to &lt;code&gt;/some_dir&lt;/code&gt; and then link to home if needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you mount a volume from the host to a Docker container,
    make sure that you have the right permissions to the directory on the host,
    o.w., you might run into various issues (such as the Docker container fails to start).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You following instructions in 
        &lt;a href="https://stackoverflow.com/questions/30642844/how-to-list-docker-mounted-volumes-from-within-the-container"&gt;this discussion&lt;/a&gt;
    to list mounted volumens.
    Another way is to use &lt;a href="https://osquery.io/"&gt;osquery&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="overwrite-entrypoint"&gt;Overwrite Entrypoint&lt;/h2&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/overwrite-entrypoint-in-docker"&gt;Overwrite Entrypoint in Docker&lt;/a&gt;
for detailed discussions.&lt;/p&gt;
&lt;h2 id="permission"&gt;Permission&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you have your user name added into the &lt;code&gt;docker&lt;/code&gt; group
    so that you can run Docker commands without using &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside a Docker container,
    files created belong to the user in the Docker container.
    If the files are created in a mounted host directory,
    then on the host these files belong to the user with the same user ID.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="port"&gt;Port&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Do NOT forget to forward ports from the host to the Docker containers
    while using docker containers.
    For example,
    if you run a Flask application in a Docker,
    you have to forward a port on the host to the port 5000 in the Docker container.
    If you run multiple services in a Docker container (not recommended),
    you have to forward all needed ports into the Docker container.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="sharing-files"&gt;Sharing Files&lt;/h2&gt;
&lt;p&gt;Copying file between a docker container and the host.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;foo.txt&lt;span class="w"&gt; &lt;/span&gt;mycontainer:/foo.txt
docker&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;mycontainer:/foo.txt&lt;span class="w"&gt; &lt;/span&gt;foo.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="run-docker-containers-in-a-docker-container"&gt;Run Docker Containers in a Docker Container&lt;/h2&gt;
&lt;p&gt;Please refer to
&lt;a href="http://www.legendu.net/en/blog/run-docker-containers-inside-a-docker-container"&gt;Run Docker Containers Inside a Docker Container&lt;/a&gt;
for more detailed discussions.&lt;/p&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;By default log in a Docker container is redirected to the standard output.
    However,
    you won't be able to see the log if you start the Docker container as a deamon (using the &lt;code&gt;-d&lt;/code&gt; option).
    For debugging purposes,
    it is suggested that you use the &lt;code&gt;-it&lt;/code&gt; options instead the &lt;code&gt;-d&lt;/code&gt; option.
    A more general and robust way is of course to redirect log of applications to a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple running instances of the same Docker image
    do not interact with each other.
    The are running isolated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon AWS is blocked in China (currently).
    Do NOT run Docker services on Amazon if your users are in the mainland of China.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="issues-solutions"&gt;Issues &amp;amp; Solutions&lt;/h2&gt;
&lt;h3 id="issueerror-1"&gt;Issue/Error 1&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;docker: Error response from daemon: Get https://registry-1.docker.io/v2/dclong/jupyterlab-rstudio/manifests/latest: dial tcp 50.17.62.194:443: getsockopt: connection refused&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First retry starting the Docker container.
If it still does not work
then restart the Docker daemon using the command below will resolve the issue.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;service&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="issueerror-2"&gt;Issue/Error 2&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter notebook connection failed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Due to proxy!!! Connect without proxy works!!!&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/31280465/ipython-notebook-connection-failed-issue&lt;/p&gt;
&lt;h3 id="issueerror-3"&gt;Issue/Error 3&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker Error: Returned a Non-zero Code: 137&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This issue is due to out of memory error.
To fix it,
you can either add more RAM or add more swap memory.&lt;/p&gt;
&lt;p&gt;https://samwize.com/2016/05/19/docker-error-returned-a-non-zero-code-137/&lt;/p&gt;
&lt;h3 id="issueerror-4"&gt;Issue/Error 4&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock ... dial unix:///var/run/docker.sock: connect: permission denied &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Please refer to
&lt;a href="https://phoenixnap.com/kb/docker-permission-denied"&gt;How to Fix Docker Permission Denied?&lt;/a&gt;
for possible solutions.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://phoenixnap.com/kb/docker-permission-denied"&gt;How to Fix Docker Permission Denied?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="software"></category><category term="Docker"></category><category term="Docker image"></category><category term="container"></category><category term="management"></category><category term="remove"></category></entry><entry><title>IPython Is the Best Shell</title><link href="https://www.legendu.net/en/blog/ipython-is-the-best-shell/" rel="alternate"></link><published>2015-05-24T13:00:31-07:00</published><updated>2022-12-04T21:40:47-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-24:/en/blog/ipython-is-the-best-shell/</id><summary type="html">&lt;h2 id="ipython-is-the-best-shell"&gt;IPython is the Best Shell!&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use IPython as much as possible. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IPython has virtues of both shell and Python. &lt;/li&gt;
&lt;li&gt;You should avoid using shell scripts for complicate tasks any way.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do want to use a Unix/Linux shell,
    I'd suggest you stick to Bash 
    unless Linux distributions start …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="ipython-is-the-best-shell"&gt;IPython is the Best Shell!&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use IPython as much as possible. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IPython has virtues of both shell and Python. &lt;/li&gt;
&lt;li&gt;You should avoid using shell scripts for complicate tasks any way.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do want to use a Unix/Linux shell,
    I'd suggest you stick to Bash 
    unless Linux distributions start switching to zsh 
    for a few reasons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux environment is more popular than a macOS environemnt
    both for production and dev (due to Docker).&lt;/li&gt;
&lt;li&gt;Most Linux distributions are still using Bash as the default shell.&lt;/li&gt;
&lt;li&gt;It's easier to switch from zsh to bash on macOS
    than to install and configure zsh on Linux machines 
    especially in a production environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="profile-of-ipython"&gt;Profile of IPython&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IPython leverages SQLite3 for configuration.
    SQLite3 is notorious for the database locking issues on network fileystesm (NFS, SAMBA, etc).
    This means that you might encounter issues running IPython
    if the configuration file of IPython is stored on a network filesystem.
    You should avoid storing IPython configuration files on network filesystems!!
    To avoid such kind of issues,
    you can store IPython configuration files on the local disk or in memory.
    For example,
    the following command stores IPython historical commands 
    to the file &lt;code&gt;/tmp/ipython_host.sqlite&lt;/code&gt; (on the local disk).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ipython --HistoryManager.hist_file=/tmp/ipython_hist.sqlite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the following command stores IPython historical commands in memory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ipython --HistoryManager.hist_file=:memory:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that in JupyterLab this is done 
with the option &lt;code&gt;c.HistoryManager.hist_file&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can the below command to generate (default) IPython configuration files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# generate an IPython configuration dir&lt;/span&gt;
ipython&lt;span class="w"&gt; &lt;/span&gt;profile&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;profilename&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# generate an IPython configuration dir in the specified location&lt;/span&gt;
ipython&lt;span class="w"&gt; &lt;/span&gt;profile&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;profilename&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--profile-dir&lt;span class="w"&gt; &lt;/span&gt;~/.ipython
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="start-ipython"&gt;Start IPython&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you run IPython using the comamnd &lt;code&gt;/path/to/python -m IPython&lt;/code&gt;
    unless you are sure that &lt;code&gt;ipython&lt;/code&gt; pointing to the right Python version.
    Even if &lt;code&gt;ipython&lt;/code&gt; points to the right Python version,
    you might encounter ModuleNotFouneError (saying "cannot import IPython")
    due to library path (&lt;code&gt;~/.local/lib/python3.7/site-packages&lt;/code&gt;) confliction. 
    If this every happens
    and assuming that IPython is installed with the right permission 
    (you cannot import it if you do not have read permission), 
    run IPython &lt;code&gt;/path/to/python -m IPython&lt;/code&gt; might resolve the issue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;According to &lt;a href="https://ipython.readthedocs.io/en/stable/development/config.html#configuration-file-location"&gt;Configuration file location&lt;/a&gt;,
    the configuration directory of a IPython session is determined in the following order.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use the directory specified by the option &lt;code&gt;--ipython-dir&lt;/code&gt; if any.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ipython&lt;span class="w"&gt; &lt;/span&gt;--ipython-dir&lt;span class="w"&gt; &lt;/span&gt;/path/to/ipython/profile/directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the directory return by &lt;code&gt;IPython.paths.get_ipython_dir()&lt;/code&gt;,
    which is determined in the order below. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the directory specified by the environment variable &lt;code&gt;IPYTHONDIR&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Default to &lt;code&gt;~/.ipython&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to define the environment variable &lt;code&gt;IPYTHONDIR&lt;/code&gt; manually,
it is better to export it as &lt;code&gt;$HOME/.ipython/&lt;/code&gt; rather than leave it blank
(which causes IPython to use the current directory as the configuration directory in rare buggy situations).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="help-doc"&gt;Help Doc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A prefixing/suffixing question mark (&lt;code&gt;?&lt;/code&gt;) shows the help doc of an object in IPython.
    Two prefixing/suffixing questions marks (&lt;code&gt;??&lt;/code&gt;) shows even more information. 
    This is called dynamic object retrospection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;?%alias_or_magic&lt;/code&gt; to check the definition of an alias or line magic.
    Notice that &lt;code&gt;%&lt;/code&gt; is required for aliases. 
    The suffixing &lt;code&gt;?&lt;/code&gt; doesn't work in this case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wild cards can be used to match methods in dynamic object retrospection!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;os.*dir*&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="o"&gt;?&lt;/span&gt;os.*dir*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="shell"&gt;Shell&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is well known that 
    &lt;code&gt;echo $?&lt;/code&gt; prints the exit code of the last command in shell.
    Notice that this does NOT work as expected in IPython shell!!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you run a shell command, 
    it is suggested that you always prefix it with &lt;code&gt;!&lt;/code&gt; 
    (even though it is not required sometimes),
    the reason is that pipe will fail to work without the prefixing &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both shell commands prefixed with &lt;code&gt;!&lt;/code&gt; (e.g., &lt;code&gt;!ls&lt;/code&gt;) and line magics (e.g., &lt;code&gt;%ls&lt;/code&gt;) 
    can be mixed with Python code in IPython!!
    This makes things very convenient sometimes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python variables can used in a shell command. 
    For example, 
    if there is a Python variable named &lt;code&gt;pkg&lt;/code&gt; which refers to a local package file,
    then you can use &lt;code&gt;!cp $pkg ~&lt;/code&gt; to copy it to the home directory. 
    Another even more general approach is to use the curly braces
    which accepts an arbitrary Python expresion.
    Still, 
    let's assume that &lt;code&gt;pkg&lt;/code&gt; is a Python variable which refers to a local package file 
    but it is a relative path w.r.t. &lt;code&gt;/tmp&lt;/code&gt;.
    You can copy it to the home directory using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;!cp&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;Path&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tmp&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="w"&gt; &lt;/span&gt;pkg&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And also, 
Python variables can be accessed in the first line 
of a &lt;code&gt;%%bash&lt;/code&gt; or &lt;code&gt;%%script&lt;/code&gt; cell, 
and so can be passed as command line parameters to the script. 
For example, with bash you can do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;%%bash&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$myPythonVar&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$myOtherVar&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;This bash script knows about &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Shell environment variables can also be used in a shell command in IPython.
However, 
you must use double dollar signs (instead of a single dollar sign) for shell variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="err"&gt;$$&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you use the prefix &lt;code&gt;!&lt;/code&gt; to run a shell command,
    background jobs by suffixing &lt;code&gt;&amp;amp;&lt;/code&gt; is not supported!
    However, 
    there are a few simple ways to run background shell jobs 
    (or to be more accurately, run jobs in parallel).
    The first way to run background shell jobs is via the module &lt;code&gt;subprocess&lt;/code&gt;. 
    For example, 
    the below code use start a separate process to zip each subdirectory 
    in the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sp&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterdir&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_dir&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zip -r &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;with_suffix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.zip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The second way is to use the Python moduel &lt;code&gt;multiprocessing&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;multiprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pool&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;

&lt;span class="n"&gt;Pool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The last (not recommend) way is to use the cell magic &lt;code&gt;%%script&lt;/code&gt; with the option &lt;code&gt;--bg&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure to use &lt;code&gt;\&lt;/code&gt; instead of &lt;code&gt;/&lt;/code&gt; for paths when you work in Windows.
    For more discussions,
    please refer to
    &lt;a href="http://www.legendu.net/misc/blog/.-is-not-recognized-as-an-internal-or-external-command"&gt;"." Is Not Recognized as An Internal or External Command&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="magics"&gt;Magics&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%lsmagic&lt;/code&gt; lists all magic commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The magic command &lt;code&gt;%rehashx&lt;/code&gt; automatically create aliases for the contents of your &lt;code&gt;$PATH&lt;/code&gt;.
    After running &lt;code&gt;%rehashx&lt;/code&gt;,
    most system commands can be used directly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%edit&lt;/code&gt; is very useful for editing the definition of Python objects (functions, classes, etc.).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%notebook&lt;/code&gt; exports the current IPython history to a notebook file. 
    For example, 
    to export the history to &lt;code&gt;foo.ipynb&lt;/code&gt; do &lt;code&gt;%notebook foo.ipynb&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%env&lt;/code&gt; shows and set environment variables.
    Of course, 
    you can also use &lt;code&gt;os.environ&lt;/code&gt; to help management environment variables.
    However, 
    be aware that environment varaibles set by either &lt;code&gt;%env&lt;/code&gt; or &lt;code&gt;os.environ&lt;/code&gt; 
    are active in the current session only
    and are not visible to other shell/Python processes spawned using &lt;code&gt;subprocess&lt;/code&gt;.
    For more details, 
    please refer to &lt;a href="https://ipython.readthedocs.io/en/stable/interactive/shell.html#environment-variables"&gt;Environment variables&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%run&lt;/code&gt; runs a Python script or a Jupyter/Lab notebook 
    and brings its content into the current namespace.
    This is different from importing a module!
    It is equivalent to "source in code" in other languages (such as R and Shell).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%load&lt;/code&gt; inserts the content of a text file into the current cell.
    The &lt;code&gt;%load&lt;/code&gt; statement itself is commented out after loading the content of the text file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%%writefile&lt;/code&gt; writes the content of the current cell to an external file.
    &lt;code&gt;%pycat&lt;/code&gt; is the opposite. 
    It shows the content of an external file. 
    The difference between &lt;code&gt;%pycat&lt;/code&gt; and &lt;code&gt;!cat&lt;/code&gt; is that &lt;code&gt;%pycat&lt;/code&gt; highlight the output so that is easy to read and understand.
    You can think of &lt;code&gt;%pycat some_file&lt;/code&gt; as equivalent of &lt;code&gt;!cat some_file | highlight -O ansi&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Magics for profiling code in IPython and Jupyter/Lab notebooks are also available.
    Please refer to
    &lt;a href="http://www.legendu.net/misc/blog/python-profile-notebook/"&gt;Python Profiler for JupyterLab Notebooks&lt;/a&gt;
    for more discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;%autoreload&lt;/code&gt; always reload modules before running a function.
    This is extremely helpful if you update your own modules/scripts 
    while using them in IPython or Jupyter/Lab notebook.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can enable auto call (calling without using parentheses) of Python functions/method 
    using the alias &lt;code&gt;%autocall&lt;/code&gt;.
    However, 
    this is not a good idea generally speaking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IPython accepts only script with the file extension &lt;code&gt;.ipy&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you parsing arguments in an IPython script, 
    you have to prepend &lt;code&gt;--&lt;/code&gt; to you arguments passed to the IPython scripts,
    otherwise,
    the arguments are passed to the &lt;code&gt;ipython&lt;/code&gt; command instead of your script.
    For more information,
    please check &lt;a href="https://stackoverflow.com/questions/22631845/how-to-pass-command-line-arguments-to-ipython"&gt;this discussion on Stack Overflow&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IPython automatically beautify outputs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;http://www.legendu.net/misc/blog/set-environment-varibles-in-ipython/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;http://www.legendu.net/misc/blog/disable-jedi-in-ipython/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;http://www.legendu.net/en/blog/shell-alternatives/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ep2019.europython.eu/media/conference/slides/cBeHNyZ-wait-ipython-can-do-that.pdf"&gt;Wait, IPython Can Do That?!&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/"&gt;​​​​28 Jupyter Notebook Tips, Tricks, and Shortcuts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=VQBZ2MqWBZI"&gt;IPython and Jupyter in Depth: High productivity, interactive Python - PyCon 2017&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ipython.readthedocs.io/en/stable/index.html"&gt;IPython Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ipython.readthedocs.io/en/stable/interactive/magics.html"&gt;IPython Magics&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ipython.readthedocs.io/en/stable/config/intro.html"&gt;Introduction to IPython configuration&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://stackoverflow.com/questions/19579546/can-i-access-python-variables-within-a-bash-or-script-ipython-notebook-c&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://ipython.org/ipython-doc/3/interactive/shell.html&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://ipython.readthedocs.io/en/stable/interactive/magics.html&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/ipython/ipython/wiki/Cookbook:-Storing-aliases&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/19579546/can-i-access-python-variables-within-a-bash-or-script-ipython-notebook-c"&gt;Can I access python variables within a &lt;code&gt;%%bash&lt;/code&gt; or &lt;code&gt;%%script&lt;/code&gt; ipython notebook cell?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ipython/ipython/issues/6527"&gt;system commands: python variables don't get evaluated when environment variables are also used&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/.-is-not-recognized-as-an-internal-or-external-command"&gt;"." Is Not Recognized as An Internal or External Command&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="tips"></category><category term="IPython"></category><category term="Shell"></category></entry><entry><title>Python Alternatives to Shell</title><link href="https://www.legendu.net/en/blog/shell-alternatives/" rel="alternate"></link><published>2019-01-03T16:17:10-08:00</published><updated>2022-12-04T21:40:47-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-01-03:/en/blog/shell-alternatives/</id><summary type="html">&lt;h2 id="python-equivalent-of-shell-commands"&gt;Python Equivalent of Shell Commands&lt;/h2&gt;
&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Shell Command &lt;/th&gt;
    &lt;th&gt; Alternative &lt;/th&gt;
    &lt;th&gt; Python &lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="1"&gt; which git &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; shutil.which("git") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.which"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; mkdir -p /path/to/file &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("path/to/some/file").mkdir(exist_ok=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; os.makedirs("/path/to/file", exist_ok=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/os.html#os.makedirs"&gt; os &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !mkdir -p /path/to/file &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; mkdir -p /path/to/file &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; cp …&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><content type="html">&lt;h2 id="python-equivalent-of-shell-commands"&gt;Python Equivalent of Shell Commands&lt;/h2&gt;
&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Shell Command &lt;/th&gt;
    &lt;th&gt; Alternative &lt;/th&gt;
    &lt;th&gt; Python &lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="1"&gt; which git &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; shutil.which("git") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.which"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; mkdir -p /path/to/file &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("path/to/some/file").mkdir(exist_ok=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.mkdir"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; os.makedirs("/path/to/file", exist_ok=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/os.html#os.makedirs"&gt; os &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !mkdir -p /path/to/file &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; mkdir -p /path/to/file &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; cp file1 file2 &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; shutil.copy2("file1", "file2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.copy2"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; shutil.copyfile("file1", "file2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.copyfile"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !cp file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; cp file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="1"&gt; cp -ir dir1/* dir2 &lt;/td&gt;
    &lt;td&gt; shutil.copytree("dir1", "dir2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.copytree"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="1"&gt; cp -r dir1/* dir2 &lt;/td&gt;
    &lt;td&gt; shutil.copytree("dir1", "dir2", dirs_exist_ok=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.copytree"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="1"&gt; cp -ir /path/to/dir1/ dir2/ &lt;/td&gt;
    &lt;td&gt; shutil.copytree("/path/to/dir1/", "dir2/dir1") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.copytree"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; ln -s file1 file2 &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("file1").symlink_to("file2", target_is_directory=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.symlink_to"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; os.symlink("file1", "file2", target_is_directory=True) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/os.html#os.symlink"&gt; os &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !ln -s file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; ln -s file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; ln -sT file1 file2 &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("file1").symlink_to("file2", target_is_directory=False) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.symlink_to"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; os.symlink("file1", "file2", target_is_directory=False) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/os.html#os.symlink"&gt; os &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !ln -sT file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; ln -sT file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="4"&gt; rm file &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("/path/to/file").unlink() &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; os.remove(file) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/os.html#os.remove"&gt; os &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !rm file &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; rm file &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; rmdir /path/to/dir &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("/path/to/dir").rmdir() &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.rmdir"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="3"&gt; rm -rf dir &lt;/td&gt;
    &lt;td&gt; shutil.rmtree(dir) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.rmtree"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !rm -rf dir &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; rm -rf dir &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="3"&gt; rm -rf file_or_dir &lt;/td&gt;
    &lt;td&gt; 
    if p.is_file(): &lt;br&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp
        p.unlink() &lt;br&gt;
    else: &lt;br&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp
        shutil.rmtree(p)
    &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.rmtree"&gt; pathlib + shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !rm -rf file_or_dir &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; rm -rf file_or_dir &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td rowspan="6"&gt; mv file1 file2 &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("file1").rename("file2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.rename"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; Path("file1").replace("file2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.rename"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; shutil.move("file1", "file2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/shutil.html#shutil.rmtree"&gt; shutil &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; os.rename("file1", "file2") &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/os.html#os.rename"&gt; os &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; !mv file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://ipython.readthedocs.io/en/stable/overview.html#enhanced-interactive-python-shell"&gt; IPython &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; mv file1 file2 &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://xon.sh/"&gt; xonsh &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; chmod 600 /path/to/file &lt;/td&gt;
    &lt;td bgcolor="#348017"&gt; Path("/path/to/file").chmod(0o600) &lt;/td&gt;
    &lt;td&gt; &lt;a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.chmod"&gt; pathlib &lt;/a&gt; &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id="ipython"&gt;&lt;a href="https://github.com/ipython/ipython"&gt;IPython&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;IPython is the best and simpliest Python approach to replace (all part of) shell so far.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the IPython shell or JupyterLab notebook (preferred) 
    instead of Shell for complicated interactive operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be careful about illegal shell commands.
    For example,
    &lt;code&gt;ls )&lt;/code&gt; in Bash shell throws the error message &lt;code&gt;bash: syntax error near unexpected token )&lt;/code&gt;.
    If you have a equivalent IPython command,
    it will throw the same error message.
    For example,
    suppose &lt;code&gt;file&lt;/code&gt; is path of a file which contains &lt;code&gt;)&lt;/code&gt;
    then &lt;code&gt;!ls {file}&lt;/code&gt; in IPython will throws the same error message as above.
    However,
    this is definitely trickier to debug than the original Bash shell command &lt;code&gt;ls )&lt;/code&gt;.
    There are several ways to avoid this.
    First,
    you can use Python script
    (&lt;a href="https://github.com/xonsh/xonsh"&gt;xonsh&lt;/a&gt; is a great choice is vanilla Python script is too verbose)
    instead Shell as underlying commands.
    Second,
    you can show the underlying Shell commands for debugging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can even run Shell commands on a remote server (via &lt;code&gt;ssh&lt;/code&gt; or a remote kernel) in JupyterLab notebook.
    This provide the advantage of leveraging the JupyterLab notebook UI.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="xonsh"&gt;&lt;a href="https://github.com/xonsh/xonsh"&gt;xonsh&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xonsh&lt;/code&gt; is another great Python approach to replace shell.
Unlike IPython, 
xonsh does not require the prefix &lt;code&gt;!&lt;/code&gt; to run arbitrary shell command. 
However, 
there is one flaw of xonsh.
You cannot use &lt;code&gt;$()&lt;/code&gt; and friends in the middle of an argument,
which limits its usability serious for complicated shell commands.
Please refer to 
&lt;a href="https://github.com/xonsh/xonsh/issues/3290"&gt;this issue&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;h2 id="plumbum"&gt;&lt;a href="https://github.com/tomerfiliba/plumbum"&gt;plumbum&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Yet another Python approach as a replacement of shell.
I personally prefer IPython and xonsh to plumbum.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://ipython.readthedocs.io/en/stable/interactive/magics.html"&gt;IPython Magics&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/ninjaaron/replacing-bash-scripting-with-python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://stackoverflow.com/questions/209470/how-to-implement-common-bash-idioms-in-python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://stackoverflow.com/questions/123198/how-do-i-copy-a-file-in-python&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://docs.python.org/3/library/pathlib.html#module-pathlib&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="IPython"></category><category term="shell"></category><category term="bash"></category><category term="xonsh"></category><category term="plumbum"></category><category term="Python"></category><category term="shell alternatives"></category></entry><entry><title>Docker in WSL 2</title><link href="https://www.legendu.net/en/blog/docker-in-WSL2/" rel="alternate"></link><published>2017-08-10T09:05:45-07:00</published><updated>2022-08-07T19:47:58-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-10:/en/blog/docker-in-WSL2/</id><summary type="html">&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Docker on WSL 2 works great.
    However,
    the performance of IO is extremely bad if it access the Windows filesystem.
    For more discussions,
    please refer to
    &lt;a href="https://www.legendu.net/en/blog/wsl-2-filesystem/"&gt;WSL 2 Filesystem&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker containers launched from a WSL (e.g., Ubuntu) shell will continue to run 
    after the WSL shell …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Docker on WSL 2 works great.
    However,
    the performance of IO is extremely bad if it access the Windows filesystem.
    For more discussions,
    please refer to
    &lt;a href="https://www.legendu.net/en/blog/wsl-2-filesystem/"&gt;WSL 2 Filesystem&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker containers launched from a WSL (e.g., Ubuntu) shell will continue to run 
    after the WSL shell is terminated,
    as long as the Docker daemon is alive. 
    As a matter of fact,
    a WSL 2 shell is not must to start the Docker daemon (back by WSL 2) or to launch Docker containers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="install-docker-in-wsl-2"&gt;Install Docker in WSL 2&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install WSL 2 following instructions in 
    &lt;a href="http://www.legendu.net/misc/blog/wsl-tips/"&gt;Tips on WSL 2&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;docker.io&lt;/code&gt; in WSL 2. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;docker.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Docker desktop for Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set Docker to use WSL 2 based engine. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Docker desktop settings.&lt;/li&gt;
&lt;li&gt;Check the checkbox "Use the WSL 2 based engine" in the general tab.&lt;/li&gt;
&lt;li&gt;Click "Apply &amp;amp; Restart".&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="docker-wsl2-engine" src="https://docs.docker.com/desktop/windows/images/wsl2-enable.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more details,
please refer to
&lt;a href="https://docs.docker.com/docker-for-windows/wsl/"&gt;Docker Desktop WSL 2 backend&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/wsl-tips/"&gt;Tips on WSL 2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://towardsdatascience.com/how-to-improve-docker-performance-with-wsl2-3a54402ab0f2"&gt;How to Boost Docker with WSL2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://towardsdatascience.com/dual-boot-is-dead-windows-and-linux-are-now-one-27555902a128&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="software"></category><category term="Docker"></category><category term="WSL"></category><category term="WSL 2"></category><category term="Windows"></category><category term="Bash"></category><category term="BashOnWindows"></category><category term="Bash on Windows"></category></entry><entry><title>Make Linux Run Faster</title><link href="https://www.legendu.net/en/blog/make-your-computer-run-faster/" rel="alternate"></link><published>2013-06-08T08:54:21-07:00</published><updated>2022-07-28T09:44:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-06-08:/en/blog/make-your-computer-run-faster/</id><summary type="html">&lt;h2 id="benchmark-tools-for-linux"&gt;Benchmark Tools for Linux&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/phoronix-test-suite/phoronix-test-suite/"&gt;phoronix-test-suite&lt;/a&gt;
is currently the best benchmark tool for Linux.
You can use it to figure out the bottleneck of performance of your Linux machine.
Please refer to
&lt;a href="https://www.legendu.net/misc/blog/benchmark-your-linux-machine-using-phoronix-test-suite"&gt;Benchmark Your Linux Machine Using phoronix-test-suite&lt;/a&gt;
for more discussions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/iovisor/bcc"&gt;BCC&lt;/a&gt;
is a toolkit for creating efficient kernel tracing and …&lt;/p&gt;</summary><content type="html">&lt;h2 id="benchmark-tools-for-linux"&gt;Benchmark Tools for Linux&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/phoronix-test-suite/phoronix-test-suite/"&gt;phoronix-test-suite&lt;/a&gt;
is currently the best benchmark tool for Linux.
You can use it to figure out the bottleneck of performance of your Linux machine.
Please refer to
&lt;a href="https://www.legendu.net/misc/blog/benchmark-your-linux-machine-using-phoronix-test-suite"&gt;Benchmark Your Linux Machine Using phoronix-test-suite&lt;/a&gt;
for more discussions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/iovisor/bcc"&gt;BCC&lt;/a&gt;
is a toolkit for creating efficient kernel tracing and manipulation programs
leveraging extended Berkeley Packet Filters (eBPF).&lt;/p&gt;
&lt;h2 id="upgrading-hardware"&gt;Upgrading Hardware&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get larger RAM for your computer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get a SSD disk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get a good graphics card (if you have workstation).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="configuration"&gt;Configuration&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Configure GRUB to fix PCIe BUS errors if any. 
    Please refer to
    &lt;a href="https://www.legendu.net/misc/blog/pcie-bus-error:-severity=Corrected,-type=Physical-Layer/"&gt;Pcie Bus Error: Severity=Corrected, Type=Physical Layer&lt;/a&gt;
    for detailed discussions
    .
    Notice that you might have to do this 
    every time you upgrade your Linux kernel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduce GRUB timeout to a smaller value.
    Please refer to
    &lt;a href="https://www.legendu.net/misc/blog/reduce-grub-timeout"&gt;Reduce GRUB Timeout&lt;/a&gt;
    for detailed discussions
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure &lt;code&gt;vm.swapness&lt;/code&gt; to be a proper value (10 or even less),
    if your Linux system has a large swap partition.
    For more details,
    please refer to
    &lt;a href="https://help.ubuntu.com/community/SwapFaq"&gt;SwapFaq&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose a fast mirror.
    If you are using Ubuntu, 
    a fast mirror will be automatically decided based on your location. 
    However, 
    if you are using other Linux distribution (e.g., Linux Mint),
    you might have to choose a fast mirror manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;code&gt;noatime&lt;/code&gt; option for filesystems. 
    Add the &lt;code&gt;noatime&lt;/code&gt; option into your fstab for all non-swap partitions.
    This is 
    &lt;span style="color:red"&gt;
    NOT recommended
    &lt;/span&gt;
    unless you really want to squeeze the performance of Linux machine.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove non-necessary autostart applications
    and configure a delay to must-have autostart applications.
    Please refer to
    &lt;a href="https://www.legendu.net/misc/blog/manage-autostart-apps"&gt;Manage Autostart Applications&lt;/a&gt;
    for detailed discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable non-needed systemd services.
    Please refer to
    &lt;a href="https://www.legendu.net/misc/blog/manage-systemd-services-units"&gt;Manage systemd Services and Units&lt;/a&gt;
    for detailed discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use the GNOME desktop environment,
    configuare "Gnome Shell Search" to disable unnecessary applications.
    &lt;img alt="gnome-shell-search-config" src="https://user-images.githubusercontent.com/824507/170840843-f085a295-4071-4ee8-929f-62d1e57c67f6.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="software-based-optimization"&gt;Software-based Optimization&lt;/h2&gt;
&lt;h3 id="linux-distribution-and-kernels"&gt;Linux Distribution and Kernels&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use a light-weighted Linux distribution. 
    For example,
    antiX Linux is a light-weighted debian-based Linux operating system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a light-weighted desktop environment, e.g., Xfce or LXQt.
    When used with Ubuntu, 
    they correspond to Xubuntu and Lubuntu
    which are both good choices for non-powerful computers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep your Linux distribution up to date.
    Generally speaking,
    it is a good idea to use the latest LTS or stable versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove old kernels.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;purge&lt;span class="w"&gt; &lt;/span&gt;linux-image-&amp;lt;verson&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="lightweight-alternatives"&gt;Lightweight Alternatives&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use dash instead of bash which makes boot faster.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;dash
wajig&lt;span class="w"&gt; &lt;/span&gt;reconfigure&lt;span class="w"&gt; &lt;/span&gt;dash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Evince instead of Okular which is resource hungry&lt;br&gt;
    and has lots of KDE dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="package-and-disk-cleanup"&gt;Package and Disk Cleanup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Identify orphan packages and remove them.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo deborphan | xargs wajig remove --purge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean up packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;autoremove&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;autoclean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clean up disk using &lt;code&gt;localepurge&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;localepurge
localpurge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.legendu.net/misc/blog/packagekitd-uses-too-much-cpu-or-disk-io/"&gt;PackageKitD Uses Too Much CPU or Disk IO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="RAM"></category><category term="speedup"></category><category term="SSD"></category><category term="software"></category><category term="optimization"></category><category term="hardware"></category><category term="Linux"></category><category term="fast"></category><category term="performance"></category></entry><entry><title>Map Keys in Linux</title><link href="https://www.legendu.net/en/blog/map-keys-in-linux/" rel="alternate"></link><published>2015-06-19T10:30:15-07:00</published><updated>2022-07-28T09:43:57-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-06-19:/en/blog/map-keys-in-linux/</id><summary type="html">&lt;p&gt;Note: For Vim users, it is appealing to make the &lt;code&gt;Caps Lock&lt;/code&gt; function like &lt;code&gt;Escape&lt;/code&gt;.
It is suggested that you make &lt;code&gt;Caps Lock&lt;/code&gt; an additonal &lt;code&gt;Escape&lt;/code&gt;
rather than swap them.
This avoid inconsistent key mapping issues when you work remotely via VNC, NoMachine, etc.&lt;/p&gt;
&lt;h2 id="desktop-environment"&gt;Desktop Environment&lt;/h2&gt;
&lt;p&gt;Some desktop environment (e …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Note: For Vim users, it is appealing to make the &lt;code&gt;Caps Lock&lt;/code&gt; function like &lt;code&gt;Escape&lt;/code&gt;.
It is suggested that you make &lt;code&gt;Caps Lock&lt;/code&gt; an additonal &lt;code&gt;Escape&lt;/code&gt;
rather than swap them.
This avoid inconsistent key mapping issues when you work remotely via VNC, NoMachine, etc.&lt;/p&gt;
&lt;h2 id="desktop-environment"&gt;Desktop Environment&lt;/h2&gt;
&lt;p&gt;Some desktop environment (e.g., Cinnamon, GNOME, etc.) let you define behavior of keys.&lt;/p&gt;
&lt;h3 id="gnome"&gt;GNOME&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;code&gt;gnome-tweaks&lt;/code&gt;.
    You can use the following command 
    on Debian/Ubuntu based Linux distributions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gnome-tweaks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start gnome-tweaks by running the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gnome-tweaks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the "Keyboard &amp;amp; Mouse" button in the left panel 
    and then the "Additional Layout Options" button 
    under the Keyboard section. 
    &lt;img alt="gnome-tweaks-1" src="https://user-images.githubusercontent.com/824507/166125171-41a73a26-ec96-46bc-a72a-3ca2f771078b.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the prompt dialog, 
    click on the triangle button next to "Caps Lock behavior"
    and then select the behavior you want for Caps Lock.
    &lt;img alt="gnome-tweaks-2" src="https://user-images.githubusercontent.com/824507/166125255-5f95211e-9c19-447e-9979-3cb01dd4ef7a.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart your Linux machine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="cinnamon"&gt;Cinnamon&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open System Settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select Keybord.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keybord layouts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Options (on the right-bottom corner)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Caps Lock key behavior&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose the behavior you want.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="keyboard-configuration"&gt;Keyboard Configuration&lt;/h2&gt;
&lt;p&gt;Keyboard is configured by the file &lt;code&gt;/etc/default/keyboard&lt;/code&gt; on Linux.
For example,
you can find the line that starts with &lt;code&gt;XKBOPTIONS&lt;/code&gt;,
and add &lt;code&gt;ctrl:nocaps&lt;/code&gt; to make Caps Lock an additional Control key
or &lt;code&gt;ctrl:swapcaps&lt;/code&gt; to swap Caps Lock and Control.
Run the following command after updating the file &lt;code&gt;/etc/default/keyboard&lt;/code&gt; to make it in effect.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo dpkg-reconfigure keyboard-configuration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the recommended way if you want to make key swaping persistent. 
Another advantage it has over GUI configuration and &lt;code&gt;setxkbmap&lt;/code&gt; (see the next section)
is that the key swaping works in TTY (without X11 or Wayland).&lt;/p&gt;
&lt;h2 id="setxkbmap"&gt;setxkbmap&lt;/h2&gt;
&lt;p&gt;Swap the Caps and the Escape keys.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;setxkbmap&lt;span class="w"&gt; &lt;/span&gt;-option&lt;span class="w"&gt; &lt;/span&gt;-option&lt;span class="w"&gt; &lt;/span&gt;caps:swapescape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Unfortunately,
the key mapping partially pass to virtual machines or remote desktops,
which is the worst scenario.
It is suggested that you turn off the mapping on the Linux host
when you work in a VM or a remote desktop.&lt;/p&gt;
&lt;h2 id="more-references"&gt;More References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/map-keys-in-mac/"&gt;Map Keys in macOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/map-keys-in-windows"&gt;Map Keys in Windows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://unix.stackexchange.com/questions/66775/how-to-permanently-swap-esc-and-caps-lock-in-xfce-xubuntu"&gt;How to permanently swap esc and caps lock in xfce / xubuntu?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/444714/how-do-i-swap-escape-and-caps-lock-in-14-04/446725#446725"&gt;How do I swap Escape and Caps Lock in 14.04?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="Linux"></category><category term="keyboard"></category><category term="mapping"></category><category term="swap"></category><category term="setxkbmap"></category><category term="Cinnamon"></category><category term="GNOME"></category><category term="keys"></category><category term="Caps Lock"></category><category term="Escape"></category></entry><entry><title>Compress and Decompressing Archives in Linux</title><link href="https://www.legendu.net/en/blog/compress-and-decompress-in-linux/" rel="alternate"></link><published>2012-05-19T23:12:07-07:00</published><updated>2022-07-21T00:40:33-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-19:/en/blog/compress-and-decompress-in-linux/</id><summary type="html">&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Always test integrity of the compressed file
    before you throw away the original archives.
    I've seen a case before that a large zip file generated in Windows
    cannot be unzipped correctly in Linux.
    Not sure what happend though. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zstd is currently the best compression/decompression tool.
    It …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Always test integrity of the compressed file
    before you throw away the original archives.
    I've seen a case before that a large zip file generated in Windows
    cannot be unzipped correctly in Linux.
    Not sure what happend though. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zstd is currently the best compression/decompression tool.
    It supports different levels of compression.
    For a similar compression ratio,
    it is generally much faster than other compression tools.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="tarzstd"&gt;tar.zstd&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Extract archive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-I&lt;span class="w"&gt; &lt;/span&gt;zstd&lt;span class="w"&gt; &lt;/span&gt;-xvf&lt;span class="w"&gt; &lt;/span&gt;archive.tar.zst
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an archive. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# max compression&lt;/span&gt;
tar&lt;span class="w"&gt; &lt;/span&gt;cf&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Dropbox/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;zstd&lt;span class="w"&gt; &lt;/span&gt;-19&lt;span class="w"&gt; &lt;/span&gt;-T0&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;Dropbox.tar.zstd
&lt;span class="c1"&gt;# good balance bewteen compression ratio and speed&lt;/span&gt;
tar&lt;span class="w"&gt; &lt;/span&gt;cf&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Dropbox/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;zstd&lt;span class="w"&gt; &lt;/span&gt;-9&lt;span class="w"&gt; &lt;/span&gt;-T0&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;Dropbox.tar.zstd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="targz-or-tgz"&gt;tar.gz or tgz&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;List the content of an archive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-ztvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tag.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the content of an archive to the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-zxvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tag.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the content of an archive to a directory named "exdir".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-zxvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tag.gz&lt;span class="w"&gt; &lt;/span&gt;-C&lt;span class="w"&gt; &lt;/span&gt;exdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an archive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-zcvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tar.gz&lt;span class="w"&gt; &lt;/span&gt;/path/to/file_or_dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an archive with some files excluded.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-zcvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tar.gz&lt;span class="w"&gt; &lt;/span&gt;--exclude&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--exclude&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;xyz&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/path/to/file_or_dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="gz"&gt;gz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# decompress&lt;/span&gt;
gunzip&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;archive_name.gz&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;decompressed_file_name
&lt;span class="c1"&gt;# or&lt;/span&gt;
gzip&lt;span class="w"&gt; &lt;/span&gt;-cd&lt;span class="w"&gt; &lt;/span&gt;archive_name.gz&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;decompressed_file_name
&lt;span class="c1"&gt;# or&lt;/span&gt;
zcat&lt;span class="w"&gt; &lt;/span&gt;archive_name.gz&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;decompressed_file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that you have to use the &lt;code&gt;-c&lt;/code&gt; option,
otherwise,
the original compressed file is removed.&lt;/p&gt;
&lt;h2 id="tarbz2"&gt;tar.bz2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
tar&lt;span class="w"&gt; &lt;/span&gt;-jtvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tar.bz2
&lt;span class="c1"&gt;# extract the archive contents to the current directory&lt;/span&gt;
tar&lt;span class="w"&gt; &lt;/span&gt;-jxvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tar.bz2
&lt;span class="c1"&gt;# extract the archive contents to a directory named &amp;quot;exdir&amp;quot;&lt;/span&gt;
tar&lt;span class="w"&gt; &lt;/span&gt;-jxvf&lt;span class="w"&gt; &lt;/span&gt;archive_name.tar.bz2&lt;span class="w"&gt; &lt;/span&gt;-C&lt;span class="w"&gt; &lt;/span&gt;exdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="zip"&gt;zip&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;List the content of an archive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;archive_name.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test the integrity of an archive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;archive_name.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the archive contents into the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;archive_name.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the archive contents into the directory "exdir".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip&lt;span class="w"&gt; &lt;/span&gt;archive_name.zip&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;exdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a zip archive. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zip&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;archive_name.zip&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a zip archive with some files excluded.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zip&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Nothanks.jpg&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;archive.zip&lt;span class="w"&gt; &lt;/span&gt;images/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="rar"&gt;rar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
unrar&lt;span class="w"&gt; &lt;/span&gt;l&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;span class="c1"&gt;# test integrity of the archive&lt;/span&gt;
unrar&lt;span class="w"&gt; &lt;/span&gt;t&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;span class="c1"&gt;# extract the archive with full names&lt;/span&gt;
unrar&lt;span class="w"&gt; &lt;/span&gt;x&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="jar"&gt;Jar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# extract the archive
jar xf jar-file [archived-file(s)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="7zip"&gt;7zip&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
7za&lt;span class="w"&gt; &lt;/span&gt;l&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;span class="c1"&gt;# test the archive contents&lt;/span&gt;
7za&lt;span class="w"&gt; &lt;/span&gt;t&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;span class="c1"&gt;# extract the archive contents with full names&lt;/span&gt;
7za&lt;span class="w"&gt; &lt;/span&gt;x&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;span class="c1"&gt;# extract a file/folder from the archive&lt;/span&gt;
7za&lt;span class="w"&gt; &lt;/span&gt;x&lt;span class="w"&gt; &lt;/span&gt;archive_name&lt;span class="w"&gt; &lt;/span&gt;path_to_file_to_be_extracted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the compressed archive is splitted into several smaller files,
just replace &lt;code&gt;file_name&lt;/code&gt; in the above commands
with the name of the first file of the compressed archive.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;rar&lt;/code&gt; and &lt;code&gt;7za&lt;/code&gt;,
I'm not sure whether there are options for creating a new directory
to uncompress the archive into.
However, you can always first create an empty directory,
move the archive into it and then uncompress it.&lt;/p&gt;
&lt;h2 id="multiple-archives"&gt;Multiple Archives&lt;/h2&gt;
&lt;p&gt;The archive related commands (e.g., &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;unzip&lt;/code&gt;, etc.) in Linux
does not support decompressing from multiple archives
or compressing files into multiple archives directly.
To extract content from multiple archives,
you need to first concatenate them into a single one.
For example,
you can use the following command to unzip archives
&lt;code&gt;BigDataLite-3.0.zip.001&lt;/code&gt;, &lt;code&gt;BigDataLite-3.0.zip.002&lt;/code&gt;, &lt;code&gt;BigDataLite-3.0.zip.003&lt;/code&gt;,
&lt;code&gt;BigDataLite-3.0.zip.004&lt;/code&gt;, &lt;code&gt;BigDataLite-3.0.zip.005&lt;/code&gt; and &lt;code&gt;BigDataLite-3.0.zip.006&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# concatenate zipped archives into a single one&lt;/span&gt;
cat&lt;span class="w"&gt; &lt;/span&gt;BigDataLite-3.0.zip.00?&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;BigDataLite-3.0.zip
&lt;span class="c1"&gt;# unzip the combined archive&lt;/span&gt;
unzip&lt;span class="w"&gt; &lt;/span&gt;BigDataLite-3.0.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To compress files into multiple archives,
you have to first compress them into a single archive
using one of the commands introduced before
and then split the single archive into multiple ones
using the command &lt;code&gt;split&lt;/code&gt;.
For example,
the following command split the archive &lt;code&gt;WinTPC_1.tar.gz&lt;/code&gt;
into smaller ones named &lt;code&gt;WinTPC_1.tar.gz_part??&lt;/code&gt; with size around 2.7G.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;split&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;2700M&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;WinTPC_1.tar.gz&lt;span class="w"&gt; &lt;/span&gt;WinTPC_1.tar.gz_part
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;An alternative way (and better in my opinion)
is to specify the number of archives (with about equal size) to split into.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;split&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;xp_2.tar.gz&lt;span class="w"&gt; &lt;/span&gt;xp_2.tar.gz_part
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://indico.cern.ch/event/695984/contributions/2872933/attachments/1590457/2516802/ZSTD_and_ZLIB_Updates_-_January_20186.pdf"&gt;Compression Update: ZSTD &amp;amp; ZLIB&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://linuxreviews.org/Comparison_of_Compression_Algorithms"&gt;Comparison of Compression Algorithms&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.tecmint.com/18-tar-command-examples-in-linux/"&gt;18 Tar Command Examples in Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.cyberciti.biz/faq/exclude-certain-files-when-creating-a-tarball-using-tar-command/"&gt;Exclude Certain Files When Creating A Tarball Using Tar Command&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/software/tar/manual/html_node/exclude.html"&gt;6.4 Excluding Some Files&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://osxdaily.com/2013/04/30/how-to-exclude-files-from-a-zip-archive/"&gt;How to Exclude Files from a Zip Archive&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="Linux"></category><category term="decompress"></category><category term="compress"></category><category term="archive"></category><category term="split"></category><category term="multiple"></category><category term="zip"></category><category term="tar"></category><category term="gz"></category><category term="bz2"></category><category term="dtrx"></category><category term="rar"></category><category term="7zip"></category><category term="zstd"></category></entry><entry><title>Schedule Task Using Cron in Linux</title><link href="https://www.legendu.net/en/blog/schedule-task-using-crontab-in-linux/" rel="alternate"></link><published>2012-11-27T11:28:08-08:00</published><updated>2022-07-07T22:08:14-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-27:/en/blog/schedule-task-using-crontab-in-linux/</id><summary type="html">&lt;p&gt;Note: Cron is great for simple scheduling requests. 
For complicated scheduling with many dependencies 
you probably want to go with 
&lt;a href="http://www.legendu.net/misc/blog/apache-airflow-tips"&gt;AirFlow&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;Cron is usually installed by default.
It not (e.g., if you are using a Docker image),
you can install it using the following command (on Ubuntu).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Note: Cron is great for simple scheduling requests. 
For complicated scheduling with many dependencies 
you probably want to go with 
&lt;a href="http://www.legendu.net/misc/blog/apache-airflow-tips"&gt;AirFlow&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;p&gt;Cron is usually installed by default.
It not (e.g., if you are using a Docker image),
you can install it using the following command (on Ubuntu).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;cron
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="alternative-to-cron"&gt;Alternative to Cron&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;AirFow is a more rigorous job scheduling system. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When cron is not available,
    a simple alternative is to 
    write a simple Python script to run a task at certain times.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are 6 fields that you need to fill for a task to be schedule: 
    &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;dom&lt;/code&gt;, &lt;code&gt;mon&lt;/code&gt;, &lt;code&gt;dow&lt;/code&gt; and &lt;code&gt;command&lt;/code&gt;,
    which stand for the minute, the hour, the day of month, the month, the day of week 
    (of the scheduled time), 
    and the command to run, respectively.
    The graph below shows possible values for each field.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;┌──────────&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;minute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;┌────────&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hour&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;┌──────&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;┌────&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;┌──&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Sunday&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Saturday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;
&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;│&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Monday&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Sunday&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;↓&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;↓&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;↓&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;↓&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;↓&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;executed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that abbreviations of days (MON, TUE, etc.) can be used for the field &lt;code&gt;dow&lt;/code&gt;.
For example &lt;code&gt;SUN,MON,THU&lt;/code&gt; for (day of week) 
will exectute the command on Sundays, Mondays on Thursdays.
&lt;a href="https://crontab.guru/"&gt;Crontab Guru&lt;/a&gt;
is a quick and simple editor for cron schedule expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The information of scheuled tasks are saved in the file &lt;code&gt;/etc/crontab&lt;/code&gt;. 
    It contains scheduled tasks of all users.
    Though you can schedule tasks by editing the file directly,
    you'd better not.
    It is suggested that you use the command &lt;code&gt;crontab -e&lt;/code&gt; to schedule tasks.
    If you just want to add crontab tasks,
    an alternative way is to save the information of tasks in a file (e.g. &lt;code&gt;task.txt&lt;/code&gt;),
    and then run the command &lt;code&gt;crontab task.txt&lt;/code&gt; to import it.
    To list all scheduled tasks, 
    run the command &lt;code&gt;crontab -l&lt;/code&gt;.
    To remove a sheduled task,
    use the command &lt;code&gt;crontab -r&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As long as you use the &lt;code&gt;crontab&lt;/code&gt; commands to edit the file &lt;code&gt;/etc/crontab&lt;/code&gt;,
    you do NOT have to restart &lt;code&gt;cron&lt;/code&gt;.
    &lt;code&gt;cron&lt;/code&gt; will automatically reload tasks that were changed.
    The log of cron jobs can be found at 
    &lt;code&gt;/var/log/syslog&lt;/code&gt; (Ubuntu) or &lt;code&gt;/var/log/cron&lt;/code&gt; (CentOS).
    If you do not have read permission to cron log files, 
    you'd better redict the output and error messages of a cron job 
    to a log file which you have read access.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your cron job consists of multiple shell commands,
    it is best to put those commands into a shell script 
    and call the shell script when you schedule your cron job. 
    This has multiple benefits. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Avoid careless mistakes caused by concatenating multiples commands using &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt; or &lt;code&gt;;&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Have better control and logging of each command.&lt;/li&gt;
&lt;li&gt;Easier to update the job (if you do not have to update the schedule) 
    as you can update the shell script without touching &lt;code&gt;crontab&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can schedule a frequently run task using crontab 
    and then reduce the running frequency of the application in your scripts.
    Below is such an example in Bash shell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[[&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+%&lt;/span&gt;&lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;]]&lt;span class="c1"&gt;; then&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;...
&lt;span class="nv"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This trick is useful to avoid editing crontab tasks frequently
as you can control (or more precisely, reduce) the frequency of the task 
in your script directly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="cron-job-examples"&gt;Cron Job Examples&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run the command &lt;code&gt;duplicity.lbp&lt;/code&gt; at 03:00 every Thursday. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mf"&gt;3&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="mf"&gt;5&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;duplicity&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lbp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the command &lt;code&gt;rsnapshot daily&lt;/code&gt; daily at 22:00. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mf"&gt;22&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;rsnapshot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;daily&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the command &lt;code&gt;rsnapshot daily&lt;/code&gt; hourly at the 5th minutes,
    and redict standard output and error messages to &lt;code&gt;/home/dclong/cron.log&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;5&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run a command at 22:00 on the 1st day of every month. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mf"&gt;22&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;command_to_run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no intrinsic way to run commands weekly using cron. 
    One way to approximate that is to run a command multiple times per month.
    For example, 
    the setup below runs a command at 22:00 on the 1st and 15th day of every month
    (biweekly approximately)
    .&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;0&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="mf"&gt;22&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;15&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;command_to_run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="start-a-crontab-service-on-ubuntu"&gt;Start a Crontab Service on Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# start cron service
sudo service cron start
# check status of the cron service 
service cron status
# stop the cron service
service cron stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="check-crontab-logs"&gt;Check Crontab Logs&lt;/h2&gt;
&lt;p&gt;You can use the following command to check crontab logs on Ubuntu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sudo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syslog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://crontab.guru/"&gt;crontab guru&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.systutorials.com/how-to-run-a-cron-job-every-two-weeks-months-days/"&gt;How to Run a cron Job Every Two Weeks / Months / Days&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://stackoverflow.com/questions/18919151/crontab-day-of-the-week-syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://askubuntu.com/questions/56683/where-is-the-cron-crontab-log&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="task"></category><category term="crontab"></category><category term="schedule"></category><category term="linux"></category><category term="scheduling"></category><category term="AirFlow"></category></entry><entry><title>Change Shell in Mac</title><link href="https://www.legendu.net/en/blog/change-shell-in-mac/" rel="alternate"></link><published>2018-04-02T14:46:43-07:00</published><updated>2022-06-14T11:02:49-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-04-02:/en/blog/change-shell-in-mac/</id><summary type="html">&lt;p&gt;You can check the current shell in use by running the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$SHELL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However,
notice that &lt;code&gt;echo $SHELL&lt;/code&gt; does not report the right shell sometimes.
A more robust way is to use &lt;code&gt;echo $0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default shell can be changed using thee comamnd &lt;code&gt;chsh&lt;/code&gt;.
For example, 
thee following …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can check the current shell in use by running the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$SHELL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However,
notice that &lt;code&gt;echo $SHELL&lt;/code&gt; does not report the right shell sometimes.
A more robust way is to use &lt;code&gt;echo $0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default shell can be changed using thee comamnd &lt;code&gt;chsh&lt;/code&gt;.
For example, 
thee following command changes the default shell to Bash.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chsh&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that &lt;a href="https://hyper.is/"&gt;Hyper&lt;/a&gt;
does not honor the the environment variable &lt;code&gt;SHELL&lt;/code&gt;
and thus the above way of changing the default shell does not work for Hyper.js.
One way to change the default shell in Hyper.js 
is to directly update the field &lt;code&gt;shell&lt;/code&gt; 
in the configuration file &lt;code&gt;~/.hyper.js&lt;/code&gt; to be the desire one.
For example, 
the configuration file below uses Bash as the default shell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;versions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Hyper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;may&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;additional&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;which&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;automatically&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;into&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;See&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;hyper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="c1"&gt;#cfg for all currently supported options.&lt;/span&gt;

&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exports&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;choose&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;either&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stable&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;receiving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;highly&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;polished&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;canary&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;less&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;polished&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;but&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;more&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;frequent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;updates&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;updateChannel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pixels&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tabs&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;optional&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fallbacks&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Menlo, &amp;quot;DejaVu Sans Mono&amp;quot;, Consolas, &amp;quot;Lucida Console&amp;quot;, monospace&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;fontWeightBold&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relative&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unit&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;lineHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;letter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relative&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unit&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;letterSpacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hsv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hwb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cmyk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cursorColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rgba(248,28,229,0.8)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;under&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;BLOCK&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cursorAccentColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BEAM&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UNDERLINE&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BLOCK&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;█&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cursorShape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BLOCK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;backticks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blinking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cursorBlink&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;supported&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;macOS&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;selectionColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rgba(248,28,229,0.3)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tabs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;borderColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#333&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CSS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;css&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CSS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;embed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;termCSS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;re using a Linux setup which show native menus, set to false&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ignored&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;macOS&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;showHamburgerMenu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;false&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;backticks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hide&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;minimize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maximize&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buttons&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;additionally&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;them&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ubuntu&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;backticks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Linux&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ignored&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;macOS&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;showWindowControls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CSS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;12px 14px&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;full&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;re going to provide the full color palette,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;including&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cubes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;grayscale&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;just&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;provide&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;object&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;black&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#000000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#C51E14&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#1DC121&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#C7C329&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#0A2FC4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;magenta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#C839C5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;cyan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#20C5C6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;white&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#C7C7C7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightBlack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#686868&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightRed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#FD6F6B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightGreen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#67F86F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightYellow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#FFFA72&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightBlue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#6A76FB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightMagenta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#FD7CFC&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightCyan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#68FDFE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;lightWhite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#FFFFFF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spawning&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fish&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s login shell will be used by default&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;full&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;binary&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;doesn&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t work&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shellArgs&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\\&lt;span class="n"&gt;Windows&lt;/span&gt;\\&lt;span class="n"&gt;System32&lt;/span&gt;\\&lt;span class="n"&gt;bash&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PowerShell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Example&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\\&lt;span class="n"&gt;WINDOWS&lt;/span&gt;\\&lt;span class="n"&gt;System32&lt;/span&gt;\\&lt;span class="n"&gt;WindowsPowerShell&lt;/span&gt;\\&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;\\&lt;span class="n"&gt;powershell&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/bin/bash&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;setting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;interactive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shellArgs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;used&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;shellArgs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variables&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;false&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bell&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;bell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SOUND&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;backticks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;automatically&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copied&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;clipboard&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copyOnSelect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;backticks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hyper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SSH&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;defaultSSHApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;backticks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quotes&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copied&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pasted&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;no&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;present&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;disables&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;quickEdit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;custom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bell&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bellSoundURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://example.com/bell.mp3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;advanced&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;please&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;refer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;hyper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="c1"&gt;#cfg&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;npm&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="c1"&gt;#version]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;examples&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;hyperpower&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;`@&lt;/span&gt;&lt;span class="n"&gt;company&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="c1"&gt;#1.0.1`&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hypercwd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hyper-search&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hyper-pane&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hyperpower&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;verminal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hyper-material-theme&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hyper-snazzy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hyper-one-dark&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;development&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;under&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;hyper_plugins&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;load&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;avoid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;being&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;npm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;ed&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;localPlugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;keymaps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Example&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;window:devtools&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmd+alt+o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.macinstruct.com/tutorials/how-to-tell-what-shell-your-mac-is-using/"&gt;How to Tell What Shell Your Mac is Using&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://www.youtube.com/watch?v=fs7yWlB2dSU&amp;amp;feature=youtu.be&lt;/p&gt;
&lt;p&gt;https://github.com/zeit/hyper/issues/81&lt;/p&gt;
&lt;p&gt;https://github.com/zeit/hyper/issues/491&lt;/p&gt;</content><category term="OS"></category><category term="macOS"></category><category term="shell"></category><category term="Hyper"></category><category term="Bash"></category><category term="zsh"></category></entry><entry><title>Install GNU Utils Using Homebrew</title><link href="https://www.legendu.net/en/blog/install-gnu-utils-using-homebrew/" rel="alternate"></link><published>2017-06-22T13:26:28-07:00</published><updated>2022-06-06T13:33:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-22:/en/blog/install-gnu-utils-using-homebrew/</id><summary type="html">&lt;p&gt;Installing GNU tools is a way to try to get Linux command experience in macOS. 
However, 
not every Linux command has an identical-experience version in macOS.
**
It is suggested that you use a Linux virtual machine 
if you really want to have Linux experience in macOS.
**
Notice that some hardwares …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Installing GNU tools is a way to try to get Linux command experience in macOS. 
However, 
not every Linux command has an identical-experience version in macOS.
**
It is suggested that you use a Linux virtual machine 
if you really want to have Linux experience in macOS.
**
Notice that some hardwares (USB) can be accessed directly in virtual machines,
which makes Linux virtual machines even more useful.
For example, 
you can connect a flash drive into a Linux VM 
and format the flash drive in the Linux VM. &lt;/p&gt;
&lt;h1 id="configuration"&gt;Configuration&lt;/h1&gt;
&lt;p&gt;Run the following command in terminal before you install any GNU utils using Homebrew.
It will ensures that the installed GNU utils get used by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/opt/findutils/libexec/gnubin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;MANPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/opt/findutils/libexec/gnuman:&lt;/span&gt;&lt;span class="nv"&gt;$MANPATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that upgrading your Mac OS will reset the 2 environment variables.
So you will have to run the above commands again after you upgrading your Mac OS.&lt;/p&gt;
&lt;h2 id="popular-tools"&gt;Popular Tools&lt;/h2&gt;
&lt;p&gt;brew install coreutils e2fsprogs dosfstools&lt;/p&gt;
&lt;p&gt;brew --prefix e2fsprogs
/usr/local/opt/e2fsprogs/sbin/&lt;/p&gt;
&lt;p&gt;brew --prefix dosfstools
/usr/local/opt/dosfstools/sbin/&lt;/p&gt;
&lt;h1 id="gnu-core-utils"&gt;GNU Core Utils&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;coreutils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="key-commands"&gt;Key Commands&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;binutils
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;diffutils
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ed&lt;span class="w"&gt; &lt;/span&gt;--default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;findutils&lt;span class="w"&gt; &lt;/span&gt;--with-default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gnu-indent&lt;span class="w"&gt; &lt;/span&gt;--with-default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gnu-sed&lt;span class="w"&gt; &lt;/span&gt;--with-default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gnu-tar&lt;span class="w"&gt; &lt;/span&gt;--with-default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gnu-which&lt;span class="w"&gt; &lt;/span&gt;--with-default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gnutls
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;--with-default-names
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gzip
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;screen
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;watch
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;wdiff&lt;span class="w"&gt; &lt;/span&gt;--with-gettext
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;wget
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="os-x-ships-a-gnu-version-but-too-old"&gt;OS X ships a GNU version, but too old&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;bash
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;emacs
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gdb&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# gdb requires further actions to make it work. See `brew info gdb`.&lt;/span&gt;
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;gpatch
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;m4
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="other-commands-non-gnu"&gt;Other commands (non-GNU)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;file-formula
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;less
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;openssh
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;rsync
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;svn
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;unzip
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;vim&lt;span class="w"&gt; &lt;/span&gt;--override-system-vi
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;macvim&lt;span class="w"&gt; &lt;/span&gt;--override-system-vim&lt;span class="w"&gt; &lt;/span&gt;--custom-system-icons
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;neovim&lt;span class="w"&gt; &lt;/span&gt;--override-sytem-vim
brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id="references"&gt;References&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.topbug.net/blog/2013/04/14/install-and-use-gnu-command-line-tools-in-mac-os-x/"&gt;Install and Use GNU Command Line Tools in Mac OSX&lt;/a&gt;&lt;/p&gt;</content><category term="OS"></category><category term="macOS"></category><category term="Homebrew"></category><category term="GNU"></category></entry><entry><title>Things to Do After Installing Linux</title><link href="https://www.legendu.net/en/blog/things-to-do-after-installing-linux/" rel="alternate"></link><published>2016-05-04T20:59:32-07:00</published><updated>2022-05-28T10:31:51-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-05-04:/en/blog/things-to-do-after-installing-linux/</id><summary type="html">&lt;p&gt;Note: The tips here are for Debian-based Linux distributions 
(Debian, Ubuntu, LinuxMint, Pop!_OS, AntiX, etc.).&lt;/p&gt;
&lt;h2 id="debian-specific"&gt;Debian Specific&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you installed Debian without a desktop environment, 
    and wants to install a customized desktop environment now,
    make sure to install a DE manager (e.g., gdm, lightdm, etc.) as well.
    without …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Note: The tips here are for Debian-based Linux distributions 
(Debian, Ubuntu, LinuxMint, Pop!_OS, AntiX, etc.).&lt;/p&gt;
&lt;h2 id="debian-specific"&gt;Debian Specific&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you installed Debian without a desktop environment, 
    and wants to install a customized desktop environment now,
    make sure to install a DE manager (e.g., gdm, lightdm, etc.) as well.
    without a login/DE manager, 
    Linux won't boot into DE automatically.
    Of course, 
    you can still manually start X using &lt;code&gt;startx&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit the APT (advance package tool) configuration file &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;. 
    By default, 
    Debian uses the installing media as a repository after installation.
    However, 
    the media is usually removed and thus unavailable after installation.
    So, 
    you probably want to delete or comment out the repository using the installing media.
    Also, 
    if you did not use a network mirror duing installation, 
    you have to add a debian repository into the APT configuration file manually.
    For example, 
    you can add the following lines into the APT configuration file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;deb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://ftp.us.debian.org/debian/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;wheezy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;contrib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;span class="k"&gt;deb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;http://ftp.us.debian.org/debian/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;wheezy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;main&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;contrib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is suggested that you include &lt;code&gt;contrib&lt;/code&gt; and &lt;code&gt;non-free&lt;/code&gt; in the repository.
This ensures that you can also use many non-open source but cost-free softwares.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;code&gt;sudo&lt;/code&gt; package and configure it.
    You have to switch to root to install packages.
    To switch to root, 
    type in &lt;code&gt;su&lt;/code&gt; (super user) in the terminal. 
    You will be asked for the password of root.
    After authentication, 
    you are in root user. 
    Notice that the prompt character is &lt;code&gt;#&lt;/code&gt; (instead of &lt;code&gt;$&lt;/code&gt;) for the root user. 
    You can type &lt;code&gt;apt-get install sudo&lt;/code&gt; in the terminal (as root) to install the package &lt;code&gt;sudo&lt;/code&gt;.
    After installation of &lt;code&gt;sudo&lt;/code&gt;,
    you have to add your user name to the &lt;code&gt;sudo&lt;/code&gt; group. 
    To do this, 
    run the following command as root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;adduser your_user_name sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, 
this will not take effect immediately. 
To notify the change (of group permission) to the system, 
you can run the following command as root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;newgrp sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If this does not work, 
you can manually log out and then log in
and the change of group permissions will take effect.
Now you are in the &lt;code&gt;sudo&lt;/code&gt; group, 
you can use &lt;code&gt;sudo&lt;/code&gt; (instead of the root user) to run commands
that need root permission.
You can now exit the root terminal (by running &lt;code&gt;exit&lt;/code&gt;) 
if you are still in the root terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the wireless network is not working,
    refer to 
    &lt;a href="https://www.legendu.net/misc/blog/wirelss-for-debian"&gt;Wireless for Debian&lt;/a&gt;
    for possible solutions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="lmde-specific"&gt;LMDE Specific&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;By default, LMDE installs 486 on 32 bit computers.
    If your computer has more than 1 cores/processors, 
    you can upgrade to 686-pae manually by running the following command in terminal
    and then reboot your computer.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install linux-image-3.0.0-1-686-pae
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="other-debian-based-linux-distributions"&gt;Other Debian-based Linux Distributions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Tune settings to make your Linux machine run faster.
    For more discussions, 
    please refer to
    &lt;a href="https://www.legendu.net/en/blog/make-your-computer-run-faster/"&gt;Make Linux Run Faster&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install a good alternative package manager.
    &lt;code&gt;apt-get&lt;/code&gt; is a very good package manager for Debian series Linux distributions,
    however, &lt;code&gt;wajig&lt;/code&gt; is much superior choice.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;wajig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade the system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Swap the &lt;code&gt;Caps Lock&lt;/code&gt; key with the &lt;code&gt;Escape&lt;/code&gt; key.
    Please refer to
    &lt;a href="http://www.legendu.net/en/blog/map-keys-in-linux/"&gt;Map Keys in Linux&lt;/a&gt;
    for detailed discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install must-have software (using &lt;code&gt;wajig&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aria2, uGet&lt;/li&gt;
&lt;li&gt;Chrome, Firefox &lt;/li&gt;
&lt;li&gt;Sogou Pinyin&lt;/li&gt;
&lt;li&gt;Transimission&lt;/li&gt;
&lt;li&gt;Dropbox, Baidu Netdisk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This list might not be the best for everyone. 
For a general list of useful software/tools for Linux, 
please check the post &lt;a href="http://www.legendu.net/misc/blog/useful-tools-linux/"&gt;Useful Tools in Linux&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="Linux"></category><category term="OS"></category><category term="installation"></category></entry><entry><title>Permission Issues when Installing Softwares in Linux</title><link href="https://www.legendu.net/en/blog/install-software-linux/" rel="alternate"></link><published>2012-04-30T00:00:00-07:00</published><updated>2022-05-06T14:50:36-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-04-30:/en/blog/install-software-linux/</id><summary type="html">&lt;p&gt;Sometime when you install softwares in Linux, 
you get an error message saying that you do not have permission while you used sudo or the root account. 
This probably means that you do not have full access to some installation files.
An easy way to solve this problem is to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometime when you install softwares in Linux, 
you get an error message saying that you do not have permission while you used sudo or the root account. 
This probably means that you do not have full access to some installation files.
An easy way to solve this problem is to change file permissions of these installation files.
For example, 
suppose "inst" is the directory containing installation files, 
you can 
change file access use the following command and try installation again.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod -R 755 inst
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="OS"></category><category term="Linux"></category><category term="softwares"></category><category term="permission"></category><category term="issue"></category><category term="chmod"></category></entry><entry><title>Tips on Installing Debian Series of Linux Distributions</title><link href="https://www.legendu.net/en/blog/tips-for-installing-debian/" rel="alternate"></link><published>2013-03-11T01:05:59-07:00</published><updated>2022-05-06T14:24:02-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-03-11:/en/blog/tips-for-installing-debian/</id><summary type="html">&lt;h2 id="before-installation"&gt;Before Installation&lt;/h2&gt;
&lt;h3 id="debian-specific"&gt;Debian Specific&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You'd better not install back ported Debian images, 
    as it might cause issues with other software (e.g., VirtualBox).
    It is suggested that you use Debian test.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="other-debian-based-linux-distributions"&gt;Other Debian-based Linux Distributions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the right ISO image of the Linux distribution 
    that you want to install.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="before-installation"&gt;Before Installation&lt;/h2&gt;
&lt;h3 id="debian-specific"&gt;Debian Specific&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You'd better not install back ported Debian images, 
    as it might cause issues with other software (e.g., VirtualBox).
    It is suggested that you use Debian test.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="other-debian-based-linux-distributions"&gt;Other Debian-based Linux Distributions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the right ISO image of the Linux distribution 
    that you want to install.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a bootable flash drive.
    Please refer to
    &lt;a href="https://www.legendu.net/en/blog/ways-to-make-a-bootable-flash-drive/"&gt;Ways to Make a Bootable Flash Drive in Linux&lt;/a&gt;
    for detailed discussions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect your machine (on which to install the Linux distribution) 
    to an ethernet if possible.
    The wireless support on some Linux distributions is still not perfect.
    Depending on the hardware of your machine
    and which Linux distribution you are installing,
    you might need to connect to internet through ethernet network during installation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the power of your laptop is plugged in. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="during-installation"&gt;During Installation&lt;/h2&gt;
&lt;h3 id="debian-specific_1"&gt;Debian Specific&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is recommended that you use the text installation. 
    The text installation of Debian actually is pretty intuitive and easy to follow.
    The graphical installation of Debian did not work on any of my laptops.
    I am not sure whether the problem has been fixed or not, 
    but it does not hurt to use the text installation. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do not like the default desktop enviroment of Debian (currently GNOME),
    you can deselect the desktop environment during installation. 
    This also makes the installation faster.
    You can install a desktop enviroment you like manually after installtion of Debian. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="other-debian-based-linux-distributions_1"&gt;Other Debian-based Linux Distributions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Debian-based Linux distributions keep data in the home directory untouched 
    during installation unless you choose to format the partition.
    It is suggested that you do NOT use a separate home directory. 
    Following this suggestion, 
    you have to set the mount point of the partition to install the Linux distribution 
    as &lt;code&gt;/&lt;/code&gt; (root directory). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A swap partition is required for Linux operating systems.
    You have to configure a swap partition during the installation.
    Please refer to
    &lt;a href="https://help.ubuntu.com/community/SwapFaq"&gt;SwapFaq&lt;/a&gt;
    on guidelines for the swap partition.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your network is not very fast, 
    you can choose not to use network mirrors,
    especially when your installation image is update to date. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="after-installation"&gt;After Installation&lt;/h2&gt;
&lt;p&gt;Please refer to
&lt;a href="http://www.legendu.net/en/blog/things-to-do-after-installing-linux/"&gt;Things to Do After Installing Linux&lt;/a&gt;
for detailed discussions.&lt;/p&gt;</content><category term="OS"></category><category term="install"></category><category term="Linux"></category><category term="software"></category><category term="Debian"></category></entry><entry><title>Ways to Make a Bootable Flash Drive in Linux</title><link href="https://www.legendu.net/en/blog/ways-to-make-a-bootable-flash-drive/" rel="alternate"></link><published>2013-07-19T10:33:38-07:00</published><updated>2022-05-04T10:49:17-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-07-19:/en/blog/ways-to-make-a-bootable-flash-drive/</id><summary type="html">&lt;h2 id="use-ventoy"&gt;Use &lt;a href="https://github.com/ventoy/Ventoy"&gt;Ventoy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ventoy/Ventoy"&gt;Ventoy&lt;/a&gt;
is the best graphical tool for making bootable flash drives currently.&lt;/p&gt;
&lt;h2 id="use-the-command-dd-or-cat"&gt;Use the Command &lt;code&gt;dd&lt;/code&gt; or &lt;code&gt;cat&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;dd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_linux_image&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_device&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nv"&gt;M&lt;/span&gt;&lt;span class="c1"&gt;; sync&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat path_to_linux_image &amp;gt; path_to_device
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to write a hybird Linux image into a flash drive.
Note that you 
&lt;span style="color:red"&gt;
must …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;h2 id="use-ventoy"&gt;Use &lt;a href="https://github.com/ventoy/Ventoy"&gt;Ventoy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/ventoy/Ventoy"&gt;Ventoy&lt;/a&gt;
is the best graphical tool for making bootable flash drives currently.&lt;/p&gt;
&lt;h2 id="use-the-command-dd-or-cat"&gt;Use the Command &lt;code&gt;dd&lt;/code&gt; or &lt;code&gt;cat&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;You can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;dd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_linux_image&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_device&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nv"&gt;M&lt;/span&gt;&lt;span class="c1"&gt;; sync&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat path_to_linux_image &amp;gt; path_to_device
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to write a hybird Linux image into a flash drive.
Note that you 
&lt;span style="color:red"&gt;
must use the whole device 
&lt;/span&gt;
(e.g., &lt;code&gt;/dev/sdb&lt;/code&gt;) 
not just a partition (e.g., &lt;code&gt;/dev/sdb1&lt;/code&gt;)
on the device.
For a non-hybrid Linux image, 
you can make it hybid using the following command 
if it uses isolinux/syslinux technology.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;isohybird path_to_linux_image
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;span style="color:red"&gt;
Be very careful when you run the above 2 commands
(&lt;code&gt;dd&lt;/code&gt; and &lt;code&gt;cat&lt;/code&gt;)
&lt;/span&gt;
,
as they will erase the whole target device you specify.
Accidentally providing a wrong device will make you lose all data on it!&lt;/p&gt;
&lt;h2 id="use-the-command-zcat"&gt;Use the Command zcat&lt;/h2&gt;
&lt;p&gt;This is an even more manual way,
which is not recommended.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;`zcat boot.img.gz &amp;gt; /dev/sdX&lt;/li&gt;
&lt;li&gt;Mount the USB stick and copy a iso image to it.&lt;/li&gt;
&lt;li&gt;Umount the USB stick.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="use-the-gui-tool-unetbootin"&gt;Use the GUI Tool &lt;a href="http://unetbootin.sourceforge.net/"&gt;UNetbootin&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ventoy/Ventoy"&gt;Ventoy&lt;/a&gt;
    is a much better tool than
    &lt;a href="http://unetbootin.sourceforge.net/"&gt;UNetbootin&lt;/a&gt;
    now.
    Please use 
    &lt;a href="https://github.com/ventoy/Ventoy"&gt;Ventoy&lt;/a&gt;
    instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you create a boot flash drive for Ubuntu in Windows using UNetbootin or other softwares, 
    then you'd better format the flash drive as &lt;code&gt;FAT&lt;/code&gt; instead of &lt;code&gt;FAT32&lt;/code&gt;. 
    Otherwise, 
    you might get the error information: "BOOTMGR is missing".&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="use-the-universal-online-booting-tool-netbootme"&gt;Use the Universal Online Booting Tool &lt;a href="http://www.netboot.me/"&gt;netboot.me&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Note that you must have an ethernet connection in order to use 
&lt;a href="http://www.netboot.me/"&gt;netboot.me&lt;/a&gt;.
netboot.me is a fantastic tool for general purposes,
but it has problems on some old computers.&lt;/p&gt;</content><category term="OS"></category><category term="bootable"></category><category term="flash drive"></category><category term="hybird"></category><category term="USB"></category><category term="Hardware"></category><category term="Linux"></category></entry><entry><title>Convert PDF to EPS</title><link href="https://www.legendu.net/en/blog/convert-pdf-to-eps/" rel="alternate"></link><published>2012-11-21T16:30:01-08:00</published><updated>2021-12-03T09:25:59-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-21:/en/blog/convert-pdf-to-eps/</id><content type="html">&lt;p&gt;There are tons of tools for converting PDF pictures to EPS pictures in Linux. 
The &lt;code&gt;pdf2ps&lt;/code&gt; command is a good one.
It produces EPS pictures without losing much resolution. 
The general purpose tools &lt;code&gt;convert&lt;/code&gt; 
(from the &lt;code&gt;ImageMagick&lt;/code&gt; package) does not produce as good quality EPS figures.&lt;/p&gt;</content><category term="Software"></category><category term="Image"></category><category term="eps"></category><category term="Linux"></category><category term="PDF"></category><category term="software"></category><category term="Graphics"></category></entry><entry><title>Regular Expression Equivalent</title><link href="https://www.legendu.net/en/blog/regex-equivalence/" rel="alternate"></link><published>2013-10-30T12:29:42-07:00</published><updated>2021-10-31T11:04:04-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-30:/en/blog/regex-equivalence/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The order of precedence of operators in POSIX extended regular expression is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Collation-related bracket symbols &lt;code&gt;[==]&lt;/code&gt;, &lt;code&gt;[::]&lt;/code&gt;, &lt;code&gt;[..]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Escaped characters &lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Character set (bracket expression) &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Grouping &lt;code&gt;()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Single-character-ERE duplication &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;{m,n}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Concatenation&lt;/li&gt;
&lt;li&gt;Anchoring &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Alternation &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some regular expression patterns are defined using a single leading backslash, 
    e.g., &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, etc.
    However, 
    since special …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The order of precedence of operators in POSIX extended regular expression is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Collation-related bracket symbols &lt;code&gt;[==]&lt;/code&gt;, &lt;code&gt;[::]&lt;/code&gt;, &lt;code&gt;[..]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Escaped characters &lt;code&gt;\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Character set (bracket expression) &lt;code&gt;[]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Grouping &lt;code&gt;()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Single-character-ERE duplication &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;{m,n}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Concatenation&lt;/li&gt;
&lt;li&gt;Anchoring &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Alternation &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some regular expression patterns are defined using a single leading backslash, 
    e.g., &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, etc.
    However, 
    since special characters (e.g., &lt;code&gt;\&lt;/code&gt;) need to be escaped in strings in most programming languages,
    you will need the string &lt;code&gt;"\\s"&lt;/code&gt; to represent the regular expression pattern &lt;code&gt;\s&lt;/code&gt;,
    and similar for other regular expression patterns with a leading backslash. 
    Python is specialy as it provides raw strings (without escaping) to make it easier to write regular expression patterns. 
    It even goes one step further to auto correct non-properly escape strings. 
    For more discussions on Python regular expressions, 
    pleaser fer to
    &lt;a href="http://www.legendu.net/en/blog/regular-expression-python"&gt;Regular Expression in Python&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It becomes tricky if you use a programming language to call another programming language to 
    perform regular expression operations.
    Taking &lt;code&gt;\s&lt;/code&gt; for example,
    since &lt;code&gt;\&lt;/code&gt; needs to be escaped in both programming languages, 
    you will end up using &lt;code&gt;\\\\s&lt;/code&gt; to represent &lt;code&gt;\s&lt;/code&gt;. 
    If you use Python to call other languages to perform regular expression patterns, 
    things can be simplifed by using raw strings in Python.
    For example, 
    instead of &lt;code&gt;"\\\\s"&lt;/code&gt;,
    you can use &lt;code&gt;r"\\s"&lt;/code&gt; in Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In some programming languages,
    you have to compile a plain/text pattern into a regular expression pattern object
    before using it.
    The Python module &lt;code&gt;re&lt;/code&gt; automatically compiles a plain/text pattern 
    (using &lt;code&gt;re.compile&lt;/code&gt;)
    and caches it,
    so there is not much benefit to compile regular expressions by yourself in Python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\W&lt;/code&gt; does not include &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regular expression modifiers makes regular expression more flexible and powerful. 
    It is also a more universal way 
    than remembering different options in different programming languages or tools. 
    It is suggested that you use regular expression modifiers when possible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Word boundry (&lt;code&gt;\b&lt;/code&gt;) is a super set of white spaces (&lt;code&gt;\s&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;[[:alnum:]]&lt;/code&gt; contains all letters and numbers 
    while &lt;code&gt;\w&lt;/code&gt; contains not only letters and numbers but also some special character such as &lt;code&gt;_&lt;/code&gt;. 
    So in short &lt;code&gt;\w&lt;/code&gt; is a super set of &lt;code&gt;[[:alnum:]]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div style="overflow-x:auto;"&gt;
&lt;table style="width:100%"&gt;
    &lt;tr&gt;
        &lt;th&gt; &lt;/th&gt;
        &lt;th&gt; Vim search &lt;/th&gt;
        &lt;th&gt; Python &lt;/th&gt;
        &lt;th&gt; JavaScript &lt;/th&gt;
        &lt;th&gt; Teradata SQL &lt;/th&gt;
        &lt;th&gt; Oracle SQL &lt;/th&gt;
        &lt;th&gt; grep &lt;/th&gt;
        &lt;th&gt; sed &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; Modifiers &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            Partial&lt;sup&gt;[1]&lt;/sup&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            Partial&lt;sup&gt;[1]&lt;/sup&gt;
        &lt;/td&gt;
        &lt;td&gt; Full &lt;/td&gt;
        &lt;td&gt; 
            No&lt;sup&gt;[2]&lt;/sup&gt; 
        &lt;/td&gt;
        &lt;td&gt; Full[3] &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; Greedy &lt;br&gt; or not&lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            Both&lt;sup&gt;[4]&lt;/sup&gt;
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; Popular &lt;br&gt; functions &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            re.search, re.sub
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            regexp_instr
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; White &lt;br&gt; spaces &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\s&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;"\\s" or r"\s" &lt;/code&gt; 
            &lt;sup&gt; [5] &lt;/sup&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            [[:blank:]]
            [[:space:]]
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\s&lt;/code&gt; or &lt;code&gt;[[:space:]]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[[:space:]]&lt;/code&gt; (recommended) or &lt;code&gt;\s&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; Non-white &lt;br&gt; space &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; \S &lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; "\\S" or r"\S" &lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            [[:blank:]]
            [[:space:]]
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\S&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^[:space:]]&lt;/code&gt; or &lt;code&gt;\S&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Lower-case &lt;br&gt; letters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-z]&lt;/code&gt; or &lt;code&gt;\l&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-z]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non lower-case &lt;br&gt; characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-z]&lt;/code&gt; or &lt;code&gt;\L&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-z]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Upper-case &lt;br&gt; letters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[A-Z]&lt;/code&gt; or &lt;code&gt;\u&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[A-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[A-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[A-Z]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non upper-case &lt;br&gt; characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^A-Z]&lt;/code&gt; or &lt;code&gt;\U&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^A-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^A-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^A-Z]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Letters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z]&lt;/code&gt; or &lt;code&gt;\a&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non letters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z]&lt;/code&gt; or &lt;code&gt;\A&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Digits
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\d&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; "\\d" or r"\d" &lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[[:digit:]]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\d&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non digits
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\D&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; "\\D" or r"\D" &lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^[:digit:]]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\D&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Hex digits
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-9a-fA-F]&lt;/code&gt; or &lt;code&gt;\x&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non-Hex digit &lt;br&gt; characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-9a-fA-F]&lt;/code&gt; or &lt;code&gt;\X&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-9a-fA-F]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-9a-fA-F]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-9a-fA-F]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Octal digits
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-7]&lt;/code&gt; or &lt;code&gt;\o&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-7]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-7]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[0-7]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non-octal digit &lt;br&gt; Characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-7]&lt;/code&gt; or &lt;code&gt;\O&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-7]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-7]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^0-7]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Head of word
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z_]&lt;/code&gt; or &lt;code&gt;\h&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z_]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z_]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[a-zA-Z_]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non-head &lt;br&gt; of word
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&lt;code&gt;[^a-zA-Z_]&lt;/code&gt; or &lt;code&gt;\H&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z_]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z_]&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;[^a-zA-Z_]&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Printable &lt;br&gt; Characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\p&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non printable &lt;br&gt; Characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\P&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Word characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; \w&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; "\\w" or r"\w" &lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\w&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\w&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Word boundry
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\b&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt; "\\b" or r"\b" &lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\b&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\b&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Non word &lt;br&gt; characters
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\W&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\W&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\W&lt;/code&gt;
        &lt;/td&gt;
        &lt;td&gt; 
            &lt;code&gt;\W&lt;/code&gt;
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            grouping
        &lt;/td&gt;
        &lt;td&gt; 
            \(\)
        &lt;/td&gt;
        &lt;td&gt; 
            ()
        &lt;/td&gt;
        &lt;td&gt; 
            ()
        &lt;/td&gt;
        &lt;td&gt; 
            ()
        &lt;/td&gt;
        &lt;td&gt; 
            ()
        &lt;/td&gt;
        &lt;td&gt; 
            \(\)
        &lt;/td&gt;
        &lt;td&gt; 
            ()
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            0 or more 
            &lt;br&gt; matches
        &lt;/td&gt;
        &lt;td&gt; 
            *
        &lt;/td&gt;
        &lt;td&gt; 
            *
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            *
        &lt;/td&gt;
        &lt;td&gt; 
            *
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            0 or more matches 
            &lt;br&gt; (as few as possible)
        &lt;/td&gt;
        &lt;td&gt; 
            \\{-\\}
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            0 or 1 
            &lt;br&gt; matches
        &lt;/td&gt;
        &lt;td&gt; 
            \=
        &lt;/td&gt;
        &lt;td&gt; 
            ?
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            ?
        &lt;/td&gt;
        &lt;td&gt; 
            ?
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            1 or more 
            &lt;br&gt; matches
        &lt;/td&gt; 
        &lt;td&gt; 
            \+
        &lt;/td&gt;
        &lt;td&gt; 
            +
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            +
        &lt;/td&gt;
        &lt;td&gt; 
            +
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Exactly m 
            &lt;br&gt; matches
        &lt;/td&gt;
        &lt;td&gt; 
            \\{m\\}
        &lt;/td&gt;
        &lt;td&gt; 
            {m}
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            {m}
        &lt;/td&gt;
        &lt;td&gt; 
            {m}
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            m or more 
            &lt;br&gt; matches
        &lt;/td&gt;
        &lt;td&gt; 
            \\{m,\\}
        &lt;/td&gt;
        &lt;td&gt; 
            {m,}
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            {m,}
        &lt;/td&gt;
        &lt;td&gt; 
            {m,}
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            m or more matches 
            &lt;br&gt; (as few as possible)
        &lt;/td&gt;
        &lt;td&gt; 
            \\{-m,\\}
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            m to n 
            &lt;br&gt; matches
        &lt;/td&gt;
        &lt;td&gt; 
            \\{m,n\\}
        &lt;/td&gt;
        &lt;td&gt; 
            {m,n}
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            {m,n}
        &lt;/td&gt;
        &lt;td&gt; 
            {m,n}
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            m to n matches 
            &lt;br&gt; (as few as possible)
        &lt;/td&gt;
        &lt;td&gt; 
            \\{-m,n\\}
        &lt;/td&gt; 
        &lt;td&gt; &lt;/td&gt; 
        &lt;td&gt; &lt;/td&gt; 
        &lt;td&gt; &lt;/td&gt; 
        &lt;td&gt; &lt;/td&gt; 
        &lt;td&gt; &lt;/td&gt; 
        &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            up to n 
            &lt;br&gt; matches
        &lt;/td&gt;
        &lt;td&gt; 
            \\{,n\\}
        &lt;/td&gt;
        &lt;td&gt; 
            {,n}
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            {,n}
        &lt;/td&gt;
        &lt;td&gt; 
            {,n}
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            up to n matches 
            &lt;br&gt; (as few as possible)
        &lt;/td&gt;
        &lt;td&gt; 
            \\{-,n\\}
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Any character 
            &lt;br&gt; except a newline
        &lt;/td&gt;
        &lt;td&gt; 
            .
        &lt;/td&gt;
        &lt;td&gt; 
            .
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            .
        &lt;/td&gt;
        &lt;td&gt; 
            .
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Start of 
            &lt;br&gt; a line
        &lt;/td&gt;
        &lt;td&gt; 
            ^
        &lt;/td&gt;
        &lt;td&gt; 
            ^
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            ^
        &lt;/td&gt;
        &lt;td&gt; 
            ^
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            End of 
            &lt;br&gt; a line
        &lt;/td&gt;
        &lt;td&gt; 
            $
        &lt;/td&gt;
        &lt;td&gt; 
            $
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            $
        &lt;/td&gt;
        &lt;td&gt; 
            $
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Literal /
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            \/ 
            &lt;br&gt; (need to escape)
        &lt;/td&gt; 
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
            / 
            &lt;br&gt; (no need to escape)
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
        &lt;td&gt; 
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Literal dot
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            \\.
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Lookahead
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;a href="https://docs.python.org/3/library/re.html#index-20"&gt; (?=...) &lt;/a&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            \\.
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Negative lookahead
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;a href="https://docs.python.org/3/library/re.html#index-21"&gt; (?!...) &lt;/a&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            \\.
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Positive lookbehind
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;a href="https://docs.python.org/3/library/re.html#index-22"&gt; (?&amp;lt;=...) &lt;/a&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            \\.
        &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt; 
            Negative lookbehind
        &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;a href="https://docs.python.org/3/library/re.html#index-23"&gt; (?&amp;lt;!...) &lt;/a&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; &lt;/td&gt;
        &lt;td&gt; 
            \\.
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;[1]: Python/JavaScript partially supports regular expression modifiers.
    To be more specifically,
    turning modifiers on is supported
    but turning modifiers off is not supported.
    Modifiers (once turned on) are applied to the entire regular expression
    and cannot be turned off.&lt;/p&gt;
&lt;p&gt;[2]: Behavior of regular expressions in Oracle SQL 
    is control via parameters of regular expression  functions 
    instead of via regular expression modifiers.&lt;/p&gt;
&lt;p&gt;[3]: &lt;code&gt;grep&lt;/code&gt; fully supports regular expression modifiers 
    via Perl style regular (the &lt;code&gt;-P&lt;/code&gt; option) expressions.&lt;/p&gt;
&lt;p&gt;[4]: &lt;code&gt;grep&lt;/code&gt; matches pattern greedly by default.
    However, 
    in Perl style syntax you can use the modifer &lt;code&gt;?&lt;/code&gt; after a quantifier to perform a non-greedy match.
    For example, 
    instead of &lt;code&gt;.*&lt;/code&gt; you can use &lt;code&gt;.*?&lt;/code&gt; to do a non-greedy match.&lt;/p&gt;
&lt;p&gt;[5]: As a matter of fact,
    &lt;code&gt;"\s"&lt;/code&gt; also works in Python and it is equivalent to &lt;code&gt;"\\s"&lt;/code&gt; and &lt;code&gt;r"\s"&lt;/code&gt;.
    However,
    it is suggested that you avoid using &lt;code&gt;"\s"&lt;/code&gt; as causes confusions
    especially when you call other programming languges (e.g., Spark SQL) 
    to run regular expression operations from Python.
    The raw string pattern &lt;code&gt;r"\s"&lt;/code&gt; is preferred for its unambiguity and simplicity. 
    For more discussions on Python regular expressions,
    please refer to
    &lt;a href="http://www.legendu.net/en/blog/regular-expression-python"&gt;Regular Expression in Python&lt;/a&gt;
    .&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://regex101.com/"&gt;Regular Expression Tester&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/regular-expression-python"&gt;Regular Expression in Python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/re.html"&gt;Official Python Docs on Regular Expression&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/regular-expression-in-bash/"&gt;Regular Expression in Bash&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.boost.org/doc/libs/1_56_0/libs/regex/doc/html/boost_regex/syntax/basic_extended.html#boost_regex.syntax.basic_extended.operator_precedence"&gt;POSIX Extended Regular Expression Syntax&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.boost.org/doc/libs/1_56_0/libs/regex/doc/html/boost_regex/syntax/basic_extended.html#boost_regex.syntax.basic_extended.operator_precedence"&gt;Operator Precedence of POSIX Extended Regular Expression&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="tips"></category><category term="regex"></category><category term="equivalent"></category><category term="regular expression"></category><category term="regexp"></category><category term="Python"></category><category term="R"></category><category term="CRAN"></category><category term="Perl"></category><category term="SAS"></category><category term="grep"></category><category term="egrep"></category></entry><entry><title>Fonts for Linux</title><link href="https://www.legendu.net/en/blog/fonts-for-linux/" rel="alternate"></link><published>2013-04-13T00:07:00-07:00</published><updated>2021-09-26T22:00:58-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-04-13:/en/blog/fonts-for-linux/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ttf-arphic-uming&lt;/code&gt;, &lt;code&gt;ttf-wqy-microhei&lt;/code&gt;, &lt;code&gt;ttf-wqy-zenhei&lt;/code&gt;, &lt;code&gt;xfonts-wqy&lt;/code&gt; and &lt;code&gt;ttf-opensymbol&lt;/code&gt; 
    are some packages related to Chinese fonts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have Adobe Reader installed on your computer, 
    you can use Adobe Chinese fonts for free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check Chinese fonts installed on your computer,
    you can use the command &lt;code&gt;fc-list :lang=zh-cn | sort&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To install extra …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ttf-arphic-uming&lt;/code&gt;, &lt;code&gt;ttf-wqy-microhei&lt;/code&gt;, &lt;code&gt;ttf-wqy-zenhei&lt;/code&gt;, &lt;code&gt;xfonts-wqy&lt;/code&gt; and &lt;code&gt;ttf-opensymbol&lt;/code&gt; 
    are some packages related to Chinese fonts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have Adobe Reader installed on your computer, 
    you can use Adobe Chinese fonts for free.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check Chinese fonts installed on your computer,
    you can use the command &lt;code&gt;fc-list :lang=zh-cn | sort&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To install extra fonts in linux, 
    you can just copy the font files to the directory '$HOME/.fonts'.
    To make them in effect, 
    you have to run &lt;code&gt;fc-cache&lt;/code&gt; to update the system fonts cache.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you ever have any fonts problem with Tex Live in Linux, 
    install the package &lt;code&gt;texlive-fonts-extra&lt;/code&gt; (if you haven't done so) and try again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ryanoasis/nerd-fonts"&gt;nerd-fonts&lt;/a&gt;
    patches developer targeted fonts with a high number of glyphs (icons). 
    Specifically to add a high number of extra glyphs from popular 'iconic fonts' 
    such as Font Awesome, Devicons, Octicons, and others.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="fonts"></category><category term="LaTeX"></category><category term="Chinese"></category><category term="Linux"></category><category term="Tex Live"></category><category term="TexLive"></category><category term="nerd fonts"></category></entry><entry><title>Search for Files in Command-line Using grep</title><link href="https://www.legendu.net/en/blog/grep-tips/" rel="alternate"></link><published>2013-10-22T14:53:28-07:00</published><updated>2021-09-26T21:59:25-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-22:/en/blog/grep-tips/</id><summary type="html">&lt;p&gt;The article 
&lt;a href="http://www.librebyte.net/en/gnulinux/14-practical-examples-of-the-grep-command/"&gt;14 Practical examples of the grep command&lt;/a&gt;
has some good examples on how to use the &lt;code&gt;grep&lt;/code&gt; command.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The Perl style (option &lt;code&gt;-P&lt;/code&gt;) regular expression is more powerful 
    than the basic (default) and extended (option &lt;code&gt;-E&lt;/code&gt;) regular expression. 
    It is suggested that you use the perl style as …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;The article 
&lt;a href="http://www.librebyte.net/en/gnulinux/14-practical-examples-of-the-grep-command/"&gt;14 Practical examples of the grep command&lt;/a&gt;
has some good examples on how to use the &lt;code&gt;grep&lt;/code&gt; command.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The Perl style (option &lt;code&gt;-P&lt;/code&gt;) regular expression is more powerful 
    than the basic (default) and extended (option &lt;code&gt;-E&lt;/code&gt;) regular expression. 
    It is suggested that you use the perl style as much as possible.
    However, 
    be careful about unimplemented features. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The option &lt;code&gt;-n&lt;/code&gt;/&lt;code&gt;--line-number&lt;/code&gt; prefixes each line of output with the 1-based line number within its input file.
    And the option &lt;code&gt;-o&lt;/code&gt;/&lt;code&gt;--only-matching&lt;/code&gt; prints only the matched (non-empty) parts of a matching line, 
    with each such part on a separate output line.
    Both of those options are very useful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search in current directory recursively for files containing the text "video".
    Symbolic links are followed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep&lt;span class="w"&gt; &lt;/span&gt;-iR&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;video&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search in current directory recursively for files containing the text "video".
    Symbolic links are NOT followed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep&lt;span class="w"&gt; &lt;/span&gt;-ir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;video&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="tips"></category><category term="grep"></category><category term="egrep"></category></entry><entry><title>Synchronize Files Using Dropbox</title><link href="https://www.legendu.net/en/blog/dropbox-tips/" rel="alternate"></link><published>2013-10-22T13:36:17-07:00</published><updated>2021-09-26T21:58:30-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-22:/en/blog/dropbox-tips/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Dropbox won't sync files that you don't have read permissions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not merge an old Dropbox folder while installing/configuring Dropbox.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not store symbolic links in the Dropbox folder,
    because the symbolic links will be replaced by the real files/folders 
    when synchronized to other computers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Dropbox won't sync files that you don't have read permissions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not merge an old Dropbox folder while installing/configuring Dropbox.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not store symbolic links in the Dropbox folder,
    because the symbolic links will be replaced by the real files/folders 
    when synchronized to other computers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is not a good idea to put a Git repository into Dropbox.
    First, 
    a Git repository usually contains lots of small files 
    which downgrades the performance of Dropbox.
    Second, 
    it is better to push a Git repository to GitHub, GitLab, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://www.addictivetips.com/ubuntu-linux-tips/enable-dropbox-support-in-dolphin-file-manager/&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="tips"></category><category term="Dropbox"></category><category term="synchronizaion"></category><category term="backup"></category><category term="cloud"></category><category term="sync"></category></entry><entry><title>Comparision of Linux Emulation Solutions on Windows</title><link href="https://www.legendu.net/en/blog/comparision-of-linux-emulation-solutions-on-windows/" rel="alternate"></link><published>2014-06-13T22:21:09-07:00</published><updated>2021-09-26T21:57:22-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-06-13:/en/blog/comparision-of-linux-emulation-solutions-on-windows/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Virtual machine based on Virtualbox, etc. is an overkill, 
    generally speaking.
    It provides complete functionalities 
    but is more CPU and memory hangry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WSL 2 is the currently the best solution comes with Windows 10+.
    It is essentially a virtual machine but based on Hyper-V.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cygwin, MobaXterm, etc. are outdated 
    as …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Virtual machine based on Virtualbox, etc. is an overkill, 
    generally speaking.
    It provides complete functionalities 
    but is more CPU and memory hangry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WSL 2 is the currently the best solution comes with Windows 10+.
    It is essentially a virtual machine but based on Hyper-V.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cygwin, MobaXterm, etc. are outdated 
    as WSL 2 is an integrated solution in Windows 10+.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://copy.sh/v86/"&gt;x86 Virtualization in Browser&lt;/a&gt;&lt;/p&gt;</content><category term="Software"></category><category term="Virtual Machine"></category><category term="Cygwin"></category><category term="MobaXterm"></category><category term="VirtualBox"></category><category term="Linux Emulation"></category></entry><entry><title>Count Number of Fields in Each Line</title><link href="https://www.legendu.net/en/blog/count-number-of-fields-in-each-line/" rel="alternate"></link><published>2016-06-13T23:08:03-07:00</published><updated>2021-09-26T21:56:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-13:/en/blog/count-number-of-fields-in-each-line/</id><summary type="html">&lt;p&gt;Sometimes,
a structured text file might be malformatted.
A simple way to verify it is to count the number of fields in each line.&lt;/p&gt;
&lt;h2 id="using-awk"&gt;Using awk&lt;/h2&gt;
&lt;p&gt;You can count the number of fields in each line 
using the following awk command.
Unfortunately, 
awk does not take escaped characters into consideration …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes,
a structured text file might be malformatted.
A simple way to verify it is to count the number of fields in each line.&lt;/p&gt;
&lt;h2 id="using-awk"&gt;Using awk&lt;/h2&gt;
&lt;p&gt;You can count the number of fields in each line 
using the following awk command.
Unfortunately, 
awk does not take escaped characters into consideration.
So this only works for simple formatted (without escaped characters) text files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{print NF}&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;filename
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="using-r"&gt;Using R&lt;/h2&gt;
&lt;p&gt;There is a function named &lt;code&gt;count.field&lt;/code&gt; in R.&lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="data manipulation"></category><category term="R"></category><category term="awk"></category><category term="number"></category><category term="field"></category><category term="text file"></category></entry><entry><title>Resolve the DNS Contamination Issue in Firefox</title><link href="https://www.legendu.net/en/blog/resolve-the-dns-contamination-issue-in-firefox/" rel="alternate"></link><published>2018-09-11T01:11:28-07:00</published><updated>2021-09-26T21:54:44-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-09-11:/en/blog/resolve-the-dns-contamination-issue-in-firefox/</id><summary type="html">&lt;p&gt;The local DNS you use in China is probably contaminated
and popular sites like Google, Facebook, etc. are not interpreted correctly.
So if you are in China and use Firefox with Proxy,
make sure to set &lt;code&gt;network.proxy.socks_remote_dns&lt;/code&gt; to be true (follow steps below).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open an empty tab in …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;The local DNS you use in China is probably contaminated
and popular sites like Google, Facebook, etc. are not interpreted correctly.
So if you are in China and use Firefox with Proxy,
make sure to set &lt;code&gt;network.proxy.socks_remote_dns&lt;/code&gt; to be true (follow steps below).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open an empty tab in Firefox.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to about:config in the URL bar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Search for &lt;code&gt;network.proxy.socks_remote_dns&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change the value to be &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="software"></category><category term="Firefox"></category><category term="proxy"></category><category term="DNS contamination"></category><category term="socks"></category></entry><entry><title>Convert a Socks Proxy to a HTTP Proxy</title><link href="https://www.legendu.net/en/blog/socks-proxy-to-http-proxy/" rel="alternate"></link><published>2018-09-08T18:57:48-07:00</published><updated>2021-09-26T21:54:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-09-08:/en/blog/socks-proxy-to-http-proxy/</id><summary type="html">&lt;p&gt;There are multiple tools available 
to convert a Socks proxy to a HTTP/HTTPS proxy. 
The work by convertting HTTP requests into socks requests 
and send them to the socks proxy. 
Be aware that this might not be necessary 
as many tools accepting HTTP/HTTPS proxies 
also accept socks proxies …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are multiple tools available 
to convert a Socks proxy to a HTTP/HTTPS proxy. 
The work by convertting HTTP requests into socks requests 
and send them to the socks proxy. 
Be aware that this might not be necessary 
as many tools accepting HTTP/HTTPS proxies 
also accept socks proxies. 
In that case,
you can direct your socks proxy
(e.g., &lt;code&gt;socks5://localhost:1080&lt;/code&gt;)
to those tools.
If you do need to convert a socks proxy to a HTTP/HTTPS proxy
for tools that accept HTTP/HTTPS proxies only,
read the below.&lt;/p&gt;
&lt;h2 id="polipo"&gt;Polipo&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Polipo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;search&lt;span class="w"&gt; &lt;/span&gt;polipo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a HTTP proxy listening on 8123
    (assuming you have a Socks proxy &lt;code&gt;localhost:1080&lt;/code&gt;). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;polipo&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;socksParentProxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;localhost:1080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="http-proxy-to-socks"&gt;&lt;a href="https://www.npmjs.com/package/http-proxy-to-socks"&gt;http-proxy-to-socks&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install http-proxy-to-socks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npm&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="w"&gt; &lt;/span&gt;http-proxy-to-socks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a HTTP proxy listening on 8080
    (assuming you have a Socks proxy &lt;code&gt;localhost:1080&lt;/code&gt;).
    Please make sure your socks service is available at the corresponding port.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hpts&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:1080&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;https://www.codevoila.com/post/16/convert-socks-proxy-to-http-proxy-using-polipo&lt;/p&gt;</content><category term="Internet"></category><category term="network"></category><category term="socks proxy"></category><category term="http proxy"></category><category term="polipo"></category></entry><entry><title>Quickly Create a Scala Project Using Gradle in Intellij IDEA</title><link href="https://www.legendu.net/en/blog/scala-with-gradle-in-intellij/" rel="alternate"></link><published>2019-01-26T18:11:29-08:00</published><updated>2021-09-26T21:52:54-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-01-26:/en/blog/scala-with-gradle-in-intellij/</id><summary type="html">&lt;h2 id="easy-way"&gt;Easy Way&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a directory (e.g., &lt;code&gt;demo_proj&lt;/code&gt;) for your project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;gradle init --type scala-library&lt;/code&gt; in terminal in the above directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import the directory as a Gradle project in IntelliJ IDEA.
    Alternatively,
    you can add &lt;code&gt;apply plugin: 'idea'&lt;/code&gt; into &lt;code&gt;build.gradle&lt;/code&gt;
    and then run the command &lt;code&gt;./gradlew openIdea&lt;/code&gt; to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="easy-way"&gt;Easy Way&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a directory (e.g., &lt;code&gt;demo_proj&lt;/code&gt;) for your project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;gradle init --type scala-library&lt;/code&gt; in terminal in the above directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import the directory as a Gradle project in IntelliJ IDEA.
    Alternatively,
    you can add &lt;code&gt;apply plugin: 'idea'&lt;/code&gt; into &lt;code&gt;build.gradle&lt;/code&gt;
    and then run the command &lt;code&gt;./gradlew openIdea&lt;/code&gt; to import the directory as a Gradle project in Intellij IDEA.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="hard-way"&gt;Hard Way&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a Gradle project in IntelliJ IDEA. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a directory named &lt;code&gt;scala&lt;/code&gt; under &lt;code&gt;src/main&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mark the directory &lt;code&gt;src/main/scala&lt;/code&gt; as source root directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;build.gradle&lt;/code&gt; and change its content to the following.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;scala&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;plugin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;idea&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;net&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;legendu&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="m m-Double"&gt;1.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;SNAPSHOT&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="nx"&gt;sourceCompatibility&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;1.8&lt;/span&gt;

&lt;span class="nx"&gt;dependencies&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Use Scala 2.12 in our library project&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;implementation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scala&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;scala&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m m-Double"&gt;2.12.7&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Use Scalatest for testing our library&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;testImplementation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;junit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;junit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m m-Double"&gt;4.1&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;testImplementation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scalatest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;scalatest_2&lt;/span&gt;&lt;span class="m m-Double"&gt;.1&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m m-Double"&gt;3.0.5&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Need scala-xml at test runtime&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;testRuntimeOnly&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nx"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scala&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;scala&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;xml_2&lt;/span&gt;&lt;span class="m m-Double"&gt;.1&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m m-Double"&gt;1.1.1&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Scala"></category><category term="Gradle"></category><category term="IntelliJ IDEA"></category><category term="JVM"></category></entry><entry><title>Create a Temporary File in Linux</title><link href="https://www.legendu.net/en/blog/create-temporary-file-linux/" rel="alternate"></link><published>2013-12-23T01:00:32-08:00</published><updated>2021-09-26T17:00:52-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-12-23:/en/blog/create-temporary-file-linux/</id><content type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mktemp&lt;/code&gt; is preferred to &lt;code&gt;tempfile&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="OS"></category><category term="operating system"></category><category term="Linux"></category><category term="temporary"></category><category term="file"></category><category term="temp"></category></entry><entry><title>Install Python Packages Behind Firewall</title><link href="https://www.legendu.net/en/blog/install-python-behind-firewall/" rel="alternate"></link><published>2014-07-09T02:23:14-07:00</published><updated>2021-09-25T11:36:24-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-07-09:/en/blog/install-python-behind-firewall/</id><summary type="html">&lt;p&gt;It is recommended that you use &lt;code&gt;pip&lt;/code&gt; to install Python packages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you don't already know the proxy in use (in your company),
    read the post &lt;a href="http://www.legendu.net/en/blog/find-out-proxy-in-use/"&gt;Find out Proxy in Use&lt;/a&gt;
    to figure it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set proxy environment variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="nv"&gt;@proxy_ip&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;user …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;It is recommended that you use &lt;code&gt;pip&lt;/code&gt; to install Python packages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you don't already know the proxy in use (in your company),
    read the post &lt;a href="http://www.legendu.net/en/blog/find-out-proxy-in-use/"&gt;Find out Proxy in Use&lt;/a&gt;
    to figure it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set proxy environment variables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="nv"&gt;@proxy_ip&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;
&lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nl"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="nv"&gt;@proxy_ip&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Python packages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;package_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As an alternative to steps 2 and 3, 
you can also pass the proxy to pip directly without setting environment variables for it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;user:password@proxy_ip:port&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;package_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that if you have the pysocks package installed,
you can use a socks proxy with pip as well.
For example, 
if you have a socks5 proxy at &lt;code&gt;localhost:1080&lt;/code&gt; you can use it with pipe as illustrated below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;socks5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;localhost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1080&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;package_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="Python"></category><category term="programming"></category><category term="Windows"></category><category term="proxy"></category><category term="install package"></category></entry><entry><title>Synchronization and Backup Solutions</title><link href="https://www.legendu.net/en/blog/synchronization-and-backup-solutions/" rel="alternate"></link><published>2014-03-04T22:11:05-08:00</published><updated>2021-09-24T12:14:58-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-03-04:/en/blog/synchronization-and-backup-solutions/</id><summary type="html">&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Almost all sychronization tools have problems with symbolic links.
    Most of them just ignore symbolic links.
    This makes sense as following symbolic links can causes serious disk problems.
    If not followed then symbolic links are likely broken on other device.
    The simple suggestion is do not place …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Almost all sychronization tools have problems with symbolic links.
    Most of them just ignore symbolic links.
    This makes sense as following symbolic links can causes serious disk problems.
    If not followed then symbolic links are likely broken on other device.
    The simple suggestion is do not place symbolic links in your synchronization folders.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backup (relatively) small files to Dropbox (or a similar tool),
  and Backup large non-privacy files on Baidu Yun.
  If a large file is sensitive, 
  encrypt it first before uploding it to Baidu Yun.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table style="width:100%"&gt;
  &lt;tr&gt;
    &lt;th&gt; Name &lt;/th&gt;
    &lt;th&gt; Opensource/free &lt;/th&gt;
    &lt;th&gt; OS &lt;/th&gt;
    &lt;th&gt; GUI/CLI &lt;/th&gt;
    &lt;th&gt; Sync/Backup &lt;/th&gt;
    &lt;th&gt; Directly Accessible from Mainland of China &lt;/th&gt;
    &lt;th&gt; Comments &lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.dropbox.com/"&gt; Dropbox &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free for 3 devices and 2G space  &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; GUI &lt;/td&gt;
    &lt;td&gt; Sync &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; 
    1. Best solution for small data backup 
    2. every thing is in the same folder, no way to sync a folder with higher priority over others
        while you can do this with TeamDrive or BTSync
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://pan.baidu.com/disk/home"&gt; Baidu Net Disk &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free for 2T space and limited download speed  &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; GUI &lt;/td&gt;
    &lt;td&gt; Sync &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    Best solution for large data backup
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://synqion.com/"&gt; Synqion (TeamDrive) &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free for 2G space &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; GUI &lt;/td&gt;
    &lt;td&gt; Sync &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    1. Best solution for small data backup 
    1. extremely secure, good for private, sensitive docs
    3. separated spaces which is much better than dropbox
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://syncthing.net/"&gt; Syncthing &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; Both &lt;/td&gt;
    &lt;td&gt; Sync &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    1. extremely secure, good for private, sensitive docs
    2. good performance on large files but poor performance on small files
    3. Best solution for private personal backup 
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.google.com/drive/"&gt; Google Drive &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free for 15G space &lt;/td&gt;
    &lt;td&gt; Windows, macOS &lt;/td&gt;
    &lt;td&gt; GUI &lt;/td&gt;
    &lt;td&gt; Sync &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; 
    1. good for backing up Google products
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.microsoft.com/en-us/microsoft-365/onedrive/online-cloud-storage"&gt; OneDrive &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free for 15G space &lt;/td&gt;
    &lt;td&gt; Windows, macOS &lt;/td&gt;
    &lt;td&gt; GUI &lt;/td&gt;
    &lt;td&gt; Sync &lt;/td&gt;
    &lt;td&gt; No &lt;/td&gt;
    &lt;td&gt; 
    1. good for backing up MS products
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a&gt; NAS / NFS &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; Both &lt;/td&gt;
    &lt;td&gt; network file system &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    1. easy to use
    2. provided to employees by many companies
    3. relatively low performance
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://mutagen.io/"&gt; Mutagen &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Opensource &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; CLI &lt;/td&gt;
    &lt;td&gt; sync &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    1. fast file synchronization;
    2. network forwarding 
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://github.com/bcpierce00/unison"&gt; Unison &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Opensource &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; CLI &lt;/td&gt;
    &lt;td&gt; 2-way sync &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    2-way sync, fault tolerance
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://github.com/deajan/osync"&gt; osync &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Opensource &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; CLI &lt;/td&gt;
    &lt;td&gt; 2-way sync &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    2-way sync, rsync-based, fault tolerance
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://github.com/rsnapshot/rsnapshot"&gt; Rsnapshot &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; CLI &lt;/td&gt;
    &lt;td&gt; Backup &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    1. easy to use
    2. quick access
    3. copy on change which takes more disk space than incremental backup tools but it is much simpler to use and is very robust
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="http://www.nongnu.org/duplicity/"&gt; duplicity &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; CLI &lt;/td&gt;
    &lt;td&gt; Backup &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    1. incremental backup
    2. support encryption
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://github.com/backuppc/backuppc"&gt; backupPC &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; free &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; ? &lt;/td&gt;
    &lt;td&gt; Backup &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    high performance, enterprise-grade system
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt; 
    &lt;a href="https://www.bacula.org/"&gt; Bacula &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt; Opensource &lt;/td&gt;
    &lt;td&gt; Windows, macOS, Linux &lt;/td&gt;
    &lt;td&gt; ? &lt;/td&gt;
    &lt;td&gt; Backup &lt;/td&gt;
    &lt;td&gt; Yes &lt;/td&gt;
    &lt;td&gt; 
    enterprise-level computer backup system for heterogeneous networks 
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://xmodulo.com/synchronize-files-between-two-servers.html"&gt;How to synchronize files between two servers bidirectionally&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.csync.org/"&gt;csync&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="software"></category><category term="synchronization"></category><category term="backup"></category><category term="Baidu Yun"></category><category term="Dropbox"></category><category term="TeamDrive"></category><category term="Syncthing"></category></entry><entry><title>Missing Grub Menu of Windows Operating System</title><link href="https://www.legendu.net/en/blog/missing-grub-windows/" rel="alternate"></link><published>2012-05-03T19:10:47-07:00</published><updated>2021-09-16T09:29:19-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-03:/en/blog/missing-grub-windows/</id><summary type="html">&lt;p&gt;I came across this problem after I installed both Debian and Windows 7 system on my laptop.
After searching online, I found a solution to this problem. 
1. Open /etc/default/grub as root user and make sure the following line is somewhere in the file and uncommented:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    GRUB_DISABLE_OS_PROBER=false …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I came across this problem after I installed both Debian and Windows 7 system on my laptop.
After searching online, I found a solution to this problem. 
1. Open /etc/default/grub as root user and make sure the following line is somewhere in the file and uncommented:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    GRUB_DISABLE_OS_PROBER=false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Run command &lt;code&gt;update-grub2&lt;/code&gt; and then reboot your computer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This solution is not just for Windows and Linux dual boot. 
It is also for dual/multiple Linux operating systems boot. &lt;/p&gt;</content><category term="OS"></category><category term="Windows"></category><category term="Linux"></category><category term="OS"></category><category term="Debian"></category></entry><entry><title>Windows Operating System</title><link href="https://www.legendu.net/en/blog/tips-windows/" rel="alternate"></link><published>2012-09-30T19:30:05-07:00</published><updated>2021-09-10T10:13:26-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-09-30:/en/blog/tips-windows/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/windows/windows.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can download a Windows 10 Virtual Machine at 
    &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/"&gt;Get a Windows 10 development environment&lt;/a&gt; 
    !&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/winget-cli"&gt;winget&lt;/a&gt;
    is the official Windows Package Manager CLI
    and
    &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; 
    is a cool community-driven software management tool for Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a file is being synchronized by Dropbox,
    it might be unaccessible temporarily …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/windows/windows.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="tips-and-traps"&gt;Tips and Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can download a Windows 10 Virtual Machine at 
    &lt;a href="https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/"&gt;Get a Windows 10 development environment&lt;/a&gt; 
    !&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/winget-cli"&gt;winget&lt;/a&gt;
    is the official Windows Package Manager CLI
    and
    &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; 
    is a cool community-driven software management tool for Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a file is being synchronized by Dropbox,
    it might be unaccessible temporarily. 
    If this happens, 
    you can simplify retry accessing it or you can quit Dropbox and try again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Though you can also use &lt;code&gt;/&lt;/code&gt; as the delimiter for paths in Windows system sometimes, 
    you can only use &lt;code&gt;\&lt;/code&gt; as the delimiter for paths when you use DOS command, 
    because &lt;code&gt;/&lt;/code&gt; has been already used for other meanings in DOS command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;?&lt;/code&gt; stand for a single character in DOS command, 
    and &lt;code&gt;??&lt;/code&gt; stand for one or two characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A good way to manage Windows udpate is to disable Windows update for 7 days,
    update Windows and then disable Windows update for another 7 days,
    and repeat this cycle.
    This way you can keep your Windows up-to-date 
    while avoding being interrupted by Windows Auto Update too much.
    It is critical to disable Windows Auto Update/Restart (best for 7 days)
    before you run a long-running task on Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="add-a-right-click-menu"&gt;Add a Right-click Menu&lt;/h2&gt;
&lt;p&gt;To add an entry into the right-click menu in Windows, 
edit the registry following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the key &lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt; in the registry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key with any name (e.g., rstudio) under &lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set a value (e.g., Rstudio) for the newly created key (rstudio)
    in the right-side pane of the registry.
    This value (Rstudio) shows up in the right-click menu whenever you right click.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key named &lt;code&gt;command&lt;/code&gt; under the newly created key (rstudio).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the value of the newly created key &lt;code&gt;command&lt;/code&gt; 
    to be the full path of the application
    (e.g., &lt;code&gt;C:\Program Files\RStudio\bin\rstudio.exe&lt;/code&gt;)
    that you want to launch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="tips"></category><category term="anti-virus"></category><category term="Windows"></category><category term="Dropbox"></category><category term="OS"></category></entry><entry><title>Map Keys in macOS</title><link href="https://www.legendu.net/en/blog/map-keys-in-macos/" rel="alternate"></link><published>2016-06-26T07:30:03-07:00</published><updated>2021-08-15T13:03:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-26:/en/blog/map-keys-in-macos/</id><summary type="html">&lt;p&gt;Update: As of MacOS Sierra 10.12.1,
the remapping of &lt;code&gt;Caps Lock&lt;/code&gt; to &lt;code&gt;Escape&lt;/code&gt; can be done natively in the Keyboard System Preferences pane.
Follow the steps below to remap Caps Lock to Escape (without relying on 3rd party software).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open System Preferences and click on &lt;code&gt;Keyboard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Update: As of MacOS Sierra 10.12.1,
the remapping of &lt;code&gt;Caps Lock&lt;/code&gt; to &lt;code&gt;Escape&lt;/code&gt; can be done natively in the Keyboard System Preferences pane.
Follow the steps below to remap Caps Lock to Escape (without relying on 3rd party software).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open System Preferences and click on &lt;code&gt;Keyboard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Modifier Keys...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For &lt;code&gt;Caps Lock Key&lt;/code&gt;, choose &lt;code&gt;Escape&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="the-old-way-of-using-seil"&gt;The Old Way of Using Seil&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pqrs.org/osx/karabiner/seil.html.en"&gt;Seil&lt;/a&gt;
(previouly known as PCKeyboardHack) is great tool for mapping keys on Mac.
Let me illustrate how to use &lt;code&gt;Seil&lt;/code&gt;.
As a heavy Vim user,
I find it is necessary to swap the &lt;code&gt;Caps Lock&lt;/code&gt; key with the &lt;code&gt;Escape&lt;/code&gt; key.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Change the behavior of Map Caps Lock Key to No Action on Mac.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open &lt;code&gt;System Preferences&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Keyboard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Modifier Keys...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;Caps Lock Key&lt;/code&gt; to &lt;code&gt;No Action&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map the behavior of Caps Lock key to the Escape key using &lt;code&gt;Seil&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &lt;code&gt;Change the caps lock key&lt;/code&gt; in &lt;code&gt;Seil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;Change the caps lock key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fill 53 (keycode of Escape) in the keycode text box&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map the behavior of the Escape key to the Caps key using &lt;code&gt;Seil&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &lt;code&gt;Other keys&lt;/code&gt; in &lt;code&gt;Seil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;Change Escape&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;fill 57 (keycode of the Caps Lock key) in the keycode text box.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/map-keys-in-linux/"&gt;Map Keys in Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/map-keys-in-windows"&gt;Map Keys in Windows&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="Mac"></category><category term="Apple"></category><category term="macOS"></category><category term="mapping"></category><category term="keys"></category><category term="Seil"></category></entry><entry><title>Map Keys in Windows</title><link href="https://www.legendu.net/en/blog/map-keys-in-windows/" rel="alternate"></link><published>2015-09-01T22:17:13-07:00</published><updated>2021-08-15T13:03:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-09-01:/en/blog/map-keys-in-windows/</id><summary type="html">&lt;p&gt;**
Things on this page are
fragmentary and immature notes/thoughts of the author.
Please read with your own judgement!
**&lt;/p&gt;
&lt;p&gt;If you are a heavy Vim user and you have work on Windows, 
it is suggested that you Swap the Caps Lock key with the Escape key.
The swaped key mapping …&lt;/p&gt;</summary><content type="html">&lt;p&gt;**
Things on this page are
fragmentary and immature notes/thoughts of the author.
Please read with your own judgement!
**&lt;/p&gt;
&lt;p&gt;If you are a heavy Vim user and you have work on Windows, 
it is suggested that you Swap the Caps Lock key with the Escape key.
The swaped key mapping will even pass to virtual machines,
so that if you use Linux VMs you don't have swap the two keys in the VMs again.&lt;/p&gt;
&lt;h2 id="sharpkeys"&gt;&lt;a href="https://github.com/randyrants/sharpkeys"&gt;SharpKeys&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;SharpKeys modify the registry to map keys. 
SharpKeys is great!!! modifying the registry by myself didn't make it work 
but Sharpkeys works perfectly and is stunningly easy&lt;/p&gt;
&lt;h2 id="editing-registry-manually"&gt;Editing Registry Manually&lt;/h2&gt;
&lt;p&gt;Sometimes it won't work even if you follow popular instructions found online.
Not recommended.&lt;/p&gt;
&lt;h2 id="autohotkey"&gt;&lt;a href="https://github.com/Lexikos/AutoHotkey_L"&gt;AutoHotkey&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Not recommended for this purpose.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/map-keys-in-linux/"&gt;Map Keys in Linux&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/map-keys-in-mac/"&gt;Map Keys in macOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="OS"></category><category term="Windows"></category><category term="keys"></category><category term="mapping"></category><category term="swap"></category><category term="Caps Lock"></category><category term="Escape"></category><category term="SharpKeys"></category></entry><entry><title>Resizing Hard Disk of Guest Machine in Virtualbox</title><link href="https://www.legendu.net/en/blog/resizing-hard-disk-of-guest-machine-in-virtualbox/" rel="alternate"></link><published>2013-07-20T10:57:11-07:00</published><updated>2021-07-26T18:18:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-07-20:/en/blog/resizing-hard-disk-of-guest-machine-in-virtualbox/</id><summary type="html">&lt;p&gt;Suppose you have virtual hard disk in VirtualBox called &lt;code&gt;xp.vdi&lt;/code&gt;, 
you can resize it (megabytes) using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;VBoxManage modifyhd xp.vdi --resize 40960
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The command currently doesn't support vmdk virtual disk. 
So if you have a virtual disk called &lt;code&gt;xp.vmdk&lt;/code&gt;,
you have to first convert it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Suppose you have virtual hard disk in VirtualBox called &lt;code&gt;xp.vdi&lt;/code&gt;, 
you can resize it (megabytes) using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;VBoxManage modifyhd xp.vdi --resize 40960
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The command currently doesn't support vmdk virtual disk. 
So if you have a virtual disk called &lt;code&gt;xp.vmdk&lt;/code&gt;,
you have to first convert it into a vdi disk using command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;VBoxManage clonehd --format VDI xp.vmdk xp.vdi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then resize the vdi file using previous command.
If you want a (resized) vmdk virtual disk rather than a vdi virtual disk,
you can convert the resized vdi virtual disk to vmdk format using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;VBoxManage clonehd --format vmdk xp.vdi xp.vmdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the above commands only resize the virtual disk,
it doesn't resizes partitions inside the virtual disk.
You must manually resize partiions. 
This is easy to do for Windows 7/8 guest machines. 
If have other type of guest machiens (e.g., XP),
you can use partition tools (e.g., GParted) to manually resize partitions.
Take GParted for example,
you can download it, 
mount it into a virtual CD/DVD, 
boot your guest machine into GParted,
and then use the graphical tool to resize partitions.
It's very intuitive once you get there.&lt;/p&gt;</content><category term="Software"></category><category term="partition"></category><category term="gparted"></category><category term="virtualbox"></category><category term="software"></category><category term="vmdk"></category><category term="resize"></category><category term="resizing"></category></entry><entry><title>TeXstudio, Bravo!</title><link href="https://www.legendu.net/en/blog/texstudio-bravo/" rel="alternate"></link><published>2012-06-06T14:47:52-07:00</published><updated>2021-04-06T14:47:52-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-06:/en/blog/texstudio-bravo/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/bravo/bravo.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I have heard about 
&lt;a href="https://github.com/texstudio-org/texstudio"&gt;TeXstudio&lt;/a&gt;
for a long time. 
I tried it today on a Debian virtual machine. 
It works like a charm. 
I like the preview function a lot. 
Using inline preview, you can see compiled result while you are typing. 
It works even with user-defined commands. 
This is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/bravo/bravo.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I have heard about 
&lt;a href="https://github.com/texstudio-org/texstudio"&gt;TeXstudio&lt;/a&gt;
for a long time. 
I tried it today on a Debian virtual machine. 
It works like a charm. 
I like the preview function a lot. 
Using inline preview, you can see compiled result while you are typing. 
It works even with user-defined commands. 
This is very helpful for people who has to use massive math expression in
LaTeX, which make TeXstudio comparable to the WYSIWYG LaTeX IDE "LyX". The
advatantage of TeXstudio over Lyx is obvious. You write pure LaTeX code. You
do not have to remember many shortcuts and commands specific to LyX. TeXstudio has
tons of other features such as auto-complete, highlighting, structure view, reversing
search and so on. It is also cross platform! TeXstudio has the potential to be
the terminator of debate on LaTeX IDEs. &lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/texstudio-org/texstudio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://www.texstudio.org/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/latex-ide"&gt;IDEs for LaTeX&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Software"></category><category term="LyX"></category><category term="Tex"></category><category term="LaTeX"></category><category term="IDE"></category><category term="software"></category><category term="WYSIWYG"></category><category term="TeXstudio"></category></entry><entry><title>Install Python Packages Using pip</title><link href="https://www.legendu.net/en/blog/install-python-packages/" rel="alternate"></link><published>2017-06-05T08:26:34-07:00</published><updated>2021-04-05T08:26:34-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-05:/en/blog/install-python-packages/</id><summary type="html">&lt;h2 id="pypi-statistics"&gt;PyPi Statistics&lt;/h2&gt;
&lt;p&gt;You can check download statistics of Python Packages on PYPI at https://pypistats.org/.
This is especially helpful if you want to choose from multiple packages.&lt;/p&gt;
&lt;h2 id="prefer-pip"&gt;Prefer &lt;a href="https://pip.pypa.io/en/stable/reference/"&gt;pip&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pip.pypa.io/en/stable/reference/"&gt;pip&lt;/a&gt;
is preferred over OS tools
(e.g., &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;wajig&lt;/code&gt;, &lt;code&gt;aptitude&lt;/code&gt;, etc.) for managing Python packages.
If you are …&lt;/p&gt;</summary><content type="html">&lt;h2 id="pypi-statistics"&gt;PyPi Statistics&lt;/h2&gt;
&lt;p&gt;You can check download statistics of Python Packages on PYPI at https://pypistats.org/.
This is especially helpful if you want to choose from multiple packages.&lt;/p&gt;
&lt;h2 id="prefer-pip"&gt;Prefer &lt;a href="https://pip.pypa.io/en/stable/reference/"&gt;pip&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pip.pypa.io/en/stable/reference/"&gt;pip&lt;/a&gt;
is preferred over OS tools
(e.g., &lt;code&gt;apt-get&lt;/code&gt;, &lt;code&gt;yum&lt;/code&gt;, &lt;code&gt;wajig&lt;/code&gt;, &lt;code&gt;aptitude&lt;/code&gt;, etc.) for managing Python packages.
If you are using Anaconda Python,
use &lt;code&gt;conda&lt;/code&gt; (instead of &lt;code&gt;pip&lt;/code&gt;) to manage Python packages
especially when you encounter dependency issues.&lt;/p&gt;
&lt;h2 id="install-pip"&gt;&lt;a href="https://pip.pypa.io/en/stable/installing/"&gt;Install pip&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="on-ubuntu"&gt;On Ubuntu&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python3-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="on-mac"&gt;On Mac&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; should have already been installed when you instal Python using Homebrew or Anaconda.&lt;/p&gt;
&lt;h2 id="bootstrapping-the-pip-installer"&gt;Bootstrapping the pip Installer&lt;/h2&gt;
&lt;p&gt;The package &lt;a href="https://docs.python.org/3.8/library/ensurepip.html"&gt;ensurepip&lt;/a&gt;
provides support for bootstrapping the pip installer into an existing Python installation or virtual environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;python3&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;ensurepip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="proper-way-of-using-pip"&gt;Proper Way of Using pip&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;pip can be upgrade using the following command. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However,
you should avoid doing this (as it might causes issues) 
unless you have to upgrade and you are an experienced user.
It is recommended that you upgrade pip via the system package management tools only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do NOT use &lt;code&gt;sudo pip install pkg1 pkg2&lt;/code&gt; install packages to system-wide locations. 
    Instead, use &lt;code&gt;pip install --user pkg1 pkg2&lt;/code&gt; to install packages to your local directory.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;https://github.com/pypa/pip/issues/5599&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/49940813/pip-no-module-named-internal&lt;/p&gt;
&lt;h2 id="install-a-specific-version-of-a-python-package"&gt;Install a Specific Version of a Python Package&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;List all available versions of a Python package. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pylibmc&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install a specific version of a Python package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;MySQL_python&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.2.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install pyarrow with a verison of at least 0.14.0.
    Notice that you must quote &lt;code&gt;pyarrow&amp;gt;=0.14.0&lt;/code&gt; using single/double quotes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pyarrow&amp;gt;=0.14.0&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install a Python package with a version in a range.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;jupyterlab&amp;gt;=1.2.7,&amp;lt;2.0.0&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can install the pre-release version of a package using the &lt;code&gt;--pre&lt;/code&gt; option.
    For example, 
    the current version of pybuilder (0.11.7) is not compatible with Python 3.7.
    If you are using Python 3.7 and still want to use the pybuilder package, 
    you can install the pre-release version (0.12) which is compatible with Python 3.7.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--pre&lt;span class="w"&gt; &lt;/span&gt;pybuilder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="install-python-packages-from-source"&gt;Install Python Packages from Source&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Python package from a &lt;code&gt;tar.gz&lt;/code&gt; file which contains the source code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;xinstall-0.23.0.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install from the current directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; 20.0+ supports instaling a peotry managed Python project from GitHub directly.
    For example,
    the comamnd below installs the Python package dsutil from the GitHub repository dclong/dsutil directly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git+ssh://git@github.com/dclong/dsutil&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="c1"&gt;# or&lt;/span&gt;
pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git+https://github.com/dclong/xinstall
&lt;span class="c1"&gt;# or install with optional components&lt;/span&gt;
pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--user&lt;span class="w"&gt; &lt;/span&gt;-U&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dsutil[all] @ git+https://github.com/dclong/dsutil@main&amp;quot;&lt;/span&gt;
pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dsutil[cv] @ file:///home/dclong/dsutil-0.54.1-py3-none-any.whl&amp;quot;&lt;/span&gt;
pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dsutil[cv] @ https://github.com/dclong/dsutil/releases/download/v0.54.1/dsutil-0.54.1-py3-none-any.whl&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you are behind a corporate proxy,
you might need 2FA to visit the enterprise GitHub of your company.
However, 
2FA is usually not required for Git comamnd line (since it would too much hassle).
The above way to install Python packages from GitHub repositories directly
can be a good way to avoid 2FA authentication if you are behind a corporate proxy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="install-python-packages-from-requirementstxt"&gt;Install Python Packages from Requirements.txt&lt;/h2&gt;
&lt;p&gt;You can install Python packages from a &lt;code&gt;requirements.txt&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that all formats accepted by &lt;code&gt;pip3 install&lt;/code&gt; is valid in &lt;code&gt;requirements.txt&lt;/code&gt;.
For example,
&lt;code&gt;git+https://github.com/dclong/dsutil@master&lt;/code&gt; is valid to use in &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="difference-between-ignore-installed-and-force-reinstall"&gt;Difference between --ignore-installed and --force-reinstall&lt;/h2&gt;
&lt;p&gt;Sometimes a package is installed by distutils
which cannot be reinstalled using &lt;code&gt;pip&lt;/code&gt;, 
not even with the &lt;code&gt;--force-reinstall&lt;/code&gt; option.
In that case, 
you have to use the &lt;code&gt;--ignore-installed&lt;/code&gt; option.
For more discussions,
please refer to
&lt;a href="https://stackoverflow.com/questions/51913361/difference-between-pip-install-options-ignore-installed-and-force-reinstall"&gt;Difference Between Pip Install Options Ignore Installed and Force Reinstall&lt;/a&gt;
and
&lt;a href="https://github.com/blockstack/blockstack-core/issues/504"&gt;blockstack-core::Issues 504&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="install-python-packages-without-installing-dependencies"&gt;Install Python Packages Without Installing Dependencies&lt;/h2&gt;
&lt;p&gt;You can install a Python package without installing its dependencies
using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--no-deps&lt;span class="w"&gt; &lt;/span&gt;some_package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="upgrade-python-packages"&gt;Upgrade Python Packages&lt;/h2&gt;
&lt;p&gt;You can upgrade an already installed Python package to the latest version
using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="list-all-installed-python-packages"&gt;List All Installed Python Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;List all installed modules.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List outdated modules only.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;--outdated
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also use &lt;code&gt;help('modules')&lt;/code&gt; to show all installed modules in Python.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="use-pip-with-proxy"&gt;Use pip with Proxy&lt;/h2&gt;
&lt;p&gt;You can export environment variables &lt;code&gt;http_proxy&lt;/code&gt; and &lt;code&gt;https_proxy&lt;/code&gt;
or you can use &lt;code&gt;pip&lt;/code&gt; with the &lt;code&gt;--proxy&lt;/code&gt; option directly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;--proxy&lt;span class="w"&gt; &lt;/span&gt;http://proxy__server_ip:port&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;some_pkg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When using the &lt;code&gt;--proxy&lt;/code&gt; with &lt;code&gt;pip&lt;/code&gt;/&lt;code&gt;pip3&lt;/code&gt;, 
you can omit &lt;code&gt;http://&lt;/code&gt; and the port if the port is 80.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;--proxy&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;.135.227.47&lt;span class="w"&gt; &lt;/span&gt;search&lt;span class="w"&gt; &lt;/span&gt;notifiers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that sometimes &lt;code&gt;pip&lt;/code&gt; does not respect the environment variables.
In that case, 
you have to use the option &lt;code&gt;--proxy&lt;/code&gt; to pass proxy to &lt;code&gt;pip&lt;/code&gt;.
And even with the option &lt;code&gt;--proxy&lt;/code&gt;,
pip might not work well if you install from a version control system. 
Just be ware of that.
&lt;a href="http://www.legendu.net/misc/blog/proxychains-tips/"&gt;ProxyChains&lt;/a&gt;
is likely a solution when that issue happens.&lt;/p&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; supports downloading Python packages without installing them.
    At the same time,
    you can disable &lt;code&gt;pip&lt;/code&gt; caching using the option &lt;code&gt;--no-cache-dir&lt;/code&gt;.
    For more discussions,
    please refer to
    &lt;a href="https://pip.pypa.io/en/latest/reference/pip_install/#caching"&gt;Caching&lt;/a&gt;
    .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;export LC_ALL=C&lt;/code&gt; resolves an issues (cannot remember which issue exactly) of pip3.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="installation-location"&gt;Installation Location&lt;/h2&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/the-installation-location-of-python-packages-using-pip/"&gt;The Installation Location of Python Packages Using Pip&lt;/a&gt;
for more discussions.&lt;/p&gt;
&lt;h2 id="check-for-existence-of-a-python-package"&gt;Check for Existence of a Python Package&lt;/h2&gt;
&lt;p&gt;https://stackoverflow.com/questions/14050281/how-to-check-if-a-python-module-exists-without-importing-it&lt;/p&gt;
&lt;p&gt;The most robust way turns out to be &lt;code&gt;pip3 list&lt;/code&gt;,
because some packages are namespace sub packagess
which are not exposed (visible to importlib) by default.
However,
all installed packages (via pip) are visible to pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;pelican-render-math
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;https://stackoverflow.com/questions/38613316/how-to-upgrade-pip3&lt;/p&gt;
&lt;p&gt;https://adamj.eu/tech/2019/03/11/pip-install-from-a-git-repository/&lt;/p&gt;
&lt;p&gt;http://stackoverflow.com/questions/36394101/pip-install-locale-error-unsupported-locale-setting&lt;/p&gt;
&lt;p&gt;http://unix.stackexchange.com/questions/87745/what-does-lc-all-c-do&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/4888027/python-and-pip-list-all-versions-of-a-package-thats-available&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/5226311/installing-specific-package-versions-with-pip&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/14149422/using-pip-behind-a-proxy&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/9510474/removing-pips-cache&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/36898474/how-to-install-a-module-for-all-users-with-pip-on-linux&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/8795617/how-to-pip-install-a-package-with-min-and-max-version-range"&gt;How to pip install a package with min and max version range?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/16584552/how-to-state-in-requirements-txt-a-direct-github-source"&gt;How to state in requirements.txt a direct github source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adamj.eu/tech/2019/03/11/pip-install-from-a-git-repository/"&gt;'pip install' From a Git Repository&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://github.com/pypa/pip/issues/4685&lt;/p&gt;
&lt;p&gt;https://github.com/pypa/pip/pull/6391&lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="package"></category><category term="module"></category><category term="install"></category><category term="pip"></category><category term="conda"></category></entry><entry><title>Ways to Download Files Using Selenium Webdrive</title><link href="https://www.legendu.net/en/blog/ways-to-download-files-using-selenium-webdrive/" rel="alternate"></link><published>2013-08-16T14:25:17-07:00</published><updated>2021-02-16T14:25:17-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-08-16:/en/blog/ways-to-download-files-using-selenium-webdrive/</id><summary type="html">&lt;p&gt;Selenium WebDrive cannot have no control of system Dialog, 
so you have to avoid the Dialog when downloading files using WebDrive.&lt;/p&gt;
&lt;p&gt;The first way is to enable automatical download in the browser
that you use with Seleniu WebDrive. 
So when click a file link, 
the file is automatically downloaded to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Selenium WebDrive cannot have no control of system Dialog, 
so you have to avoid the Dialog when downloading files using WebDrive.&lt;/p&gt;
&lt;p&gt;The first way is to enable automatical download in the browser
that you use with Seleniu WebDrive. 
So when click a file link, 
the file is automatically downloaded to the directory that you set.
The second (and better way) is to export the cookie of the browser,
extract the download link and then use the command &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt; to download it. 
Surely you have to use the cookie with &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt; if authentication is required on the web.&lt;/p&gt;</content><category term="Software"></category><category term="Web"></category><category term="WebDrive"></category><category term="automation"></category><category term="Selenium"></category><category term="software"></category></entry><entry><title>Collections and Iterators in C++</title><link href="https://www.legendu.net/en/blog/collections-and-iterators-in-cpp/" rel="alternate"></link><published>2012-10-12T10:45:08-07:00</published><updated>2021-01-12T10:45:08-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-12:/en/blog/collections-and-iterators-in-cpp/</id><summary type="html">&lt;h2 id="collections"&gt;Collections&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prefer &lt;code&gt;std::deque&lt;/code&gt; to &lt;code&gt;std::vector&lt;/code&gt; when the size of the collection is unknow. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Suppose set &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are two set with the same type
    and set &lt;code&gt;C&lt;/code&gt; is another set with the same value type but a different comparison function,
    then it is still valid to insert …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="collections"&gt;Collections&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prefer &lt;code&gt;std::deque&lt;/code&gt; to &lt;code&gt;std::vector&lt;/code&gt; when the size of the collection is unknow. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Suppose set &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are two set with the same type
    and set &lt;code&gt;C&lt;/code&gt; is another set with the same value type but a different comparison function,
    then it is still valid to insert results of set operations 
    (union, difference, intersection, symmetric difference and so on)
    on A and B into set &lt;code&gt;C&lt;/code&gt;.
    It is just that values in C are sorted according to 
    the comparison function of &lt;code&gt;C&lt;/code&gt; not comparison function of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is known to all that a set is sorted (according to its comparison function). 
    You cannot sort the set in place using &lt;code&gt;std::sort&lt;/code&gt; with another comparison function.
    To sort elements in the set with another comparison function, 
    you have to create a new collection (e.g. a vector), copy the elements over and sort them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;std::set::count&lt;/code&gt; to check whether a set contains a value or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removing an element from a set/list/map only 
    affects reference to the remove element not references to other elements.
    However, 
    removing an element from a vector affects references to elements after the removed elements. 
    A good way to works with vector is to operate on it backwards. 
    That is iterating a vector backwards, 
    removing elements from a vector backwards, etc. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;std::map&lt;/code&gt; is similar to &lt;code&gt;std::set&lt;/code&gt; from many aspect. 
    For example, 
    &lt;code&gt;std::map&lt;/code&gt; contains values with unique and sorted keys while &lt;code&gt;std::set&lt;/code&gt; contains unique and sorted keys.;
    both &lt;code&gt;std::map&lt;/code&gt; and &lt;code&gt;std::set&lt;/code&gt; have a &lt;code&gt;count&lt;/code&gt; method which helps to check whether a &lt;code&gt;map/set&lt;/code&gt; contains a key or not;
    both &lt;code&gt;std::map&lt;/code&gt; and &lt;code&gt;std::set&lt;/code&gt; have a &lt;code&gt;find&lt;/code&gt; method which helps to find the position of a key in a &lt;code&gt;map/set&lt;/code&gt;.
    Actually, 
    a &lt;code&gt;std::set&lt;/code&gt; can be considered as a special case of &lt;code&gt;std::map&lt;/code&gt; where the value is of no interest. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;std::map::at&lt;/code&gt; method is preferred over the &lt;code&gt;std::map::operator[]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Associative collections such as &lt;code&gt;std::map&lt;/code&gt; and &lt;code&gt;std::set&lt;/code&gt; have methods related binary search 
    (e.g., &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt;) 
    while sequence collections such as &lt;code&gt;std::vector&lt;/code&gt; and &lt;code&gt;std::list&lt;/code&gt; do not have these methods. 
    If a sequence collection is sorted (e.g., use &lt;code&gt;std::sort&lt;/code&gt;), 
    you can apply functions &lt;code&gt;std::count&lt;/code&gt; and &lt;code&gt;std::find&lt;/code&gt; on it. 
    Sequence collections have methods which can access and modify elements at the front and back of the collection 
    (e.g., &lt;code&gt;std::front&lt;/code&gt;, &lt;code&gt;std::pop_front&lt;/code&gt;, &lt;code&gt;std::back&lt;/code&gt;, &lt;code&gt;std::pop_back&lt;/code&gt;) 
    while associative collections do not have such methods. 
    To access the first and last element of an associative collection, 
    you have to use iterators. 
    For example, 
    to get the last element of a set &lt;code&gt;x&lt;/code&gt;, 
    you can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbegin&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="iterator"&gt;Iterator&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The difference between points/iterator is of type std::ptrdiff_t,
    which is essentially a "signed" integer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The result of &lt;code&gt;std::reverse_iterator::base&lt;/code&gt; decreased 
    by 1 is the corresponding (non-reversed) iterator. 
    For example, 
    if you want to erase the last element from a set &lt;code&gt;s&lt;/code&gt;, 
    you can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbegin&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="C++"></category><category term="cpp"></category><category term="programming"></category><category term="list"></category><category term="set"></category><category term="map"></category><category term="iterator"></category><category term="collection"></category><category term="C/C++"></category><category term="vector"></category></entry><entry><title>Special Characters to Avoid in Strings</title><link href="https://www.legendu.net/en/blog/special-characters-to-avoid/" rel="alternate"></link><published>2017-07-03T21:56:32-07:00</published><updated>2020-12-03T21:56:32-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-07-03:/en/blog/special-characters-to-avoid/</id><summary type="html">&lt;p&gt;This articles talks about special characters to avoid in various places. 
You might not encounter issues most of the time when violating rules stated below,
however, 
you never know when things will break.
It is more for a good-practice suggestion.&lt;/p&gt;
&lt;h2 id="string-for-shell"&gt;String for Shell&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;When you pass parameters from one program …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;This articles talks about special characters to avoid in various places. 
You might not encounter issues most of the time when violating rules stated below,
however, 
you never know when things will break.
It is more for a good-practice suggestion.&lt;/p&gt;
&lt;h2 id="string-for-shell"&gt;String for Shell&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;When you pass parameters from one program to another one,
    do not make assumptions on how shell is handled.
    For this reasons,
    you might want to avoid &lt;code&gt;`something&lt;/code&gt; and &lt;code&gt;$(something)&lt;/code&gt; in parameters 
    passed to another program which might be part of a shell command.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="file-names"&gt;File Names&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Avoid the following special characters in file names.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;spaces (&lt;code&gt;&lt;/code&gt;) &lt;br&gt;
    Spaces in paths might cause issues in Shell
    as paths have to be quoted in double/single strings.
    However,
    some Shell commands/applications might not handle this well.&lt;/li&gt;
&lt;li&gt;dollar signs (&lt;code&gt;$&lt;/code&gt;)&lt;br&gt;
    The dollar sign (&lt;code&gt;$&lt;/code&gt;) has special meanings in various places (e.g., in Shell).&lt;/li&gt;
&lt;li&gt;double quotes (&lt;code&gt;"&lt;/code&gt;)&lt;br&gt;
    A double quotes sign might need escape.&lt;/li&gt;
&lt;li&gt;single quotes (&lt;code&gt;'&lt;/code&gt;)&lt;br&gt;
    A single quotes sign might need escape.&lt;/li&gt;
&lt;li&gt;tilde (&lt;code&gt;~&lt;/code&gt;)&lt;br&gt;
    The tilde sign (&lt;code&gt;~&lt;/code&gt;) has special meanings (e.g., the name of some buffer files starts with tilde) in various places.&lt;/li&gt;
&lt;li&gt;dash/minus (&lt;code&gt;-&lt;/code&gt;) &lt;br&gt;
    Dash is OK but underscore (&lt;code&gt;_&lt;/code&gt;) as an alternative is more readable.&lt;/li&gt;
&lt;li&gt;backtick (&lt;code&gt;`&lt;/code&gt;) 
    Backticks have special meanings in various places.&lt;/li&gt;
&lt;li&gt;shell command (&lt;code&gt;$()&lt;/code&gt;) &lt;br&gt;
    Self explained.&lt;/li&gt;
&lt;li&gt;semicolon (&lt;code&gt;;&lt;/code&gt;) 
    Semicolon indicating the end of a shell command. 
    It might cause issues when used carelessly in shell commands.
    This also applies when your application take a string of delimited paths,
    in which case you want to avoid using semicolon (&lt;code&gt;;&lt;/code&gt;) as the delimiter.
    Comma (&lt;code&gt;,&lt;/code&gt;) is a better alternative in this case.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you programmally get the path of a file, 
    it is best to convert it to its absolute representation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="password"&gt;Password&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Avoid the following special characters in passwords.&lt;ul&gt;
&lt;li&gt;space (&lt;code&gt;&lt;/code&gt;)&lt;br&gt;
    Some applications does not allow spaces in passwords.&lt;/li&gt;
&lt;li&gt;dollar signs (&lt;code&gt;$&lt;/code&gt;) &lt;br&gt;
    Dollar signs (&lt;code&gt;$&lt;/code&gt;) have special meanings in various places.&lt;/li&gt;
&lt;li&gt;double quotes (&lt;code&gt;"&lt;/code&gt;) 
    A double quote sign (&lt;code&gt;"&lt;/code&gt;) might need to be escaped in code.&lt;/li&gt;
&lt;li&gt;single quotes (&lt;code&gt;'&lt;/code&gt;) &lt;br&gt;
    A single quote sign (&lt;code&gt;'&lt;/code&gt;) might need to be escaped in code.&lt;/li&gt;
&lt;li&gt;backtick (&lt;code&gt;`&lt;/code&gt;) 
    Backticks have special meanings in various places.&lt;/li&gt;
&lt;li&gt;shell command (&lt;code&gt;$()&lt;/code&gt;)&lt;br&gt;
    Self explained.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="special characters"></category><category term="avoid"></category><category term="password"></category><category term="file name"></category><category term="Shell"></category><category term="char"></category><category term="special"></category><category term="character"></category></entry><entry><title>Union RDDs in Spark</title><link href="https://www.legendu.net/en/blog/union-RDDs-in-spark/" rel="alternate"></link><published>2017-06-03T23:49:38-07:00</published><updated>2020-11-03T23:49:38-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-03:/en/blog/union-RDDs-in-spark/</id><summary type="html">&lt;p&gt;No deduplication is done (to be efficient) when unioning RDDs/DataFrames in Spark 2.1.0+.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Union 2 RDDs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df1&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;old&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;fashioned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;RDD&lt;/span&gt;
&lt;span class="nv"&gt;rdd1&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;rdd_2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Union multiple RDDs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;spark&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;[&lt;span class="nv"&gt;df1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;df2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;df3&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;spark&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;SparkSession&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;old&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;fashioned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;RDD&lt;/span&gt;
&lt;span class="nv"&gt;rdd …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;No deduplication is done (to be efficient) when unioning RDDs/DataFrames in Spark 2.1.0+.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Union 2 RDDs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df1&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;df2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;old&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;fashioned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;RDD&lt;/span&gt;
&lt;span class="nv"&gt;rdd1&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;rdd_2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Union multiple RDDs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;df&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;spark&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;[&lt;span class="nv"&gt;df1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;df2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;df3&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;spark&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;SparkSession&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;old&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;fashioned&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;RDD&lt;/span&gt;
&lt;span class="nv"&gt;rdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;sc&lt;/span&gt;.&lt;span class="nv"&gt;union&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;[&lt;span class="nv"&gt;rdd1&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;rdd2&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;rdd3&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;sc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;SparkContext&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/spark-dataframe-union"&gt;Union DataFrames in Spark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/spark-dataframe-union"&gt;Union DataFrames in Spark&lt;/a&gt;&lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Scala"></category><category term="Spark"></category><category term="RDD"></category><category term="union"></category></entry><entry><title>Java Interfaces for Python</title><link href="https://www.legendu.net/en/blog/java-interfaces-for-python/" rel="alternate"></link><published>2019-01-25T20:15:13-08:00</published><updated>2020-10-25T20:15:13-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-01-25:/en/blog/java-interfaces-for-python/</id><summary type="html">&lt;p&gt;JPype, py4j and PyJNIus are all good options for Java interface for Python.
Jpype is easy to use and widely adopted.
PyJNIus is an even easier solution compred to JPype.
py4j is more complicated to use compared to JPype and PyJNIus,
however,
it has a better performance, generally speaking.&lt;/p&gt;
&lt;h2 id="jpype"&gt;JPype …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;JPype, py4j and PyJNIus are all good options for Java interface for Python.
Jpype is easy to use and widely adopted.
PyJNIus is an even easier solution compred to JPype.
py4j is more complicated to use compared to JPype and PyJNIus,
however,
it has a better performance, generally speaking.&lt;/p&gt;
&lt;h2 id="jpype"&gt;JPype&lt;/h2&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/call-java-code-using-jpype-from-python/"&gt;Call Java Code Using Jpype from Python&lt;/a&gt;
for details.&lt;/p&gt;
&lt;h2 id="pyjnius"&gt;PyJNIus&lt;/h2&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/call-java-using-pyjnius-from-python/"&gt;Call Java Using PyJNIus from Python&lt;/a&gt;
for details.&lt;/p&gt;
&lt;h2 id="py4j"&gt;py4j&lt;/h2&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;https://web.archive.org/web/20170729052824/http://baojie.org/blog/2014/06/16/call-java-from-python/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/call-java-code-using-jpype-from-python/"&gt;Call Java Code Using Jpype from Python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/call-java-using-pyjnius-from-python/"&gt;Call Java Using PyJNIus from Python&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="Java"></category><category term="interface"></category><category term="PyJNIus"></category><category term="jpype"></category><category term="py4j"></category></entry><entry><title>Make Your Linux Server Securer</title><link href="https://www.legendu.net/en/blog/make-your-linux-server-securer/" rel="alternate"></link><published>2013-04-16T11:02:36-07:00</published><updated>2020-10-16T11:02:36-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-04-16:/en/blog/make-your-linux-server-securer/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Define host access rules in &lt;code&gt;/etc/hosts.allow&lt;/code&gt; and &lt;code&gt;/etc/hosts.deny&lt;/code&gt;. 
    Usually I only allow login to my private server from my home and work ip. 
    If I have to login into my private server from some other network, 
    I login to a computer at my workplace, 
    login into …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Define host access rules in &lt;code&gt;/etc/hosts.allow&lt;/code&gt; and &lt;code&gt;/etc/hosts.deny&lt;/code&gt;. 
    Usually I only allow login to my private server from my home and work ip. 
    If I have to login into my private server from some other network, 
    I login to a computer at my workplace, 
    login into my private server from the computer at my workplace,
    editing the access rules on my private server,
    and then login into my private server from the new network directly. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable root SSH login (edit the file &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;).
    With root SSH login disabled, 
    a hacker has to guess both your login name and password,
    which is much harder than guessing the password alone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a non-default port for the SSH server (edit the file &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;).
    With a non-default port set up,
    a hacker has to also guess the port number,
    which makes the brute-forth break-in even harder.
    You can use the command &lt;code&gt;sudo nmap -sS -O 127.0.0.1&lt;/code&gt; to scan open ports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the package &lt;code&gt;fail2ban&lt;/code&gt; to automatically ban ips which attemps to break into your server by brute-forth. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="security"></category><category term="Linux"></category><category term="server"></category></entry><entry><title>Make Your Life Easier with Portable Applications</title><link href="https://www.legendu.net/en/blog/portable-apps/" rel="alternate"></link><published>2012-12-23T00:04:26-08:00</published><updated>2020-05-23T00:04:26-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-23:/en/blog/portable-apps/</id><summary type="html">&lt;p&gt;Using portable applications is a good way to make your digital life easier. 
They do not eat up your disk quickly nor do they mess up the registry of your Windows OS.
You can always copy these applications from one computer to another and use it out of box.
Or …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using portable applications is a good way to make your digital life easier. 
They do not eat up your disk quickly nor do they mess up the registry of your Windows OS.
You can always copy these applications from one computer to another and use it out of box.
Or you can install portable applications on a flash drive 
and use it on any computer with a Windows OS.
&lt;a href="http://www.portableapps.com/"&gt;PortableApps&lt;/a&gt; offers all kinds of portable apps.
What is better is that it also offers a plotform 
which integrate many functionalities together 
such as installing portable apps (directly from the repository), 
updating portable apps, 
searching for installed apps, etc.
There is also a &lt;a href="http://www.portableappc.com/"&gt;Chinese website&lt;/a&gt; 
whcih offers portable apps with Chinese characteristics 
that are compatible with the PortableApps platform. &lt;/p&gt;
&lt;p&gt;There are some software that I use often 
but is not support offically by PortableApps yet.
For example, Cygwin and Python.
There is a good portable version of Cygwin named 
&lt;a href="https://github.com/CybeSystems/CygwinPortable"&gt;CygwinPortable&lt;/a&gt;
on GitHub.
It uses ConEmu for the console which supports multi-tabs 
and can also be used as Windows command prompt. 
CygwinPortable also allows you to create users and define the default user, 
which is very convenient.
Another advantage of CygwinPortable 
(over &lt;a href="http://mobaxterm.mobatek.net/"&gt;MobaXterm&lt;/a&gt; and other portable version of Cygwin)
is that it has built-in Python suppport,
which makes Vim and other software installed on it Python-supported.
Though CygwinPortable has built-in Python support, 
the Python coming with it has limitations due to library dependencies.
For example, 
some Python packages such as FuzzyWuzzy and NLTK fails to work in CygwinPortable.
&lt;a href="http://portablepython.com/"&gt;Anaconda Python&lt;/a&gt; is great portable distribution of Python.
It comes with many popular Python packages 
such as NumPy, SciPy, Matplotlib, PIL, PyQt, etc.
and also code editors such as PyCharm, PyScripter and IDLE.&lt;/p&gt;
&lt;h2 id="tips-on-portableapps"&gt;Tips on &lt;a href="https://portableapps.com/"&gt;PortableApps&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The PortableApps launcher might causes desktop icon not to show up. 
    Closing the PortableApps launcher solves the problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can actually run PortableApps programs directly (without using the PortableApps launcher). 
    If you'd like to do so, 
    you can make shortcuts of PortableApps programs on the desktop and/or in the start menu 
    to make things easier.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="application"></category><category term="Chinese"></category><category term="software"></category><category term="portable"></category><category term="apps"></category><category term="CygwinPortable"></category><category term="Portable Python"></category></entry><entry><title>Block JavaScript in Browsers Using NoScript</title><link href="https://www.legendu.net/en/blog/noscript-tips/" rel="alternate"></link><published>2015-06-22T14:08:28-07:00</published><updated>2020-05-22T14:08:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-06-22:/en/blog/noscript-tips/</id><content type="html">&lt;p&gt;**
Things on this page are
fragmentary and immature notes/thoughts of the author.
Please read with your own judgement!
**&lt;/p&gt;
&lt;p&gt;To enable NoScript synchronization via Firefox Sync go to about:config (type this in URL bar) 
and change noscript.sync.enabled to true.&lt;/p&gt;</content><category term="Software"></category><category term="software"></category><category term="tips"></category><category term="Firefox"></category><category term="synchronization"></category><category term="NoScript"></category></entry><entry><title>Useful Plugins for Eclipse</title><link href="https://www.legendu.net/en/blog/useful-plugins-for-eclipse/" rel="alternate"></link><published>2012-09-22T13:41:22-07:00</published><updated>2020-05-22T13:41:22-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-09-22:/en/blog/useful-plugins-for-eclipse/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="terminal-plug-in"&gt;Terminal Plug-in&lt;/h2&gt;
&lt;p&gt;"Terminal Plug-in" is a fully-working command-line terminal for Eclipse.&lt;/p&gt;
&lt;h2 id="easyshell"&gt;EasyShell&lt;/h2&gt;
&lt;p&gt;"EasyShell" allows to open a shell window or file manager from the popup menu 
in the navigation tree or editor view.&lt;/p&gt;
&lt;h2 id="vrapper"&gt;Vrapper&lt;/h2&gt;
&lt;p&gt;Vrapper provides Vim-like scheme for Eclispe.
You can edit code similar as what you do in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="terminal-plug-in"&gt;Terminal Plug-in&lt;/h2&gt;
&lt;p&gt;"Terminal Plug-in" is a fully-working command-line terminal for Eclipse.&lt;/p&gt;
&lt;h2 id="easyshell"&gt;EasyShell&lt;/h2&gt;
&lt;p&gt;"EasyShell" allows to open a shell window or file manager from the popup menu 
in the navigation tree or editor view.&lt;/p&gt;
&lt;h2 id="vrapper"&gt;Vrapper&lt;/h2&gt;
&lt;p&gt;Vrapper provides Vim-like scheme for Eclispe.
You can edit code similar as what you do in Vim 
plus that you can use mouse to copy and paste code. 
In my opinion, 
it is better than either Eclipse or Vim alone. 
The configuration file of Vrapper is &lt;code&gt;.vrapper&lt;/code&gt; or &lt;code&gt;_vrapperrc&lt;/code&gt; (on Windows).&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://eclim.org/"&gt;Eclim&lt;/a&gt; project provides a great alternative to the Vrapper plugin. 
Eclim is a seemless integration of Eclipse and the native Vim (rather than a Vim plugin). 
All plugins in Vim works well. &lt;/p&gt;
&lt;h2 id="codeinterview-plugin"&gt;CodeInterview Plugin&lt;/h2&gt;
&lt;p&gt;"CodeInterview Plugin" allows you to write code in Eclipse instead of on CodeInterview directly. 
This is helpful if you will be interviewed for coding skills on CodeInterview.&lt;/p&gt;</content><category term="Software"></category><category term="Vim"></category><category term="Eclipse"></category><category term="shell"></category><category term="C/C++"></category><category term="IDE"></category><category term="software"></category><category term="plugins"></category><category term="addons"></category></entry><entry><title>Install Docker</title><link href="https://www.legendu.net/en/blog/docker-installation/" rel="alternate"></link><published>2017-06-09T13:13:36-07:00</published><updated>2020-05-09T13:13:36-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-09:/en/blog/docker-installation/</id><summary type="html">&lt;h2 id="install-docker-on-debian-series-of-linux-distributions"&gt;Install Docker on Debian Series of Linux Distributions&lt;/h2&gt;
&lt;p&gt;You can install Docker on Debian series of Linux distributions
(Debian, Ubuntu, Linux Mint, etc.) 
using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;docker.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Configure your docker following instructions in the section 
&lt;a href="http://www.legendu.net/en/blog/docker-installation/#configure-docker"&gt;Configure Docker&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="install-the-latest-version-of-docker-on-debian-series-of-linux-distributions"&gt;Install the Latest Version of …&lt;/h2&gt;</summary><content type="html">&lt;h2 id="install-docker-on-debian-series-of-linux-distributions"&gt;Install Docker on Debian Series of Linux Distributions&lt;/h2&gt;
&lt;p&gt;You can install Docker on Debian series of Linux distributions
(Debian, Ubuntu, Linux Mint, etc.) 
using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;docker.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Configure your docker following instructions in the section 
&lt;a href="http://www.legendu.net/en/blog/docker-installation/#configure-docker"&gt;Configure Docker&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="install-the-latest-version-of-docker-on-debian-series-of-linux-distributions"&gt;Install the Latest Version of Docker on Debian Series of Linux Distributions&lt;/h2&gt;
&lt;p&gt;You can install the latest version of Docker CE 
on Debian Series of Linux distributions (Debian, Ubuntu, Linux Mint, etc.)
using the commands below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;add-apt-repository&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;lsb_release&lt;span class="w"&gt; &lt;/span&gt;-cs&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; stable&amp;quot;&lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;docker-ce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Configure your docker following instructions in the section 
&lt;a href="http://www.legendu.net/en/blog/docker-installation/#configure-docker"&gt;Configure Docker&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="install-docker-in-other-operating-systems"&gt;Install Docker in Other Operating Systems&lt;/h2&gt;
&lt;p&gt;Please refer to the offical Docker doc &lt;a href="https://docs.docker.com/install/"&gt;Install Docker&lt;/a&gt;
on instruction to install Docker in other operating systems.&lt;/p&gt;
&lt;p&gt;Configure your docker following instructions in the section 
&lt;a href="http://www.legendu.net/en/blog/docker-installation/#configure-docker"&gt;Configure Docker&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id="configure-docker"&gt;Configure Docker&lt;/h2&gt;
&lt;p&gt;By default,
the &lt;code&gt;docker&lt;/code&gt; command requires &lt;code&gt;sudo&lt;/code&gt; previlage to run
which is a little hassle since you have to type &lt;code&gt;sudo&lt;/code&gt; every time 
and type your password for &lt;code&gt;sudo&lt;/code&gt;.
It is suggested that you add yourself into the &lt;code&gt;docker&lt;/code&gt; group
so that you can run the &lt;code&gt;docker&lt;/code&gt; command without &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;gpasswd&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;docker
newgrp&lt;span class="w"&gt; &lt;/span&gt;docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The command &lt;code&gt;newgrp docker&lt;/code&gt; makes the group &lt;code&gt;docker&lt;/code&gt; take effect.
You can confirm by issuing the &lt;code&gt;id&lt;/code&gt; command.
If for whatever reason the group &lt;code&gt;docker&lt;/code&gt; does not take effect,
logout and then login again to make the group &lt;code&gt;docker&lt;/code&gt; in effect.&lt;/p&gt;</content><category term="Software"></category><category term="software"></category><category term="Docker"></category><category term="installation"></category><category term="Ubuntu"></category><category term="latest"></category><category term="docker-ce"></category><category term="install Docker"></category></entry><entry><title>Transfer Files over Network in Linux</title><link href="https://www.legendu.net/en/blog/transfer-files-over-network-in-linux/" rel="alternate"></link><published>2014-03-02T17:16:03-08:00</published><updated>2020-05-02T17:16:03-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-03-02:/en/blog/transfer-files-over-network-in-linux/</id><summary type="html">&lt;h2 id="comparison-of-network-drives-remote-file-system"&gt;Comparison of Network Drives (Remote File System)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;NFS is very fast but not secure and it is for Unix/Linux only. 
    It is a good choice for local network sharing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Samba is fast, secure and cross-platform. 
    it is good for general purpose sharing and popular in companies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSHFS is slow …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="comparison-of-network-drives-remote-file-system"&gt;Comparison of Network Drives (Remote File System)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;NFS is very fast but not secure and it is for Unix/Linux only. 
    It is a good choice for local network sharing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Samba is fast, secure and cross-platform. 
    it is good for general purpose sharing and popular in companies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSHFS is slow but very secure and it is for Unix/Linux only. 
    It is good for situations where security is critical but performance is not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To sum up,
&lt;strong&gt;Samba is the one you want to use generally speaking&lt;/strong&gt;.
However,
if you are on a local network and performance is crtical, 
go with NFS.&lt;/p&gt;
&lt;h2 id="comparison-of-file-copying-tools"&gt;Comparison of File-copying Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, 
    &lt;code&gt;rsync&lt;/code&gt; is the tool you want to use in most situations. 
    It is definitely preferred over &lt;code&gt;scp&lt;/code&gt; 
    unless in situations when &lt;code&gt;rsync&lt;/code&gt; is not available (e.g., on Andrioid).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are some other file-copying tools such as &lt;code&gt;mbuffer&lt;/code&gt; and &lt;code&gt;netcat&lt;/code&gt;/&lt;code&gt;nc&lt;/code&gt;
    to help you squeeze the most out of network speed.
    However,
    unless you want to transfer huge files over high speed LAN
    and security is not a concern,
    you still want to stick with &lt;code&gt;rsync&lt;/code&gt;.
    The example below is how you can copy files suing &lt;code&gt;mbuffer&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span class="w"&gt; &lt;/span&gt;zcf&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;bigfile.m4p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;mbuffer&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;1K&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;512&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;otherhost&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tar zxf -&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The example below uses &lt;code&gt;tar&lt;/code&gt; and &lt;code&gt;netcat&lt;/code&gt; to copy files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# run this command on the machine with the source files&lt;/span&gt;
tar&lt;span class="w"&gt; &lt;/span&gt;--numeric-owner&lt;span class="w"&gt; &lt;/span&gt;-cvf&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;./&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;netcat&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2020&lt;/span&gt;
&lt;span class="c1"&gt;# run this command on the machine to copy files to&lt;/span&gt;
netcat&lt;span class="w"&gt; &lt;/span&gt;source_machine_ip&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2020&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tar&lt;span class="w"&gt; &lt;/span&gt;-zxf&lt;span class="w"&gt; &lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://linuxaria.com/article/tar-rsync-netcat-scp"&gt;The best way to move data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.alanporter.com/2015-04-13/fast-copy/"&gt;tar + netcat = very fast copy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://linuxaria.com/article/tar-rsync-netcat-scp&lt;/p&gt;
&lt;p&gt;http://moo.nac.uci.edu/~hjm/HOWTO_move_data.html&lt;/p&gt;
&lt;p&gt;https://unix.stackexchange.com/questions/48399/fast-way-to-copy-a-large-file-on-a-lan&lt;/p&gt;</content><category term="Internet"></category><category term="internet"></category><category term="Linux"></category><category term="network"></category><category term="web"></category><category term="transfer"></category><category term="file system"></category><category term="nfs"></category><category term="SSH"></category></entry><entry><title>Concurrency and Parallel Computing in Python</title><link href="https://www.legendu.net/en/blog/python-concurrency-parallel-computing/" rel="alternate"></link><published>2016-11-16T12:09:38-08:00</published><updated>2020-04-16T12:09:38-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-11-16:/en/blog/python-concurrency-parallel-computing/</id><summary type="html">&lt;p&gt;The GIL is controversial because it prevents multithreaded CPython programs 
from taking full advantage of multiprocessor systems in certain situations. 
Note that potentially blocking or long-running operations, 
such as I/O, image processing, and NumPy number crunching, happen outside the GIL. 
Therefore it is only in multithreaded programs that spend …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The GIL is controversial because it prevents multithreaded CPython programs 
from taking full advantage of multiprocessor systems in certain situations. 
Note that potentially blocking or long-running operations, 
such as I/O, image processing, and NumPy number crunching, happen outside the GIL. 
Therefore it is only in multithreaded programs that spend a lot of time inside the GIL, 
interpreting CPython bytecode, that the GIL becomes a bottleneck.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Due to the GIL, 
    multithreaded CPython (which is the Python distribution that most people use) programs 
    cannot take full advantage of multiprocessor systems in some situations.
    Keep a few things in mind when you write multithreaded code in CPython.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the same Python interpreter process, 
    &lt;strong&gt;only 1 Python thread runs at a time&lt;/strong&gt; while others sleep or await (I/O, networking, etc.).&lt;/li&gt;
&lt;li&gt;Things happening outside the GIL (I/O, network, properly handled 3rd-party code such as C, Fotran, C++, Java, Rust, etc.),
    do not suffer performance downgrade from the GIL.&lt;/li&gt;
&lt;li&gt;Combining the above 2 facts, 
    multithreading in Python might or might not increase the speed of your program.
    If all your code runs in the CPython interpreter 
    (e.g., your code is pure Python and doesn't call 3rd-party code), 
    having multithreading only slows download your program.
    Multithreading helps if some long-running tasks (I/O, networking, 3rd-party code) happen outside the GIL.&lt;/li&gt;
&lt;li&gt;A GUI application needs multithreading to be more responsive.
    If you develop a GUI application in Python,
    it is best to move long-runing tasks to 3rd party code
    and calling it from a separate Python thread (rather than the GUI thread)
    so that it won't freeze your GUI.
    (As a matter of fact, 
    the strength of Python is to act a glue-language 
    which binds native code and provide easy to use APIs.)&lt;/li&gt;
&lt;li&gt;If multiple CPython threads share data and at least one of them writes the data,
    &lt;strong&gt;you still need to lock the data before writing/reading&lt;/strong&gt; 
    even if CPython has GIL.
    To avoid slowing down your program,
    &lt;strong&gt;limit locking to the minimum scope&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiprocessing has much higher overhead than multithreading.
    It is rather inconvenient to share data among different processes.
    It is suggested that you only use multiprocessing for CPU intensive tasks 
    where communication among tasks is minimum.
    Python has a module named &lt;code&gt;multiprocessing&lt;/code&gt;
    which makes it easy to do computing using multiple processes 
    and sharing data among process.
    Please refer to 
    &lt;a href="http://www.legendu.net/misc/blog/python-multiprocessing/"&gt;Hands on the Python module Multiprocessing&lt;/a&gt;
    for more details.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;os.cpu_count()&lt;/code&gt; in Python to get the number of CPU cores on the machine. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are invoking shell commands from Python,
    there is a simple way to parallel them 
    (or to put the shell jobs to background using shell terminology).
    The trick is to use the Python module &lt;code&gt;subprocess&lt;/code&gt; to call shell commands suffixed with &lt;code&gt;&amp;amp;&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sp&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterdir&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_dir&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zip -r &lt;/span&gt;&lt;span class="si"&gt;{path}&lt;/span&gt;&lt;span class="s2"&gt; {path.with_suffix(&amp;#39;.zip&amp;#39;)}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/python-multiprocessing/"&gt;Hands on the Python module Multiprocessing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.python.org/moin/GlobalInterpreterLock"&gt;Python Global Interpreter Lock&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zhuoqiang.me/python-thread-gil-and-ctypes.html"&gt;python 线程，GIL 和 ctypes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://docs.python.org/3/library/multiprocessing.html?highlight=process&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=7SSYhuk5hmc"&gt;A Jesse Jiryu Davis Grok the GIL Write Fast And Thread Safe Python PyCon 2017&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opensource.com/article/17/4/grok-gil"&gt;Grok the GIL: How to write fast and thread-safe Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://xph.us/2009/12/10/asynchronous-programming-in-python.html&lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="parallel computing"></category><category term="multithreading"></category><category term="multiprocess"></category><category term="HPC"></category><category term="high performance computing"></category></entry><entry><title>Jupyter Notebook Support in Bitbucket</title><link href="https://www.legendu.net/en/blog/jupyter-notebook-support-in-bitbucket/" rel="alternate"></link><published>2017-12-08T12:00:14-08:00</published><updated>2020-04-08T12:00:14-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-12-08:/en/blog/jupyter-notebook-support-in-bitbucket/</id><summary type="html">&lt;p&gt;GitHub has built-in support for Jupyter Notebooks. 
Bitbucket supports Jupyter Notebooks via a fileview addon. 
It works on both publick and private notebooks.
Follow the steps below to install the addon.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on your avatar in the lower left corner on your homepage of Bitbucket.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bitbucket Menu" src="https://user-images.githubusercontent.com/824507/78822713-64b42300-7990-11ea-9879-cd8cf97cdbbd.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the option &lt;code&gt;App marketplace …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;GitHub has built-in support for Jupyter Notebooks. 
Bitbucket supports Jupyter Notebooks via a fileview addon. 
It works on both publick and private notebooks.
Follow the steps below to install the addon.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on your avatar in the lower left corner on your homepage of Bitbucket.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bitbucket Menu" src="https://user-images.githubusercontent.com/824507/78822713-64b42300-7990-11ea-9879-cd8cf97cdbbd.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the option &lt;code&gt;App marketplace&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find the addon &lt;code&gt;Notebook Viewer&lt;/code&gt; in the listings. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the addon &lt;code&gt;Notebook Viewer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a notebook in one of your Bitbucket repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Default file viwer&lt;/code&gt; (to the left of the button Edit) and select &lt;code&gt;IPython Viwer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/site/master/issues/11318/enable-rich-rendering-of-jupyter-notebooks"&gt;https://bitbucket.org/site/master/issues/11318/enable-rich-rendering-of-jupyter-notebooks&lt;/a&gt;&lt;/p&gt;</content><category term="Software"></category><category term="programming"></category><category term="Bitbucket"></category><category term="Jupyter Notebook"></category><category term="JupyterLab"></category><category term="software"></category><category term="GitHub"></category></entry><entry><title>Boolean Values in C++</title><link href="https://www.legendu.net/en/blog/boolean-values-in-cpp/" rel="alternate"></link><published>2012-10-07T21:56:02-07:00</published><updated>2020-04-07T21:56:02-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-07:/en/blog/boolean-values-in-cpp/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boolean expressions are evaluated from left to right (the same in Java),
    so it is totally OK to write code like &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;x&lt;/code&gt; is a vector.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; and &lt;code&gt;||=&lt;/code&gt; operators in C++,
    instead you can use &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt;.
    Though &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt; are not specially for …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Boolean expressions are evaluated from left to right (the same in Java),
    so it is totally OK to write code like &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;x&lt;/code&gt; is a vector.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; and &lt;code&gt;||=&lt;/code&gt; operators in C++,
    instead you can use &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt;.
    Though &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt; are not specially for boolean values, 
    they work perfectly for boolean values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the numbers you work with support infinity or NaN, 
    boolean expressions become tricky. 
    For example, suppose &lt;code&gt;nan&lt;/code&gt; is a varialbe representing Nan,
    both &lt;code&gt;2 &amp;lt; nan&lt;/code&gt; and &lt;code&gt;2 &amp;gt;= nan&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;,
    which is not what we want. 
    A safer way is to first check whether numbers involved are NaNs. 
    Hopefully, ternary boolean type will be introduced into C++ in future. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="boolean"></category><category term="C++"></category><category term="programming"></category><category term="cpp"></category></entry><entry><title>Advanced Use of "head" and "tail"</title><link href="https://www.legendu.net/en/blog/advanced-use-head-tail/" rel="alternate"></link><published>2016-06-06T18:22:00-07:00</published><updated>2020-04-06T18:22:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-06:/en/blog/advanced-use-head-tail/</id><summary type="html">&lt;p&gt;It is suggested that you &lt;strong&gt;use Python instead of Shell&lt;/strong&gt; to manipulate text files!!&lt;/p&gt;
&lt;p&gt;Besides passing an unsigned integer as parameter to the option &lt;code&gt;-n&lt;/code&gt;, 
you can also pass a signed integer to it.
When a signed integer is passed to &lt;code&gt;-n&lt;/code&gt;, 
it means from/to (inclusive/exclusive similar to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is suggested that you &lt;strong&gt;use Python instead of Shell&lt;/strong&gt; to manipulate text files!!&lt;/p&gt;
&lt;p&gt;Besides passing an unsigned integer as parameter to the option &lt;code&gt;-n&lt;/code&gt;, 
you can also pass a signed integer to it.
When a signed integer is passed to &lt;code&gt;-n&lt;/code&gt;, 
it means from/to (inclusive/exclusive similar to most programming languages) the row with this index (1-based). 
More specifically, 
&lt;code&gt;head -n +/-k&lt;/code&gt; means take rows 1 (inclusive) to &lt;code&gt;+/-k&lt;/code&gt; (exclusive).
&lt;code&gt;tail -n +/-k&lt;/code&gt; means take rows &lt;code&gt;+/-k&lt;/code&gt; (inclusive) to the last row. 
Below are some examples to help you fruther understand how it works.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Print all but the last &lt;code&gt;5&lt;/code&gt; lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# -5 means without the last 5 lines  
head -n -5 file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print lines 6 and after (i.e., all but the first &lt;code&gt;5&lt;/code&gt; lines).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# +6 means starting from line 6  
tail -n +6 file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print lines 10 to 20.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;head -n 20 file_name | tail -n +10  
# or you can use (11 = 20 - 10 + 1)
tail -n +10 file_name | head -n 11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/print-rows-from-a-text-file/"&gt;Print Rows from a Text File&lt;/a&gt;
for better ways using &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="Linux"></category><category term="shell"></category><category term="command line"></category><category term="head"></category><category term="tail"></category><category term="sed"></category><category term="awk"></category><category term="rows"></category><category term="lines"></category><category term="text manipulation"></category></entry><entry><title>Configure Debian Apt Source List</title><link href="https://www.legendu.net/en/blog/configure-debian-sources/" rel="alternate"></link><published>2014-12-06T14:39:03-08:00</published><updated>2020-04-06T14:39:03-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-12-06:/en/blog/configure-debian-sources/</id><summary type="html">&lt;p&gt;&lt;a href="http://debgen.simplylinux.ch/"&gt;Debian Apt Sources List Generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Personally, I prefer stable with backports.
Testing is also good but still update might introduce critial bugs sometimes.
It is not easy to maitainly a stable and update to date balance.
You can certainly use multi-sources,
i.e., use stable, testing, sid and experimental at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://debgen.simplylinux.ch/"&gt;Debian Apt Sources List Generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Personally, I prefer stable with backports.
Testing is also good but still update might introduce critial bugs sometimes.
It is not easy to maitainly a stable and update to date balance.
You can certainly use multi-sources,
i.e., use stable, testing, sid and experimental at the same time.
multi-source is much harder to maintain especially when you want to support multi-archi
It is not recommended.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian&lt;span class="w"&gt; &lt;/span&gt;stable&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian&lt;span class="w"&gt; &lt;/span&gt;stable&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;wheezy-updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;wheezy-updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

deb&lt;span class="w"&gt; &lt;/span&gt;http://security.debian.org/&lt;span class="w"&gt; &lt;/span&gt;wheezy/updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://security.debian.org/&lt;span class="w"&gt; &lt;/span&gt;wheezy/updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# stable&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;stable&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;stable&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# stable Security&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://security.debian.org/&lt;span class="w"&gt; &lt;/span&gt;stable/updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://security.debian.org/&lt;span class="w"&gt; &lt;/span&gt;stable/updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# stable-updates, previously known as &amp;#39;volatile&amp;#39;&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;stable-updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;stable-updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# stable-backports&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;stable-backports&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;stable-backports&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# testing&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;testing&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;testing&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# testing Security&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://security.debian.org/&lt;span class="w"&gt; &lt;/span&gt;testing/updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://security.debian.org/&lt;span class="w"&gt; &lt;/span&gt;testing/updates&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# sid&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;sid&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;sid&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free

&lt;span class="c1"&gt;# experimental&lt;/span&gt;
deb&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;experimental&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
deb-src&lt;span class="w"&gt; &lt;/span&gt;http://ftp.us.debian.org/debian/&lt;span class="w"&gt; &lt;/span&gt;experimental&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;contrib&lt;span class="w"&gt; &lt;/span&gt;non-free
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="OS"></category><category term="operating system"></category><category term="OS"></category><category term="Linux"></category><category term="Debian"></category><category term="apt-get"></category><category term="apt"></category><category term="source list"></category></entry><entry><title>Configure SSH to Use a Proxy Server</title><link href="https://www.legendu.net/en/blog/configure-ssh-to-use-a-proxy-server/" rel="alternate"></link><published>2017-08-06T14:37:47-07:00</published><updated>2020-04-06T14:37:47-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-06:/en/blog/configure-ssh-to-use-a-proxy-server/</id><summary type="html">&lt;p&gt;Suppose you have a production server that you want to visit via SSH,
however,
it is not accessible directly.
Instead,
you have to visit it from a bastion/proxy server.
You can configure SSH to use the bastion/proxy server when visiting the production server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host &amp;lt;production_server&amp;gt;
ProxyCommand ssh &amp;lt;proxy_server …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Suppose you have a production server that you want to visit via SSH,
however,
it is not accessible directly.
Instead,
you have to visit it from a bastion/proxy server.
You can configure SSH to use the bastion/proxy server when visiting the production server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host &amp;lt;production_server&amp;gt;
ProxyCommand ssh &amp;lt;proxy_server&amp;gt; -W %h:%p

Host *

SendEnv LANG LC_*
HashKnownHosts yes
GSSAPIAuthentication yes
GSSAPIDelegateCredentials no
# make connection alive
ServerAliveInterval 90
ServerAliveCountMax 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Wildcards and NOT operators are supported.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;
&lt;span class="nx"&gt;ProxyCommand&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ssh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;proxy_server_address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;W&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;
&lt;span class="nx"&gt;Host&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that you can also specify the proxy to use directly
via the option &lt;code&gt;-o ProxyCommand="ssh proxy_server -W %h:%p"&lt;/code&gt;.
For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh -o ProxyCommand=&amp;quot;ssh proxy_server -W %h:%p&amp;quot; target_server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="OS"></category><category term="Linux"></category><category term="SSH"></category><category term="proxy server"></category></entry><entry><title>Print Rows from a Text File</title><link href="https://www.legendu.net/en/blog/print-rows-from-a-text-file/" rel="alternate"></link><published>2017-02-06T14:36:40-08:00</published><updated>2020-04-06T14:36:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-02-06:/en/blog/print-rows-from-a-text-file/</id><summary type="html">&lt;p&gt;It is suggested that you &lt;strong&gt;use Python instead of Shell&lt;/strong&gt; to manipulate text files!&lt;/p&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/advanced-use-head-tail/"&gt;Advanced Use of "head" and "tail"&lt;/a&gt;
on how to use &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; for printing rows from a text file.
These 2 commands are convenient when you want to take head/tail rows …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is suggested that you &lt;strong&gt;use Python instead of Shell&lt;/strong&gt; to manipulate text files!&lt;/p&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/advanced-use-head-tail/"&gt;Advanced Use of "head" and "tail"&lt;/a&gt;
on how to use &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; for printing rows from a text file.
These 2 commands are convenient when you want to take head/tail rows. 
If you want to take middle rows of a file,
better ways exists using &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# print lines 10 to 20 using sed&lt;/span&gt;
sed&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;10,20p&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;filename
&lt;span class="c1"&gt;# print lines 10 to 20 using awk&lt;/span&gt;
awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NR &amp;gt;= 10 &amp;amp;&amp;amp; NR &amp;lt;= 20&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you work with a very large file, 
you make the &lt;code&gt;sed&lt;/code&gt; command a little bit more efficient by quitting ealier. 
For example, 
the following command efficiently prints lines 10000000 to 10000020 of the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;10000000,10000020p; 10000021q&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file_name&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thi way is faster than &lt;code&gt;awk&lt;/code&gt; (but slower without the quitting early trick) on large files.&lt;/p&gt;</content><category term="OS"></category><category term="Linux"></category><category term="shell"></category><category term="command line"></category><category term="head"></category><category term="tail"></category><category term="sed"></category><category term="awk"></category><category term="rows"></category><category term="lines"></category><category term="text manipulation"></category></entry><entry><title>Parallel Computing Using Multithreading</title><link href="https://www.legendu.net/en/blog/parallel-computing-using-multithreading/" rel="alternate"></link><published>2012-06-26T11:14:47-07:00</published><updated>2020-03-26T11:14:47-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-26:/en/blog/parallel-computing-using-multithreading/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Not all jobs are suitable for parallel computing. 
    The more comminication that threads has to make, 
    the more dependent the jobs are and the less efficient the parallel computing is. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, 
    commercial softwares (Mathematica, MATLAB and Revolution R, etc.) 
    have very good support on parallel computing. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;Please refer …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Not all jobs are suitable for parallel computing. 
    The more comminication that threads has to make, 
    the more dependent the jobs are and the less efficient the parallel computing is. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, 
    commercial softwares (Mathematica, MATLAB and Revolution R, etc.) 
    have very good support on parallel computing. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/python-concurrency-parallel-computing/"&gt;Concurrency and Parallel Computing in Python&lt;/a&gt;
for details.&lt;/p&gt;
&lt;h2 id="parallel-computing-in-bash"&gt;&lt;a href="http://www.legendu.net/misc/blog/parallel-computing-in-bash/"&gt;Parallel Computing in Bash&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id="mathematica"&gt;Mathematica&lt;/h2&gt;
&lt;p&gt;In Mathematica,&lt;br&gt;
there are a bunch of functions starting with "Parallel" 
(e.g., &lt;code&gt;ParallelTable&lt;/code&gt;, &lt;code&gt;ParallelSubmit&lt;/code&gt;, etc) for the purpose of parallel computing. 
If I remember correctly, 
one has to distribute a user-defined function to kernels manually before you can use it for parallel computing in Mathmatica 7 and earlier. 
In Mathematica 8+, 
user-defined functions are automatically distributed to kernels 
so that you can use your own function for parallel computing directly, 
which is very convenient. 
Actually, 
Mathematica is the most convenient one to do parallel computing among all programming languages mentioned in this post, 
but at the cost of effciency of parallel computing. 
Mathematica is famous for its intellegency but also nutorious (at least I think so) for running slow. 
It is the most smart but also the slowest programming languages among all programming languages 
that I have ever used (not just these mentioned in this post). 
It is probably safe to say that Mathematica is the slowest programming language. 
The more convenient a language is, the slower it is generally speaking. 
It is hard to get both. 
A way to improve the speed of Mathematica code is 
to compile the code to C code or some other code that is more efficient to run. 
I will not go deeply into this since it is not the main purpose of this post.&lt;/p&gt;
&lt;h2 id="matlab"&gt;MATLAB&lt;/h2&gt;
&lt;p&gt;There are several ways to do parallel computing in MATLAB. 
The one I know (and is probably the easiest way) is to use &lt;code&gt;parfor&lt;/code&gt; instead of &lt;code&gt;for&lt;/code&gt; in loops. 
If there is only 1 thread, 
&lt;code&gt;parfor&lt;/code&gt; works in serial. 
To better use &lt;code&gt;parfor&lt;/code&gt; for parallel computing, 
you have to learn some concept about different kinds of variables, 
e.g., slicing variables, reduced variables, etc.
Understanding these concept helps you write better parallel code, 
and it help debugging if your code does not work. 
To let &lt;code&gt;parfor&lt;/code&gt; use multiple threads, 
you must open the matlabpool manually. 
For example, 
to use the local host for parallel computing, 
you use the following command to initilize a pool with 8 workers 
(I assume the computer has 8 cores). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;matlabpool&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;open&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;parfor&lt;/code&gt; in MATLAB works like a charm most of the time. 
Consider the fact that MATLAB code is very fast compared to other scripting languages, 
it is a good choice for heavy numeric computing.&lt;br&gt;
However, 
for some reason I am not sure about (probably bug in MATLAB interpreter), 
sometimes even very simple parallel code does not work. 
If this is happens, 
it is usually not easy to get if fixed. What you try is to change reduced variables to a slicing variable, 
and operate on the slicing variable after parallel computing. 
Another annoying thing I met when doing parallel computing in MATLAB was that 
sometimes the exactly same code did not work on another machine with the same version of MATLAB. 
I was not sure what caused the problem, 
but I found that it was related to functions end with &lt;code&gt;rnd&lt;/code&gt; 
(random number generating functions) I used in the code. 
There are some old version functions starting with &lt;code&gt;rand&lt;/code&gt; for generating random numbers, 
which are more robust and always works well in parallel computing.&lt;/p&gt;
&lt;h2 id="r"&gt;R&lt;/h2&gt;
&lt;p&gt;R (not talking about Revolution R) has many packages for parallel computing.
Actually there are too many and thus make people confused about where to get started. 
Fortunately, the company of Revolution R contributed some packages to CRAN to make parallel computing in R unified. 
It is similar to &lt;code&gt;parfor&lt;/code&gt; in MATLAB. 
You use &lt;code&gt;foreach&lt;/code&gt; together with &lt;code&gt;%dopar%&lt;/code&gt; to do parallel computing. 
To do this, 
you must first register a backend for it. 
The following simple example does parallel computing using package "doMC" as the backend of &lt;code&gt;foreach&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doMC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;registerDoMC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%dopar%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use package "snow" as the backend if you have access to a cluster.
In R, 
you do not have to worry about different kind of variables. 
Variables outside the &lt;code&gt;foreach&lt;/code&gt; loop are shared among threads, 
and &lt;code&gt;foreach&lt;/code&gt; returns a list of results corresponding to each iteration. 
Surely access variables outside the &lt;code&gt;foreach&lt;/code&gt; loop
make the parallel compting less efficient. 
A better way is to let &lt;code&gt;foreach&lt;/code&gt; return a list of results and then operate on the list. 
Sometimes, 
when you do parallel computing in R, 
the program does not speedup as you expect. 
This is probably because some functions you used has already been implemented in parallel. 
Notice that &lt;code&gt;foreach&lt;/code&gt; is not just for parallel computing. 
Even if you do serial computing, you can still use &lt;code&gt;foreach&lt;/code&gt; with &lt;code&gt;%dopar%&lt;/code&gt; replaced by &lt;code&gt;%do%&lt;/code&gt;. 
It is usually faster than the &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt;
&lt;h2 id="java-c"&gt;Java &amp;amp; C++&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/cpp11-parallel-concurrency/"&gt;Parallel and Concurrency Programming in C++11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/misc/blog/parallel-computing-java/"&gt;Parallel Computing in Java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Both Java and C/C++ support multithreading directly. 
The concept of multithreading computing in these two languages are similar. 
You have to create multiple threads, 
and let each of them run part of the job.
Java has a better support for multithreading in the sense that its standard library supports thread pool. 
There is still no directly support of thread pool in C++11. 
You have to non-standard libraries for this purpose. 
For scientific computing (e.g. statistical simulations), 
it is usually every easy to partition the work by yourself 
and assign them to different threads so that a thread pool is not essential.
For example, 
if you want to do a simulation of 1000 runs, you can create &lt;code&gt;k&lt;/code&gt; threads, 
assign the first &lt;code&gt;1000/k&lt;/code&gt; runs to the first threads, 
assgin the second &lt;code&gt;1000/k&lt;/code&gt; runs to the second threads, 
and so on and so forth.
To share data between different threads, 
usually you have to lock and unlock shared resources. 
In Java, 
this can be done through &lt;code&gt;ReentrantLock&lt;/code&gt; class or &lt;code&gt;synchronized&lt;/code&gt; methods.
In C/C++ this can be done through &lt;code&gt;mutex&lt;/code&gt;. 
Details about multithreading computing in these two languages is beyond the scope of this post. 
For more information about multithreading in Java, 
you can refer to the book &lt;code&gt;Big Java&lt;/code&gt; which is really easy to follow, 
and "C++ Concurrency in Action" is a good book about multithreading for C++. &lt;/p&gt;
&lt;h2 id="random-number-generators-in-parallel-computing"&gt;Random Number Generators in Parallel Computing&lt;/h2&gt;
&lt;p&gt;In statistical simulations, 
random numbers are usually generated in serial. 
Even though there are parallel algorithm for random number generating, 
the popular RNGs (used in Python, R, Java, etc.) are usually serial. 
There are a few ways to overcome the issue. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Just use lock if RNG is not a bottleneck. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do not worry too much about using multiple RNGs with different seeds
    (theoretically speaking, this might cause issues of overlaping sequences
    but many people just use it and it works in most situations),
    it is probably the easy way to go. 
    You can easily use different RNGs in different threads (via &lt;code&gt;ThreadLocal&lt;/code&gt;) or processes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/#dSFMT"&gt;SFMT&lt;/a&gt;
    is able to jump forward a long distance quickly.
    This trick can be used to instantiate multiple RNGs without overlapping sequences.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="Mathematica"></category><category term="lock"></category><category term="programming"></category><category term="C/C++"></category><category term="cpp"></category><category term="thread"></category><category term="Java"></category><category term="HPC"></category><category term="parallel"></category><category term="R"></category><category term="concurrency"></category><category term="mutex"></category><category term="high performance computing"></category></entry><entry><title>Copy SSH Public Key Using "ssh-copy-id"</title><link href="https://www.legendu.net/en/blog/ssh-copy-id/" rel="alternate"></link><published>2012-06-29T22:25:13-07:00</published><updated>2020-02-29T22:25:13-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-29:/en/blog/ssh-copy-id/</id><summary type="html">&lt;p&gt;You can use the following command to copy your SSH public key to a Linux server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-copy-id&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;~/.ssh/id_rsa.pub&lt;span class="w"&gt; &lt;/span&gt;host_machine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, 
if a Linux server runs the SSH deamon on a non default port (default is 22), 
you have to specify the port with option &lt;code&gt;-p port&lt;/code&gt;. 
In …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can use the following command to copy your SSH public key to a Linux server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-copy-id&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;~/.ssh/id_rsa.pub&lt;span class="w"&gt; &lt;/span&gt;host_machine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, 
if a Linux server runs the SSH deamon on a non default port (default is 22), 
you have to specify the port with option &lt;code&gt;-p port&lt;/code&gt;. 
In addition, 
the host machine and the port options must be in quotes 
(either single or double quotes), 
otherwise, 
you will get an error message.
Suppose sshd runs on port 323 on &lt;code&gt;host_machine&lt;/code&gt;, 
the following command copies the ssh public key to it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh-copy-id&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;~/.ssh/id_rsa.pub&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;host_machine -p 323&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can of course SSH into the server 
and add your SSH public key(s) into the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file manually.&lt;/p&gt;</content><category term="OS"></category><category term="Linux"></category><category term="SSH"></category><category term="server"></category><category term="remote"></category><category term="port"></category><category term="ssh-copy-id"></category></entry><entry><title>Read CPU Temperature in Linux</title><link href="https://www.legendu.net/en/blog/linux-read-cpu-temperature/" rel="alternate"></link><published>2012-05-17T11:24:31-07:00</published><updated>2020-02-17T11:24:31-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-17:/en/blog/linux-read-cpu-temperature/</id><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/hot.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;First you have to install package "lm-sensors". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;lm-sensors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To detect the cpu temperature, type the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;modprobe&lt;span class="w"&gt; &lt;/span&gt;coretemp
sensors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more instructions on this top, 
see &lt;a href="http://www.cyberciti.biz/faq/howto-linux-get-sensors-information/"&gt;nixCraft&lt;/a&gt;.&lt;/p&gt;</content><category term="OS"></category><category term="modprobe"></category><category term="sensors"></category><category term="CPU"></category><category term="Linux"></category><category term="temperature"></category></entry><entry><title>Speedup Docker Pulling and Pushing</title><link href="https://www.legendu.net/en/blog/speedup-docker-pulling-and-pushing/" rel="alternate"></link><published>2017-03-29T01:23:50-07:00</published><updated>2020-01-29T01:23:50-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-29:/en/blog/speedup-docker-pulling-and-pushing/</id><summary type="html">&lt;p&gt;Pulling/pushing Docker images is extremely slow in China. 
There are a few ways to speed up docker pulling/pushing in China.&lt;/p&gt;
&lt;h2 id="using-the-official-china-mirror"&gt;Using the Official China Mirror&lt;/h2&gt;
&lt;p&gt;Now the best way is to use the offical China mirror.
Please refer to 
&lt;a href="https://www.docker-cn.com/registry-mirror"&gt;Docker 中国官方镜像加速 …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pulling/pushing Docker images is extremely slow in China. 
There are a few ways to speed up docker pulling/pushing in China.&lt;/p&gt;
&lt;h2 id="using-the-official-china-mirror"&gt;Using the Official China Mirror&lt;/h2&gt;
&lt;p&gt;Now the best way is to use the offical China mirror.
Please refer to 
&lt;a href="https://www.docker-cn.com/registry-mirror"&gt;Docker 中国官方镜像加速&lt;/a&gt;
for details.
You have to restart the Docker daemon in order for the configuration to take effect.
If you are Ubuntu, 
then you can use the following command to restart the daemon.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo service docker restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="use-the-ustc-mirror"&gt;Use the USTC Mirror&lt;/h2&gt;
&lt;p&gt;It seems to me that the official China mirror is gone.
However, 
there are still other good mirrors that you can use.
For example, 
you can usee the USTC mirror 
by adding the following option into the file &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;registry-mirrors&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://docker.mirrors.ustc.edu.cn/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="old-way"&gt;Old Way&lt;/h2&gt;
&lt;p&gt;One way to speedup Docker visiting is to use &lt;a href="https://www.daocloud.io/"&gt;DaoCloud&lt;/a&gt; as a proxy.
All you have to do is simply adding the following line into the file &lt;code&gt;/etc/default/docker&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;DOCKER_OPTS=&amp;quot;--registry-mirror=&amp;#39;http://a92c904a.m.daocloud.io&amp;#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Please refer to &lt;a href="https://www.daocloud.io/mirror#accelerator-doc"&gt;https://www.daocloud.io/mirror#accelerator-doc&lt;/a&gt; for more details.&lt;/p&gt;</content><category term="Software"></category><category term="software"></category><category term="Docker"></category><category term="speedup"></category><category term="performance"></category><category term="DaoCloud"></category></entry><entry><title>Good Ways to Do Scientific Computing</title><link href="https://www.legendu.net/en/blog/good-ways-scientific-computing/" rel="alternate"></link><published>2012-06-15T19:07:49-07:00</published><updated>2019-05-15T19:07:49-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-15:/en/blog/good-ways-scientific-computing/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Break down the work into smaller modules and develop pipelines (consists of module) for the work.
  Be sure to save (important) intermediate results so that you can resume failed modules withouting reruning succeeded ones.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manage your project in GitHub and use issues to manage tasks to do and their priorities …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Break down the work into smaller modules and develop pipelines (consists of module) for the work.
  Be sure to save (important) intermediate results so that you can resume failed modules withouting reruning succeeded ones.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manage your project in GitHub and use issues to manage tasks to do and their priorities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep your code clean. 
  Make sure to follow good coding (especially naming) styles no matter which programming language you use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write help documents for your code (classes, methods, etc.)
  and keep a up-to-date readme file (explaining design, TODO or refer to other docs) for your project. 
  Bullets 2 and 3 are critical to make sure sustainable progress on projects that last for a long time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use seeds when you generate random numbers. 
  This makes sure that your work can be reproduced later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test running your code using a small dataset or complexity degree 
  to estimate the time needed to run at full scale. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update the progress of running regularlly if a program is time-consuming.
  It is good practice to log both the time ellapsed and the amount of work that has been done
  so that you can estimate the ETA.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Research"></category><category term="Research"></category><category term="scientific computing"></category></entry><entry><title>Compare Two Directories on Linux</title><link href="https://www.legendu.net/en/blog/compare-two-directories-on-linux/" rel="alternate"></link><published>2014-03-10T19:13:40-07:00</published><updated>2019-05-10T19:13:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-03-10:/en/blog/compare-two-directories-on-linux/</id><summary type="html">&lt;h2 id="on-the-same-machine"&gt;On the Same Machine&lt;/h2&gt;
&lt;p&gt;If the two directories are on the same machine, 
you can use either &lt;code&gt;colordiff&lt;/code&gt; (preferred over &lt;code&gt;diff&lt;/code&gt;) or &lt;code&gt;git diff&lt;/code&gt;
to find the differences between them. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;colordiff&lt;span class="w"&gt; &lt;/span&gt;-qr&lt;span class="w"&gt; &lt;/span&gt;dir_1&lt;span class="w"&gt; &lt;/span&gt;dir_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;diff&lt;span class="w"&gt; &lt;/span&gt;--no-index&lt;span class="w"&gt; &lt;/span&gt;dir_1&lt;span class="w"&gt; &lt;/span&gt;dir_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="on-different-machines"&gt;On Different Machines&lt;/h2&gt;
&lt;p&gt;It is a little bit tricky when the …&lt;/p&gt;</summary><content type="html">&lt;h2 id="on-the-same-machine"&gt;On the Same Machine&lt;/h2&gt;
&lt;p&gt;If the two directories are on the same machine, 
you can use either &lt;code&gt;colordiff&lt;/code&gt; (preferred over &lt;code&gt;diff&lt;/code&gt;) or &lt;code&gt;git diff&lt;/code&gt;
to find the differences between them. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;colordiff&lt;span class="w"&gt; &lt;/span&gt;-qr&lt;span class="w"&gt; &lt;/span&gt;dir_1&lt;span class="w"&gt; &lt;/span&gt;dir_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;diff&lt;span class="w"&gt; &lt;/span&gt;--no-index&lt;span class="w"&gt; &lt;/span&gt;dir_1&lt;span class="w"&gt; &lt;/span&gt;dir_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="on-different-machines"&gt;On Different Machines&lt;/h2&gt;
&lt;p&gt;It is a little bit tricky when the two directories are on different machines. 
You have to first calculate md5sums of files in the two directories recursively,
and then compare the md5sums.
To calculate the md5sums of files in a directory recursively 
and output the results into a file &lt;code&gt;md5.txt&lt;/code&gt;, 
you can use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;md5deep&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;path_to_directory&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;md5.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once you have the md5sums for the 2 directories calculated 
and outputed into files (e.g., &lt;code&gt;j.txt&lt;/code&gt;) on the 2 machines,
you can then compare the contents of the 2 files on the 2 machines.
One way to achieve this is to run the following command on one of the machines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;port&lt;span class="w"&gt; &lt;/span&gt;user_name@the_other_server&lt;span class="w"&gt; &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;md5.txt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;diff&lt;span class="w"&gt; &lt;/span&gt;--no-index&lt;span class="w"&gt; &lt;/span&gt;md5.txt&lt;span class="w"&gt; &lt;/span&gt;-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also copy (using &lt;code&gt;rsync&lt;/code&gt; or &lt;code&gt;scp&lt;/code&gt;) the output file on one machine to the other machine 
and then compare them locally using &lt;code&gt;git diff&lt;/code&gt;.&lt;/p&gt;</content><category term="OS"></category><category term="difference"></category><category term="directory"></category><category term="folder"></category><category term="Linux"></category><category term="md5sum"></category><category term="md5deep"></category><category term="diff"></category><category term="ssh"></category></entry><entry><title>Advanced Use of "ls" in Linux</title><link href="https://www.legendu.net/en/blog/list-files-without-tilde-linux/" rel="alternate"></link><published>2012-07-29T09:29:01-07:00</published><updated>2019-03-29T09:29:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-29:/en/blog/list-files-without-tilde-linux/</id><summary type="html">&lt;h2 id="list-files-sorted-by-time"&gt;List Files Sorted by Time&lt;/h2&gt;
&lt;p&gt;You can list files sorted by time (newest first) using the &lt;code&gt;-t&lt;/code&gt; option.
Notice that the &lt;code&gt;-t&lt;/code&gt; option is also support by &lt;code&gt;hdfs dfs -ls&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls -lht
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="ignore-files"&gt;Ignore Files&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You have to either enclose the pattern in quotes or escape the wildcard in patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Equivalent …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="list-files-sorted-by-time"&gt;List Files Sorted by Time&lt;/h2&gt;
&lt;p&gt;You can list files sorted by time (newest first) using the &lt;code&gt;-t&lt;/code&gt; option.
Notice that the &lt;code&gt;-t&lt;/code&gt; option is also support by &lt;code&gt;hdfs dfs -ls&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls -lht
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="ignore-files"&gt;Ignore Files&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You have to either enclose the pattern in quotes or escape the wildcard in patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Equivalent commands to ignore JSON files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls --ignore=*.json
ls -I*.json
ls -I \*.json
ls -I &amp;#39;*.json&amp;#39; # quote needed due to the space!
find . ! -iname &amp;#39;*.json&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignore multiple patterns.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.txt&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.pdf&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.pdf&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*.txt&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./Movies/*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./Downloads/*&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./Music/*&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignore backup files (whose names end with &lt;code&gt;~&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls -B
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or you can use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls --ignore=*~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-contents-of-a-directory-with-the-directory-name-prefixed"&gt;List Contents of a Directory with the Directory Name Prefixed&lt;/h2&gt;
&lt;p&gt;When you list the contents of a directory (e.g., &lt;code&gt;raw&lt;/code&gt;) using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls&lt;span class="w"&gt; &lt;/span&gt;raw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;the directory name &lt;code&gt;raw&lt;/code&gt; is not prefixed to the returned/printed contents.
You can of course concatenate the directory name &lt;code&gt;raw&lt;/code&gt; to each of its subdirectory/subfile manually,
however,
a more convenient way is to use the the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls&lt;span class="w"&gt; &lt;/span&gt;raw/*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="list-only-subdirectories"&gt;List Only Subdirectories&lt;/h2&gt;
&lt;p&gt;You can use the following command to list directories only in the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;./*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="list-hidden-files-and-directories"&gt;List Hidden Files and Directories&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls -d .*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="OS"></category><category term="Linux"></category><category term="ls"></category><category term="shell"></category></entry><entry><title>Proxy for `sudo`</title><link href="https://www.legendu.net/en/blog/proxy-for-sudo/" rel="alternate"></link><published>2017-04-07T23:42:48-07:00</published><updated>2019-03-07T23:42:48-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-04-07:/en/blog/proxy-for-sudo/</id><summary type="html">&lt;p&gt;You can setup proxy in a terminal by export environment variables &lt;code&gt;http_proxy&lt;/code&gt; and `https_proxy'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However,
you might find the exported environment variables are not visible to &lt;code&gt;sudo&lt;/code&gt;.
This can be resovled by simplying adding the &lt;code&gt;-E&lt;/code&gt; (preserve environment) option to &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;You can setup proxy in a terminal by export environment variables &lt;code&gt;http_proxy&lt;/code&gt; and `https_proxy'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However,
you might find the exported environment variables are not visible to &lt;code&gt;sudo&lt;/code&gt;.
This can be resovled by simplying adding the &lt;code&gt;-E&lt;/code&gt; (preserve environment) option to &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;-E&lt;span class="w"&gt; &lt;/span&gt;command_to_run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="question"&gt;Question&lt;/h2&gt;
&lt;p&gt;Can a socks proxy be used as a HTTP/HTTPS proxy directly?&lt;/p&gt;</content><category term="Internet"></category><category term="Network"></category><category term="proxy"></category><category term="environment variable"></category><category term="sudo"></category></entry><entry><title>How Long Does It Take to Observe a Sequence?</title><link href="https://www.legendu.net/en/blog/how-long-observe-pattern/" rel="alternate"></link><published>2010-05-04T02:30:19-07:00</published><updated>2018-01-04T02:30:19-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-05-04:/en/blog/how-long-observe-pattern/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are many interesting while at the same time very tricky problems in
statistics. One famous question is that how many steps (expected) does
it take to observe a given sequence (e.g. THTH, TTHH), if we flip a
balanced coin?&lt;/p&gt;
&lt;p&gt;This problem can be solved using (delay) renewal theory …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are many interesting while at the same time very tricky problems in
statistics. One famous question is that how many steps (expected) does
it take to observe a given sequence (e.g. THTH, TTHH), if we flip a
balanced coin?&lt;/p&gt;
&lt;p&gt;This problem can be solved using (delay) renewal theory or martingales.
These two methods are well explained in stochastic processes text books
(e.g. Stochastic Processes, S. M. Ross), so I will not explain them here. 
I implemented an algorithm base on martingales in Mathematica. 
It can deal with all this kind of problems, no matter how
long the pattern to be observed is and no matter which discrete distribution
is specified for the sample space. The following are some running results in
Mathematica.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sp = {&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;};
pat1 = {&amp;quot;H&amp;quot;,&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;, &amp;quot;T&amp;quot;};
pat2 = {&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;, &amp;quot;H&amp;quot;,&amp;quot;T&amp;quot;};
PatternExpectedTime[pat1, sp]
16
PatternExpectedTime[pat2, sp]
20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Some people might be shock by the above results, because they either think
that the result should be the same, or they think that the expected time for
patter "HTHT" to occur should be smaller. Notice that pattern "HTHT" has a
duplicated structure which is the reason make it harder to occur. To be clearer,
we know that a random sequence generated by flipping a coin n times won't have
a big chance to have either too many or too few runs. Duplicated structures
usually result in too many runs in sequence, e.g. "HTHT" has four runs which
is the biggest run we can have in a sequence of length 4, so it would take more
time on average for "HTHT" to come out.&lt;/p&gt;
&lt;p&gt;Here are &lt;a href="http://dclong.github.io/media/pattern/pattern-time-examples.pdf"&gt;more examples and results&lt;/a&gt; of the &lt;a href="http://dclong.github.io/media/pattern/pattern.cdf"&gt;code&lt;/a&gt;.
You need either Mathematica or CDF player to open the code.
For you convenience, the code is also presented below. 
Notice that the code also contains a function for calculating the probability for a 
pattern to come out before other patterns. 
For a more detail description about this interesting problem see my post 
&lt;a href="http://dclong.github.io/en/blog/best-strategy/"&gt;Which One Is the Best Strategy?&lt;/a&gt; and
&lt;a href="http://dclong.github.io/en/blog/best-strategy-2/"&gt;Which One Is the Best Strategy? (continued)&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;nprob&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;All element of `1` are negative.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ndist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The sum of `1` is greater than 1.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The sample space `1` has duplicated element(s).&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;nmatch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The length of `1` does not match the length of `2`.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pattern_, samspace_, prob_: Null, padj_: True&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;algorithm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;based&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;martingales&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nl"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;defining&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;observed&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nl"&gt;samspace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;defining&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;space&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nl"&gt;prob&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;defining&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;probabilites&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nl"&gt;padj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;logical&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;whether&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;adjust&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;argument&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prob&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{nsample, npattern, i, j, ResultProb = {}, temp, expect, probs},&lt;/span&gt;
&lt;span class="n"&gt;    nsample = Length[samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[DeleteDuplicates[samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::sp, samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prob === Null,&lt;/span&gt;
&lt;span class="n"&gt;    probs = Table[1/nsample, {nsample}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::nmatch, prob, samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Min[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::nprob, prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;padj,&lt;/span&gt;
&lt;span class="n"&gt;        probs = prob/Total[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Total[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::ndist, prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prob&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;algorithm&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;npattern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= npattern, i++,&lt;/span&gt;
&lt;span class="n"&gt;        AppendTo[ResultProb, &lt;/span&gt;
&lt;span class="n"&gt;        probs[[Flatten[Position[samspace, pattern[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;npattern&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= npattern, i++,&lt;/span&gt;
&lt;span class="n"&gt;        temp = 1;&lt;/span&gt;
&lt;span class="n"&gt;        For[j = i, j &amp;lt;= npattern, j++,&lt;/span&gt;
&lt;span class="n"&gt;            If[pattern[[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j - i + 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ResultProb&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;Break&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;PatternAdditionalExpectedTime&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pat_, gpat_, samspace_, prob_: Null, padj_: True&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;calculate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;occur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
&lt;span class="n"&gt;given&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gpat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;already&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;occurs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;it&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;essentially&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;based&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{npat, ngpat, i, j, count, win = {}, temp, nsample, probs},&lt;/span&gt;
&lt;span class="n"&gt;    nsample = Length[samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[DeleteDuplicates[samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::sp, samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prob === Null,&lt;/span&gt;
&lt;span class="n"&gt;        probs = Table[1/nsample, {nsample}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::nmatch, prob, samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Min[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::nprob, prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;padj,&lt;/span&gt;
&lt;span class="n"&gt;            probs = prob/Total[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Total[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::ndist, prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prob&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;npat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pat&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ngpat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gpat&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ngpat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;npat&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;count &amp;gt;= 1,&lt;/span&gt;
&lt;span class="n"&gt;        temp = 1;&lt;/span&gt;
&lt;span class="n"&gt;        For[i = 1, i &amp;lt;= npat, i++,&lt;/span&gt;
&lt;span class="n"&gt;            temp /= probs[[Flatten[Position[samspace, pat[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= count, i++,&lt;/span&gt;
&lt;span class="n"&gt;            For[j = 1, j &amp;lt;= npat, j++,&lt;/span&gt;
&lt;span class="n"&gt;                If[gpat[[i + j - 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pat&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;win, -1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="k"&gt;Goto&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;win, temp&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Max&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1, count + 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = count, i &amp;lt;= ngpat, i++,&lt;/span&gt;
&lt;span class="n"&gt;        temp = 1;&lt;/span&gt;
&lt;span class="n"&gt;        For[j = i, j &amp;lt;= ngpat, j++,&lt;/span&gt;
&lt;span class="n"&gt;            If[gpat[[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pat&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j - i + 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[Flatten[Position[samspace, pat[[j - i + 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;Break&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;win, temp - 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pat, samspace, probs, padj&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;win&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ngpat&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;

&lt;span class="nl"&gt;PatternFirstComeOutProbability&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;patnum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Argument `1` requires 2 or more elements.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;PatternFirstComeOutProbability&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;patterns_, samspace_, prob_: Null, padj_: True&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{npat, A = {}, row = {}, b = {}, i, j, nsample, probs},&lt;/span&gt;
&lt;span class="n"&gt;    (*patterns is a list which contains patterns to be compared*)&lt;/span&gt;
&lt;span class="n"&gt;    (*dist is list which specifies a discrete distribution*)&lt;/span&gt;
&lt;span class="n"&gt;    npat = Length[patterns&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;npat &amp;lt; 2,&lt;/span&gt;
&lt;span class="n"&gt;        Message[PatternFirstComeOutProbability::patnum, patterns&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[DeleteDuplicates[samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::sp, samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prob === Null,&lt;/span&gt;
&lt;span class="n"&gt;        probs = Table[1/nsample, {nsample}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nsample&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::nmatch, prob, samspace&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Min[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::nprob, prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;padj,&lt;/span&gt;
&lt;span class="n"&gt;            probs = prob/Total[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Total[prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PatternExpectedTime::ndist, prob&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prob&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0, {i, 1, npat}, {j, 1, npat}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= npat, i++,&lt;/span&gt;
&lt;span class="n"&gt;        For[j = 1, j &amp;lt;= npat, j++,&lt;/span&gt;
&lt;span class="n"&gt;            If[j == i, Continue[&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[i, j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PatternAdditionalExpectedTime&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;patterns[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;samspace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;padj&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Join&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Table[1, {i, npat}, {j, 1}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1, {i, npat}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PrependTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row, 0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;A, row&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= npat, i++,&lt;/span&gt;
&lt;span class="n"&gt;            AppendTo[b, &lt;/span&gt;
&lt;span class="n"&gt;            PatternExpectedTime[patterns[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;samspace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;padj&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;b, 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;LinearSolve[A, b&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Fun Problems"></category><category term="Mathematica"></category><category term="pattern"></category><category term="Markov chain"></category><category term="statistics"></category><category term="sequence"></category><category term="coin"></category><category term="stochastic"></category><category term="martingale"></category><category term="fun problems"></category></entry><entry><title>Select Columns from Structured Text Files</title><link href="https://www.legendu.net/en/blog/select-columns-from-structured-text-files/" rel="alternate"></link><published>2016-06-01T16:15:21-07:00</published><updated>2018-01-01T16:15:21-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-01:/en/blog/select-columns-from-structured-text-files/</id><summary type="html">&lt;h2 id="python-pandas"&gt;Python pandas&lt;/h2&gt;
&lt;p&gt;My first choice is pandas in Python. 
However, 
below are some tools for quick and dirty solutions.&lt;/p&gt;
&lt;h2 id="q"&gt;&lt;a href="https://github.com/harelba/q"&gt;q&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;q&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;-H&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;select c1, c3 from file.txt&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="cut"&gt;cut&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cut&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-f1,3&lt;span class="w"&gt; &lt;/span&gt;file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="awk"&gt;awk&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk&lt;span class="w"&gt; &lt;/span&gt;-F&lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{print $1 &amp;quot;\t&amp;quot; $3}&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file.tsv&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note: neither &lt;code&gt;cut …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h2 id="python-pandas"&gt;Python pandas&lt;/h2&gt;
&lt;p&gt;My first choice is pandas in Python. 
However, 
below are some tools for quick and dirty solutions.&lt;/p&gt;
&lt;h2 id="q"&gt;&lt;a href="https://github.com/harelba/q"&gt;q&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;q&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;-H&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;select c1, c3 from file.txt&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="cut"&gt;cut&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cut&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-f1,3&lt;span class="w"&gt; &lt;/span&gt;file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="awk"&gt;awk&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk&lt;span class="w"&gt; &lt;/span&gt;-F&lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{print $1 &amp;quot;\t&amp;quot; $3}&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file.tsv&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note: neither &lt;code&gt;cut&lt;/code&gt; nor &lt;code&gt;awk&lt;/code&gt; honors escaped characters.
For working on complicated structured text files, 
pandas in Python is a much better solution.&lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="pandas"></category><category term="SQL"></category><category term="awk"></category><category term="cut"></category><category term="text file"></category><category term="data manipulation"></category><category term="column"></category><category term="field"></category></entry><entry><title>Sample Lines from a File Using Command Line</title><link href="https://www.legendu.net/en/blog/sample-lines-from-a-file-using-command-line/" rel="alternate"></link><published>2016-06-28T10:52:36-07:00</published><updated>2017-10-28T10:52:36-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-28:/en/blog/sample-lines-from-a-file-using-command-line/</id><summary type="html">&lt;p&gt;NOTE: the article talks about sampling "lines" rather than "records". 
If a records can occupy multiple lines, 
e.g., if any field contains a new line (&lt;code&gt;\n&lt;/code&gt;),
the following tutorial does not work 
and you have to fall back to more powerful tools such as Python or R.&lt;/p&gt;
&lt;p&gt;Let's say …&lt;/p&gt;</summary><content type="html">&lt;p&gt;NOTE: the article talks about sampling "lines" rather than "records". 
If a records can occupy multiple lines, 
e.g., if any field contains a new line (&lt;code&gt;\n&lt;/code&gt;),
the following tutorial does not work 
and you have to fall back to more powerful tools such as Python or R.&lt;/p&gt;
&lt;p&gt;Let's say that you want sample 500 lines (without replacement) from a file.
This can be done easily using a scraping language such as R or Python. 
However, if samling lines is all you have to do,
it is much faster to do it in shell. 
While there are many command lines tools you can use, 
the one I found to be elegantest is 'shuf'.
&lt;code&gt;shuf&lt;/code&gt; permuates lines of a file. 
If you want to sample 500 lines, 
then you you just have to keep the first 500 shuffled lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;shuf&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is a little more work if the file contains a header line
and you want to keep the header line and sample from the rest lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# keep the header&lt;/span&gt;
head&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;sample_500
&lt;span class="c1"&gt;# sample from the rest line and append to sample_500&lt;/span&gt;
tail&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;+2&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;shuf&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;sample_500
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is another tool named &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;
for performing SQL operations on structured text files. 
If the text file is structured,
then task can be done even easier with &lt;code&gt;q&lt;/code&gt;.
Assume the text file is tab delimited and has a header, 
then you can use the following command to sample 500 lines from it.
The option &lt;code&gt;-O&lt;/code&gt; outputs the header also.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;q&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;-H&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;select * from file order by random() limit 500&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;q&lt;/code&gt; can be installed with the command below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install q-text-as-data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Even thougt I'm Linux fan, 
I'm a practical Linux fan 
not liking some enthusiasium of Linux 
who broadcasting about solving every probelm using command line.
If there is a simple and elegant command line tool to get your work done,
then use it. 
Otherwise, instead of cooking up a weird, unreadable, anti-human shell command, 
R or Python is a much better choice.&lt;/p&gt;</content><category term="OS"></category><category term="Linux"></category><category term="shell"></category><category term="command line"></category><category term="sample"></category><category term="shuffle"></category><category term="shuf"></category><category term="q"></category><category term="text"></category><category term="SQL"></category></entry><entry><title>Account Management in Linux</title><link href="https://www.legendu.net/en/blog/account-management-in-linux/" rel="alternate"></link><published>2017-06-22T13:30:05-07:00</published><updated>2017-10-22T13:30:05-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-22:/en/blog/account-management-in-linux/</id><summary type="html">&lt;p&gt;**
Things on this page are
fragmentary and immature notes/thoughts of the author.
Please read with your own judgement!
**&lt;/p&gt;
&lt;h2 id="create-a-user"&gt;Create a User&lt;/h2&gt;
&lt;p&gt;Both &lt;code&gt;adduser&lt;/code&gt; and &lt;code&gt;useradd&lt;/code&gt; can be used to create a new user. 
&lt;code&gt;adduser&lt;/code&gt; is interactive while &lt;code&gt;useradd&lt;/code&gt; is non-interactive.
It is suggested that you use &lt;code&gt;useradd&lt;/code&gt; in batch …&lt;/p&gt;</summary><content type="html">&lt;p&gt;**
Things on this page are
fragmentary and immature notes/thoughts of the author.
Please read with your own judgement!
**&lt;/p&gt;
&lt;h2 id="create-a-user"&gt;Create a User&lt;/h2&gt;
&lt;p&gt;Both &lt;code&gt;adduser&lt;/code&gt; and &lt;code&gt;useradd&lt;/code&gt; can be used to create a new user. 
&lt;code&gt;adduser&lt;/code&gt; is interactive while &lt;code&gt;useradd&lt;/code&gt; is non-interactive.
It is suggested that you use &lt;code&gt;useradd&lt;/code&gt; in batch mode
and &lt;code&gt;adduser&lt;/code&gt; in non-batch mode.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;useradd&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;-u&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;
groupadd&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;-g&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="group"&gt;Group&lt;/h2&gt;
&lt;p&gt;Add a user to a group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpasswd&lt;span class="w"&gt; &lt;/span&gt;-a&lt;span class="w"&gt; &lt;/span&gt;user_name&lt;span class="w"&gt; &lt;/span&gt;group_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Get information about a group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;getent&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;group_name
getent&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;group_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="OS"></category><category term="Linux"></category><category term="account management"></category><category term="group managment"></category><category term="adduser"></category><category term="useradd"></category><category term="gpasswd"></category><category term="getent"></category></entry><entry><title>Get Group Names on Linux/Unix</title><link href="https://www.legendu.net/en/blog/get-group-names-on-linux-unix/" rel="alternate"></link><published>2017-08-22T12:37:19-07:00</published><updated>2017-10-22T12:37:19-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-22:/en/blog/get-group-names-on-linux-unix/</id><summary type="html">&lt;h2 id="linux"&gt;Linux&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;getent&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;staff
staff:x:20:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;getent&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;staff&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;cut&lt;span class="w"&gt; &lt;/span&gt;-d:&lt;span class="w"&gt; &lt;/span&gt;-f3
&lt;span class="m"&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mac"&gt;Mac&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;dscl&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-read&lt;span class="w"&gt; &lt;/span&gt;/Groups/staff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;dscl&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-read&lt;span class="w"&gt; &lt;/span&gt;/Groups/staff&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="linux"&gt;Linux&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;getent&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;staff
staff:x:20:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;getent&lt;span class="w"&gt; &lt;/span&gt;group&lt;span class="w"&gt; &lt;/span&gt;staff&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;cut&lt;span class="w"&gt; &lt;/span&gt;-d:&lt;span class="w"&gt; &lt;/span&gt;-f3
&lt;span class="m"&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mac"&gt;Mac&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;dscl&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-read&lt;span class="w"&gt; &lt;/span&gt;/Groups/staff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;dscl&lt;span class="w"&gt; &lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;-read&lt;span class="w"&gt; &lt;/span&gt;/Groups/staff&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;($1 == &amp;quot;PrimaryGroupID:&amp;quot;) { print $2 }&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As a matter of fact, 
&lt;code&gt;dscl&lt;/code&gt; in Mac is the equivalence of &lt;code&gt;getent&lt;/code&gt; in Linux.
Both of them can be used to query user information as well. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Querying user information using &lt;code&gt;getent&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;getent passwd &amp;lt;uid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Querying user information using &lt;code&gt;dscl&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dscl . -search /Users UniqueID &amp;lt;uid&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In both cases, 
you then need to parse the output to get the username. 
The output of &lt;code&gt;getent&lt;/code&gt; is standard /etc/passwd format, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;zamboni&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1005&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1005&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Diego&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Zamboni&lt;/span&gt;&lt;span class="o"&gt;,,,:/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="sr"&gt;/zamboni:/bin/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is very easy to parse (using awk, for example) and gives you the full record at once.
&lt;code&gt;dscl&lt;/code&gt; only provides the field you searched for, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zamboni              UniqueID = (
    501
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So if you want to get the full record, you would need to get the username and then query for it, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dscl . -read /Users/zamboni
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output is harder to parse, 
in "keyword: value" form, 
but with many multiline values. 
You can also use the -plist option to get it in Apple's plist format, which could be easier to parse.&lt;/p&gt;
&lt;h2 id="cross-platform-ways"&gt;Cross-platform Ways&lt;/h2&gt;
&lt;p&gt;You can also get group information using the &lt;code&gt;grp&lt;/code&gt; module in Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;grp&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getgrnam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;staff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gr_gid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="OS"></category><category term="Linux"></category><category term="Mac OSX"></category><category term="group"></category><category term="python"></category><category term="getent"></category><category term="dscl"></category></entry><entry><title>List Running Jupyter Notebook Servers</title><link href="https://www.legendu.net/en/blog/list-running-jupyter-notebook-servers/" rel="alternate"></link><published>2017-08-22T12:21:29-07:00</published><updated>2017-10-22T12:21:29-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-22:/en/blog/list-running-jupyter-notebook-servers/</id><summary type="html">&lt;p&gt;You can list running Jupyter Notebook servers using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter notebook list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It works well most of the time. 
However, 
if the servers are launched using the root account (e.g., in a Docker container), 
you might encounter issues. 
In this case,
a better alternative is to list …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can list running Jupyter Notebook servers using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter notebook list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It works well most of the time. 
However, 
if the servers are launched using the root account (e.g., in a Docker container), 
you might encounter issues. 
In this case,
a better alternative is to list running servers using Python script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;notebook&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;notebookapp&lt;/span&gt;
&lt;span class="n"&gt;servers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notebookapp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_running_servers&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;servers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more please refer to 
&lt;a href="https://stackoverflow.com/questions/41782255/how-to-get-the-current-jupyter-notebook-servers-in-python"&gt;https://stackoverflow.com/questions/41782255/how-to-get-the-current-jupyter-notebook-servers-in-python&lt;/a&gt;.&lt;/p&gt;</content><category term="Software"></category><category term="software"></category><category term="notebook"></category><category term="Jupyter Notebook"></category><category term="JupyterLab"></category><category term="Python"></category><category term="root"></category><category term="running servers"></category><category term="list"></category></entry><entry><title>Run JAR Applications</title><link href="https://www.legendu.net/en/blog/run-jar-applications/" rel="alternate"></link><published>2017-08-22T12:17:00-07:00</published><updated>2017-10-22T12:17:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-22:/en/blog/run-jar-applications/</id><summary type="html">&lt;p&gt;If there is only 1 class with a main method
or if there is a Main-Class defined for the JAR,
you can use the following command to run the application.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;java -jar app.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you there are multiple classes with main methods in the JAR, 
you can execute any …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If there is only 1 class with a main method
or if there is a Main-Class defined for the JAR,
you can use the following command to run the application.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;java -jar app.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you there are multiple classes with main methods in the JAR, 
you can execute any of them using the commands below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;java -cp app.jar com.mycomp.myproj.AnotherClassWithMainMethod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Java"></category><category term="JAR"></category><category term="main"></category></entry><entry><title>Install Java 8 on Ubuntu 14.04</title><link href="https://www.legendu.net/en/blog/install-java-8-on-ubuntu-14.04/" rel="alternate"></link><published>2017-08-26T09:24:18-07:00</published><updated>2017-08-26T09:24:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-26:/en/blog/install-java-8-on-ubuntu-14.04/</id><content type="html">&lt;p&gt;You can install open JDK 8 on Ubuntu 14.04 using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo add-apt-repository ppa:openjdk-r/ppa
wajig update
wajig install openjdk-8-jdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For more please refer to 
&lt;a href="https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts"&gt;https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts&lt;/a&gt;.&lt;/p&gt;</content><category term="OS"></category><category term="Linux"></category><category term="Java"></category><category term="open JDK 8"></category><category term="Java 8"></category><category term="Ubuntu 14.04"></category></entry><entry><title>Add Users to a Group in Linux</title><link href="https://www.legendu.net/en/blog/add-a-user-to-the-sudo-group-on-linux/" rel="alternate"></link><published>2016-06-10T19:05:41-07:00</published><updated>2017-04-10T19:05:41-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-10:/en/blog/add-a-user-to-the-sudo-group-on-linux/</id><summary type="html">&lt;p&gt;There are several ways to add users to a group in Linux. 
The following uses the &lt;code&gt;sudo&lt;/code&gt; group as illustration.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gpasswd&lt;/code&gt;, &lt;code&gt;usermod&lt;/code&gt; and &lt;code&gt;adduser&lt;/code&gt; can all be used to add a user to a given group.
    However, it is suggested that you use &lt;code&gt;gpasswd&lt;/code&gt; as it is more portable and …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;There are several ways to add users to a group in Linux. 
The following uses the &lt;code&gt;sudo&lt;/code&gt; group as illustration.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gpasswd&lt;/code&gt;, &lt;code&gt;usermod&lt;/code&gt; and &lt;code&gt;adduser&lt;/code&gt; can all be used to add a user to a given group.
    However, it is suggested that you use &lt;code&gt;gpasswd&lt;/code&gt; as it is more portable and intuitive. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gpasswd -a user_name sudo
newgrp sudo

usermod -aG sudo user_name
newgrp sudo

# works on Ubuntu but not CentOS
adduser user_name sudo
newgrp sudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Just adding an user to a group might not make it work right away.
The command &lt;code&gt;newgrp sudo&lt;/code&gt; make the group &lt;code&gt;sudo&lt;/code&gt; in effect right away.
Of course, you can log out and then log in to make it work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some desktop environment (e.g., GNome, Cinnamon, KDE, etc.) can also do this for you. 
    Taking Cinnamon as an example, 
    you can follow the steps below to add/remove groups for a user. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;System Settings&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Users and Groups&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the user you want modify.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Groups&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check/uncheck groups from the prompt list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the OK to save the changes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="Linux"></category><category term="sudo"></category><category term="user"></category><category term="groups"></category><category term="gpasswd"></category><category term="usermod"></category></entry><entry><title>Tips for AWK</title><link href="https://www.legendu.net/en/blog/awk-tips/" rel="alternate"></link><published>2013-10-19T10:22:17-07:00</published><updated>2017-03-19T10:22:17-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-19:/en/blog/awk-tips/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.grymoire.com/Unix/Awk.html"&gt;AWK Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For small structured text files, 
    it is suggested that you use the &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;
    command to manipulate it.&lt;/p&gt;
&lt;p&gt;For complicated logic, 
it is suggested that you use a scripting language (e.g., Python) instead. 
I personally discourage using of &lt;code&gt;awk&lt;/code&gt; 
unless you have a large file (that q cannot …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.grymoire.com/Unix/Awk.html"&gt;AWK Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For small structured text files, 
    it is suggested that you use the &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;
    command to manipulate it.&lt;/p&gt;
&lt;p&gt;For complicated logic, 
it is suggested that you use a scripting language (e.g., Python) instead. 
I personally discourage using of &lt;code&gt;awk&lt;/code&gt; 
unless you have a large file (that q cannot handle) 
and the operations you want do are simple.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic syntax of &lt;code&gt;awk&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;BEGIN {start_action} {action} END {stop_action}&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Whether to user single or double quote depends on
    whether you use column variables in the expression.
    This is consistent with shell variable substitution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt; ignorecase when working on files make unnecessary redundant output
    very annoying, not sure why&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt; does not recognize escaped characters in CSV formatted. 
    Make sure that the file &lt;code&gt;awk&lt;/code&gt; works on is in simple format.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="field-delimiter"&gt;Field Delimiter&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The delimiter must be quoted. 
    For example, 
    if the field delimiter is tab,
    you must use &lt;code&gt;awk -F'\t'&lt;/code&gt; rather than &lt;code&gt;awk -F\t&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The filed delimiter of AWK supports can be a regular expression.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk -F&amp;#39;[/=]&amp;#39; &amp;#39;{print $3 &amp;quot;\t&amp;quot; $5 &amp;quot;\t&amp;quot; $8}&amp;#39; file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="columnfield-filteringmanipulation"&gt;Column/Field Filtering/Manipulation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Select 1st and 3rd column (seprated by tab)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk &amp;#39;{print $1 &amp;quot;\t&amp;quot; $3}&amp;#39; file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sum of the 5th filed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;BEGIN {s=0} {s=s+$5} END {print s}&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="rows-filteringmanipulation"&gt;Rows Filtering/Manipulation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Print rows of the file with the first field greater than 3.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;awk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ if($1 &amp;gt; 3) print }&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;file_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print Docker image IDs that has no repositories names.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;images&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;awk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ if ($1 == &amp;quot;&amp;lt;none&amp;gt;&amp;quot;) print $3 }&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print Docker image IDs whose name contains &lt;code&gt;che&lt;/code&gt; using regular expression match.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;images&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;awk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{if ($1 ~ &amp;quot;che&amp;quot;) print $3}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print rows with 2 fileds.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk &amp;#39;NF == 2&amp;#39; file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or more verbosally (and more portable)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk &amp;#39;NF == 2 {print} {}&amp;#39; file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Count the number of fields in each line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk &amp;#39;{print NF}&amp;#39; file_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;https://stackoverflow.com/questions/15386632/awk-4th-column-everything-matching-wildcard-before-the&lt;/p&gt;</content><category term="Software"></category><category term="tips"></category><category term="awk"></category><category term="text manipulation"></category></entry><entry><title>Selectively Disable Vimperator on Webpages</title><link href="https://www.legendu.net/en/blog/selectively-disable-vimperator/" rel="alternate"></link><published>2017-03-04T13:28:47-08:00</published><updated>2017-03-04T13:28:47-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-04:/en/blog/selectively-disable-vimperator/</id><summary type="html">&lt;p&gt;You can press &lt;code&gt;shift + esc&lt;/code&gt; to disable Vimperator on pages and &lt;code&gt;insert&lt;/code&gt; to enable it again. 
This is not good solution as often times you wan to disable Vimperator on a few pages 
but still have it enabled on other pages. 
You can achieve this by configurating the &lt;code&gt;~/.vimperatorrc&lt;/code&gt; file …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can press &lt;code&gt;shift + esc&lt;/code&gt; to disable Vimperator on pages and &lt;code&gt;insert&lt;/code&gt; to enable it again. 
This is not good solution as often times you wan to disable Vimperator on a few pages 
but still have it enabled on other pages. 
You can achieve this by configurating the &lt;code&gt;~/.vimperatorrc&lt;/code&gt; file.
Below is an example of disabling Vimperator on Google main, calendar, reader and tasks. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autocmd LocationChange .*                             js modes.passAllKeys = false
autocmd LocationChange mail\\.google\\.com            js modes.passAllKeys = true
autocmd LocationChange www\\.google\\.com/calendar    js modes.passAllKeys = true
autocmd LocationChange www\\.google\\.com/reader      js modes.passAllKeys = true
autocmd LocationChange mail\\.google\\.com/tasks      js modes.passAllKeys = false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Instead of using &lt;code&gt;autocmd&lt;/code&gt;, 
you can also use &lt;code&gt;ignorekeys&lt;/code&gt;. 
Below is an exampel of disabling Vimperator on Yahoo and Google mail.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ignorekeys add mail.yahoo.com
ignorekeys add mail.google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/14271624/disable-vimperator-temporarily"&gt;Disable Vimperator Temporarily&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="software"></category><category term="Vimperator"></category><category term="Vim"></category><category term="Firefox"></category><category term="browser"></category></entry><entry><title>Using Bash in Docker</title><link href="https://www.legendu.net/en/blog/Using-Bash-in-Docker/" rel="alternate"></link><published>2016-12-14T13:54:14-08:00</published><updated>2017-01-14T13:54:14-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-14:/en/blog/Using-Bash-in-Docker/</id><summary type="html">&lt;p&gt;If the docker container was started using &lt;code&gt;/bin/bash&lt;/code&gt; 
(you can check using &lt;code&gt;docker ps&lt;/code&gt;) command you can access it using &lt;code&gt;attach&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;attach&lt;span class="w"&gt; &lt;/span&gt;container_name_or_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the docker container was started but not with &lt;code&gt;/bin/bash&lt;/code&gt;,
you have to create a bash instance inside the container using &lt;code&gt;exec&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exec …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;If the docker container was started using &lt;code&gt;/bin/bash&lt;/code&gt; 
(you can check using &lt;code&gt;docker ps&lt;/code&gt;) command you can access it using &lt;code&gt;attach&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;attach&lt;span class="w"&gt; &lt;/span&gt;container_name_or_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the docker container was started but not with &lt;code&gt;/bin/bash&lt;/code&gt;,
you have to create a bash instance inside the container using &lt;code&gt;exec&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-it&lt;span class="w"&gt; &lt;/span&gt;container_name_or_id&lt;span class="w"&gt; &lt;/span&gt;/bin/bash&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that &lt;code&gt;attach&lt;/code&gt; does not create a new instance of bash 
but use the already created one in the corresponding docker container.
However, 
both &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; create new bash instances.&lt;/p&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;docker&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dclong&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;jupyterlab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;py&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;jupyter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;nbconvert&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;html&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;ExecutePreprocessor&lt;/span&gt;.&lt;span class="nb"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;workdir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;spend&lt;/span&gt;.&lt;span class="nv"&gt;ipynb&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Software"></category><category term="software"></category><category term="docker"></category><category term="bash"></category><category term="shell"></category></entry><entry><title>Start RStudio Server After Upgrading</title><link href="https://www.legendu.net/en/blog/start-rstudio-server-after-upgrading/" rel="alternate"></link><published>2016-12-10T02:09:11-08:00</published><updated>2016-12-10T02:09:11-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-10:/en/blog/start-rstudio-server-after-upgrading/</id><summary type="html">&lt;p&gt;It is quite often that the RStudio server cannot be start after upgrading. 
This is due to running R session in the background. 
A simple solution is to just restart the host machine. 
However, it is very risky to start servers (especially remote shared ones).
An alternative way is to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is quite often that the RStudio server cannot be start after upgrading. 
This is due to running R session in the background. 
A simple solution is to just restart the host machine. 
However, it is very risky to start servers (especially remote shared ones).
An alternative way is to find the R session in the background,
kill it and then start the RStudio server.
The following instruction assumes that 
the port 8787 (default) is used by RStudio server.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find processes that listen to the port 8787.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo fuser 8787/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kill all processes that listen to the port 8787. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo fuser -k 8787/tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or you can also use the command &lt;code&gt;kill&lt;/code&gt; to terminate processes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start RStudio server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo rstudio-server start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="software"></category><category term="IDE"></category><category term="RStudio"></category></entry><entry><title>Cygwin Portable</title><link href="https://www.legendu.net/en/blog/cygwin-portable/" rel="alternate"></link><published>2016-08-16T00:06:34-07:00</published><updated>2016-08-16T00:06:34-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-08-16:/en/blog/cygwin-portable/</id><summary type="html">&lt;p&gt;**
Things on this page are fragmentary and immature notes/thoughts of the author. 
Please read with your own judgement!
**&lt;/p&gt;
&lt;h2 id="cygwin-portable"&gt;Cygwin Portable&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The portable versions has some problems&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vim, edit mode, backspace doesn't work sometimes (identation related)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cygwin portable scroll doesn't work after Vim is opened and then closed. 
but if …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;**
Things on this page are fragmentary and immature notes/thoughts of the author. 
Please read with your own judgement!
**&lt;/p&gt;
&lt;h2 id="cygwin-portable"&gt;Cygwin Portable&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The portable versions has some problems&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vim, edit mode, backspace doesn't work sometimes (identation related)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cygwin portable scroll doesn't work after Vim is opened and then closed. 
but if alternative/lock, still can see previous results ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shutdown is windows exe, check it on your windows, Cygwin protable ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="Linux"></category><category term="Windows"></category><category term="virtualization"></category><category term="software"></category><category term="Cygwin"></category><category term="portable"></category></entry><entry><title>An IO Bug in R</title><link href="https://www.legendu.net/en/blog/input-bug-r/" rel="alternate"></link><published>2012-08-15T21:22:47-07:00</published><updated>2016-08-15T21:22:47-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-15:/en/blog/input-bug-r/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I encountered an input/output bug in R in Linux system. 
The symptom is that input and output are not displayed in the terminal 
and the warning message 
"An unusual circumstance has arisen in the nesting of readline input. 
Please report using bug.report()" is shown. 
I found that though …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I encountered an input/output bug in R in Linux system. 
The symptom is that input and output are not displayed in the terminal 
and the warning message 
"An unusual circumstance has arisen in the nesting of readline input. 
Please report using bug.report()" is shown. 
I found that though input and output are not displayed, you can still 
interact with the underlying R session. 
A safe way is to save the R workspace, quit the R session, open a new 
R session and load in the saved workspace. To save the R workspace,
just type in &lt;code&gt;save.image('ws_name')&lt;/code&gt; in the console, where &lt;code&gt;ws_name&lt;/code&gt; 
is the name of the workspace. Notice that you will not see anything 
happen on the console, so you have to make sure that you do not make 
any mistake typing in the command. To quit the R session after saving 
the workspace, you can type in 'q('no')' in the console. 
Similarly, you won't see anything in the console, so make sure you do not 
make any mistake. Now can open a new R session, and then load in the saved 
workspace. &lt;/p&gt;</content><category term="Computer Science"></category><category term="warning"></category><category term="IO"></category><category term="programming"></category><category term="R"></category><category term="bug"></category></entry><entry><title>A Bug in Mathematica</title><link href="https://www.legendu.net/en/blog/bug-in-mathematica/" rel="alternate"></link><published>2011-12-15T21:22:23-08:00</published><updated>2016-08-15T21:22:23-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2011-12-15:/en/blog/bug-in-mathematica/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Mathematica is a very intelligent and powerful math software. 
I use it in my study and research a lot. 
Mathematica's ability to take derivative and to calculate 
limit is obvious powerful–way much beyond many mathematician's ability. 
Mathematica's ability to calculate integral is also powerful. 
There are many integrals than …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Mathematica is a very intelligent and powerful math software. 
I use it in my study and research a lot. 
Mathematica's ability to take derivative and to calculate 
limit is obvious powerful–way much beyond many mathematician's ability. 
Mathematica's ability to calculate integral is also powerful. 
There are many integrals than I'm not able to solve while Mathmatica can. 
For a long time I totally trusted Mathematica. 
I thought that it is so intelligent an software that whenever 
it's able to give me a result it must right, 
until one day I asked Mathematica to do some integrals.&lt;br&gt;
See whether you can find what's wrong with Mathematica.&lt;/p&gt;
&lt;p&gt;What I learn is not just this bug in Mathmatica. 
What I learned is that software has bugs, no matter how intelligent it is. 
Bugs happens when a software grow large. 
Never fully trust a software. You should always judge the result based on your own knowledge.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Integrate&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Exp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Sin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;NIntegrate&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Exp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Sin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;
&lt;span class="mf"&gt;0.635862&lt;/span&gt;
&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Integrate[Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Exp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Sin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="err"&gt;}]]&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="Mathematica"></category><category term="programming"></category><category term="bug"></category></entry><entry><title>Some Terminologies in Business Investment</title><link href="https://www.legendu.net/en/blog/some-terminology-in-credit-portifolio-risk-management/" rel="alternate"></link><published>2013-06-13T22:26:26-07:00</published><updated>2016-07-13T22:26:26-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-06-13:/en/blog/some-terminology-in-credit-portifolio-risk-management/</id><summary type="html">&lt;h2 id="stock-ticker"&gt;Stock Ticker&lt;/h2&gt;
&lt;p&gt;A stock ticker is a report of the price for certain securities, 
updated continuously throughout the trading session by the various stock exchanges. 
A "tick" is any change in price, 
whether that movement is up or down. 
A stock ticker automatically displays these ticks, 
along with other relevant …&lt;/p&gt;</summary><content type="html">&lt;h2 id="stock-ticker"&gt;Stock Ticker&lt;/h2&gt;
&lt;p&gt;A stock ticker is a report of the price for certain securities, 
updated continuously throughout the trading session by the various stock exchanges. 
A "tick" is any change in price, 
whether that movement is up or down. 
A stock ticker automatically displays these ticks, 
along with other relevant information, 
like volume, 
that investors use to stay informed about current market conditions.&lt;/p&gt;
&lt;p&gt;A limited number of stocks appear on the stock ticker during any particular period, 
due to the large number of stocks that are actually trading at the same time. 
Often, the stocks that have the greatest change in price from the previous day's trading session, 
or those that are trading under the highest volume appear on the stock ticker.&lt;/p&gt;
&lt;p&gt;You may have seen a stock ticker scrolling by at the bottom 
of any financial news networks on television. 
The ticker provides current information for certain stocks, 
including: the ticker symbol (the one to four letter code that represents a particular stock); 
quantity traded (volume for each transaction); 
price, a green "up" arrow if price is higher than the previous day's closing value, 
a red "down" arrow if price is lower than the previous day; 
and the net price change (either as a dollar amount or as a percentage) from the previous day's close. 
If the price is unchanged, 
the arrow may be gray in color or simply absent. 
Often, the ticker symbol and the net price change appear color-coded: 
green if the price is higher than the previous session, red if price is lower.&lt;/p&gt;
&lt;p&gt;Many of today's fully-electronic stock tickers display market data in real-time or with a small delay. 
You can watch stock tickers on a variety of financial news networks, 
and many trading platforms allow you to customize and view stock tickers 
that can be displayed at the bottom of your computer monitor. &lt;/p&gt;
&lt;h2 id="personal-consumption-expenditures-pce"&gt;Personal Consumption Expenditures - PCE&lt;/h2&gt;
&lt;p&gt;A measure of price changes in consumer goods and services. 
Personal consumption expenditures consist of the actual 
and imputed expenditures of households; 
the measure includes data pertaining to durables, non-durables and services. 
It is essentially a measure of goods and services targeted toward individuals and consumed by individuals.&lt;/p&gt;
&lt;p&gt;Also referred to as "consumption."
Investopedia Says &lt;br&gt;
Investopedia explains 'Personal Consumption Expenditures - PCE'
Similar to the Consumer Price Index (CPI), PCE is a report (actually a part of the personal income report) put out by the Bureau of Economic Analysis of the Department of Commerce. &lt;/p&gt;
&lt;p&gt;There are two broad indexes of consumer prices in the United States: the CPI and the Chain Price Index for Personal Consumption Expenditures (PCEPI). They are similar in many respects, but there are some important differences that can lead to large gaps between CPI and PCEPI inflation rates. The PCEPI uses a chain index, which takes consumers' changing consumption due to prices into account; the CPI uses a fixed basket of goods with weightings that do not change over time.&lt;/p&gt;
&lt;p&gt;The PCE is a fairly predictable report that has little impact on the markets.&lt;/p&gt;
&lt;h2 id="beginning-market-value-bmv"&gt;Beginning Market Value (BMV)&lt;/h2&gt;
&lt;p&gt;The valuation at which the property should exchange at the date of origin, 
and the beginning of each period. 
The beginning market value at the start of every period is equal to 
the ending market value of the previous period.&lt;/p&gt;
&lt;p&gt;The market value is based on what both the buyer and seller (effectively, the market), 
deem the true value of the property to be. 
Market value is similar to market price given that the market remains efficient 
and the players are rational.&lt;/p&gt;
&lt;h2 id="ending-market-value-emv"&gt;Ending Market Value (EMV)&lt;/h2&gt;
&lt;p&gt;The value of an investment at the end of the investment period. 
Ending market value (EMV) is calculated by taking the beginning market value 
and adding the interest earned over the course of the investment. &lt;/p&gt;
&lt;div class="math"&gt;$$
\text{Ending Market Value} = \text{Beginning Market Value} \times (1 + \text{Interest Rate}). 
$$&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="math"&gt;$$
\text{Beginning market value} = 100
\text{Interest Rate} = 10%
EMV = 100 \times (1 + 0.10) = 110
$$&lt;/div&gt;
&lt;p&gt;This is an important equation to consider when choosing an investment 
as the time value of money can be a valuable decision-making variable.&lt;/p&gt;
&lt;h2 id="fair-market-value-fmv"&gt;Fair Market Value (FMV)&lt;/h2&gt;
&lt;p&gt;The price that a given property or asset would fetch in the marketplace, 
subject to the following conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prospective buyers and sellers are reasonably knowledgeable about the asset; 
they are behaving in their own best interests and are free of undue pressure to trade.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A reasonable time period is given for the transaction to be completed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Given these conditions, 
an asset's fair market value should represent an accurate valuation or assessment of its worth.&lt;/p&gt;
&lt;p&gt;Fair market values are widely used across many areas of commerce. 
For example, 
municipal property taxes are often assessed based on the fair market value of the owner's property. 
Depending upon how many years the owner has owned the home, 
the difference between the purchase price and the residence's fair market value can be substantial.&lt;/p&gt;
&lt;p&gt;Fair market values are often used in the insurance industry as well. 
For example, when an insurance claim is made as a result of a car accident, 
the insurance company covering the damage to the owner's vehicle will usually cover damages 
up to the fair market value of the automobile.&lt;/p&gt;
&lt;h2 id="capital-appreciation"&gt;Capital Appreciation&lt;/h2&gt;
&lt;p&gt;A rise in the value of an asset based on a rise in market price. 
Essentially, 
the capital that was invested in the security has increased in value, 
and the capital appreciation portion of the investment includes all of the market value 
exceeding the original investment or cost basis. 
Capital appreciation is one of the two main sources of investment returns, 
with the other being dividend or interest income.&lt;/p&gt;
&lt;p&gt;For example, 
say you purchase a share for \&lt;span class="math"&gt;\(10, 
which pays a dividend of a \\)&lt;/span&gt;1 per share each year, 
and is now trading at \&lt;span class="math"&gt;\(15 per share a year later. 
Your capital appreciation in the investment is \\)&lt;/span&gt;5, 
or 50%, 
as the price of the share has increased \&lt;span class="math"&gt;\(5 over your purchase price or cost basis. 
Your interest income return is \\)&lt;/span&gt;1, 
or 10%, 
for a total return on the shares is \$6 or 60%.&lt;/p&gt;
&lt;p&gt;Capital appreciation is often a stated investment goal of many mutual funds. 
These funds look to find investments that will rise in value 
based on increased earnings or other fundamental metrics. 
Investments targeted for capital appreciation tend have more risk 
than assets chosen for capital preservation and income generation, 
such as government, municipal bonds, or dividend-paying stocks. 
Because of this, 
capital appreciation funds are considered appropriate for risk-tolerant investors.&lt;/p&gt;
&lt;h2 id="mutual-fund"&gt;Mutual Fund&lt;/h2&gt;
&lt;p&gt;An investment vehicle that is made up of a pool of funds 
collected from many investors for the purpose of investing in securities 
such as stocks, bonds, money market instruments and similar assets. 
Mutual funds are operated by money managers, 
who invest the fund's capital and attempt to produce capital gains and income 
for the fund's investors. 
A mutual fund's portfolio is structured and maintained to match the investment objectives 
stated in its prospectus.&lt;/p&gt;
&lt;p&gt;One of the main advantages of mutual funds is that they give small investors access 
to professionally managed, diversified portfolios of equities, bonds and other securities, 
which would be quite difficult (if not impossible) to create with a small amount of capital. 
Each shareholder participates proportionally in the gain or loss of the fund. 
Mutual fund units, or shares, are issued and can typically be purchased or redeemed 
as needed at the fund's current net asset value (NAV) per share, 
which is sometimes expressed as NAVPS.&lt;/p&gt;
&lt;h2 id="security"&gt;Security&lt;/h2&gt;
&lt;p&gt;A financial instrument that represents: 
an ownership position in a publicly-traded corporation (stock), 
a creditor relationship with governmental body or a corporation (bond), 
or rights to ownership as represented by an option. 
A security is a fungible, negotiable financial instrument 
that represents some type of financial value. T
he company or entity that issues the security is known as the issuer. &lt;/p&gt;
&lt;p&gt;For example, 
the issuer of a bond issue may be a municipal government raising funds 
for a particular project. 
Investors of securities may be retail investors 
(those who buy and sell securities on their own behalf and not for an organization) 
and wholesale investors 
(financial institutions acting on behalf of clients or acting on their own account). 
Institutional investors include 
investment banks, pension funds, managed funds and insurance companies.&lt;/p&gt;
&lt;p&gt;Securities are typically divided into debt securities and equities. 
A debt security is a type of security that represents money that is borrowed 
that must be repaid, 
with terms that define the amount borrowed, 
interest rate and maturity/renewal date. 
Debt securities include government and corporate bonds, 
certificates of deposit (CDs), 
preferred stock and collateralized securities (such as CDOs and CMOs). &lt;/p&gt;
&lt;p&gt;Equities represent ownership interest held by shareholders in a corporation, 
such as a stock. 
Unlike holders of debt securities who generally receive only interest 
and the repayment of the principal, 
holders of equity securities are able to profit from capital gains. &lt;/p&gt;
&lt;p&gt;In the United States, 
the U.S. Securities and Exchange Commission (SEC) 
and other self-regulatory organizations 
(such as the Financial Industry Regulatory Authority) 
regulate the public offer and sale of securities.&lt;/p&gt;
&lt;h2 id="principal"&gt;Principal&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The amount borrowed or the amount still owed on a loan, separate from interest. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The original amount invested, separate from earnings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The face value of a bond.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The owner of a private company.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The main party to a transaction, 
acting as either a buyer or seller for his/her own account and risk. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Be sure to take into account the context in which this term is used, 
as the exact meaning of the term has many variations. &lt;/p&gt;
&lt;p&gt;Also referred to as "corpus."&lt;/p&gt;
&lt;h2 id="hedge-fund"&gt;Hedge Fund&lt;/h2&gt;
&lt;p&gt;An aggressively managed portfolio of investments 
that uses advanced investment strategies 
such as leveraged, long, short and derivative positions 
in both domestic and international markets 
with the goal of generating high returns 
(either in an absolute sense or over a specified market benchmark).&lt;/p&gt;
&lt;p&gt;Legally, hedge funds are most often set up as private investment partnerships 
that are open to a limited number of investors 
and require a very large initial minimum investment. 
Investments in hedge funds are illiquid 
as they often require investors keep their money in the fund for at least one year.&lt;/p&gt;
&lt;p&gt;For the most part, 
hedge funds (unlike mutual funds) are unregulated 
because they cater to sophisticated investors. 
In the U.S., laws require that the majority of investors in the fund be accredited. 
That is, 
they must earn a minimum amount of money annually 
and have a net worth of more than \$1 million, 
along with a significant amount of investment knowledge. 
You can think of hedge funds as mutual funds for the super rich. 
They are similar to mutual funds in that investments are pooled and professionally managed, 
but differ in that the fund has far more flexibility in its investment strategies.&lt;/p&gt;
&lt;p&gt;It is important to note that hedging is actually the practice of attempting to reduce risk, 
but the goal of most hedge funds is to maximize return on investment. 
The name is mostly historical, 
as the first hedge funds tried to hedge against the downside risk of a bear market 
by shorting the market 
(mutual funds generally can't enter into short positions as one of their primary goals). 
Nowadays, 
hedge funds use dozens of different strategies, 
so it isn't accurate to say that hedge funds just "hedge risk". 
In fact, because hedge fund managers make speculative investments, 
these funds can carry more risk than the overall market.&lt;/p&gt;
&lt;h2 id="total-return"&gt;Total Return&lt;/h2&gt;
&lt;p&gt;When measuring performance, 
the actual rate of return of an investment or a pool of investments 
over a given evaluation period. 
Total return includes interest, capital gains, dividends and distributions 
realized over a given period of time.&lt;/p&gt;
&lt;p&gt;Total return accounts for two categories of return: income and capital appreciation. 
Income includes interest paid by fixed-income investments, 
distributions or dividends. 
Capital appreciation represents the change in the market price of an asset.&lt;/p&gt;
&lt;h2 id="distribution"&gt;Distribution&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When trading volume is higher than that of the previous day without any price appreciation. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The removal of assets from a retirement account. 
The assets are then paid to the retirement account owner or beneficiary. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A company's payment of cash, stock or physical products to its shareholders. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distributions of income and capital gains 
that mutual funds make to their investors periodically during a calendar year.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A market that is in distribution has already hit its apex and is expected to decline. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The retirement account owner (or beneficiary) may be required to pay income tax 
on distributions received during the year. 
Early-distribution penalties may also apply 
if the distribution occurs while the retirement account owner is under the age of 59.5. 
While distributions from IRAs can occur at any time, 
certain requirements must be met before distributions can occur from qualified plans, 
457 plans and 403(b) accounts. 
Participants must check with their employers regarding the rules of the plan. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The income that is generated from an investment trust is given 
to investors through monthly or quarterly distributions. 
In this manner, distributions are similar to stock dividends; 
however, they usually offer much higher yields of up to 10% a year. 
The distributions received reduce a trust's taxable income and, 
therefore, little or no income tax is paid. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mutual funds pay out interest and dividend income received 
from their portfolio holdings as dividends (income distribution) to fund shareholders. 
In addition, capital gains from the portfolio's trading activities 
are generally paid out (capital gains distribution) at the end of the year.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="junk-bond-speculative-investment"&gt;Junk Bond (Speculative Investment)&lt;/h2&gt;
&lt;p&gt;A colloquial term for a high-yield or non-investment grade bond. 
Junk bonds are fixed-income instruments that carry a rating of 'BB' or lower 
by Standard &amp;amp; Poor's, 
or 'Ba' or below by Moody's. 
Junk bonds are so called because of their higher default risk 
in relation to investment-grade bonds. &lt;/p&gt;
&lt;p&gt;Junk bonds are risky investments, 
but have speculative appeal because they offer much higher yields than safer bonds. 
Companies that issue junk bonds typically have less-than-stellar credit ratings, 
and investors demand these higher yields as compensation for the risk of investing in them. 
A junk bond issued from a company that manages to turn its performance around for the better 
and has its credit rating upgraded will generally have a substantial price appreciation.&lt;/p&gt;
&lt;h2 id="investment-grade"&gt;Investment Grade&lt;/h2&gt;
&lt;p&gt;A rating that indicates that a municipal or corporate bond has a relatively low risk of default. 
Bond rating firms, 
such as Standard &amp;amp; Poor's, 
use different designations consisting of upper- and lower-case letters 'A' 
and 'B' to identify a bond's credit quality rating. 
'AAA' and 'AA' (high credit quality) and 'A' and 'BBB' (medium credit quality) 
are considered investment grade. 
Credit ratings for bonds below these designations ('BB', 'B', 'CCC', etc.) 
are considered low credit quality, 
and are commonly referred to as "junk bonds" (or sometimes speculative investment). &lt;/p&gt;
&lt;p&gt;Investors should note that government bonds, 
or Treasuries, are not subject to credit quality ratings. 
These securities are considered to be of the very highest credit quality. 
In the case of municipal and corporate bond funds, 
fund company literature, 
such as the fund prospectus and independent investment research reports 
will report an "average credit quality" for the fund's portfolio as a whole. &lt;/p&gt;
&lt;p&gt;Investors should be aware that an agency 
downgrade of a company's bonds from 'BBB' to 'BB' 
reclassifies its debt from investment grade to "junk" status 
with just a one-step drop in quality. 
The repercussions of such an event can be highly problematic for the issuer 
and can also adversely affect bond prices for investors. 
Safety-conscious fund investors should pay attention to a bond fund's 
portfolio credit quality breakdown.&lt;/p&gt;
&lt;h2 id="loss-given-default-lgd"&gt;Loss Given Default (LGD)&lt;/h2&gt;
&lt;p&gt;The amount of funds that is lost by a bank 
or other financial institution 
when a borrower defaults on a loan. 
Academics suggest that there are several methods 
for calculating the loss given default, 
but the most frequently used method 
compares actual total losses to the total potential exposure at the time of default. &lt;/p&gt;
&lt;p&gt;Of course, most banks don't simply calculate the LGD for one loan. 
Instead, they review their entire portfolio 
and determine LGD based on cumulative losses and exposure.&lt;/p&gt;
&lt;p&gt;Institutions such as banks will determine their credit losses 
through an analysis of the actual loan defaults. 
While quantifying some losses may be simple, 
in some situations it may be quite difficult 
and require the analysis of multiple variables. 
For example, if Bank X loans \&lt;span class="math"&gt;\(1 million to ABC Company 
and ABC defaults on the note, 
Bank X's loss isn't necessarily \\)&lt;/span&gt;1 million. 
This is because Bank X may hold substantial assets as collateral, 
and/or may use the courts in an effort to be made whole. 
When all of these variables are factored in, 
Bank X may have lost substantially less than the original \$1 million loan. 
The process of analyzing all of these variables 
(as well as all of the other loans in Bank X's portfolio) 
is paramount to determining the loss given default.&lt;/p&gt;
&lt;p&gt;Generally speaking, Banks loses more on credit card loans.&lt;/p&gt;
&lt;h2 id="portfolio"&gt;Portfolio&lt;/h2&gt;
&lt;p&gt;A grouping of financial assets such as stocks, bonds and cash equivalents, 
as well as their mutual, exchange-traded and closed-fund counterparts. 
Portfolios are held directly by investors and/or managed by financial professionals.&lt;/p&gt;
&lt;p&gt;Prudence suggests that investors should construct an investment portfolio 
in accordance with risk tolerance and investing objectives. 
Think of an investment portfolio as a pie 
that is divided into pieces of varying sizes representing a variety of asset classes 
and/or types of investments to accomplish an appropriate risk-return portfolio allocation.&lt;/p&gt;
&lt;p&gt;For example, 
a conservative investor might favor a portfolio with large cap value stocks, 
broad-based market index funds, 
investment-grade bonds and a position in liquid, 
high-grade cash equivalents. 
In contrast, a risk loving investor might add some small cap growth stocks 
to an aggressive, large cap growth stock position, 
assume some high-yield bond exposure, and look to real estate, international, 
and alternative investment opportunities for his or her portfolio.&lt;/p&gt;
&lt;h2 id="comprehensive-capitial-analysis-and-review-ccar"&gt;Comprehensive Capitial Analysis and Review (CCAR)&lt;/h2&gt;
&lt;p&gt;CCAR (pronounced as c-car) is an annual exercise 
by the Federal Reserve to ensure that institutions have robust, 
forward-looking capital planning processes that account for their unique risks and sufficient capital 
to continue operations throughout times of economic and financial stress. 
As part of the CCAR, the Federal Reserve evaluates institutions' capital adequacy, 
internal capital adequacy assessment processes, and their plans to make capital distributions, 
such as dividend payments or stock repurchases. 
The CCAR includes a supervisory stress test to support the Federal Reserve's analysis 
of the adequacy of the firms' capital. Boards of directors 
of the institutions are required each year to review 
and approve capital plans before submitting them to the Federal Reserve.&lt;/p&gt;
&lt;h2 id="macroeconomic-factor"&gt;Macroeconomic Factor&lt;/h2&gt;
&lt;p&gt;A factor that is pertinent to a broad economy at the regional or national level 
and affects a large population rather than a few select individuals. 
Macroeconomic factors such as economic output, unemployment, inflation, savings and investment 
are key indicators of economic performance 
and are closely monitored by governments, businesses and consumers. &lt;/p&gt;
&lt;p&gt;The interplay or relationship between various macroeconomic factors 
is the subject of a great deal of study in the field of macroeconomics. 
While macroeconomics deals with the economy as a whole, 
microeconomics is concerned with the study of individual agents 
such as consumers and businesses and their economic decision-making.&lt;/p&gt;
&lt;h2 id="commercial-real-estate-cre"&gt;Commercial Real Estate (CRE)&lt;/h2&gt;
&lt;p&gt;Property that is used solely for business purposes. 
Examples of commercial real estate include malls, 
office parks, restaurants, gas stations, convenience stores and office towers. 
Commercial real estate is one of the three primary types of real estate. 
The other types are residential real estate, 
which is used for living purposes; 
and industrial real estate, 
which is used for manufacturing and production. 
The businesses that occupy commercial real estate usually lease the space. 
An investor usually owns the building and collects rent from each business that operates there. &lt;/p&gt;
&lt;p&gt;There are four primary types of commercial real estate leases, 
each requiring different levels of responsibility 
from the landlord and the tenant. 
In addition to rent, 
a single net lease makes the tenant responsible for paying property taxes; 
a double-net (NN) lease makes the tenant responsible for paying property taxes and insurance; 
and a triple-net (NNN) lease makes the tenant responsible for 
paying property taxes, insurance and maintenance. 
Under a gross lease, the tenant pays only rent; 
the landlord pays for the building's property taxes, insurance and maintenance.&lt;/p&gt;
&lt;p&gt;Investing in commercial real estate often requires 
a considerable amount of startup capital and extensive knowledge 
of the legal, financial and regulatory aspects of owning this type of property. 
Investors who don't want to deal with these hassles directly 
can gain exposure to commercial real estate through real estate investment trusts (REITs).&lt;/p&gt;
&lt;h2 id="quater-over-quater-qoq"&gt;Quater Over Quater (QoQ)&lt;/h2&gt;
&lt;p&gt;A measuring technique that calculates the change between one financial quarter 
and the previous financial quarter. 
This is similar to the year-over-year measure, 
which compares the quarter of one year (Q1 2005) 
to the same quarter of the previous year (Q1 2004). 
The measure gives investors and analysts an idea of how a company is growing over each quarter.&lt;/p&gt;
&lt;p&gt;For example, 
the QOQ measure can be used to compare the earnings between quarters. 
Let's say that the ABC Company's first quarter earnings were \&lt;span class="math"&gt;\(1.50 per share 
and its second quarter earnings were \\)&lt;/span&gt;1.75 per share. 
This means that the company has grown its earnings 
by 16.6% quarter-on-quarter ((\&lt;span class="math"&gt;\(1.75-\\)&lt;/span&gt;1.50)/\$1.50), which is a good sign for investors.&lt;/p&gt;
&lt;h2 id="year-over-year-yoy"&gt;Year Over Year (YoY)&lt;/h2&gt;
&lt;p&gt;A method of evaluating two or more measured events 
to compare the results at one time period 
with those from another time period (or series of time periods), 
on an annualized basis. 
Year-over-year comparisons are a popular way 
to evaluate the performance of investments. 
Any measurable events that recur annually 
can be compared on a year-over-year basis - from annual performance, to quarterly performance, to daily performance.&lt;/p&gt;
&lt;p&gt;Year-over-year performance is frequently used by investors 
seeking to gauge whether a company's financial performance is improving or worsening. 
For example, a business may report that its revenues have increased 
for the third quarter on a year-over-year basis for the last three years. 
This means that revenues at that company in the third quarter of year three 
were higher than revenues in the third quarter in year two, 
which were higher than revenues in the third quarter of year one.&lt;/p&gt;
&lt;p&gt;As another example, 
a mutual fund that returned 50% last year may have a YOY return of 12%, 
as the year-over-year return takes into account each annual return since the fund's inception.&lt;/p&gt;
&lt;h2 id="stress-testing"&gt;Stress Testing&lt;/h2&gt;
&lt;p&gt;A simulation technique used on asset 
and liability portfolios to determine their reactions to different financial situations. 
Stress tests are also used to gauge how certain stressors will affect a company or industry. 
They are usually computer-generated simulation models that test hypothetical scenarios. 
This is also known as a "stress test".&lt;/p&gt;
&lt;p&gt;Stress testing is a useful method 
for determining how a portfolio will fare during a period of financial crisis. 
The Monte Carlo simulation is one of the most widely used methods of stress testing. &lt;/p&gt;
&lt;p&gt;A stress test is also used to evaluate the strength of institutions. 
For example, the Treasury Department could run stress tests on banks 
to determine their financial condition. 
Banks often run these tests on themselves. 
Changing factors could include interest rates, lending requirements or unemployment.&lt;/p&gt;
&lt;p&gt;Default Rate/Probability of Default (PD)/Expected Default Frequency (EDF)&lt;/p&gt;
&lt;p&gt;This rate can be used in reference to two main things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The rate of borrowers who fail to remain current on their loans. 
It is a critical piece of information used by lenders 
to determine their risk exposure and economists 
to evaluate the health of the overall economy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The interest rate charged to a borrower 
when payments on a revolving line of credit are overdue. 
This higher rate is applied to outstanding balances in arrears 
in addition to the regular interest charges for the debt.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Prior to passage of the Credit Card Accountability, 
Responsibility and Disclosure (CARD) Act of 2009, 
the language in some credit card agreements allowed credit card companies 
to hike the interest charged on the card balance to the default rate 
even if consumers were current on their account 
but had an outstanding balance on another credit card (a practice known as "universal default"). &lt;/p&gt;
&lt;p&gt;The law, 
which took effect in the fall of 2009 imposed sweeping new restrictions 
on the credit industry, including the elimination of the universal default rate.&lt;/p&gt;
&lt;h2 id="constant-default-rate-cdr"&gt;Constant Default Rate (CDR)&lt;/h2&gt;
&lt;p&gt;An annualized rate of default on a group of mortgages, 
typically within a collateralized product such as a mortgage-backed security (MBS). 
The constant default rate represents the percentage 
of outstanding principal balances in the pool that are in default, 
which typically equates to the home being past 60-day 
and 90-day notices and in the foreclosure process. &lt;/p&gt;
&lt;p&gt;The constant default rate analysis assumes that 
if a home is in foreclosure (a process that can take 12 months or more to complete), 
the interest and principal payments 
are being advanced into the MBS by the mortgage servicing company. &lt;/p&gt;
&lt;p&gt;The CDR method for evaluating losses is one of several methods 
used by analysts and company controllers 
to determine the current market value or asset value of a mortgage-backed security. 
The CDR method can account for both fixed-rate and adjustable-rate mortgages. &lt;/p&gt;
&lt;p&gt;Another method is the Standard Default Assumption (SDA) model 
created by the Bond Market Association, 
but this is more suited to standard 30-year fixed mortgages. 
In the mortgage crisis of 2007-2008, 
the SDA model proved to have vastly underestimated the true rate of default; 
foreclosure rates hit multi-decade highs during that period.&lt;/p&gt;
&lt;h2 id="commercial-and-industrial-ci-loan"&gt;Commercial and Industrial (C&amp;amp;I) Loan&lt;/h2&gt;
&lt;p&gt;Any type of loan made to a business or corporation 
and not to an individual. 
Commercial and industrial loans can be made 
in order to provide either working capital or to finance major capital expenditures. 
This type of loan is usually short-term in nature 
and is almost always backed with some sort of collateral.&lt;/p&gt;
&lt;p&gt;Commercial loans usually charge flexible rates of interest 
that are tied to the bank prime rate or else to the LIBOR. 
Many borrowers must also file regular financial statements, 
usually at least annually. 
Lenders also usually require proper maintenance of the loan collateral property.&lt;/p&gt;
&lt;h2 id="capital-commitment"&gt;Capital Commitment&lt;/h2&gt;
&lt;p&gt;Future capital expenditures that a company has committed 
to spend on long-term assets over a period of time. 
Capital commitment also refers to securities inventory carried by a market maker. 
The term may also refer to investments in blind pool funds by venture capital investors, 
which they contribute over time when requested to do so by the fund manager.&lt;/p&gt;
&lt;p&gt;A company has to exercise the ultmost care in structuring its capital commitments, 
since an inordinately high amount will put undue strain on its finances. 
It would need to ensure that operating cash flow is sufficient to meet capital expenditures, 
and if it is not, 
make arrangements to ensure that it can raise the additional funds on the capital markets. 
Capital commitments are generally the highest for companies in capital-intensive industries 
such as power generation.&lt;/p&gt;
&lt;h2 id="loan-commitment"&gt;Loan Commitment&lt;/h2&gt;
&lt;p&gt;A loan amount that may be drawn down, 
or is due to be contractually funded in the future. 
Loan commitments are found at commercial banks 
and other lending institutions and consist of both open-end and closed-end loans. 
Open-end loan commitments act like revolving credit lines, 
whereby if a portion of the loan is paid off, 
the principle repayment amount is added back to the allowable loan limit. 
Closed-end loans are reduced once any repayments are made. &lt;/p&gt;
&lt;p&gt;Banks and investment shops must account for the value of 
outstanding loan commitments so that funds are available should the borrower request them. 
They represent a future obligation in full, 
even though a percentage of the notional loan amounts 
will never be utilized by the borrowers themselves. 
Also known as "unfunded loan commitments," 
because the total capital outlay is not provided by the lender up front. &lt;/p&gt;
&lt;p&gt;The aggregate loan commitments of commercial banks, 
savings &amp;amp; loans and investments banks registered in the United States 
must be disclosed on quarterly financial reports to regulators at the FDIC. 
These reports are known as the "Call Reports" 
and can be found either through the FDIC or the lender's corporate website.&lt;/p&gt;
&lt;p&gt;Loan commitments get increased attention during times of economic weakness, 
as more borrowers delay making repayments 
and may draw down the max on their revolving credit lines. 
This decreases the return the bank can earn on the capital deployed. 
The same is true for many construction loans, 
which are typically classified as closed-end loan commitments.&lt;/p&gt;
&lt;h2 id="committed-capital"&gt;Committed Capital&lt;/h2&gt;
&lt;p&gt;A contractual agreement between an investor and a venture-capital fund 
that obligates the investor to contribute money to the fund. 
The investor may pay all of the committed capital at one time, 
or make contributions over a period of time. 
This often takes place over a number of years.
Also known as "commitments".&lt;/p&gt;
&lt;p&gt;When an investor commits capital to a venture capital fund, 
the investor typically has many years to satisfy the agreement. 
Often, contributions will be made over a period of three to five years after the fund is formed. &lt;/p&gt;
&lt;p&gt;The private equity market can be viewed as riskier than the public equity market, 
as returns in the private market tend to have higher dispersion of returns 
than the public market. 
Therefore, 
investing in the right business ventures can offer substantial rewards for top tier funds.&lt;/p&gt;
&lt;h2 id="commitment-fee"&gt;Commitment Fee&lt;/h2&gt;
&lt;p&gt;A fee charged by a lender to a borrower for an unused credit line or undisbursed loan. 
A commitment fee is generally specified as a fixed percentage of the undisbursed loan amount. 
The lender charges a commitment fee as compensation for keeping a line of credit open 
or to guarantee a loan at a specific date in future. 
The borrower pays the fee in return for the assurance that the lender 
will supply the loan funds at the specified future date 
and at the contracted interest rate, 
regardless of conditions in the financial and credit markets. &lt;/p&gt;
&lt;p&gt;A commitment fee is different from interest; 
although, the two are often confused. 
A commitment fee is separate from the interest rate that is charged by the lender on the loan. 
A key distinction is that the commitment fee is charged on the undisbursed loan amount, 
while interest is charged on the disbursed amount of the loan. &lt;/p&gt;
&lt;h2 id="forward-commitment"&gt;Forward Commitment&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A contract pertaining to the future sale or purchase of a security. 
Price and date are specified in the contract. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A formal promise to make a loan sometime in the future. 
It typically refers to a mortgage-backed security 
where the funds are usually needed at a later date. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A formal commitment in the form of a future security sale or purchase 
allows both parties to omit the risk pertaining to stock price volatility. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A formal commitment can provide the borrower 
with the security of knowing they will have the funds 
when they need them as well as give the lender the ability to forecast future business.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="take-out-commitment"&gt;Take-Out Commitment&lt;/h2&gt;
&lt;p&gt;A specific type of mortgage purchase agreement. 
Under a take-out commitment, 
a long-term investor agrees to buy a mortgage from a mortgage banker 
at a specific date in the future. 
Take-out commitments are enforced once a project reaches a particular stage 
where long-term, rather than short-term, financing is the preferred alternative.&lt;/p&gt;
&lt;p&gt;There are a few specific types of investors 
that purchase take-out commitments. 
In most cases, 
these are insurance companies or other financial institutions. 
They are known as "take-out lenders."&lt;/p&gt;
&lt;h2 id="average-outstanding-balance-aob"&gt;Average Outstanding Balance (AOB)&lt;/h2&gt;
&lt;p&gt;The unpaid, 
interest-bearing balance of a loan or loan portfolio averaged over a period of time, 
usually one month. 
The average outstanding balance refers to any term, 
instalment, revolving or credit card debt on which interest is charged.&lt;/p&gt;
&lt;p&gt;The average outstanding balance on credit cards and loans 
is a critical factor in a consumer's credit rating. 
Average outstanding balances on credit cards 
are reported to credit agencies monthly on active accounts, 
along with any amounts that are past due.&lt;/p&gt;
&lt;h2 id="outstanding-shares"&gt;Outstanding Shares&lt;/h2&gt;
&lt;p&gt;Stock currently held by investors, 
including restricted shares owned by the company's officers and insiders, 
as well as those held by the public. 
Shares that have been repurchased by the company are not considered outstanding stock. &lt;/p&gt;
&lt;p&gt;This number is shown on a company's balance sheet under the heading "Capital Stock" 
and is more important than the authorized shares or float. 
It is used to calculate many metrics, 
including market capitalization and earnings per share (EPS).&lt;/p&gt;
&lt;h2 id="net-debt"&gt;Net Debt&lt;/h2&gt;
&lt;p&gt;A metric that shows a company's overall debt situation 
by netting the value of a company's liabilities and debts with its cash 
and other similar liquid assets. &lt;/p&gt;
&lt;p&gt;When investing in a company, 
one of the most important factors you need to consider 
is how much debt the company is carrying. 
Here are some questions to ask yourself when analyzing a company's debt: 
How much debt really exists? 
What kind of debt is it (long/short-term maturities)? 
What is the debt for (repay or refinance old debts)? 
Can the company afford the debt if it runs into financial trouble? 
And, finally, how does it compare to the debt levels of competing companies?&lt;/p&gt;
&lt;h2 id="net-worth"&gt;Net Worth&lt;/h2&gt;
&lt;p&gt;The amount by which assets exceed liabilities. 
Net worth is a concept applicable to individuals and businesses 
as a key measure of how much an entity is worth. 
A consistent increase in net worth indicates good financial health; 
conversely, net worth may be depleted by annual operating losses 
or a substantial decrease in asset values relative to liabilities. 
In the business context, 
net worth is also known as book value or shareholders' equity.&lt;/p&gt;
&lt;p&gt;Consider a couple with the following assets.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;primary residence valued at \$250,000 &lt;/li&gt;
&lt;li&gt;an investment portfolio with a market value of \$100,000 &lt;/li&gt;
&lt;li&gt;automobiles and other assets valued at \$25,000 &lt;/li&gt;
&lt;li&gt;liabilities are primarily an outstanding mortgage balance of \&lt;span class="math"&gt;\(100,000 and a car loan of \\)&lt;/span&gt;10,000 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The couple's net worth would therefore be &lt;/p&gt;
&lt;div class="math"&gt;$$
$265,000 ([\$250,000 + \$100,000 + \$25,000] - [\$100,000 + \$10,000]). 
$$&lt;/div&gt;
&lt;p&gt;Assume that five years later, 
the couple's financial position is as follows &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;residence value \$225,000 &lt;/li&gt;
&lt;li&gt;investment portfolio \$120,000&lt;/li&gt;
&lt;li&gt;savings \$20,000&lt;/li&gt;
&lt;li&gt;automobile and other assets \$15,000&lt;/li&gt;
&lt;li&gt;mortgage loan balance \$80,000&lt;/li&gt;
&lt;li&gt;car loan \$0 (paid off)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The net worth would now be \&lt;span class="math"&gt;\(300,000. 
In other words, the couple's net worth has gone up by \\)&lt;/span&gt;35,000 
despite the decrease in the value of their residence and car, 
because this decline is more than offset by increases 
in other assets (such as the investment portfolio and savings) 
as well as the decrease in their liabilities. &lt;/p&gt;
&lt;p&gt;People with a substantial net worth are known as high net worth individuals, 
and form the prime market for wealth managers and investment counselors. 
Investors with a net worth (excluding their primary residence) of 
at least \$1 million - either alone or together with their spouse - 
are considered as "accredited investors" by the Securities and Exchange Commission, 
for the purpose of investing in unregistered securities offerings. 
A company that is consistently profitable will have a rising net worth or book value, 
as long as these earnings are not fully distributed to shareholders 
but are retained in the business. 
For public companies, 
rising book values over time may be rewarded by an increase in stock market value. &lt;/p&gt;
&lt;h2 id="exposure-at-default-ead"&gt;Exposure At Default (EAD)&lt;/h2&gt;
&lt;p&gt;A total value that a bank is exposed to at the time of default. 
Each underlying exposure that a bank has is given an EAD value 
and is identified within the bank's internal system. 
Using the internal ratings board (IRB) approach, 
financial institutions will often use their own risk management default models 
to calculate their respective EAD systems.&lt;/p&gt;
&lt;p&gt;Exposure at default (along with loss given default (LGD) and probability of default (PD)) 
is used to calculate the credit risk capital of financial institutions. 
The expected loss that will arise at default 
is often measured over one year. 
The calculation of EAD is done by multiplying each credit obligation by an appropriate percentage. 
Each percentage used coincides with the specifics of each respective credit obligation.&lt;/p&gt;
&lt;h2 id="public-companyfirm"&gt;Public Company/Firm&lt;/h2&gt;
&lt;p&gt;A company that has issued securities through an initial public offering (IPO) 
and is traded on at least one stock exchange or in the over the counter market. 
Although a small percentage of shares may be initially "floated" to the public, 
the act of becoming a public company allows the market 
to determine the value of the entire company through daily trading. &lt;/p&gt;
&lt;p&gt;Public companies have inherent advantages over private companies, 
including the ability to sell future equity stakes 
and increased access to the debt markets. 
With these advantages, 
however, 
comes increased regulatory scrutiny 
and less control for majority owners and company founders.&lt;/p&gt;
&lt;p&gt;Once a company goes public, 
it has to answer to its shareholders. 
For example, 
certain corporate structure changes and amendments must be brought up 
for shareholder vote. 
Shareholders can also vote with their dollars by bidding up the company 
to a premium valuation or selling it to a level below its intrinsic value. &lt;/p&gt;
&lt;p&gt;Public companies must meet stringent reporting requirements set out 
by the Securities and Exchange Commission (SEC), 
including the public disclosure of financial statements 
and annual 10-k reports discussing the state of the company. 
Each stock exchange also has specific financial 
and reporting guidelines that govern whether a stock is allowed to be listed for trading.&lt;/p&gt;
&lt;h2 id="private-companyfirm"&gt;Private Company/Firm&lt;/h2&gt;
&lt;p&gt;A company whose ownership is private. 
As a result, 
it does not need to meet the strict Securities 
and Exchange Commission filing requirements of public companies.&lt;/p&gt;
&lt;p&gt;Private companies may issue stock and have shareholders. 
However, their shares do not trade on public exchanges 
and are not issued through an initial public offering. 
In general, 
the shares of these businesses are less liquid 
and the values are difficult to determine.&lt;/p&gt;
&lt;h2 id="private-equity"&gt;Private Equity&lt;/h2&gt;
&lt;p&gt;Equity capital that is not quoted on a public exchange. 
Private equity consists of investors and funds 
that make investments directly into private companies 
or conduct buyouts of public companies that result in a delisting of public equity. 
Capital for private equity is raised from retail and institutional investors, 
and can be used to fund new technologies, 
expand working capital within an owned company, 
make acquisitions, or to strengthen a balance sheet. &lt;/p&gt;
&lt;p&gt;The majority of private equity consists of institutional investors 
and accredited investors who can commit large sums of money for long periods of time. 
Private equity investments often demand long holding periods 
to allow for a turnaround of a distressed company 
or a liquidity event such as an IPO or sale to a public company.&lt;/p&gt;
&lt;p&gt;The size of the private equity market has grown steadily since the 1970s. 
Private equity firms will sometimes pool funds together 
to take very large public companies private. 
Many private equity firms conduct what are known as leveraged buyouts (LBOs), 
where large amounts of debt are issued to fund a large purchase. 
Private equity firms will then try to improve the financial results 
and prospects of the company in the hope of reselling the company 
to another firm or cashing out via an IPO.&lt;/p&gt;
&lt;h2 id="gross-domestic-product-gdp"&gt;Gross Domestic Product (GDP)&lt;/h2&gt;
&lt;p&gt;The monetary value of all the finished goods and services produced 
within a country's borders in a specific time period, 
though GDP is usually calculated on an annual basis. 
It includes all of private and public consumption, 
government outlays, 
investments and exports less imports that occur within a defined territory.&lt;/p&gt;
&lt;div class="math"&gt;$$
GDP = C + G + I + NX
$$&lt;/div&gt;
&lt;p&gt;where:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(C\)&lt;/span&gt; is equal to all private consumption, or consumer spending, in a nation's economy;
&lt;span class="math"&gt;\(G\)&lt;/span&gt; is the sum of government spending;
&lt;span class="math"&gt;\(I\)&lt;/span&gt; is the sum of all the country's businesses spending on capital;
&lt;span class="math"&gt;\(NX\)&lt;/span&gt; is the nation's total net exports, 
calculated as total exports minus total imports. (&lt;span class="math"&gt;\(NX = Exports - Imports\)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;GDP is commonly used as an indicator of the economic health of a country, 
as well as to gauge a country's standard of living. 
Critics of using GDP as an economic measure 
say the statistic does not take into account the underground economy 
(transactions that, for whatever reason, are not reported to the government). 
Others say that GDP is not intended to gauge material well-being, 
but serves as a measure of a nation's productivity, which is unrelated.&lt;/p&gt;
&lt;h2 id="credit-spread"&gt;Credit Spread&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The spread between Treasury securities 
and non-Treasury securities that are identical in all respects except for quality rating. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An options strategy where a high premium option is sold 
and a low premium option is bought on the same underlying security.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For instance, 
the difference between yields on treasuries and those on single A-rated industrial bonds. 
A company must offer a higher return on their bonds 
because their credit is worse than the government's. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An example would be buying a Jan 50 call on ABC for \&lt;span class="math"&gt;\(2, 
and writing a Jan 45 call on ABC for \\)&lt;/span&gt;5. 
The net amount received (credit) is \$3. 
The investor will profit if the spread narrows. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Can also be called "credit spread option" or "credit risk option".&lt;/p&gt;
&lt;p&gt;(For my intern at Union Bank: Defined as the differeence 
between the interest of Moody's BAA rate cooperate bond and that of the US 10-year treausy.)&lt;/p&gt;
&lt;h2 id="house-price-index-hpi"&gt;House Price Index (HPI)&lt;/h2&gt;
&lt;p&gt;A broad measure of the movement of single-family house prices in the U.S. 
Apart from serving as an indicator of house price trends, 
the House Price Index (HPI) provides an analytical tool for estimating changes 
in the rates of mortgage defaults, 
prepayments and housing affordability. 
The HPI is published by the Federal Housing Finance Agency (FHFA) 
using data supplied by Fannie Mae and Freddie Mac.&lt;/p&gt;
&lt;p&gt;The HPI is based on transactions involving conventional 
and conforming mortgages (only on single-family properties) 
that have been purchased or securitized by Fannie Mae or Freddie Mac. 
It is a weighted, repeat-sales index, 
which means that it measures average price changes in repeat sales 
or refinancings on the same properties. 
A comprehensive HPI report is published every quarter, 
while a monthly report has been published from March 2008. &lt;/p&gt;
&lt;p&gt;The HPI differs from the well-known S&amp;amp;P/Case-Shiller Home Price Indexes 
in a number of ways. 
For example, 
while the Case-Shiller indexes only use purchase prices, 
the all-transactions HPI also includes refinance appraisals. &lt;/p&gt;
&lt;h2 id="dow-jones-industrial-average-djia"&gt;Dow Jones Industrial Average (DJIA)&lt;/h2&gt;
&lt;p&gt;The Dow Jones Industrial Average is a price-weighted average 
of 30 significant stocks traded on the New York Stock Exchange and the Nasdaq. 
The DJIA was invented by Charles Dow back in 1896. &lt;/p&gt;
&lt;p&gt;Often referred to as "the Dow," the DJIA is one of the oldest 
and single most watched index in the world. 
The DJIA includes companies like General Electric, Disney, Exxon and Microsoft. 
When the TV networks say "the market is up today," they are generally referring to the Dow.&lt;/p&gt;
&lt;h2 id="standard-poors-500-index-sp-500"&gt;Standard &amp;amp; Poor's 500 Index - S&amp;amp;P 500&lt;/h2&gt;
&lt;p&gt;An index of 500 stocks chosen for market size, 
liquidity and industry grouping, among other factors. 
The S&amp;amp;P 500 is designed to be a leading indicator of U.S. equities 
and is meant to reflect the risk/return characteristics of the large cap universe. &lt;/p&gt;
&lt;p&gt;Companies included in the index are selected by the S&amp;amp;P Index Committee, 
a team of analysts and economists at Standard &amp;amp; Poor's. 
The S&amp;amp;P 500 is a market value weighted index 
(each stock's weight is proportionate to its market value).&lt;/p&gt;
&lt;p&gt;The S&amp;amp;P 500 is one of the most commonly used benchmarks for the overall U.S. stock market. 
The Dow Jones Industrial Average (DJIA) was at one time the most renowned index for U.S. stocks, 
but because the DJIA contains only 30 companies, 
most people agree that the S&amp;amp;P 500 is a better representation of the U.S. market. 
In fact, many consider it to be the definition of the market.&lt;/p&gt;
&lt;p&gt;Other popular Standard &amp;amp; Poor's indexes include the S&amp;amp;P 600, 
an index of small cap companies with market capitalizations 
between \&lt;span class="math"&gt;\(300 million and \\)&lt;/span&gt;2 billion, 
and the S&amp;amp;P 400, 
an index of mid cap companies with market capitalizations of \&lt;span class="math"&gt;\(2 billion to \\)&lt;/span&gt;10 billion.&lt;/p&gt;
&lt;p&gt;A number of financial products based on the S&amp;amp;P 500 are available to investors. 
These include index funds and exchange-traded funds. 
However, it would be difficult for individual investors to buy the index, 
as this would entail buying 500 different stocks.&lt;/p&gt;
&lt;h2 id="west-texas-intermediate-wti"&gt;West Texas Intermediate (WTI)&lt;/h2&gt;
&lt;p&gt;Light, sweet crude oil commonly referred to as "oil" in the Western world. 
WTI is the underlying commodity of the New York Merchantile Exchange's oil futures contracts.&lt;/p&gt;
&lt;p&gt;WTI is considered a "sweet" crude because it is about 0.24% sulfur, 
a lower concentration than North Sea Brent crude. 
WTI is high quality oil that is easily refined.&lt;/p&gt;
&lt;h2 id="brent-blend"&gt;Brent Blend&lt;/h2&gt;
&lt;p&gt;A type of sweet crude oil that is used as a benchmark for the prices of other crude oils. 
Brent blend is most often found in parts of the North Sea off the coast of the U.K. 
and Norway. 
Brent blend makes up more than half of the world's globally traded supply of crude oil, 
which is why it makes an obvious choice for the benchmark of crude oil.&lt;/p&gt;
&lt;p&gt;As previously mentioned, 
the brent blend is a mix of crude oil from several facilities 
in the Ninian and Brent fields on the North Sea. 
Much like the other internationally recognized benchmark for crude oil, 
West Texas Intermediate, 
the Brent blend is a light and sweet crude oil, 
though not as light or sweet as WTI. 
Brent futures are traded on both the ICE and NYMEX exchanges, 
with delivery dates for all 12 months of the year.&lt;/p&gt;
&lt;h2 id="index"&gt;Index&lt;/h2&gt;
&lt;p&gt;A statistical measure of change in an economy or a securities market. 
In the case of financial markets, 
an index is an imaginary portfolio of securities 
representing a particular market or a portion of it. 
Each index has its own calculation methodology 
and is usually expressed in terms of a change from a base value. 
Thus, the percentage change is more important than the actual numeric value. &lt;/p&gt;
&lt;p&gt;Stock and bond market indexes are used to construct index mutual funds 
and exchange-traded funds (ETFs) whose portfolios mirror the components of the index.&lt;/p&gt;
&lt;p&gt;The Standard &amp;amp; Poor's 500 is one of the world's best known indexes, 
and is the most commonly used benchmark for the stock market. 
Other prominent indexes include the DJ Wilshire 5000 (total stock market), 
the MSCI EAFE (foreign stocks in Europe, Australasia, Far East) 
and the Lehman Brothers Aggregate Bond Index (total bond market).&lt;/p&gt;
&lt;p&gt;Because, technically, you can't actually invest in an index, 
index mutual funds and exchange-traded funds (based on indexes) 
allow investors to invest in securities 
representing broad market segments and/or the total market.&lt;/p&gt;
&lt;h2 id="compound-annual-growth-rate-cagr"&gt;Compound Annual Growth Rate (CAGR)&lt;/h2&gt;
&lt;p&gt;The year-over-year growth rate of an investment over a specified period of time.
The compound annual growth rate is calculated by taking the nth root 
of the total percentage growth rate, 
where n is the number of years in the period being considered.&lt;/p&gt;
&lt;p&gt;This can be written as follows:&lt;/p&gt;
&lt;div class="math"&gt;$$
CAGR = \left(\frac{\text{Ending Value}}{\text{Begining Value}}\right)^{\frac{1}{\text{number of years}}} - 1
$$&lt;/div&gt;
&lt;p&gt;CAGR isn't the actual return in reality. 
It's an imaginary number that describes the rate 
at which an investment would have grown if it grew at a steady rate. 
You can think of CAGR as a way to smooth out the returns.&lt;/p&gt;
&lt;p&gt;Don't worry if this concept is still fuzzy to you.
CAGR is one of those terms best defined by example. 
Suppose you invested \&lt;span class="math"&gt;\(10,000 in a portfolio on Jan 1, 2005. 
Let's say by Jan 1, 2006, 
your portfolio had grown to \\)&lt;/span&gt;13,000, 
then \&lt;span class="math"&gt;\(14,000 by 2007, and finally ended up at \\)&lt;/span&gt;19,500 by 2008.&lt;/p&gt;
&lt;p&gt;Your CAGR would be 
&lt;/p&gt;
&lt;div class="math"&gt;$$
(\frac{19500}{10,000})^{\frac{1}{3}} - 1 = 0.2493
$$&lt;/div&gt;
&lt;p&gt;
Thus, your CAGR for your three-year investment is equal to 24.93%, 
representing the smoothed annualized gain you earned over your investment time horizon.&lt;/p&gt;
&lt;h2 id="average-annual-growth-rate-aagr"&gt;Average Annual Growth Rate (AAGR)&lt;/h2&gt;
&lt;p&gt;The average increase in the value of an individual investment or portfolio 
over the period of a year. 
It is calculated by taking the arithmetic mean of the growth rate over two annual periods. 
The average annual growth rate can be calculated for any investment, 
but will not include any measure of the investment's overall risk, 
as measured by its price volatility.&lt;/p&gt;
&lt;p&gt;For example, 
if your portfolio grows 10% one year and 20% the next, 
your AAGR would be 15%. 
To this end, 
fluctuations in the portfolio's rate of return 
between the beginning of the first year and the end 
of the year are not included in the calculations, 
which may lead to some measurement error. &lt;/p&gt;
&lt;p&gt;To reduce any possible measurement error, 
an analyst can simply take the average price at the beginning 
and end of the two measurement periods, 
and use those average prices to determine each year's return, 
and then the AAGR.&lt;/p&gt;
&lt;p&gt;Moody's&lt;/p&gt;
&lt;p&gt;An independent, 
unaffiliated research company that rates fixed income securities. 
Moody's assigns ratings on the basis of risk 
and the borrower's ability to make interest payments. 
Moody's backs its ratings with exhaustive financial research 
and unbiased commentary and analysis.&lt;/p&gt;
&lt;p&gt;Many bond investors pay close attention to the rating Moody assigns to bonds 
and preferred stock. 
Moody's ratings are ranked as follows:&lt;/p&gt;
&lt;p&gt;AAA - highest grade, best quality issuer, lowest risk 
AA&lt;br&gt;
A&lt;br&gt;
BAA - medium grade, moderate risk
BA&lt;br&gt;
B&lt;br&gt;
CAA - Poor grade, high risk&lt;br&gt;
CA&lt;br&gt;
C  &lt;/p&gt;
&lt;h2 id="financial-statements"&gt;Financial Statements&lt;/h2&gt;
&lt;p&gt;Records that outline the financial activities of a business, 
an individual or any other entity. 
Financial statements are meant to present the financial information 
of the entity in question as clearly 
and concisely as possible for both the entity and for readers. 
Financial statements for businesses usually include: 
income statements, balance sheet, statements of retained earnings 
and cash flows, as well as other possible statements.&lt;/p&gt;
&lt;p&gt;It is a standard practice for businesses to present financial statements 
that adhere to generally accepted accounting principles (GAAP), 
to maintain continuity of information and presentation across international borders. 
As well, financial statements are often audited 
by government agencies, accountants, firms, etc. 
to ensure accuracy and for tax, financing or investing purposes. 
Financial statements are integral to ensuring accurate 
and honest accounting for businesses and individuals alike.&lt;/p&gt;
&lt;h2 id="income-statement"&gt;Income Statement&lt;/h2&gt;
&lt;p&gt;A financial statement that measures a company's financial performance 
over a specific accounting period. 
Financial performance is assessed by giving a summary 
of how the business incurs its revenues and expenses through 
both operating and non-operating activities. 
It also shows the net profit or loss incurred over a specific accounting period, 
typically over a fiscal quarter or year.&lt;/p&gt;
&lt;p&gt;Also known as the "profit and loss statement" or "statement of revenue and expense."&lt;/p&gt;
&lt;p&gt;The income statement is the one of the three major financial statements. 
The other two are the balance sheet and the statement of cash flows. 
The income statement is divided into two parts: the operating and non-operating sections.&lt;/p&gt;
&lt;p&gt;The portion of the income statement that deals with operating items 
is interesting to investors and analysts alike 
because this section discloses information about revenues and expenses 
that are a direct result of the regular business operations. 
For example, if a business creates sports equipment, 
then the operating items section would talk about the revenues 
and expenses involved with the production of sports equipment.&lt;/p&gt;
&lt;p&gt;The non-operating items section discloses revenue 
and expense information about activities that are not tied directly 
to a company's regular operations. 
For example, 
if the sport equipment company sold a factory 
and some old plant equipment, 
then this information would be in the non-operating items section.&lt;/p&gt;
&lt;h2 id="debt-service-coverage-ratio-dscr"&gt;Debt-Service Coverage Ratio (DSCR)&lt;/h2&gt;
&lt;p&gt;In corporate finance, 
it is the amount of cash flow available to meet annual interest 
and principal payments on debt, including sinking fund payments. &lt;/p&gt;
&lt;p&gt;In government finance, 
it is the amount of export earnings needed to meet annual interest 
and principal payments on a country's external debts. &lt;/p&gt;
&lt;p&gt;In personal finance, 
it is a ratio used by bank loan officers in determining income property loans. 
This ratio should ideally be over 1. 
That would mean the property is generating enough income to pay its debt obligations. &lt;/p&gt;
&lt;p&gt;In general, it is calculated by: &lt;/p&gt;
&lt;div class="math"&gt;$$
DSCR = \frac{\text{Net Operating Income}}{\text{Total Debt Service}}
$$&lt;/div&gt;
&lt;p&gt;A DSCR of less than 1 would mean a negative cash flow. 
A DSCR of less than 1, say .95, 
would mean that there is only enough net operating income to cover 95% of annual debt payments. 
For example, 
in the context of personal finance, 
this would mean that the borrower would have to delve into his 
or her personal funds every month to keep the project afloat. 
Generally, lenders frown on a negative cash flow, 
but some allow it if the borrower has strong outside income.&lt;/p&gt;
&lt;h2 id="debt-to-income-ratio-dti"&gt;Debt-To-Income Ratio (DTI)&lt;/h2&gt;
&lt;p&gt;A personal finance measure that compares an individual's debt payments 
to the income he or she generates. 
This measure is important in the lending industry 
as it gives lenders an idea of how likely it is that the borrower will repay the loan.&lt;/p&gt;
&lt;p&gt;The higher this ratio, 
the more burden there is on the individual to make payments on his or her debts. 
If the ratio is too high, 
the individual will have a hard time accessing other forms of financing.&lt;/p&gt;
&lt;h2 id="gross-debt-service-ratio-gds"&gt;Gross Debt Service Ratio (GDS)&lt;/h2&gt;
&lt;p&gt;A debt service measure that financial lenders use 
as a rule of thumb to give a preliminary assessment 
about whether a potential borrower is already in too much debt. 
Receiving a ratio of less than 30% means that the potential borrower 
has an acceptable level of debt.&lt;/p&gt;
&lt;p&gt;Calculated as:&lt;/p&gt;
&lt;div class="math"&gt;$$
GDS = \frac{\text{Annual Mortgage Payments + Property Taxes}}{\text{Gross Family Income}}
$$&lt;/div&gt;
&lt;p&gt;For example, 
Jack and Jill, 
two law students, 
have a monthly mortgage payment of \&lt;span class="math"&gt;\(1,000 (annual payment of \\)&lt;/span&gt;12,000), 
property taxes of \&lt;span class="math"&gt;\(3,000 and a gross family income of \\)&lt;/span&gt;45,000. 
This would give a GDS of 33 %. 
Based on the benchmark of 30%, 
Jack and Jill appear to be carrying an unacceptable amount of debt.&lt;/p&gt;
&lt;p&gt;Keep in mind that this ratio is only a very rough benchmark. 
The acceptance of a loan application is not solely determined by this ratio. 
Since this is a very simple ratio, 
there are a lot of subsequent factors that lenders consider. 
For example, 
even though Jack and Jill's GDS is above the benchmark, 
a lender may still lend to Jack and Jill 
because of their future earning potential as lawyers. 
When combined with other personal information, 
GDS can be a good way for lenders to screen borrowers.&lt;/p&gt;
&lt;h2 id="total-debt-service-ratio-tds"&gt;Total Debt Service Ratio (TDS)&lt;/h2&gt;
&lt;p&gt;A debt service measure that financial lenders use 
as a rule of thumb to give a preliminary assessment of 
whether a potential borrower is already in too much debt. 
More specifically, 
this ratio shows the proportion of gross income 
that is already spent on housing-related and other similar payments. &lt;/p&gt;
&lt;p&gt;Receiving a ratio of less than 40% means that the potential borrower 
has an acceptable level of debt.&lt;/p&gt;
&lt;div class="math"&gt;$$
TDS = \frac{\text{Annual Mortgage Payments} + \text{Propety Taxes} + \text{Other Debt Payments}}{\text{Gross Family Income}}
$$&lt;/div&gt;
&lt;p&gt;For example, 
Jack and Jill, 
two law students, 
have a monthly mortgage payment of \&lt;span class="math"&gt;\(1,000 (annual payment of \\)&lt;/span&gt;12,000), 
property taxes of \&lt;span class="math"&gt;\(3,000, 
credit card balances totaling \\)&lt;/span&gt;1,000 
and a gross family income of \$45,000. 
This would give a TDS of around 36%. 
Based on the benchmark of 40%, 
Jack and Jill appear to be carrying an acceptable amount of debt.&lt;/p&gt;
&lt;p&gt;This ratio is very similar to the gross debt service ratio (GDS) except 
that the GDS does not account for non-housing related payments. 
TDS allows for a slightly more detailed view of a potential borrower's financial situation.&lt;/p&gt;
&lt;h2 id="leverage-ratio"&gt;Leverage Ratio&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Any ratio used to calculate the financial leverage of a company 
to get an idea of the company's methods of financing 
or to measure its ability to meet financial obligations. 
There are several different ratios, 
but the main factors looked at include debt, equity, assets and interest expenses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A ratio used to measure a company's mix of operating costs, 
giving an idea of how changes in output will affect operating income. 
Fixed and variable costs are the two types of operating costs; 
depending on the company and the industry, the mix will differ.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The most well known financial leverage ratio is the debt-to-equity ratio. 
For example, 
if a company has \&lt;span class="math"&gt;\(10M in debt and \\)&lt;/span&gt;20M in equity, 
it has a debt-to-equity ratio of 0.5 (&lt;span class="math"&gt;\(\\)&lt;/span&gt;10M/\&lt;span class="math"&gt;\(20M\)&lt;/span&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Companies with high fixed costs, 
after reaching the breakeven point, 
see a greater increase in operating revenue when output is increased compared 
to companies with high variable costs. 
The reason for this is that the costs have already been incurred, 
so every sale after the breakeven transfers to the operating income. 
On the other hand, 
a high variable cost company sees little increase in operating income 
with additional output, 
because costs continue to be imputed into the outputs. 
The degree of operating leverage is the ratio used 
to calculate this mix and its effects on operating income.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="leverage"&gt;Leverage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The use of various financial instruments or borrowed capital, 
such as margin, 
to increase the potential return of an investment. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The amount of debt used to finance a firm's assets. 
A firm with significantly more debt 
than equity is considered to be highly leveraged. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Leverage is most commonly used in real estate transactions 
through the use of mortgages to purchase a home.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Leverage can be created through options, 
futures, margin and other financial instruments. 
For example, say you have \&lt;span class="math"&gt;\(1,000 to invest. 
This amount could be invested in 10 shares of Microsoft stock, 
but to increase leverage, 
you could invest the \\)&lt;/span&gt;1,000 in five options contracts. 
You would then control 500 shares instead of just 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most companies use debt to finance operations. 
By doing so, a company increases its leverage 
because it can invest in business operations without increasing its equity. 
For example, 
if a company formed with an investment of \&lt;span class="math"&gt;\(5 million from investors, 
the equity in the company is \\)&lt;/span&gt;5 million - 
this is the money the company uses to operate. 
If the company uses debt financing by borrowing \&lt;span class="math"&gt;\(20 million, 
the company now has \\)&lt;/span&gt;25 million to invest in business operations 
and more opportunity to increase value for shareholders. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Leverage helps both the investor and the firm to invest or operate. 
However, it comes with greater risk. 
If an investor uses leverage to make an investment 
and the investment moves against the investor, 
his or her loss is much greater than 
it would've been if the investment had not been leveraged - 
leverage magnifies both gains and losses. In the business world, 
a company can use leverage to try to generate shareholder wealth, 
but if it fails to do so, the interest expense and credit risk 
of default destroys shareholder value.&lt;/p&gt;
&lt;h2 id="net-operating-income-noi"&gt;Net Operating Income (NOI)&lt;/h2&gt;
&lt;p&gt;A company's operating income after operating expenses are deducted, 
but before income taxes and interest are deducted. 
If this is a positive value, it is referred to as net operating income, 
while a negative value is called a net operating loss (NOL). &lt;/p&gt;
&lt;p&gt;NOI is often viewed as a good measure of company performance. 
Some believe this figure is less susceptible than other figures to manipulation by management.&lt;/p&gt;
&lt;h2 id="charge-off"&gt;Charge-Off&lt;/h2&gt;
&lt;p&gt;A term describing an expense on a company's income statement. 
A charge-off will fall under one of the following categories: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A debt that is deemed uncollectible by the reporting firm 
and is subsequently written off. 
This type will be classified as 'bad debt expense' on the income statement, 
and removed from the balance sheet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A probable one-time extraordinary expense incurred 
by a company that negatively affects earnings 
and results in a write-down of some of the firm's assets. 
The write-down arises due to impairments of assets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bad debt expenses arise when a firm is unable to collect 
on some of its accounts receivable (AR). 
When this occurs, the firm has little recourse; 
it could either sell the probable bad debt to a collection agency 
(a sale will be recorded on the firm's books, but not as an expense), 
or it could just write-off the uncollectible amount as an expense on the income statement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Companies often say something like: 
"we will take a one-time charge against earnings this quarter." 
This means that an extraordinary event has occurred and, 
altough it affects present earnings, 
it is unlikely to occur again. 
As a result, 
a company will usually provide an earnings per share (EPS) figure 
with and without this charge.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="net-charge-off-nco"&gt;Net Charge Off (NCO)&lt;/h2&gt;
&lt;p&gt;The dollar amount representing the difference between gross charge-offs 
and any subsequent recoveries of delinquent debt. 
Net charge offs refer to debt owed to a company 
that is unlikely to be recovered by that company. 
This "bad debt" often written off and classified as gross charge-offs. 
If, at a later date, 
some money is recovered on the debt, 
the amount is subtracted from the gross charge-offs 
to compute the net charge-off value.&lt;/p&gt;
&lt;p&gt;Bad debt or poor credit quality loans are regularly charged off 
as bad debt and purged from the books, 
often on a monthly or quarterly basis. 
If, at a later date, 
the company find out it was wrong and part of the debt is actually repaid, 
the net charge-off can be calculated 
by finding the difference the gross charge-offs 
and the repaid debt. 
A negative value for net charge-offs indicates 
that recoveries are greater than charge-offs 
during a particular accounting period. Companies want this number to be low.&lt;/p&gt;
&lt;h2 id="scenario-analysis"&gt;Scenario Analysis&lt;/h2&gt;
&lt;p&gt;The process of estimating the expected value of a portfolio 
after a given period of time, 
assuming specific changes in the values of the portfolio's securities 
or key factors that would affect security values, 
such as changes in the interest rate.&lt;/p&gt;
&lt;p&gt;Scenario analysis commonly focuses on estimating 
what a portfolio's value would decrease to if an unfavorable event, 
or the "worst-case scenario", were realized. 
Scenario analysis involves computing different reinvestment rates 
for expected returns that are reinvested during the investment horizon.&lt;/p&gt;
&lt;p&gt;There are many different ways to approach scenario analysis, 
but a common method is to determine what the standard deviation of daily 
or monthly security returns are, 
and then compute what value would be expected for the portfolio 
if each security generated returns two or three standard deviations 
above and below the average return.&lt;/p&gt;
&lt;p&gt;In this way, 
an analyst can have reasonable certainty 
that the value of a portfolio is unlikely to fall below (or rise above) 
a specific value during a given time period.&lt;/p&gt;
&lt;h2 id="financial-repression"&gt;Financial Repression&lt;/h2&gt;
&lt;p&gt;A term that describes measures by which governments channel funds 
to themselves as a form of debt reduction. 
This concept was introduced in 1973 by Stanford economists Edward S. Shaw 
and Ronald I. McKinnon. Financial repression 
can include such measures as directed lending to the government, 
caps on interest rates, regulation of capital movement 
between countries and a tighter association between government and banks. 
The term was initially used in response to the emerging market financial systems 
during the 1960s, '70s and '80s.&lt;/p&gt;
&lt;p&gt;In 2011, economists Carmen M. Reinhart and M. Belen Sbrancia hypothesized 
in a National Bureau of Economic Research (NBER) 
working paper entitled "The Liquidation of Government Debt" 
that governments could return to financial repression 
to deal with debt following the 2008 economic crisis. 
Reinhart and Sbrancia indicate that financial repression features:&lt;/p&gt;
&lt;p&gt;Caps or ceilings on interest rates
Government ownership or control of domestic banks and financial institutions
Creation or maintenance of a captive domestic market for government debt
Restrictions on entry to the financial industry
Directing credit to certain industries&lt;/p&gt;
&lt;h3 id="credit-report"&gt;Credit Report&lt;/h3&gt;
&lt;p&gt;A detailed report of an individual's credit history prepared 
by a credit bureau and used by a lender 
to in determining a loan applicant's creditworthiness, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Personal data (current and previous addresses, social security number, employment history)&lt;/li&gt;
&lt;li&gt;Summary of credit history (number and type of accounts that are past-due or in good standing)&lt;/li&gt;
&lt;li&gt;Detailed account information&lt;/li&gt;
&lt;li&gt;Inquires into applicant's credit history (number and type of inquiries into applicant's credit report)&lt;/li&gt;
&lt;li&gt;Details of any accounts turned over to credit agency (such as information about liens, wages garnishments via federal, state or county records)&lt;/li&gt;
&lt;li&gt;Information on how to dispute any of the above information.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once negative information appears on your credit report, 
there is little you can do to clear it up if the information is truthful and accurate. 
Generally such information remains for about seven years, 
while bankruptcy filings typically stay on the credit report for about 10 years. &lt;/p&gt;
&lt;h2 id="absorption-rate"&gt;Absorption Rate&lt;/h2&gt;
&lt;p&gt;The rate at which available homes are sold 
in a specific real estate market during a given time period. 
It is calculated by dividing the total number of available homes 
by the average number of sales per month. 
The figure shows how many months it will take to exhaust the supply of homes on the market. 
A high absorption rate may indicate that the supply of available homes will shrink rapidly, 
increasing the odds that a homeowner will sell a piece of property in a shorter period of time.&lt;/p&gt;
&lt;p&gt;For example, 
suppose that a city has 1,000 homes currently on the market to be sold. 
If buyers snap up 100 homes per month, 
the supply of homes will be exhausted in 10 months 
(1,000 homes divided by 100 homes sold per month). 
If a homeowner is looking to sell a piece of property, 
he knows that half of the market will be sold out in five months. 
This rate does not take in to account additional homes that enter the market. 
The absorption rate can also be a signal to developers to start building new homes. &lt;/p&gt;
&lt;h2 id="market-exposure"&gt;Market Exposure&lt;/h2&gt;
&lt;p&gt;The amount of funds invested in a particular type of security 
and/or market sector or industry and usually expressed as a percentage 
of total portfolio holdings. 
Thus, it is the amount an investor has at risk or the amount he/she can lose.&lt;/p&gt;
&lt;p&gt;The exposure of a portfolio to particular securities/markets/sectors 
must be considered when determining asset allocation 
since it can greatly increase returns or, 
if properly done, minimizes losses. 
For example, a portfolio with both stocks 
and bonds holdings will typically have less risk 
than a portfolio with exposure only to stocks. &lt;/p&gt;
&lt;h2 id="basis-point-bps"&gt;Basis Point (BPS)&lt;/h2&gt;
&lt;p&gt;A unit that is equal to 1/100th of 1%, 
and is used to denote the change in a financial instrument. 
The basis point is commonly used for calculating changes in interest rates, 
equity indexes and the yield of a fixed-income security.&lt;/p&gt;
&lt;p&gt;The relationship between percentage changes 
and basis points can be summarized as follows: 
1% change = 100 basis points, and 0.01% = 1 basis point.&lt;/p&gt;
&lt;p&gt;So, a bond whose yield increases from 5% to 5.5% 
is said to increase by 50 basis points; 
or interest rates that have risen 1% are said to have increased by 100 basis points. &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Career"></category><category term="terminology"></category><category term="business"></category><category term="Work"></category><category term="investment"></category><category term="credit risk"></category><category term="finance"></category><category term="bank"></category></entry><entry><title>First 10-digit Prime in Consecutive Digits of Euler Constant?</title><link href="https://www.legendu.net/en/blog/first-prime/" rel="alternate"></link><published>2010-05-13T00:12:11-07:00</published><updated>2016-07-13T00:12:11-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-05-13:/en/blog/first-prime/</id><summary type="html">&lt;p&gt;One day my friend Ru He asked me a question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the first 10-digit prime found in consecutive digits of e? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is an easy problem with the help of Mathematica.
The following is the Mathematica code I wrote to solve this question. 
It actually solves the general problem …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One day my friend Ru He asked me a question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the first 10-digit prime found in consecutive digits of e? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is an easy problem with the help of Mathematica.
The following is the Mathematica code I wrote to solve this question. 
It actually solves the general problem of first n-digit prime in consecutive digits of e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prime&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;found&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;digits&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;used&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PrimeInE&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k_: 10, n_: 10000&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{app, temp, i, flag},&lt;/span&gt;
&lt;span class="n"&gt;    app = N[E, n&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= n - k, i++,&lt;/span&gt;
&lt;span class="n"&gt;    temp = app*10^(k - 1);&lt;/span&gt;
&lt;span class="n"&gt;    temp = Floor[temp&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PrimeQ[temp&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Floor&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Print&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;quot;Please choose a bigger value for argument \&amp;quot;n\&amp;quot; in order to find the first &amp;quot;, k, &amp;quot;-digit prime in e.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;PrimeInE&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;7427466391&lt;/span&gt;

&lt;span class="n"&gt;PrimeInE&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;30&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;182845904523536028747135266249&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Fun Problems"></category><category term="Mathematica"></category><category term="Google"></category><category term="Euler constant"></category><category term="interview"></category><category term="math"></category><category term="fun problems"></category></entry><entry><title>Set Line Space in LaTeX</title><link href="https://www.legendu.net/en/blog/set-line-space-in-latex/" rel="alternate"></link><published>2012-11-13T00:05:22-08:00</published><updated>2016-07-13T00:05:22-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-13:/en/blog/set-line-space-in-latex/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;parskip&lt;/code&gt; command makes a skip between paragraphs. 
The length of skip can be set using the command &lt;code&gt;\setlength&lt;/code&gt;, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\setlength{\parskip}{15pt plus 1pt minus 1pt}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;\itemsep&lt;/code&gt; sets the space between items in lists, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\&lt;span class="nv"&gt;begin&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
\&lt;span class="nv"&gt;itemsep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;cm&lt;/span&gt;
\&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
\&lt;span class="k"&gt;end&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;parskip&lt;/code&gt; command makes a skip between paragraphs. 
The length of skip can be set using the command &lt;code&gt;\setlength&lt;/code&gt;, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\setlength{\parskip}{15pt plus 1pt minus 1pt}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;\itemsep&lt;/code&gt; sets the space between items in lists, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;\&lt;span class="nv"&gt;begin&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
\&lt;span class="nv"&gt;itemsep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;cm&lt;/span&gt;
\&lt;span class="nv"&gt;item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
\&lt;span class="k"&gt;end&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;\doublespace&lt;/code&gt; makes lines after this command double spaced. 
This is convenient to produce PDF document for review.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="LaTeX"></category><category term="programming"></category><category term="line"></category><category term="spacing"></category><category term="space"></category></entry><entry><title>Scientific References</title><link href="https://www.legendu.net/en/blog/scientfic-reference/" rel="alternate"></link><published>2012-11-13T00:05:06-08:00</published><updated>2016-07-13T00:05:06-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-13:/en/blog/scientfic-reference/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JabRef&lt;/code&gt; is an open-source cross-plotform software for managing scientific references.
&lt;code&gt;Mendeley&lt;/code&gt; is a good cost-free cross-platform software for managing scientific references.
It introduces the concept of social research.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use bibtex in your LaTeX code, 
you have to compile your code using &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt; and &lt;code&gt;pdflatex …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JabRef&lt;/code&gt; is an open-source cross-plotform software for managing scientific references.
&lt;code&gt;Mendeley&lt;/code&gt; is a good cost-free cross-platform software for managing scientific references.
It introduces the concept of social research.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use bibtex in your LaTeX code, 
you have to compile your code using &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt; and &lt;code&gt;pdflatex/latex&lt;/code&gt; in sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;natbib&lt;/code&gt; is a LaTeX package for citing references, and it is compatible with bibtex.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use author and date style references and there are duplicate
authors and years, &lt;code&gt;natbib&lt;/code&gt; print out the whole list of names and years
by default instead of using abbreviation for names. To avoid this
problem, you can add letters to the end of years. (not sure about this ...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;\eqref&lt;/code&gt; command is convenient way to reference equations in LaTeX.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="LaTeX"></category><category term="reference"></category><category term="research"></category><category term="Bibtex"></category><category term="software"></category></entry><entry><title>LaTeX for Chinese</title><link href="https://www.legendu.net/en/blog/latex-for-chinese/" rel="alternate"></link><published>2012-11-13T00:04:39-08:00</published><updated>2016-07-13T00:04:39-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-13:/en/blog/latex-for-chinese/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;xetex&lt;/code&gt; is the state-of-art way for dealing with Chinese type setting.
You can install &lt;code&gt;xetex&lt;/code&gt; on Debian series of Linux distributions (Debian, Ubuntu, Linux Mint, etc.)
using the following command. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;texlive-xetex&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use command &lt;code&gt;xelatex&lt;/code&gt; to compile. 
The utf-8 format is preferred. &lt;/p&gt;
&lt;p&gt;There are 2 good ways …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;xetex&lt;/code&gt; is the state-of-art way for dealing with Chinese type setting.
You can install &lt;code&gt;xetex&lt;/code&gt; on Debian series of Linux distributions (Debian, Ubuntu, Linux Mint, etc.)
using the following command. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;texlive-xetex&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use command &lt;code&gt;xelatex&lt;/code&gt; to compile. 
The utf-8 format is preferred. &lt;/p&gt;
&lt;p&gt;There are 2 good ways for writing Chinese doc using LaTeX (TeX Live) in Linux.
You can use either the &lt;code&gt;ctex&lt;/code&gt; or &lt;code&gt;xeCJK&lt;/code&gt; package.
&lt;code&gt;ctex&lt;/code&gt; is based on &lt;code&gt;xeCJK&lt;/code&gt; and is more convenient, 
however &lt;code&gt;xeCJK&lt;/code&gt; is more customizable. 
The following are minimum example using &lt;code&gt;ctex&lt;/code&gt; and &lt;code&gt;xeCJK&lt;/code&gt; respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;ctex&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
中文 English 
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;xeCJK&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
中文 English 
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Both template uses the Fandole fonts coming with Tex Live by default (without manually specification of fonts to use). 
With Tex Live 2015 and above, 
the configuration is done automatically and no hassle of manual configuration. 
Both &lt;code&gt;ctex&lt;/code&gt; and &lt;code&gt;xeCJK&lt;/code&gt; need &lt;code&gt;xelatex&lt;/code&gt; (see below) to compile.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;test.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Required packages (&lt;code&gt;texlive&lt;/code&gt;, &lt;code&gt;xelatex&lt;/code&gt;, &lt;code&gt;ctex&lt;/code&gt;, &lt;code&gt;xeCJK&lt;/code&gt;, etc.) can be installed 
on Debian sereis of Linux (Debian, Ubuntu, Linux Mint, etc.)
using the following command. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;texlive&lt;span class="w"&gt; &lt;/span&gt;texlive-xetex&lt;span class="w"&gt; &lt;/span&gt;texlive-lang-cjk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following command installs all LaTeX components that I personally use frequently.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;texlive&lt;span class="w"&gt; &lt;/span&gt;latex-beamer&lt;span class="w"&gt; &lt;/span&gt;wiki2beamer&lt;span class="w"&gt; &lt;/span&gt;dvipng&lt;span class="w"&gt; &lt;/span&gt;texlive-xetex&lt;span class="w"&gt; &lt;/span&gt;texlive-lang-cjk&lt;span class="w"&gt; &lt;/span&gt;texstudio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="LaTeX"></category><category term="Chinese"></category><category term="programming"></category><category term="Tex Live"></category><category term="XeTex"></category><category term="Linux"></category><category term="fonts"></category><category term="markup"></category></entry><entry><title>LaTeX Commands for Compiling</title><link href="https://www.legendu.net/en/blog/latex-commands/" rel="alternate"></link><published>2012-11-13T00:03:31-08:00</published><updated>2016-07-13T00:03:31-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-13:/en/blog/latex-commands/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;LaTeX&lt;ul&gt;
&lt;li&gt;If your LaTeX code contains only EPS figures, you can use the &lt;code&gt;latex&lt;/code&gt; command (also OK to use &lt;code&gt;pdflatex&lt;/code&gt;) to compile your code.   &lt;/li&gt;
&lt;li&gt;If you use bibtex, you have to compile your code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;latex&lt;/code&gt; and &lt;code&gt;latex&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;If you use the &lt;code&gt;psfrag&lt;/code&gt; package to …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;LaTeX&lt;ul&gt;
&lt;li&gt;If your LaTeX code contains only EPS figures, you can use the &lt;code&gt;latex&lt;/code&gt; command (also OK to use &lt;code&gt;pdflatex&lt;/code&gt;) to compile your code.   &lt;/li&gt;
&lt;li&gt;If you use bibtex, you have to compile your code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;latex&lt;/code&gt; and &lt;code&gt;latex&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;If you use the &lt;code&gt;psfrag&lt;/code&gt; package to edit EPS figures (only work for EPS figures), you have to compile your LaTeX code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;dvi2ps&lt;/code&gt; and &lt;code&gt;ps2pdf&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;To use the &lt;code&gt;tex4ht&lt;/code&gt; tool to convert LaTeX to other formats, you have to use the &lt;code&gt;latex&lt;/code&gt; command to compile. See &lt;a href=""&gt;this post&lt;/a&gt; for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pdflatex&lt;ul&gt;
&lt;li&gt;If you use non-EPS figures in your LaTeX code, you have to use the &lt;code&gt;pdflatex&lt;/code&gt; command to compile your code.&lt;/li&gt;
&lt;li&gt;If you use bibtex, you have to compile your code using commands &lt;code&gt;pdflatex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex&lt;/code&gt; and &lt;code&gt;pdflatex&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;Generally speaking the &lt;code&gt;pdflatex&lt;/code&gt; command is preferred to &lt;code&gt;latex&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xelatex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For compiling LaTeX code containing CJK characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pdfTexify&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A command seen in WinEdt for compiling LaTeX code repeatedly until all issues are resolved. This can be a more convenient alternative to apply commands &lt;code&gt;pdflatex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex&lt;/code&gt; and &lt;code&gt;pdflatex&lt;/code&gt; when you use bibtex in your LaTeX code. Surely one can write bash functions to simplify this process in Linux easily.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="compile"></category><category term="LaTeX"></category><category term="programming"></category></entry><entry><title>Graphics in LaTeX</title><link href="https://www.legendu.net/en/blog/graphics-in-latex/" rel="alternate"></link><published>2012-11-13T00:02:34-08:00</published><updated>2016-07-13T00:02:34-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-13:/en/blog/graphics-in-latex/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generally PDF figures are preferred for LaTeX code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many useful commands in Linux for converting between different types of figures, e.g., &lt;code&gt;convert&lt;/code&gt;, &lt;code&gt;pdf2ps&lt;/code&gt;, etc. So it does not matter much which types of figures you produce. You can always convert them into other format when needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generally PDF figures are preferred for LaTeX code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many useful commands in Linux for converting between different types of figures, e.g., &lt;code&gt;convert&lt;/code&gt;, &lt;code&gt;pdf2ps&lt;/code&gt;, etc. So it does not matter much which types of figures you produce. You can always convert them into other format when needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;psfrag&lt;/code&gt; package is useful for editing EPS figures.
If you use it in your LaTeX code, you have to compile your code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;dvi2ps&lt;/code&gt; and &lt;code&gt;ps2pdf&lt;/code&gt; in sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vector figures (EPS, PDF, etc) can be too big sometimes (e.g., if you do scatter plot). In this case, you'd better use non-vector pictures (e.g., png, jgp, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To include figures in a frame in beamer, you must use the option &lt;code&gt;[fragile]&lt;/code&gt; for that frame. For example
&lt;div class="math"&gt;\begin{frame}[fragile]
\begin{figure}
\includegraphics{graph1}
\caption{captiontext}
\label{figurelabel}
\end{figure}
\end{frame}&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Computer Science"></category><category term="image"></category><category term="vector"></category><category term="LaTeX"></category><category term="graphics"></category><category term="programming"></category></entry><entry><title>Convert LaTeX to Word</title><link href="https://www.legendu.net/en/blog/convert-latex-to-word/" rel="alternate"></link><published>2012-11-13T00:02:08-08:00</published><updated>2016-07-13T00:02:08-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-13:/en/blog/convert-latex-to-word/</id><summary type="html">&lt;p&gt;&lt;code&gt;pandoc&lt;/code&gt; is a general purpose tool for converting between different type of documents, 
however, 
it is not good at converting LaTeX code to word.
&lt;code&gt;tex4ht&lt;/code&gt; is a better tool for converting LaTeX code to word. 
The following are instructions to use &lt;code&gt;tex4ht&lt;/code&gt; to convert LaTeX to word.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compile your LaTeX …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;pandoc&lt;/code&gt; is a general purpose tool for converting between different type of documents, 
however, 
it is not good at converting LaTeX code to word.
&lt;code&gt;tex4ht&lt;/code&gt; is a better tool for converting LaTeX code to word. 
The following are instructions to use &lt;code&gt;tex4ht&lt;/code&gt; to convert LaTeX to word.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compile your LaTeX code. 
Make sure that there are no error messages. 
Do not remove the temporary files produced when compiling your LaTeX code, 
as they are required by the &lt;code&gt;tex4ht&lt;/code&gt; command. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Convert your LaTeX code to html document using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mk4ht mzlatex you_latex_doc.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the html document using office tools (Microsoft Word, LibreOffice Writer, AbiWord, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save a copy of the html document to the right format you want. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="html"></category><category term="LaTeX"></category><category term="Office"></category><category term="software"></category><category term="Word"></category></entry><entry><title>Check Whether an Email Address Is Valid in Java</title><link href="https://www.legendu.net/en/blog/valid-email-address-java/" rel="alternate"></link><published>2012-05-12T23:58:54-07:00</published><updated>2016-07-12T23:58:54-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-12:/en/blog/valid-email-address-java/</id><content type="html">&lt;p&gt;See the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.+@.+\\.[a-z]+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Matcher&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;matchFound&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchFound&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EMAIL OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EMAIL ERROR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="pattern"></category><category term="match"></category><category term="Java"></category><category term="programming"></category><category term="email address"></category></entry><entry><title>Test Internet Speed</title><link href="https://www.legendu.net/en/blog/test-internet-speed/" rel="alternate"></link><published>2016-03-09T22:55:29-08:00</published><updated>2016-07-09T22:55:29-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-03-09:/en/blog/test-internet-speed/</id><content type="html">&lt;p&gt;&lt;a href="http://www.speedtest.net/"&gt;SpeedTest - OOKLA&lt;/a&gt; can help you test the speed of your internet connection. 
Mobile apps and a command-line tool are also available. 
&lt;a href="https://www.howtoforge.com/tutorial/check-internet-speed-with-speedtest-cli-on-ubuntu/"&gt;This page&lt;/a&gt;
explains how to use the command-line tool to test the speed of your internet connection.&lt;/p&gt;</content><category term="Internet"></category><category term="internet"></category><category term="speed"></category><category term="web"></category><category term="app"></category><category term="test"></category></entry><entry><title>Useful Packages and Commands for LaTex</title><link href="https://www.legendu.net/en/blog/useful-packages-for-latex/" rel="alternate"></link><published>2012-07-29T11:37:43-07:00</published><updated>2016-05-29T11:37:43-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-29:/en/blog/useful-packages-for-latex/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/latex/latex.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="math-packages"&gt;Math Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{amssymb} &lt;ul&gt;
&lt;li&gt;popular math fonts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{dsfont} &lt;ul&gt;
&lt;li&gt;&lt;code&gt;\mathds&lt;/code&gt; font&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{bm} % bold math symbols&lt;ul&gt;
&lt;li&gt;bold math symbols&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsmath} &lt;ul&gt;
&lt;li&gt;math formulas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsthm} &lt;ul&gt;
&lt;li&gt;theorem environments&lt;/li&gt;
&lt;li&gt;proof enviroment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-packages"&gt;List Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{enumerate} &lt;ul&gt;
&lt;li&gt;universal list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="graphics-packages"&gt;Graphics Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{ifpdf} &lt;ul&gt;
&lt;li&gt;allow including figures without extensions and select the right type of …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/latex/latex.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="math-packages"&gt;Math Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{amssymb} &lt;ul&gt;
&lt;li&gt;popular math fonts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{dsfont} &lt;ul&gt;
&lt;li&gt;&lt;code&gt;\mathds&lt;/code&gt; font&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{bm} % bold math symbols&lt;ul&gt;
&lt;li&gt;bold math symbols&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsmath} &lt;ul&gt;
&lt;li&gt;math formulas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsthm} &lt;ul&gt;
&lt;li&gt;theorem environments&lt;/li&gt;
&lt;li&gt;proof enviroment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-packages"&gt;List Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{enumerate} &lt;ul&gt;
&lt;li&gt;universal list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="graphics-packages"&gt;Graphics Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{ifpdf} &lt;ul&gt;
&lt;li&gt;allow including figures without extensions and select the right type of figures according to the compiler used&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{graphicx} &lt;ul&gt;
&lt;li&gt;for including pictures&lt;/li&gt;
&lt;li&gt;the graphics driver is selected automatically if none is specified (via arguments of the package) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{psfrag} &lt;ul&gt;
&lt;li&gt;for editing eps figures in Latex (e.g., replacing text)&lt;/li&gt;
&lt;li&gt;need to compile using command &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;dvips&lt;/code&gt; and &lt;code&gt;ps2pdf&lt;/code&gt; in sequence&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{epsfig} &lt;ul&gt;
&lt;li&gt;for including eps figures&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="bibliography"&gt;Bibliography&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{natbib} &lt;ul&gt;
&lt;li&gt;for citing refernce&lt;/li&gt;
&lt;li&gt;compatible with bibtex&lt;/li&gt;
&lt;li&gt;compile using &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt; in sequence&lt;/li&gt;
&lt;li&gt;some Latex IDE (e.g., WinEdt) has a single button/command (PDFTexify) for simplifying the compiling process&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="color"&gt;Color&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage[usenames,dvipsnames]{color} &lt;ul&gt;
&lt;li&gt;using color by name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mutiple-files"&gt;Mutiple Files&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You can use command &lt;code&gt;\input&lt;/code&gt; or &lt;code&gt;\include&lt;/code&gt; to include Latex source files. 
Generally speaking, 
&lt;code&gt;\input&lt;/code&gt; is preferred over &lt;code&gt;\include&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;\usepackage{subfiles}
For more information, please refer to &lt;a href="http://en.wikibooks.org/wiki/LaTeX/General_Guidelines"&gt;wiki book&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="chinese-packages"&gt;Chinese Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{xeCJK} &lt;ul&gt;
&lt;li&gt;no need if use ctexart, ctexbook and so on&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{fontspec}&lt;ul&gt;
&lt;li&gt;choose font theme &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\setCJKmainfont{Adobe Song Std} &lt;ul&gt;
&lt;li&gt;use adobe fonts as the main font&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="color"></category><category term="programming"></category><category term="list"></category><category term="Latex"></category><category term="package"></category><category term="bibliography"></category><category term="enumerate"></category><category term="formula"></category><category term="math"></category><category term="graphics"></category></entry><entry><title>Probability to Lose All Money</title><link href="https://www.legendu.net/en/blog/probability-lose-all-money/" rel="alternate"></link><published>2012-07-22T03:56:28-07:00</published><updated>2015-11-22T03:56:28-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-22:/en/blog/probability-lose-all-money/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/object/money-1.jpeg"
width="240" height="200" align="right" /&gt;&lt;/p&gt;
&lt;p&gt;A few days ago I found someone asking an interview questions on &lt;a href="http://www.mitbbs.com/"&gt;mitbbs&lt;/a&gt;.
The question is as follows. 
A gambler plays a fair game and bet 1 dollar each time. 
If he lose all his money, 
the game stops. 
Suppose he has 10 dollars and is only allowed to play …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/object/money-1.jpeg"
width="240" height="200" align="right" /&gt;&lt;/p&gt;
&lt;p&gt;A few days ago I found someone asking an interview questions on &lt;a href="http://www.mitbbs.com/"&gt;mitbbs&lt;/a&gt;.
The question is as follows. 
A gambler plays a fair game and bet 1 dollar each time. 
If he lose all his money, 
the game stops. 
Suppose he has 10 dollars and is only allowed to play 50 rounds at most, 
what is the probability that he lose all his money?&lt;/p&gt;
&lt;p&gt;This is a problem of random work. 
I am pretty sure that there are very neat solutions to 
this problem using &lt;em&gt;reflection&lt;/em&gt;. 
However, 
as I mentioned in my book &lt;em&gt;Statistics Thinkings&lt;/em&gt;, 
there is a universal way to solve this kind of problems. 
The key is to find a recursive forumula using conditional expectation/probability. 
First, 
we can generalize the problem to the following one. 
A gamber palys a fair game and bet 1 dollar each time. 
If he lose all his money, 
the game stops. 
Suppoe he has &lt;span class="math"&gt;\(m_0\)&lt;/span&gt; dollars and is only allowed to play &lt;span class="math"&gt;\(k\)&lt;/span&gt; rounds at most,
what is the probability that he end up with &lt;span class="math"&gt;\(m\)&lt;/span&gt; dollars?&lt;/p&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(P_{n,m}\)&lt;/span&gt; to stand the probability 
that the player end up with &lt;span class="math"&gt;\(m\)&lt;/span&gt; dollars after &lt;span class="math"&gt;\(n\)&lt;/span&gt; steps. 
Conditioning on step &lt;span class="math"&gt;\(n-1\)&lt;/span&gt;, 
we have
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{n,m} = 0.5 P_{n-1,m+1} + 0.5 P_{n-1,m-1} I(m&amp;gt;1)
$$&lt;/div&gt;
&lt;p&gt;
with initial condition 
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{0,m} = I(m=m_0),
$$&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(I\)&lt;/span&gt; is the indicator function. 
As I mentioned in my book &lt;em&gt;Statistics Thinkings&lt;/em&gt; and other similar posts on my blog,
there are several ways (e.g., moment generating function) to solve for &lt;span class="math"&gt;\(P_{n,m}\)&lt;/span&gt;. 
A pratical way is write a program to do this. &lt;/p&gt;
&lt;p&gt;I recently learned C++11, so I wrote a program in C++11 to solve this problem just for practice. 
The core code is just a recursive function. 
Though recursive algorithms are convenient, they are usually not efficient. 
A simple way to improve the speed of recursive algorithm is to use cache. 
In my code, I used a ordered map to store previous calculated probabilities 
to avoid duplicated computations. Since the code uses the standard library of C++11, 
it has to be compiled with option &lt;code&gt;-std=c++0x&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;namespace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;lose_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please type in the initial amount of money:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please type in the stop step:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lose_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The probablity to lose all money is: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="cache"></category><category term="C++"></category><category term="simulation"></category><category term="statistics"></category><category term="map"></category><category term="probability"></category><category term="recursive"></category><category term="condition"></category><category term="fun problems"></category><category term="hash table"></category><category term="money"></category><category term="lose"></category></entry><entry><title>The Power of Generating Functions</title><link href="https://www.legendu.net/en/blog/generating-functions/" rel="alternate"></link><published>2010-05-22T02:20:55-07:00</published><updated>2015-11-22T02:20:55-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-05-22:/en/blog/generating-functions/</id><summary type="html">&lt;p&gt;Generating functions is a very powerful way to find closed 
formula for sequences defined iteratively.
I was so bored during the final week, 
so I went on internet for fun. 
Finally I found someone from Sydney University was asking for help on this question:&lt;/p&gt;
&lt;p&gt;(a) If Ln=Ln-1+Ln-2 for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Generating functions is a very powerful way to find closed 
formula for sequences defined iteratively.
I was so bored during the final week, 
so I went on internet for fun. 
Finally I found someone from Sydney University was asking for help on this question:&lt;/p&gt;
&lt;p&gt;(a) If Ln=Ln-1+Ln-2 for n&amp;gt;1 and Lo=2 and L1=1, please Find a closed formula for Ln.&lt;/p&gt;
&lt;p&gt;(b) Sn=Ln+ Ln-1 + … + Lo, please find an closed formula for Sn.&lt;/p&gt;
&lt;p&gt;(c) An=Ln-1So + Ln-2S1 + … + LoSn-1, please find a closed formula for An.&lt;/p&gt;
&lt;p&gt;I gave a solution using generating functions. See &lt;a href="http://www.legendu.net/media/sequence.pdf"&gt;sequence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you're from math department, 
you might question that do these series defined converge, 
if so what are the domains of convergence? 
Dating back to some day when I was still a sophomore, 
I read a book about generating functions 
and talked with my friend Hao Ying about how powerful it is. 
I cited the author's words:" We don't even have to check the domain of convergence of the series…". 
Hao bugged up and said:" What? You don't need to check the domain of converge? 
It's not important what others said. 
What really matters is what you think. 
Do you really think that's valid?…". 
Well, I still have to say that really we don't need check the converge domain of the series we used. 
It's trifle and might too be hard. 
As is known too all, 
it's easy to use mathematical induction method to prove or disprove 
a closed formula for a sequence define iteratively. 
If the formula can be proved, 
the generating method works, vise versa. 
So far I haven't come across a situation 
that generating functions method fails to work.&lt;/p&gt;</content><category term="Fun Problems"></category><category term="series"></category><category term="statistics"></category><category term="sequence"></category><category term="math"></category><category term="fun problems"></category><category term="generating function"></category></entry><entry><title>Working with Class in C++</title><link href="https://www.legendu.net/en/blog/working-with-class-in-cpp/" rel="alternate"></link><published>2012-10-05T10:56:31-07:00</published><updated>2015-08-05T10:56:31-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-05:/en/blog/working-with-class-in-cpp/</id><summary type="html">&lt;p&gt;Illustrative examples for the following discussions can be found 
&lt;a href="https://github.com/dclong/cearn/tree/master/class"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you also provide a default constructor 
if you ever provide a user-defined constructor when writing a C++ class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to allow deleting a derived class from a pointer of the base class,
you have …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Illustrative examples for the following discussions can be found 
&lt;a href="https://github.com/dclong/cearn/tree/master/class"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you also provide a default constructor 
if you ever provide a user-defined constructor when writing a C++ class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to allow deleting a derived class from a pointer of the base class,
you have to make the destructor of the base class &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;virtual&lt;/code&gt; 
even if it does nothing. 
If you want to prevent deleting a derived class from a pointer of the base class, 
make the descturctor of the base class &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;virtual&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you derive a class from a base class, 
the destructor of the base class is called automatically 
so that you do not have to call it manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a derived class &lt;code&gt;D&lt;/code&gt; has a method with the name &lt;code&gt;fun&lt;/code&gt;, 
then all non-virtual methods with the name &lt;code&gt;fun&lt;/code&gt; (no matter what signature they have) in its 
base class &lt;code&gt;B&lt;/code&gt; are &lt;code&gt;hidden&lt;/code&gt; by the method &lt;code&gt;fun&lt;/code&gt; in &lt;code&gt;D&lt;/code&gt;.
Suppose &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are instances of the class &lt;code&gt;D&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; respectively,
and you invoke the method &lt;code&gt;fun&lt;/code&gt; throught these two instances, 
then everything works OK (in the sense that the &lt;code&gt;right&lt;/code&gt; method is invoked).
However, this is different from &lt;code&gt;overridding&lt;/code&gt;.
The problem is that &lt;code&gt;hidden&lt;/code&gt; does not support polymorphism. 
If you have a pointer of the base class &lt;code&gt;B&lt;/code&gt; pointing to an instance of the 
derived class &lt;code&gt;D&lt;/code&gt;, and you invoke the method via the pointer, 
then &lt;code&gt;fun&lt;/code&gt; of the base class &lt;code&gt;B&lt;/code&gt; will be called. 
To support polymophism, you have to &lt;code&gt;override&lt;/code&gt; the method &lt;code&gt;fun&lt;/code&gt; in the base class &lt;code&gt;B&lt;/code&gt;.
To do this, you have to mark &lt;code&gt;fun&lt;/code&gt; as virtual in the base class. 
To help the compiler (and also make your code more readable), 
you can use &lt;code&gt;override&lt;/code&gt; after the signature of method explicitly.
&lt;a href="https://github.com/dclong/cearn/tree/master/class/inheritance"&gt;Here&lt;/a&gt; is 
an example illustrating problems discussed above. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overriding method must have the same return type as the overrided method.
(not sure whether this is required in Java)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you write your own version constructor for a class, 
you'd better also provide the copy/move constructor and assignment operator. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not use lvalue references in a class that point to an object outside the class.
A better way is to pass the object by lvalue reference to methods that need it.
If you ever decide to use a lvalue reference in a class that point to an object outside the class, 
you must initialize it in the initialization list of a constructor. 
This is because when you initialize a lvalue reference, 
you must point it to a valide object. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, member variables should not be declared as public,
unless they are &lt;code&gt;static constant&lt;/code&gt;. 
Also you should not declare member variables as &lt;code&gt;protected&lt;/code&gt; unless 
you are sure that the derived classes want to access these member variables directly. 
If you define a proteced member &lt;code&gt;m&lt;/code&gt; in a base class &lt;code&gt;B&lt;/code&gt;, 
a derived class &lt;code&gt;D&lt;/code&gt; can access and modify (if &lt;code&gt;m&lt;/code&gt; is a data member) &lt;code&gt;m&lt;/code&gt; in its own class or throught its own instances
but not throught other arbitrary object.
For example, if &lt;code&gt;b&lt;/code&gt; is an object of the base class &lt;code&gt;B&lt;/code&gt;, 
you cannot access or modify &lt;code&gt;b.m&lt;/code&gt; directly in the definition of the derived class &lt;code&gt;D&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you provide a &lt;code&gt;to_string&lt;/code&gt; method, 
rather than overridding the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; operator. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not use overloading and default parameters at the same time. 
Because this might make compiler fail to find the right version of function/method to call. 
Generally speaking, overloading is more powerful and thus prefereed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inheritance works with template class, 
i.e., you can derive class from template classes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;swap&lt;/code&gt; method can make the implementation of copy and move structor unified and thus more conveneint. 
It is suggested that you make the &lt;code&gt;swap&lt;/code&gt; function &lt;code&gt;public&lt;/code&gt; (at least &lt;code&gt;protected&lt;/code&gt;) if you provide one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a class have many variables to be initialized, 
you can think of intializing non-critical variables in the definition 
of the class and provide public method to access and modify them. 
This make it easier to implement constructors. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always mark a method as &lt;code&gt;const&lt;/code&gt; if it does not change the state of the object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you intialize member variables in the constructor initializeing list 
(after &lt;code&gt;:&lt;/code&gt; before &lt;code&gt;{&lt;/code&gt;).
Surely you can achieve the same by assigning values to member variables in the body of constructors, 
but in this way these member variables are first initialized to default values and then assigned values,
which is not as efficient.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="virtuality"&gt;Virtuality&lt;/h2&gt;
&lt;p&gt;The following are some guidelines for virtuality from Herb Sutter.
The original article can be found &lt;a href="http://www.gotw.ca/publications/mill18.htm"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prefer to make interfaces nonvirtual, using Template Method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prefer to make virtual functions private.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only if derived classes need to invoke the base implementation of a virtual function, make the virtual function protected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A base class destructor should be either public and virtual, or protected and nonvirtual.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A few points to add:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A virtual method can be overridden by a derived class even if it is private.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A class without a public destructor cannot be used by itself. 
It servers as a base class only. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="C++"></category><category term="destructor"></category><category term="programming"></category><category term="inheritance"></category><category term="override"></category><category term="class"></category><category term="hidding"></category><category term="constructor"></category></entry><entry><title>Find Out Proxy in Use</title><link href="https://www.legendu.net/en/blog/find-out-proxy-in-use/" rel="alternate"></link><published>2014-05-27T21:31:02-07:00</published><updated>2015-05-27T21:31:02-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-05-27:/en/blog/find-out-proxy-in-use/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using a Web Service.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure the proxy out from the contents it returns.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the command &lt;code&gt;netstat&lt;/code&gt;.
This is a universal way and is especially helpful 
when &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt; is not available. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Inspect the output of &lt;code&gt;netstat -an | egrep "EST|Proto"&lt;/code&gt; ("EST" is …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using a Web Service.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure the proxy out from the contents it returns.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the command &lt;code&gt;netstat&lt;/code&gt;.
This is a universal way and is especially helpful 
when &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt; is not available. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Inspect the output of &lt;code&gt;netstat -an | egrep "EST|Proto"&lt;/code&gt; ("EST" is short for "ESTABLISHED") 
in a Linux-like environment. 
You can use Cygwin if you are on Windows.
Note that &lt;code&gt;netstat&lt;/code&gt; comes with Windows not Cygwin. 
If you cannot use it in Cygwin,
it is probably due to a misconfigured path environment variable.
You can of course run the &lt;code&gt;netstat -an&lt;/code&gt; command in the command prompt in Windows
but you do not have a convenient command like &lt;code&gt;grep&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to a fresh site that you have not recently visited.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;netstat -an | grep "EST"&lt;/code&gt; command again 
and look for the new connection. 
It might look like the following.
In this example, 
your proxy's IP is 192.168.1.88 and it is listening on port 8080.
A proxy server typcial listens to the 8080 port.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;TCP 192.168.1.1:1989 192.168.1.88:8080 ESTABLISHED
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The second method only shows the proxy currently in use. 
If more than one proxy is configured in your environment, 
and you want to know all of them, 
you have to repeat the procedure above periodically to get the full list.
Note that working in a Linux virtual machine on your office laptop with Windows OS
can possibly help you circumvent the proxy issue.&lt;/p&gt;</content><category term="Internet"></category><category term="web"></category><category term="internet"></category><category term="proxy"></category></entry><entry><title>Generating YYYYMM Formatted Dates Using Python</title><link href="https://www.legendu.net/en/blog/generating-yyyymm-formatted-dates-using-python/" rel="alternate"></link><published>2015-05-17T17:05:55-07:00</published><updated>2015-05-17T17:05:55-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-17:/en/blog/generating-yyyymm-formatted-dates-using-python/</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;monthdelta&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;md&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;dt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;quarter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#end def&lt;/span&gt;

&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthdelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;yyyymms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;yymms …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;monthdelta&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;md&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;dt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;quarter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#end def&lt;/span&gt;

&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthdelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;yyyymms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;yymms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yyyymms&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yymms&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The between ... and clause is also convenient to work with YYYYMM numbers
I saw people use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;where&lt;/span&gt; m &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;&amp;amp;months.&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to check ..
while a much more convenient way is to use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;where&lt;/span&gt; m between &lt;span class="m"&gt;200201&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="m"&gt;201212&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;if you are sure &lt;code&gt;m&lt;/code&gt; contains only YYYYMM formated numbers.&lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="Python"></category><category term="credit risk"></category><category term="risk capital"></category><category term="stress testing"></category><category term="YYYYMM"></category><category term="YYYYQQ"></category></entry><entry><title>Don't Do Statistics If You Don't Really Undestand It</title><link href="https://www.legendu.net/en/blog/statistics-traps/" rel="alternate"></link><published>2015-04-10T07:50:16-07:00</published><updated>2015-04-10T07:50:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-04-10:/en/blog/statistics-traps/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/statistics/lie.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lies, damned lies, and statistics.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a statistician I'm very glad to see 
that statistics is being widely used in many areas.
However, 
time after time I found that it is really dangerous 
for people who don't really understand statistics to use it.
As we all know that there are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/statistics/lie.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lies, damned lies, and statistics.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a statistician I'm very glad to see 
that statistics is being widely used in many areas.
However, 
time after time I found that it is really dangerous 
for people who don't really understand statistics to use it.
As we all know that there are 3 basic assumptions in linear regression:
independency, normality and homoscedasticity.
However, not many people really understand what these assumptions mean.
For example, 
most people don't know that an "independency" test is actually with respect to some "order".
For human beings, there are 2 nature orders: time 
(for which people developped time series analysis) 
and space (for which people developped spatial analysis).
While we test for "independency", 
mostly of the time we test for "independency" with respect to time. 
Here comes the problem. 
Many people do simple linear regression, 
and they are "smart" enough to remember to check assumptions of linear regression. 
Many people use some kind of test statistics 
(e.g., the Ljung-Box test statistics) to help them 
especially when there are many model candidates. 
Not many of them realized that this test is probably meaningless 
as they are actually testing "independency" with respect to the order of observations. 
But what if I reorder the observations 
(in linear regression there's usually no chronological order among observations)? 
This can obviously change the decision of the "independency" test. 
For example, 
if I reorder the observations according the magnitude of the residuals 
the Ljung-Box test will obviously be significant 
and reject the null hypothesis of "independency";
and if I randomize the order of observations, 
the Ljung-Box test will probably be non-significant 
and fail to reject the null hypothesis of "independency".
Keep in mind that an "independency" test is with respect to some "order",
e.g., time, space or some nature grouping.
Be sure that you are not testing "independency" with respect to some meaningless order.&lt;/p&gt;</content><category term="AI"></category><category term="statistics"></category><category term="independence"></category><category term="linear model"></category><category term="linear regression"></category><category term="hypothesis test"></category><category term="Ljung-Box test"></category></entry><entry><title>Input and Output in C++</title><link href="https://www.legendu.net/en/blog/input-and-output-in-cpp/" rel="alternate"></link><published>2012-10-24T22:22:41-07:00</published><updated>2015-03-24T22:22:41-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-24:/en/blog/input-and-output-in-cpp/</id><summary type="html">&lt;p&gt;Check the &lt;code&gt;io&lt;/code&gt; directory on the page &lt;a href="https://bitbucket.org/dclong/cpp-learn/src"&gt;https://bitbucket.org/dclong/cpp-learn/src&lt;/a&gt;
for some illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can format output of numbers using functions 
&lt;code&gt;std::setpresicion&lt;/code&gt; and &lt;code&gt;std::setw&lt;/code&gt; in the &lt;imanip&gt; header.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you read data from a file into an array or write data …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Check the &lt;code&gt;io&lt;/code&gt; directory on the page &lt;a href="https://bitbucket.org/dclong/cpp-learn/src"&gt;https://bitbucket.org/dclong/cpp-learn/src&lt;/a&gt;
for some illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can format output of numbers using functions 
&lt;code&gt;std::setpresicion&lt;/code&gt; and &lt;code&gt;std::setw&lt;/code&gt; in the &lt;imanip&gt; header.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you read data from a file into an array or write data from an array to a file,
you can just use the address of the array.
However, 
if a vector (e.g., vector &lt;code&gt;x&lt;/code&gt;) is used instead of an array,
you have to use the address of the underlying data in the vector &lt;code&gt;x&lt;/code&gt; which is &lt;code&gt;&amp;amp;x[0]&lt;/code&gt;. 
Also, 
when you read/write data into/from a vector, 
you have use the size of the vector &lt;code&gt;x&lt;/code&gt; multiplied by the memory used by each element 
to calculate the total number of bytes, 
i.e. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or if &lt;code&gt;x&lt;/code&gt; is a vector of double values you can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You cannot use &lt;code&gt;sizeof(x)&lt;/code&gt;, 
because it is the size of the vector itself 
(without counting the underlying array) and is always the same (12 bytes). &lt;/p&gt;</content><category term="Computer Science"></category><category term="C/C++"></category><category term="IO"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Common Mistakes in C++ Code and Ways to Debug</title><link href="https://www.legendu.net/en/blog/cpp-common-mistakes-and-debug/" rel="alternate"></link><published>2012-10-13T10:53:45-07:00</published><updated>2015-03-13T10:53:45-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-13:/en/blog/cpp-common-mistakes-and-debug/</id><summary type="html">&lt;h2 id="debugging"&gt;Debugging&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;gdb is a excellent command tool for debugging C/C++ code. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="syntax-mistakes"&gt;Syntax Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Missing "}". 
When this happens, 
you usually get lots of error message when you compile your code. 
And these error messages are often hard to understand and seems not related to your code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Missing template arguments. 
This …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="debugging"&gt;Debugging&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;gdb is a excellent command tool for debugging C/C++ code. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="syntax-mistakes"&gt;Syntax Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Missing "}". 
When this happens, 
you usually get lots of error message when you compile your code. 
And these error messages are often hard to understand and seems not related to your code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Missing template arguments. 
This is relative easy to debug. 
The compiler will usually give clear enough error message. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using member types of template types without the &lt;code&gt;typename&lt;/code&gt; prefix. 
For example, 
instead of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;InputIt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InputIt&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;value_type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;it should be &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;InputIt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;typename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;InputIt&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;value_type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The g++ compiler is usually smart enough to detect a missing &lt;code&gt;typename&lt;/code&gt; and give you the right instruction
on how to fix the code. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Accessing members in a template base class without using &lt;code&gt;this&lt;/code&gt; pointer.
The compiler will tell you that these members are not found. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="logical-mistakes"&gt;Logical Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Abuse of &lt;code&gt;auto&lt;/code&gt;. 
Tough &lt;code&gt;auto&lt;/code&gt; it a lot more convenient to work with template code, 
it is dangerous if an expression corresponds to several different types. 
For example, 
if you use &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;auto x = &amp;quot;abc&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;then &lt;code&gt;x&lt;/code&gt; is of type &lt;code&gt;const char *&lt;/code&gt; not &lt;code&gt;std::string&lt;/code&gt;. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Passing invalid iterators to functions/methods that operate on containers.
This usually result in segmentation fault. 
For example, 
if you use the &lt;code&gt;erase&lt;/code&gt; method of a vector &lt;code&gt;x&lt;/code&gt; (of length 10) to erase a range of elements from it,
the second iterator must be no "smaller" than the first iterator.
The code &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;x.erase(x.begin()+1, x.begin());
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;will result in an error message of segmentation fault when you compile it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Forgeting to return a value for a non-void function/method. 
This usually results in segmentation fault.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="compile-option-mistakes"&gt;Compile Option Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Forgetting the &lt;code&gt;-lpthread&lt;/code&gt; option when compile code which uses the &lt;code&gt;&amp;lt;thread&amp;gt;&lt;/code&gt; header.
The compiler usually gives the following error message.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;terminate called after throwing an instance of &amp;#39;std::system_error&amp;#39;
  what():  Unknown error 4294967295
Aborted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="debug"></category><category term="C++"></category><category term="mistake"></category><category term="programming"></category><category term="trap"></category><category term="bug"></category><category term="error"></category></entry><entry><title>Differences Between Vector and ArrayList in Java</title><link href="https://www.legendu.net/en/blog/vector-arraylist-difference-java/" rel="alternate"></link><published>2012-05-13T10:50:05-07:00</published><updated>2015-03-13T10:50:05-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-13:/en/blog/vector-arraylist-difference-java/</id><content type="html">&lt;p&gt;A good summay is &lt;a href="http://javarevisited.blogspot.com/2011/09/difference-vector-vs-arraylist-in-java.html"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Computer Science"></category><category term="synchronization"></category><category term="thread"></category><category term="Java"></category><category term="programming"></category><category term="vector"></category><category term="ArrayList"></category><category term="data structure"></category></entry><entry><title>Power Settings in Linux with GNOME Desktop</title><link href="https://www.legendu.net/en/blog/linux-gnome-power-settings/" rel="alternate"></link><published>2012-06-03T10:17:32-07:00</published><updated>2015-03-03T10:17:32-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-03:/en/blog/linux-gnome-power-settings/</id><summary type="html">&lt;p&gt;Full control of the power settings in Linux with Gnome Desktop can be done through 
&lt;strong&gt;dconf-editor&lt;/strong&gt; at org-&amp;gt;gnome-&amp;gt;settings-daemon-&amp;gt;plugins-&amp;gt;power.
The default way to determine low battery, critical low battery and to carray out 
critical low action is by counting left battery time. 
You can change the way …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Full control of the power settings in Linux with Gnome Desktop can be done through 
&lt;strong&gt;dconf-editor&lt;/strong&gt; at org-&amp;gt;gnome-&amp;gt;settings-daemon-&amp;gt;plugins-&amp;gt;power.
The default way to determine low battery, critical low battery and to carray out 
critical low action is by counting left battery time. 
You can change the way to measuring percentage of battery. 
To get help on what an entry means, single click on the entry. &lt;/p&gt;</content><category term="OS"></category><category term="configuration"></category><category term="battery"></category><category term="power"></category><category term="Linux"></category><category term="GNOME"></category></entry><entry><title>Estimation of False Discovery Rate using Sequential Permutation Pvalues</title><link href="https://www.legendu.net/en/blog/sequential-permutation-test/" rel="alternate"></link><published>2012-06-03T10:17:03-07:00</published><updated>2015-03-03T10:17:03-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-03:/en/blog/sequential-permutation-test/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
I wrote a paper on sequential permutation test with Tim Bancroft and Dan Nettleton. 
The paper "T. Bancroft, C. Du and D. Nettleton (2012). 
Estimation of False Discovery Rate Using Sequential Permutation P­Values." 
has been accepted by Biometrics. To illustrate ideas in the paper and make sequential 
permutation test …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
I wrote a paper on sequential permutation test with Tim Bancroft and Dan Nettleton. 
The paper "T. Bancroft, C. Du and D. Nettleton (2012). 
Estimation of False Discovery Rate Using Sequential Permutation P­Values." 
has been accepted by Biometrics. To illustrate ideas in the paper and make sequential 
permutation test easier to use, I wrote an R package &lt;strong&gt;dclong.spt&lt;/strong&gt; which is availabe 
on &lt;a href="https://github.com/dclong/dclong.spt"&gt;GitHub&lt;/a&gt;. In order to make the package smaller, 
I moved these big datasets (used for illustrations in the paper) from the package to this website. &lt;/p&gt;
&lt;p&gt;The data &lt;a href="http://dclong.github.io/media/spt/marker.rda"&gt;barley&lt;/a&gt; was produced by experiment 
"Genetic regulation of gene expression of barley in response
to stem rust (Pgt isolate TTKS)" and can be access from PLEXdb (BB64). 
There is a file called "BB64_RMA_tmt_medians.txt" on the download page contains RMA expressions. 
The rma expression for the 75 chips involve fungas infection is the dataset barley in this package. &lt;/p&gt;
&lt;p&gt;The Band T-cell Acute Lymphocyctic Leukemia (ALL) data set can be 
access via the Bioconductor ALL package at &lt;www.bioconductor.org&gt;. 
Measures of messenger ribonucleic acid (mRNA) commonly referred to as expression levels
are available for 12,625 probesets in 128 ALL patients.
Of these 128 patients, we focus on the 21 males who have been classified as having a translocation
between chromosomes 9 and 22 (BCR/ABL) and the 5 males who have a translocation between
chromosomes 4 and 11 (ALL1/AF4). 
This subset of data is the &lt;a href="http://dclong.github.io/media/spt/leukemia.rda"&gt;leukemia&lt;/a&gt; used in the paper.&lt;/p&gt;
&lt;p&gt;Biologists genetically mutated/changed the genotypes of barley. 
They could not change everywhere, so they changed 378 positions on the chromosome of barley. 
In the map, "A" and "B" are two types (sort of open and close). 
Because they know where the mutations are, they called them "markers"
(so that if a barley with a certain genotype has a higher expression level, then you may infer and
say, oh that may be caused by the 145th marker, etc.). 
The map has 7 chromosomes of barley, 1H, 2H, ..., 7H. 
These numbers are locations of markers on the chromosomes, like coordinates. 
There are some missing values in the original map, a naive method was used to interpolate the missing
values and produced this dataset &lt;a href="http://dclong.github.io/media/spt/marker.rda"&gt;marker&lt;/a&gt;. &lt;/p&gt;</content><category term="Research"></category><category term="research"></category><category term="sequential permutation test"></category><category term="biostatistics"></category><category term="Acute Lymphocyctic Leukemia"></category><category term="package"></category><category term="marker"></category><category term="dclong.spt"></category><category term="R"></category><category term="barley"></category><category term="false discovery rate"></category><category term="FDR"></category></entry><entry><title>Dual Monitor for Linux Desktop</title><link href="https://www.legendu.net/en/blog/dual-monitor-for-linux-desktop/" rel="alternate"></link><published>2013-03-20T10:59:38-07:00</published><updated>2015-02-20T10:59:38-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-03-20:/en/blog/dual-monitor-for-linux-desktop/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;Type &lt;code&gt;xrandr&lt;/code&gt; or &lt;code&gt;xrandr -q&lt;/code&gt; in terminal to dispaly information of all available output device.
Then you can use the following commands to set dual display.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xrandr --output VGA1 --auto 
xrandr --output VGA1 --same-as LVDS1 --auto
xrandr --output VGA1 --mode 1024x800
xrandr --output VGA1 --off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;VGA1&lt;/code&gt; and &lt;code&gt;LVDS1&lt;/code&gt; should …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;Type &lt;code&gt;xrandr&lt;/code&gt; or &lt;code&gt;xrandr -q&lt;/code&gt; in terminal to dispaly information of all available output device.
Then you can use the following commands to set dual display.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xrandr --output VGA1 --auto 
xrandr --output VGA1 --same-as LVDS1 --auto
xrandr --output VGA1 --mode 1024x800
xrandr --output VGA1 --off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;VGA1&lt;/code&gt; and &lt;code&gt;LVDS1&lt;/code&gt; should be replaced by with appropriate device names. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When use multi-monitors in Linux, 
you need to have close resolutions in order for same (mirorr) display to work well.&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="DE"></category><category term="Linux"></category><category term="monitor"></category><category term="dual"></category></entry><entry><title>String in Java</title><link href="https://www.legendu.net/en/blog/string-in-java/" rel="alternate"></link><published>2012-12-20T10:58:20-08:00</published><updated>2015-02-20T10:58:20-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-20:/en/blog/string-in-java/</id><content type="html">&lt;h2 id="string"&gt;String&lt;/h2&gt;</content><category term="Computer Science"></category><category term="Java"></category><category term="programming"></category><category term="string"></category><category term="character"></category></entry><entry><title>Which One Is the Best Strategy?</title><link href="https://www.legendu.net/en/blog/best-strategy/" rel="alternate"></link><published>2010-05-20T10:54:32-07:00</published><updated>2015-02-20T10:54:32-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-05-20:/en/blog/best-strategy/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Another interesting problem I met in statistic is: 
suppose we flip a coin which has probability 0.7 to be head again and again 
and two people choose two different sequences of length 3 (e.g. THH). 
The people whose sequence appears first wins. 
If you're allowed to choose first …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Another interesting problem I met in statistic is: 
suppose we flip a coin which has probability 0.7 to be head again and again 
and two people choose two different sequences of length 3 (e.g. THH). 
The people whose sequence appears first wins. 
If you're allowed to choose first, which sequence will you choose?&lt;/p&gt;
&lt;p&gt;I guess most people will choose sequence HHH. 
However, this sequence is beaten by THH. 
Suppose we first observe sequence HHH at step &lt;span class="math"&gt;\(n(&amp;gt;3)\)&lt;/span&gt;, 
then the outcome must be T at step &lt;span class="math"&gt;\(n-3\)&lt;/span&gt;, 
which means that we have observed THH at step &lt;span class="math"&gt;\(n-1\)&lt;/span&gt;. 
So for HHH to win against THH, 
it must appear at step 3. 
So the probability for HHH to beat THH is 0.7^3=0.343&amp;lt;0.5, 
i.e., HHH is not as good as THH.&lt;/p&gt;
&lt;p&gt;A nature question is that does there exist a best choice in this problem? 
The answer is no. 
I have done simulations in MATLAB to find the probability for a sequence to beat another. 
The simulation result shows that none of the 8 sequence can beat all other choices, 
which means that there is no benefit to choose a sequence first.&lt;/p&gt;
&lt;p&gt;Talking about the probability for one sequence to come out first against another one, 
there is a much better solution rather than simulation. 
I will make post about this good solution later.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="pattern"></category><category term="Markov chain"></category><category term="statistics"></category><category term="sequence"></category><category term="coin"></category><category term="stochastic"></category><category term="martingale"></category><category term="fun problems"></category><category term="MATLAB"></category><category term="best strategy"></category></entry><entry><title>Performance Tips for C++</title><link href="https://www.legendu.net/en/blog/performance-tips-for-cpp/" rel="alternate"></link><published>2012-10-20T10:36:42-07:00</published><updated>2015-02-20T10:36:42-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-20:/en/blog/performance-tips-for-cpp/</id><summary type="html">&lt;h2 id="performance"&gt;Performance&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If there is some block of useless code, 
the compile is smart enough to ignore it and thus speed up the program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the option &lt;code&gt;-O2&lt;/code&gt; to generate optimized code when you are ready to publish your code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define variables only when needed to avoid the overhead of creating …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="performance"&gt;Performance&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If there is some block of useless code, 
the compile is smart enough to ignore it and thus speed up the program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the option &lt;code&gt;-O2&lt;/code&gt; to generate optimized code when you are ready to publish your code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define variables only when needed to avoid the overhead of creating and deleting temporary variables.
It is suggested that you put variables into the smallest possible enclosing brace. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When shuffling data, it is better to shuffle in place 
if objects/data to be shuffled are not expensive to copy 
(e.g., when data are double or integers).
Otherwise, it is better to shuffle indexes/iterators of the container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is STRONGLY suggested that you specify the size/capacity of a vector 
if you know it. 
Even if you do not know the exactly size of a vector, 
it is often a good idea to initialize the vector with an rough estimate of its final size. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="tips"></category><category term="performance"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Lambda Function in C++11</title><link href="https://www.legendu.net/en/blog/lambda-function-in-cpp11/" rel="alternate"></link><published>2012-10-20T10:35:46-07:00</published><updated>2015-02-20T10:35:46-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-20:/en/blog/lambda-function-in-cpp11/</id><summary type="html">&lt;h2 id="lambda-function"&gt;Lambda Function&lt;/h2&gt;
&lt;p&gt;Check [here[(https://github.com/dclong/cearn/tree/master/lambda) 
for illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When capture variables, 
you can define new variables in the &lt;code&gt;[]&lt;/code&gt; of a lambda expression.
For example, 
if a lambda function need the sum of two double variable &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, 
you …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="lambda-function"&gt;Lambda Function&lt;/h2&gt;
&lt;p&gt;Check [here[(https://github.com/dclong/cearn/tree/master/lambda) 
for illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When capture variables, 
you can define new variables in the &lt;code&gt;[]&lt;/code&gt; of a lambda expression.
For example, 
if a lambda function need the sum of two double variable &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, 
you can use &lt;code&gt;[s=x+y]&lt;/code&gt; to capture the sum of 
these two variables (by value) instead of capture both of them. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently the &lt;code&gt;const&lt;/code&gt; keyword is not in the grammer for captures, 
so that if you cannot capture an object by const reference directly. 
A way to walk around this is to first make a const reference of that object, 
and then capture the const reference by reference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When an object is captured by value, 
it cannot be mutated by the lambda function. 
If you want the lambda function to be able to mutate the capture value, 
you should use the keyword &lt;code&gt;mutable&lt;/code&gt;, e.g., &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;mutable&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To capture a member variable &lt;code&gt;data&lt;/code&gt; in a class, 
you have to capture &lt;code&gt;this&lt;/code&gt; pointer,
i.e., 
you have to use either &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;](...){...};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the ways are different.
In the way, 
when you use &lt;code&gt;data&lt;/code&gt;, 
it is actually &lt;code&gt;this-&amp;gt;data&lt;/code&gt;.
This means that &lt;code&gt;data&lt;/code&gt; is alwasy accessed via &lt;code&gt;this&lt;/code&gt; pointer,
so you can consider it as capture by reference. 
The second way is capture by value. 
Surely you make it capture by reference by adding &lt;code&gt;&amp;amp;&lt;/code&gt; before &lt;code&gt;d&lt;/code&gt;. 
This is the preferred over the first way of capturing &lt;code&gt;this&lt;/code&gt; 
if you just want to capture &lt;code&gt;data&lt;/code&gt; not other member variables. &lt;/p&gt;</content><category term="Computer Science"></category><category term="C++"></category><category term="lambda"></category><category term="programming"></category></entry><entry><title>Rescue Linux from GUI Freezing</title><link href="https://www.legendu.net/en/blog/rescue-linux-from-gui-freezing/" rel="alternate"></link><published>2012-09-20T10:30:22-07:00</published><updated>2015-02-20T10:30:22-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-09-20:/en/blog/rescue-linux-from-gui-freezing/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/computer.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The kernel of Linux is usually very stable, 
but the existing free desktop environments are craps. 
Amongs these desktop environments I tried 
(Gnome, Xfce, LXDE and so on), none is even close to the desktop environments in Windows and Mac.
I do not require desktop environments in Linux to be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/computer.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The kernel of Linux is usually very stable, 
but the existing free desktop environments are craps. 
Amongs these desktop environments I tried 
(Gnome, Xfce, LXDE and so on), none is even close to the desktop environments in Windows and Mac.
I do not require desktop environments in Linux to be as fancy as desktop environments in Windows and Mac,
but they have to be usable and stable. 
These two basic requirements, unfortunately, seems unreachable from these desktop environment developers.
Tought their desktop environments are full of all kinds of flaws, 
they never fell shame to brag about their products. 
My experience with Linux desktops is that they crash very often. 
The most annoying case is that the X windows freezes and does not react to the keyboard and touchpad. 
It is not recommended to shutdown the machine by pressing the power button. 
To solve this problem, you can ssh into the machine from another one and kill the Xorg process. 
There arises several problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How do you ssh into your machine in any network? &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What if you do not have another machine on hand?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first problem often comes to how do you find the IP of the freezing machine?
If the machine is connected to your home network, 
you can just scan the network for connected machines. 
If the machine is connected to your work network, 
you often have a host name for your machine on the network. 
Scanning the network for ips is not a good idea in this case, 
because there are often many machines connected to your work network.
If the machine is connected to some network (e.g., public network),
it can be even harder to find the ip of your freezing machine.
My way to solve this problem is let the machine write its ip address 
into a file in Dropbox. 
So I can always know the ip of my machine no matter which network it is connected to. 
The second problem is not a problem if you have a (smart) phone with you. 
With a smartphone, you can install an application (e.g., connectBot) to login into 
Linux machine. 
If you only have a phone which cannot connect to internet, 
you can call someone who know Linux and you can trust and let him/her
login into your machine and kill the X window. 
If you hesitate to do that, well, just press the power button on your machine, 
hold it unitl your machine shut down. &lt;/p&gt;</content><category term="OS"></category><category term="GUI"></category><category term="DE"></category><category term="Dropbox"></category><category term="X"></category><category term="Linux"></category><category term="SSH"></category><category term="desktop environment"></category></entry><entry><title>Initializing Variables in C++</title><link href="https://www.legendu.net/en/blog/initializing-varialbes-in-cpp/" rel="alternate"></link><published>2012-10-19T13:45:33-07:00</published><updated>2015-02-19T13:45:33-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-19:/en/blog/initializing-varialbes-in-cpp/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;{}&lt;/code&gt; is more powerful than &lt;code&gt;()&lt;/code&gt; and thus is preferred over &lt;code&gt;()&lt;/code&gt;. 
You should use always use &lt;code&gt;{}&lt;/code&gt; except for a few cases where &lt;code&gt;()&lt;/code&gt; is necessary.
For example, 
if you want to create a vector of length 1000, 
you have to use &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vector&amp;lt;int&amp;gt;(1000);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;instead of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    vector&amp;lt;int&amp;gt; {1000};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which create a vector …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;{}&lt;/code&gt; is more powerful than &lt;code&gt;()&lt;/code&gt; and thus is preferred over &lt;code&gt;()&lt;/code&gt;. 
You should use always use &lt;code&gt;{}&lt;/code&gt; except for a few cases where &lt;code&gt;()&lt;/code&gt; is necessary.
For example, 
if you want to create a vector of length 1000, 
you have to use &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vector&amp;lt;int&amp;gt;(1000);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;instead of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    vector&amp;lt;int&amp;gt; {1000};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which create a vector with one element 1000.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Objects in C++ are intialized to have some value when they are created,
i.e., an object in C++ always have a valid value. 
This is different from Java. 
In Java, objects are essentially references. 
If an object in Java does not point to any memory when initializing, 
it is &lt;code&gt;null&lt;/code&gt;. 
In C++, 
it is impossible to have &lt;code&gt;null&lt;/code&gt; object. 
You can only have &lt;code&gt;null&lt;/code&gt; pointers in C++.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Universal initialization list &lt;code&gt;{}&lt;/code&gt; is very powerful and convenient,
especially when working with containers. 
However you cannot initialize non-const reference using &lt;code&gt;{}&lt;/code&gt;
using g++ 4.7, 
which seems to be a bug. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="initialization"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Install the GSL Library</title><link href="https://www.legendu.net/en/blog/install-gsl-library/" rel="alternate"></link><published>2012-09-19T13:41:31-07:00</published><updated>2015-02-19T13:41:31-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-09-19:/en/blog/install-gsl-library/</id><summary type="html">&lt;p&gt;GSL is an advance C/C++ library that is widely used. 
To install GSL, 
you can download the source file and 
following instruction in the included README and INSTALL document. 
For Unix/Linux users, 
the GSL library is often availabe in the repository. 
For example, you can use the following …&lt;/p&gt;</summary><content type="html">&lt;p&gt;GSL is an advance C/C++ library that is widely used. 
To install GSL, 
you can download the source file and 
following instruction in the included README and INSTALL document. 
For Unix/Linux users, 
the GSL library is often availabe in the repository. 
For example, you can use the following command to install the GSL library in Debian.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install libgsl0-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will install the GSL library to the default location, 
so that you do not have specify the &lt;code&gt;-I&lt;/code&gt; and &lt;code&gt;-L&lt;/code&gt; options for the GSL library. 
However, 
you still have to use the option &lt;code&gt;-lgsl&lt;/code&gt; and &lt;code&gt;-lgslcblas&lt;/code&gt; 
(can be replaced by other available BLAS libraries) in order to compile your code using GSL.&lt;/p&gt;</content><category term="Computer Science"></category><category term="Debian"></category><category term="C/C++"></category><category term="Linux"></category><category term="programming"></category><category term="GSL"></category></entry><entry><title>The Sum and Product Puzzle</title><link href="https://www.legendu.net/en/blog/the-sum-and-product-puzzle/" rel="alternate"></link><published>2013-07-04T23:47:19-07:00</published><updated>2015-02-04T23:47:19-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-07-04:/en/blog/the-sum-and-product-puzzle/</id><summary type="html">&lt;p&gt;I talked about an interesting problem &lt;a href="http://www.legendu.net/en/blog/sun-bin-pang-juan/"&gt;in this post&lt;/a&gt;.
I had onsite-inteviews from Wolfram at the end of April this year,
and I decided to talk how to solve the problem using Mathematica.
I did some research and realized that the problem is a well-known one
which is called the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I talked about an interesting problem &lt;a href="http://www.legendu.net/en/blog/sun-bin-pang-juan/"&gt;in this post&lt;/a&gt;.
I had onsite-inteviews from Wolfram at the end of April this year,
and I decided to talk how to solve the problem using Mathematica.
I did some research and realized that the problem is a well-known one
which is called the &lt;em&gt;Sum and Product Puzzle&lt;/em&gt; (aka the &lt;em&gt;Impossible Puzzle&lt;/em&gt;). 
The &lt;em&gt;Sum and Product Puzzle&lt;/em&gt; has several different versions. 
I reframe the one mentioned in my previous post as follows.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two numbers (not necessarily unique) between 2 and 99 are chosen. 
The sum of them is told to Sam and the product of them is told to Peter .&lt;/p&gt;
&lt;p&gt;Sam: "Now I don't know what the 2 numbers are, 
but I'm sure you don't know either."&lt;/p&gt;
&lt;p&gt;Peter: "I have to thank you for the information, 
because I did have no idea of what the 2 numbers are, 
but now I already know."&lt;/p&gt;
&lt;p&gt;Sam: "Now the same here."&lt;/p&gt;
&lt;p&gt;Question: what are the two numbers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="notations"&gt;Notations&lt;/h2&gt;
&lt;p&gt;R: range of the 2 numbers, which is {2,3,. . . ,99} in this case&lt;/p&gt;
&lt;p&gt;x0 , y0: a (the) solution to the Puzzle&lt;/p&gt;
&lt;h2 id="mathematical-information-hidden-in-words"&gt;Mathematical Information Hidden in Words&lt;/h2&gt;
&lt;p&gt;"Now I don't know what the 2 numbers are, 
but I'm pretty sure you don't know either." &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x, y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each pair of &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt;, 
&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x',y'\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x'\times y'=x \times y\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's called the above conditions set I.&lt;/p&gt;
&lt;p&gt;"I have to thank you for the information, 
because I did have no idea of what the 2 numbers are, 
but now I already know."&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x, y\in R\)&lt;/span&gt; 
such that &lt;span class="math"&gt;\(x\times y=x_0\times y_0\)&lt;/span&gt; (already in conditions set I). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Among all pairs &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x\times y=x_0\times y_0\)&lt;/span&gt;, 
&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; an unique pair satisfying conditions set I. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's called the above conditions set II.&lt;/p&gt;
&lt;p&gt;"Now the same here"&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x, y\in R\)&lt;/span&gt; 
such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt; (already in conditions set I). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Among all pairs &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt;, 
&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; an unique pair satisfying conditions set II. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's called the above conditions set III.&lt;/p&gt;
&lt;h2 id="algorithm-to-solve-the-sum-and-product-puzzle"&gt;Algorithm to Solve the Sum and Product Puzzle&lt;/h2&gt;
&lt;p&gt;A/The solution (pair of &lt;span class="math"&gt;\(x_0\)&lt;/span&gt; and &lt;span class="math"&gt;\(y_0\)&lt;/span&gt;) 
must satisfies conditions set I, II and III at the same time. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Construct all possible combinations of &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select pairs (among all possible pairs) that satisfy conditions set I, II and III at the same time. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mathematica-code-for-the-sum-and-product-puzzle"&gt;Mathematica Code for the Sum and Product Puzzle&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;TwoAddends&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s_Integer, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{lower, upper},&lt;/span&gt;
&lt;span class="n"&gt;   lower = range[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{i, s - i}, {i, Max[lower, s - upper&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Min&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;upper, s - lower, s/2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;TwoFactors&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p_Integer, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{lower, upper, div, n},&lt;/span&gt;
&lt;span class="n"&gt;   lower = range[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Select&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Divisors[p&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Max&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lower, p/upper&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Min&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;upper, p/lower, Sqrt[p&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{#, p/#} &amp;amp;, div&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pair_List, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{s, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   s = Total[pair&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TwoAddends&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;And, Length[TwoFactors[Times @@ #, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;P1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pair_List, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{p, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   p = Times @@ pair;&lt;/span&gt;
&lt;span class="n"&gt;   candidates = TwoFactors[p, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Boole[S1[#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pair_List, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{s, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   s = Total[pair&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TwoAddends&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Boole[P1[#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;SumProductPuzzle&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{lower, upper, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   lower = range[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Table[{i, j}, {i, lower, upper}, {j, i, upper}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Select&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates, S1[#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;P1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All code and results for this project are hosted on GitHub at &lt;a href="https://github.com/dclong/sum_prod"&gt;sum_prod&lt;/a&gt;.
As I will continue to study this problem, 
it is the best place to find the most updated code and results for this problem.&lt;/p&gt;
&lt;h2 id="result"&gt;Result&lt;/h2&gt;
&lt;p&gt;Run the function &lt;code&gt;SumProductPuzzle&lt;/code&gt; to find a/the solution to the puzzle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="x"&gt;SumProductPuzzle[{2, 99}]&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="some-discussions-about-the-sum-and-product-puzzle"&gt;Some Discussions about the Sum and Product Puzzle&lt;/h2&gt;
&lt;p&gt;It is of great interest to find all ranges of the form &lt;span class="math"&gt;\([2, U]\)&lt;/span&gt;
such that there is an unique solution to the puzzle in these ranges.&lt;/p&gt;
&lt;p&gt;Use the following code to do computation in parallel&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;DistributeDefinitions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TwoAddends, TwoFactors, S1, P1, S2, SumProductPuzzle&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;rr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ParallelSubmit[{i}, SumProductPuzzle[{2, i}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;
&lt;span class="n"&gt;WaitAll&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rr&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;The solution depends on the range (can have no, unique or multiple answers).&lt;/li&gt;
&lt;li&gt;There is no solution in [2, U] for &lt;span class="math"&gt;\(2 \le U \le 61\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;I have verified that an unique solution exists in [2, U] for &lt;span class="math"&gt;\(62 \le U \le 610\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;As the Mathematica code I wrote is more for illustrating my ideas 
and runs slowly.
I will reimplement the algorithm with previous calculated results cached in Java
to further study this problem.&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="puzzle"></category><category term="Mathematica"></category><category term="math"></category><category term="Work"></category><category term="fun problems"></category><category term="sum"></category><category term="product"></category></entry><entry><title>Adjust Screen Brightness for Linux Desktops</title><link href="https://www.legendu.net/en/blog/adjust-screen-brightness-for-linux-desktops/" rel="alternate"></link><published>2013-03-03T19:57:46-08:00</published><updated>2015-02-03T19:57:46-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-03-03:/en/blog/adjust-screen-brightness-for-linux-desktops/</id><summary type="html">&lt;p&gt;For many computers and laptops installed with Linux desktops, 
you can use shortcuts (usually Fn + Brightness_keys) to adjust screen brightness.
This does not work for some laptops. 
Another way to adjust screen brightness is to use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    sudo setpci -s 00:02.0 F4.B=brightness_value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The value …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For many computers and laptops installed with Linux desktops, 
you can use shortcuts (usually Fn + Brightness_keys) to adjust screen brightness.
This does not work for some laptops. 
Another way to adjust screen brightness is to use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    sudo setpci -s 00:02.0 F4.B=brightness_value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The value is between 00 to ff. 
However, this is not a universal way either, 
i.e., it does not work on all laptops. 
As you see, 
you have to have root permission in order to run the command. 
Generally speaking,
you are not recommnend to use the latter way if the shortcuts works. &lt;/p&gt;</content><category term="OS"></category><category term="screen"></category><category term="Linux"></category><category term="brightness"></category></entry><entry><title>A Secure Way to Use Vino in Debian</title><link href="https://www.legendu.net/en/blog/a-secure-way-to-use-vino-in-debian/" rel="alternate"></link><published>2013-09-03T19:41:59-07:00</published><updated>2015-02-03T19:41:59-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-09-03:/en/blog/a-secure-way-to-use-vino-in-debian/</id><summary type="html">&lt;p&gt;VNC on Linux is not secure. 
Most implementations of VNC servers for Linux allows password only up to 8 characters. 
Such a VNC server is very vulnerable to brute-force attack. 
This article discuss a secure way to use VNC.
The VNC (vino) server is started only when needed,
thus reduce …&lt;/p&gt;</summary><content type="html">&lt;p&gt;VNC on Linux is not secure. 
Most implementations of VNC servers for Linux allows password only up to 8 characters. 
Such a VNC server is very vulnerable to brute-force attack. 
This article discuss a secure way to use VNC.
The VNC (vino) server is started only when needed,
thus reduce the chance of your server to be hacked.&lt;/p&gt;
&lt;p&gt;First install the vino server in debian using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wajig install vino
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Whenever you want to use VNC on the server, 
follow the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ssh into the server with X11 forwarding enabled. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="nv"&gt;@servername&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit vino server settings by typing the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vino-preference
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It will prompt a window for you to edit vino settings. 
Close the window after you are done. 
This step only has to done once and can be skipped 
if you don't want to change the settings.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start the vino server using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vino&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vino&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect to your server using Remmina.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lock the screen of you Debian/Linux server 
when you have finished using VNC on your server. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop/kill the vino server by hot keys &lt;code&gt;CTRL + C&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="vino"></category><category term="Linux"></category><category term="vnc"></category><category term="network"></category></entry><entry><title>Add an Entry into the Right-click Menu in Windows</title><link href="https://www.legendu.net/en/blog/add-an-entry-into-the-right-click-menu-in-windows/" rel="alternate"></link><published>2014-12-03T19:30:50-08:00</published><updated>2015-02-03T19:30:50-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-12-03:/en/blog/add-an-entry-into-the-right-click-menu-in-windows/</id><summary type="html">&lt;p&gt;To add an entry into the right-click menu in Windows, 
edit the registry following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the registry.
You can search for &lt;code&gt;regedit&lt;/code&gt; in Windows Start menu and run it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the key
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;
in the registry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key with any name (e …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;To add an entry into the right-click menu in Windows, 
edit the registry following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the registry.
You can search for &lt;code&gt;regedit&lt;/code&gt; in Windows Start menu and run it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the key
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;
in the registry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key with any name (e.g., rstudio) under 
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set a value (e.g., Rstudio) for the newly created key (rstudio)
in the right-side pane of the registry.
This value (Rstudio) shows up in the right-click menu whenever you right click.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key named &lt;code&gt;command&lt;/code&gt; under the newly created key (rstudio).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the value of the newly created key &lt;code&gt;command&lt;/code&gt; 
to be the full path of the application
(e.g., &lt;code&gt;C:\Program Files\RStudio\bin\rstudio.exe&lt;/code&gt;)
that you want to launch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="OS"></category><category term="Windows"></category><category term="right-click menu"></category><category term="registry"></category><category term="regedit"></category></entry><entry><title>Lvalue Reference and Rvalue Reference</title><link href="https://www.legendu.net/en/blog/lvalue-rvalue-reference/" rel="alternate"></link><published>2012-08-15T02:17:12-07:00</published><updated>2015-01-15T02:17:12-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-15:/en/blog/lvalue-rvalue-reference/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/cpp/left-right.jpg" height="180" width="200" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="difference-betwen-lvalue-and-rvalue-reference"&gt;Difference betwen Lvalue and Rvalue Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Lvalue and Rvalue are terrible names. 
They are due to historical reasonal but people stuck with these names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lvalue reference has a name while a rvalue reference has no name, in other words, 
a lvalue reference is persistent while a rvalue reference is …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/cpp/left-right.jpg" height="180" width="200" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="difference-betwen-lvalue-and-rvalue-reference"&gt;Difference betwen Lvalue and Rvalue Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Lvalue and Rvalue are terrible names. 
They are due to historical reasonal but people stuck with these names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lvalue reference has a name while a rvalue reference has no name, in other words, 
a lvalue reference is persistent while a rvalue reference is temporary.
Let &lt;code&gt;f(vector&amp;lt;int&amp;gt; &amp;amp;&amp;amp; x)&lt;/code&gt; be a function/method (can be a constructor) 
which takes a rvalue reference as argument.
It is common to misunderstand &lt;code&gt;x&lt;/code&gt; as a rvalue reference. 
When a rvalue reference/temporary object is passed to &lt;code&gt;f&lt;/code&gt;, 
it is moved to &lt;code&gt;x&lt;/code&gt;,
however, &lt;code&gt;x&lt;/code&gt; itself is not a rvalue reference/temporary object because it has a name.
&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; only means that it is OK to move &lt;code&gt;x&lt;/code&gt;, but does not mean that &lt;code&gt;x&lt;/code&gt; is a rvalue reference/temporary object.
And at the place where you intend to move &lt;code&gt;x&lt;/code&gt;, 
you must use &lt;code&gt;std::move&lt;/code&gt; manually to move it, 
otherwise, it get copied. 
Values return by functions/methods and expression are temporary values, 
so you do have to use &lt;code&gt;std::move&lt;/code&gt; to move them when you pass them 
to functions/emthods that take a rvalue reference as argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can take the address of a lvalue reference but you cannot take the address of a rvalue reference. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you apply &lt;code&gt;std::move&lt;/code&gt; on a primitive type variable (double, int and so on), 
it is usually lefted unchanged. 
This means that copy is usually the fastest way to implement
move on primitive types, but it is not guaranteed that copy is 
always used (different compiler might have different implementation on this). 
After being moved a variable still have a valid but unspecified value.
So do not use the value in a moved variable until you given it a new known value.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lvalue referece cannot be moved. 
The reason is that such operation is not necessary. 
To move the object that the lvalue reference points to, 
one can move the object directly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot use a vecotor (similar for other containers) of lvalue references,
because lvalue references have to be initialized to point to valid objects when they are created. 
An alternative way is to use vector of pointers/iterators instead. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always use &lt;code&gt;const&lt;/code&gt; lvalue reference, unless you intend to change the referenced object. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="how-to-use-rvalue-reference"&gt;How to Use Rvalue Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do not write &amp;amp;&amp;amp; to return type of a function,
and there is no need to return a local variable using &lt;code&gt;std::move&lt;/code&gt;.
When return a local variable, it is automatically move in C++11. 
However, if the local variable is static, then it is not moved as expected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you copy content of an argument in a function, 
overload it with rvalue reference and move the content.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you write a class with the copy constructor and the assignment operator, 
write also the move constructor and the move assignment operator.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="C/C++"></category><category term="reference"></category><category term="programming"></category></entry><entry><title>Interact with System Clipboard in Vim</title><link href="https://www.legendu.net/en/blog/interact-between-different-vim-sessions/" rel="alternate"></link><published>2012-11-26T10:35:12-08:00</published><updated>2014-12-26T10:35:12-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-26:/en/blog/interact-between-different-vim-sessions/</id><summary type="html">&lt;p&gt;The following are ways for a Vim session 
to interact (copy/cut, paste) with other Vim sessions or other applications.&lt;/p&gt;
&lt;h2 id="use-x-windows-clipboard-directly"&gt;Use X Windows Clipboard Directly&lt;/h2&gt;
&lt;p&gt;If you prefer to use X windows clipboard as the default buffer for Vim,
put &lt;code&gt;set clipboard=unnamedplus&lt;/code&gt; in your &lt;code&gt;.vimrc&lt;/code&gt; file.
This obviously makes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The following are ways for a Vim session 
to interact (copy/cut, paste) with other Vim sessions or other applications.&lt;/p&gt;
&lt;h2 id="use-x-windows-clipboard-directly"&gt;Use X Windows Clipboard Directly&lt;/h2&gt;
&lt;p&gt;If you prefer to use X windows clipboard as the default buffer for Vim,
put &lt;code&gt;set clipboard=unnamedplus&lt;/code&gt; in your &lt;code&gt;.vimrc&lt;/code&gt; file.
This obviously makes your Vim talk to the system clipboard (all the time).
However, 
this makes different Vim sessions interact with each other 
which might or might not what you want.
Generally speaking,
this is not recommended if you want to interact with system clipboard within Vim.&lt;/p&gt;
&lt;h2 id="use-vim-buffers-recommended"&gt;Use Vim Buffers (recommended)&lt;/h2&gt;
&lt;p&gt;You need to install a GUI version of Vim (e.g., &lt;code&gt;vim-gnome&lt;/code&gt;) 
before you use this way to interact with the system clipboard.
You can simply use the &lt;code&gt;+&lt;/code&gt; (sometimes &lt;code&gt;*&lt;/code&gt;) register. 
For example, 
you can use &lt;code&gt;"+yy&lt;/code&gt; to copy the current line in Vim to the system clipboard
and &lt;code&gt;"+p&lt;/code&gt; to paste from from the system clipboard to Vim.&lt;/p&gt;
&lt;h2 id="the-shift-key"&gt;The SHIFT Key&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Hold &lt;code&gt;SHIFT&lt;/code&gt; while you select text in Vim using mouse. 
You can then right click on the selection and choose &lt;code&gt;Copy&lt;/code&gt; to copy it to the system clipboard, 
or you can use &lt;code&gt;CTRL + SHFIT + C&lt;/code&gt; to copy the selection to the system clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can right click and choose &lt;code&gt;paste&lt;/code&gt; in Vim to pate from the system clipboard into Vim, 
or you can use &lt;code&gt;CTRL + SHIFT + V&lt;/code&gt; to paste from the system clipboard into Vim.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another way to copy from Vim to a text editor is to first select text in Vim with &lt;code&gt;SHFIT&lt;/code&gt; pressed, 
and then middle-click in the text editor.
Notice that &lt;code&gt;CTRL + V&lt;/code&gt; won't work, 
because you did not use &lt;code&gt;CTRL + SHFIT + C&lt;/code&gt; (or &lt;code&gt;right click -&amp;gt; paste&lt;/code&gt;) to copy the selection to the system clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="use-a-temporary-bufferfile"&gt;Use a Temporary Buffer/File&lt;/h2&gt;
&lt;p&gt;It's very convenient to copy/cut and paste text between different buffers/files of a same Vim session. 
So you can use temporary buffer/file to interact with other Vim sessions or other applications.&lt;/p&gt;
&lt;h2 id="see-also"&gt;See Also&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard"&gt;http://vim.wikia.com/wiki/Accessing_the_system_clipboard&lt;/a&gt;&lt;/p&gt;</content><category term="Software"></category><category term="Vim"></category><category term="software"></category><category term="Linux"></category><category term="clipboard"></category><category term="copy"></category><category term="paste"></category></entry><entry><title>Stick Breaking Problems</title><link href="https://www.legendu.net/en/blog/stick-breaking-problems/" rel="alternate"></link><published>2014-07-16T19:47:59-07:00</published><updated>2014-12-16T19:47:59-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-07-16:/en/blog/stick-breaking-problems/</id><summary type="html">&lt;p&gt;The following is a popular brain teaser problem about probability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Randomly select two points on a unit stick to break it into 3 pieces,
what is the probability that the 3 pieces can form a triangle?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The critical thing here is how are the two points selected. 
The most popular …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The following is a popular brain teaser problem about probability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Randomly select two points on a unit stick to break it into 3 pieces,
what is the probability that the 3 pieces can form a triangle?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The critical thing here is how are the two points selected. 
The most popular (and probably default) way is that 
&lt;span class="math"&gt;\(X_1, X_2 \overset{iid}{\sim} U(0, 1)\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; are the distances from the two points to the left end of the stick.
There some other interesting ways of selecting the points,
and I will study the 3 cases in this post.&lt;/p&gt;
&lt;h2 id="independent-uniformly-distributed"&gt;Independent Uniformly Distributed&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be the distances from the two points to the left end of the stick.
In this situation we assume that 
&lt;span class="math"&gt;\(X_1, X_2 \overset{iid}{\sim} U(0, 1).\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id="method-i-exclusive-method"&gt;Method I: Exclusive Method&lt;/h3&gt;
&lt;p&gt;Let 
&lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(l_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(l_3\)&lt;/span&gt; 
be the lengths of the 3 pieces from the left end of the stick.
To form a triangle, 
&lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(l_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(l_3\)&lt;/span&gt; have to satisfy the following conditions.&lt;/p&gt;
&lt;div class="math"&gt;$$l_1 + l_2 &amp;gt; l_3,$$&lt;/div&gt;
&lt;div class="math"&gt;$$l_2 + l_3 &amp;gt; l_1,$$&lt;/div&gt;
&lt;div class="math"&gt;$$l_3 + l_1 &amp;gt; l_2.$$&lt;/div&gt;
&lt;p&gt;Or equivalently,
&lt;/p&gt;
&lt;div class="math"&gt;$$0 &amp;lt; l_1, l_2, l_3 &amp;lt; \frac{1}{2}.$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= P(0 &amp;lt; l_1, l_2, l_3 &amp;lt; \frac{1}{2}) \nonumber \newline 
                   &amp;amp;= 1 - P(l_1 \ge \frac{1}{2} | l_2 \ge \frac{1}{2} | l_3 \ge \frac{1}{2}) \nonumber \newline 
                   &amp;amp;= 1 - \left(P(l_1 \ge \frac{1}{2}) + P(l_2 \ge \frac{1}{2}) + P(l_3 \ge \frac{1}{2})\right). \nonumber \newline 
\end{align}&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P(l_1 \ge \frac{1}{2}) &amp;amp;= P(min\\{X_1, X_2\\} \ge \frac{1}{2}) = P(X_1 \ge \frac{1}{2}, X_2 \ge \frac{1}{2}) \nonumber \newline 
                       &amp;amp;= P(X_1 \ge \frac{1}{2}) P(X_2 \ge \frac{1}{2}) \nonumber \newline 
                       &amp;amp;= \frac{1}{2} \times \frac{1}{2} = \frac{1}{4}. \nonumber
\end{align}&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(l_3\)&lt;/span&gt; is symmetric to &lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, 
so 
&lt;span class="math"&gt;\(P(l_3 \ge \frac{1}{2}) = \frac{1}{4}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It can be shown (see Method II) that &lt;span class="math"&gt;\(P(l_2 \ge \frac{1}{2}) = \frac{1}{4}\)&lt;/span&gt;,
so 
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= 1 - \left(P(l_1 \ge \frac{1}{2}) + P(l_2 \ge \frac{1}{2}) + P(l_3 \ge \frac{1}{2})\right) \nonumber \newline 
                       &amp;amp;= 1 - \left(\frac{1}{4} + \frac{1}{4} + \frac{1}{4}\right) = \frac{1}{4} = 0.25. \nonumber
\end{align}&lt;/div&gt;
&lt;h3 id="method-ii-visualization"&gt;Method II: Visualization&lt;/h3&gt;
&lt;div align="middle"&gt;
    &lt;figure&gt;
        &lt;img src="http://dclong.github.io/media/fun_problems/triangle/triangle.jpg" 
        alt="Probability to Form a Triangle" 
        height="400" width="400"/&gt;
        &lt;figcaption&gt;
            Figure 1: Probability to Form a Triangle.
        &lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be defined as above. 
For the convenience of visualization, 
Figure 1 uses &lt;span class="math"&gt;\(X\)&lt;/span&gt; to stand for &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; to stand for &lt;span class="math"&gt;\(X_2\)&lt;/span&gt;.
The pair &lt;span class="math"&gt;\((X, Y)\)&lt;/span&gt; is uniformly distributed 
in the unit square &lt;span class="math"&gt;\([0,1] \times [0,1]\)&lt;/span&gt;
as shown in Figure 1.
To form a triangle, 
&lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; need to satisfy the following conditions.
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
              |X - Y| &amp;amp;&amp;lt; \frac{1}{2}, \newline
    (X - \frac{1}{2}) &amp;amp;  (Y - \frac{1}{2}) &amp;lt; 0
\end{align}&lt;/div&gt;
&lt;p&gt;Condition (1) requires that the middle part of the 3 pieces 
cannot be greater than &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;.
It is equivalent to 
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
    Y &amp;amp;&amp;gt; x - \frac{1}{2}, \newline
    Y &amp;amp;&amp;lt; x + \frac{1}{2},
\end{align}&lt;/div&gt;
&lt;p&gt;
which corresponds to the hexagon in the middle of the unit square 
(consisting of &lt;span class="math"&gt;\(B_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(B_2\)&lt;/span&gt;, &lt;span class="math"&gt;\(T_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(T_2\)&lt;/span&gt;).
Condition (2) requires that &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; cannot be 
both smaller than &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt; 
or bother greater than &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;,
which excludes areas &lt;span class="math"&gt;\(B_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(B_2\)&lt;/span&gt;.
So when &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; falls into &lt;span class="math"&gt;\(T_1\)&lt;/span&gt; or &lt;span class="math"&gt;\(T_2\)&lt;/span&gt; (grean areas),
the 3 pieces of sticks can form a triangle. 
It is easy to see that the area/probability is &lt;span class="math"&gt;\(\frac{1}{4}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(l_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(l_3\)&lt;/span&gt; be defined as in Method I.
&lt;span class="math"&gt;\(l_1 &amp;gt; \frac{1}{2}\)&lt;/span&gt; corresponds to the area &lt;span class="math"&gt;\(B_2\)&lt;/span&gt; 
whose area/probability is &lt;span class="math"&gt;\(\frac{1}{4}\)&lt;/span&gt;;
&lt;span class="math"&gt;\(l_2 &amp;gt; \frac{1}{2}\)&lt;/span&gt; corresponds to the areas &lt;span class="math"&gt;\(A_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(A_2\)&lt;/span&gt;.
Their areas/probabilities sums to &lt;span class="math"&gt;\(\frac{1}{4}\)&lt;/span&gt;.
&lt;span class="math"&gt;\(l_3 &amp;gt; \frac{1}{2}\)&lt;/span&gt; corresponds to the area &lt;span class="math"&gt;\(B_1\)&lt;/span&gt;
whose area/probability is &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The R code used to generate Figure 1 is given below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lty&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;solid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;plot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;without&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;axes&lt;/span&gt;
&lt;span class="nx"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;xlab&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ylab&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="nx"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;axes&lt;/span&gt;
&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;lab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lines&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;slope&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vertical&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;horizontal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;grayed&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;grayed&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m m-Double"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;grayed&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;inner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangles&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gray&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;A1&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gray&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;A2&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gray&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;B1&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;B1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gray&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;B2&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;B2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;flag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;inner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangles&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;T1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;T2&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;T1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;T2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;0.5&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y = x + 0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;0.5&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y = x - 0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="method-iii-order-statistics"&gt;Method III: Order Statistics&lt;/h3&gt;
&lt;div align="middle"&gt;
    &lt;figure&gt;
        &lt;img src="http://dclong.github.io/media/fun_problems/triangle/order_stat.jpg" 
        alt="Probability to Form a Triangle" 
        height="400" width="400"/&gt;
        &lt;figcaption&gt;
            Figure 2: Probability to Form a Triangle.
        &lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be as defined above.
Let &lt;span class="math"&gt;\(X_{(1)} = min\{X_1, X_2\}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)} = max\{X_1, X_2\}\)&lt;/span&gt;,
then 
&lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; 
are order statistics.
From the theorem of order statistics we know that 
the join density of 
&lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; 
is constant 2 with support &lt;span class="math"&gt;\(0 &amp;lt; X_{(1)} &amp;lt; X_{(2)} &amp;lt; 1\)&lt;/span&gt;.
To form an triangle, 
&lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; have to satisfy the following condition.
&lt;/p&gt;
&lt;div class="math"&gt;$$
    0 &amp;lt; x_{(1)} &amp;lt; \frac{1}{2} &amp;lt; X_{(2)} &amp;lt; X_{(1)} + \frac{1}{2}.
$$&lt;/div&gt;
&lt;p&gt;
The probability for the 3 pieces of sticks to form an triangle is thus&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation}
    \int_{0}^{\frac{1}{2}} \int_{\frac{1}{2}}^{x_1+\frac{1}{2}} 2\, dx_2\,dx_1  
    = \int_{0}^{\frac{1}{2}} 2x_1 dx_1 = x_1^2|_{0}^{\frac{1}{2}} = \frac{1}{4}. 
\end{equation}&lt;/div&gt;
&lt;p&gt;The support of the joint density of &lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; 
is the big triangle in Figure 2. 
For the convenience of visualization,
Figure 2 uses &lt;span class="math"&gt;\(X\)&lt;/span&gt; to stand for &lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; 
and &lt;span class="math"&gt;\(Y\)&lt;/span&gt;  to stand for &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt;.
The integral domain of (5) is the green area T in Figure 2.&lt;/p&gt;
&lt;p&gt;The R code to generate Figure 2 is given below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;par&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;lty&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;solid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;xlab&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;ylab&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;segments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;segments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;lab&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;middle&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;triangle&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m m-Double"&gt;1.3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y = x + 0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m m-Double"&gt;0.4&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;y = x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;col&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="dependent-uniformly-distributed"&gt;Dependent Uniformly Distributed&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be defined as above. 
In this situation we assume that 
&lt;/p&gt;
&lt;div class="math"&gt;$$X_1 \sim U(0, 1),$$&lt;/div&gt;
&lt;div class="math"&gt;$$X_2 | X_1  \sim U(X_1, 1).$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= \int_{0}^{\frac{1}{2}} \frac{1}{1-x_1} \int_{\frac{1}{2}}^{x_1+\frac{1}{2}} dx_2\, dx_1 \nonumber \newline  
        &amp;amp;= \int_{0}^{\frac{1}{2}} \frac{x_1}{1-x_1}dx_1 = log2 - \frac{1}{2} \approx 0.1931. \nonumber
\end{align}&lt;/div&gt;
&lt;p&gt;The Dirichlet distribution is a distribution 
that is frequently used in Bayesian non-parametric models.
It has a stick-breaking construction. 
Let &lt;span class="math"&gt;\(Y_1 = X_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y_2 = X_2 - X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_3 = 1 - X_1 - X_2\)&lt;/span&gt;.
The specification of the joint distribution of &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_2\)&lt;/span&gt; 
sounds a lot like a the construction of a Dirichlet distribution,
however, it is not!
Given &lt;span class="math"&gt;\(Y_1 = X_1 \sim U(0, 1) \overset{d}{=} B(1, 1)\)&lt;/span&gt;, 
if &lt;span class="math"&gt;\(Y_2 \sim (1-Y_1)B(\alpha, \beta)\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(\alpha + \beta = 1\)&lt;/span&gt;, 
then the joint distribution of &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_3\)&lt;/span&gt; is Dirichlet distribution
with concentration parameters 1, &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt; and &lt;span class="math"&gt;\(\beta\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="dirichlet-distributed"&gt;Dirichlet Distributed&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_3\)&lt;/span&gt; be defined as above. 
In this situation we assume that 
&lt;/p&gt;
&lt;div class="math"&gt;$$(Y_1, Y_2, Y_3) \sim Dir(1, \frac{1}{2}, \frac{1}{2}),$$&lt;/div&gt;
&lt;p&gt;
that is 
&lt;/p&gt;
&lt;div class="math"&gt;$$X_1 \sim U(0, 1),$$&lt;/div&gt;
&lt;div class="math"&gt;$$X_2 | X_1  \sim X_1 + (1-X_1) U(\frac{1}{2}, \frac{1}{2}).$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= \int_{0}^{\frac{1}{2}} \int_{\frac{1}{2}-x_1}^{\frac{1}{2}} \frac{1}{\pi} x_2^{1/2}(1-x_1-x_2)^{1/2} dx_2\, dx_1 \nonumber \newline
&amp;amp;= \frac{2}{\pi} - \frac{1}{2} \approx 0.1366. \nonumber
\end{align}&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="fun problems"></category><category term="stick breaking"></category><category term="probability"></category><category term="statistics"></category><category term="triangle"></category><category term="Dirichlet distribution"></category><category term="graph"></category><category term="plot"></category><category term="visualization"></category><category term="R"></category></entry><entry><title>Copy Arrays in Java</title><link href="https://www.legendu.net/en/blog/copy-array-java/" rel="alternate"></link><published>2012-06-19T13:48:18-07:00</published><updated>2014-10-19T13:48:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-19:/en/blog/copy-array-java/</id><summary type="html">&lt;p&gt;There are several different ways to copy arrays of object (primitive types) in Java. 
However, 
the fastest way seems to be &lt;code&gt;System.arraycopy&lt;/code&gt;. 
This methed is implemented using native code and only performs a shallow copy. 
Acutally most methods for copying arrays in Java perform shallow copy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;int arr1[] = {0 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;There are several different ways to copy arrays of object (primitive types) in Java. 
However, 
the fastest way seems to be &lt;code&gt;System.arraycopy&lt;/code&gt;. 
This methed is implemented using native code and only performs a shallow copy. 
Acutally most methods for copying arrays in Java perform shallow copy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;int arr1[] = {0, 1, 2, 3, 4, 5};
int arr2[] = {0, 10, 20, 30, 40, 50};
// copies 3 elements from arr1 to arr2 
System.arraycopy(arr1, 0, arr2, 0, 3);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="array"></category><category term="copy"></category><category term="Java"></category><category term="programming"></category></entry><entry><title>Type Cast in Java</title><link href="https://www.legendu.net/en/blog/type-cast-in-java/" rel="alternate"></link><published>2012-11-02T10:50:55-07:00</published><updated>2014-10-02T10:50:55-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-02:/en/blog/type-cast-in-java/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;You cannot cast between integer and boolean values. 
However it is trivia to convert data between integer and boolean. 
For example,
&lt;code&gt;int i = b ? 1 : 0;&lt;/code&gt; convert a boolean value &lt;code&gt;b&lt;/code&gt; into an integer value &lt;code&gt;i&lt;/code&gt;, 
and &lt;code&gt;boolean b = i != 0&lt;/code&gt; convert an integer value &lt;code&gt;i&lt;/code&gt; into a boolean value …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;You cannot cast between integer and boolean values. 
However it is trivia to convert data between integer and boolean. 
For example,
&lt;code&gt;int i = b ? 1 : 0;&lt;/code&gt; convert a boolean value &lt;code&gt;b&lt;/code&gt; into an integer value &lt;code&gt;i&lt;/code&gt;, 
and &lt;code&gt;boolean b = i != 0&lt;/code&gt; convert an integer value &lt;code&gt;i&lt;/code&gt; into a boolean value &lt;code&gt;b&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="type cast"></category><category term="programming"></category><category term="Java"></category></entry><entry><title>String in Different Programming Languages</title><link href="https://www.legendu.net/en/blog/summary-string-popular-programming-language/" rel="alternate"></link><published>2012-06-14T16:34:30-07:00</published><updated>2014-09-14T16:34:30-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-14:/en/blog/summary-string-popular-programming-language/</id><summary type="html">&lt;p&gt;A string is essentially a sequence of characters. 
This is how string is implemented in many programming languages (string in Java is different).
For this reason, you can operate string like an array in some programming languages.
This post is a shallow summary on strings in different programming languages.
For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A string is essentially a sequence of characters. 
This is how string is implemented in many programming languages (string in Java is different).
For this reason, you can operate string like an array in some programming languages.
This post is a shallow summary on strings in different programming languages.
For a deep discussion, please check other posts. &lt;/p&gt;
&lt;h2 id="representate"&gt;Representate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: double quotes (single quotes for char type)&lt;/li&gt;
&lt;li&gt;Java: double quotes (single quotes for char type)&lt;/li&gt;
&lt;li&gt;Bash: single or double quotes (double quotes allows expansion of varialbes while single quotes not) &lt;/li&gt;
&lt;li&gt;Python: single or double quotes (exchangeable)&lt;/li&gt;
&lt;li&gt;Ruby: single or double quotes (single preserve escapes while double interpret them)&lt;/li&gt;
&lt;li&gt;R: single or double quotes (exchangeable)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="substring"&gt;Substring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: use iterators and constructor of the std::string class&lt;/li&gt;
&lt;li&gt;Java: substring() as a method&lt;/li&gt;
&lt;li&gt;Bash: &lt;code&gt;${str:0:3}&lt;/code&gt; where &lt;code&gt;str&lt;/code&gt; is a string variable&lt;/li&gt;
&lt;li&gt;Python: used like an array &lt;code&gt;str[2:]&lt;/code&gt;, &lt;code&gt;str[:2]&lt;/code&gt;, &lt;code&gt;x[:-2]&lt;/code&gt;, ...&lt;/li&gt;
&lt;li&gt;Ruby: &lt;code&gt;slice()&lt;/code&gt; as a method or used like an array str[3..-1], str[2,3], ...&lt;/li&gt;
&lt;li&gt;R: &lt;code&gt;substr()&lt;/code&gt; as a function&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="concatenate"&gt;Concatenate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: +&lt;/li&gt;
&lt;li&gt;Java: +&lt;/li&gt;
&lt;li&gt;Bash: &lt;code&gt;"${str1}other_str"&lt;/code&gt; where &lt;code&gt;str1&lt;/code&gt; is a string variable. If no white space, double quotes can be omitted&lt;/li&gt;
&lt;li&gt;Python: +&lt;/li&gt;
&lt;li&gt;Ruby: + &lt;/li&gt;
&lt;li&gt;R: paste() as a function&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="length"&gt;Length&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: size() as a method&lt;/li&gt;
&lt;li&gt;Java: length() as a method&lt;/li&gt;
&lt;li&gt;Bash: &lt;code&gt;${#v}&lt;/code&gt; where &lt;code&gt;v&lt;/code&gt; is a variable in bash &lt;/li&gt;
&lt;li&gt;Python: len() as a function&lt;/li&gt;
&lt;li&gt;Ruby: length() as a method&lt;/li&gt;
&lt;/ul&gt;</content><category term="Computer Science"></category><category term="Python"></category><category term="programming"></category><category term="Java"></category><category term="string"></category><category term="bash"></category><category term="Ruby"></category><category term="R"></category></entry><entry><title>What are the Two Integers?</title><link href="https://www.legendu.net/en/blog/find-the-two-indivisible-numbers/" rel="alternate"></link><published>2013-02-08T11:41:48-08:00</published><updated>2014-09-08T11:41:48-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-02-08:/en/blog/find-the-two-indivisible-numbers/</id><summary type="html">&lt;p&gt;I met a friend majored in math on a bus home today. 
He held a piece of paper with a question 
(probably an interview question since he is trying to find a job recently).
He asked the question to me and I found it to be an interesting one. &lt;/p&gt;
&lt;p&gt;A …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I met a friend majored in math on a bus home today. 
He held a piece of paper with a question 
(probably an interview question since he is trying to find a job recently).
He asked the question to me and I found it to be an interesting one. &lt;/p&gt;
&lt;p&gt;A very large positive integer is divisible by all 
but two of the integers &lt;/p&gt;
&lt;div class="math"&gt;$$1, 2, 3, \dots, 10000,$$&lt;/div&gt;
&lt;p&gt;and the two excepted numbers are consecutive integers.
What are the two integers?&lt;/p&gt;
&lt;p&gt;I did not get the answer before my friend get off the bus. 
However, as soon as arriving home I get the key to the questions. 
The outline of my thoughts leading to the answer is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Assume the question is valid, 
i.e., there is a unique answer to this problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both of the two numbers (indivisible to the large integer) 
have prime factorization of the form: &lt;span class="math"&gt;\(a^b\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(b\)&lt;/span&gt; is the largest possible value. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since one of two consecutive integers is even, 
one of the two numbers (indivisible to the large integer) has
the form &lt;span class="math"&gt;\(2^b\)&lt;/span&gt; and thus is &lt;span class="math"&gt;\(2^{13}=8192\)&lt;/span&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The other number must be either &lt;code&gt;8193&lt;/code&gt; or &lt;code&gt;8191&lt;/code&gt;. 
Since &lt;code&gt;8193&lt;/code&gt; is divisible to &lt;code&gt;3&lt;/code&gt; but not &lt;code&gt;9&lt;/code&gt; 
(&lt;code&gt;8 + 1 + 9 + 3 = 21&lt;/code&gt; is a multiple of &lt;code&gt;3&lt;/code&gt; but not &lt;code&gt;9&lt;/code&gt;), 
it does not have the form mentioned in step 2.
So the other number is &lt;code&gt;8191&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="puzzle"></category><category term="fun problems"></category><category term="number"></category></entry><entry><title>Probability to Get a Complete Deck of Cards?</title><link href="https://www.legendu.net/en/blog/chance-complete-decks-poker/" rel="alternate"></link><published>2012-07-17T17:54:37-07:00</published><updated>2014-08-17T17:54:37-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-17:/en/blog/chance-complete-decks-poker/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/poker/poker.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a poker games requires 4 decks of poker.
After the game, the cards are put back into the 4 decks randomly.
Now there is another game which requires only 1 deck of poker,
so we want to open some decks of the poker and find a complete set of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/poker/poker.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a poker games requires 4 decks of poker.
After the game, the cards are put back into the 4 decks randomly.
Now there is another game which requires only 1 deck of poker,
so we want to open some decks of the poker and find a complete set of cards.
Since people are lazy, 
we do not want to open all the 4 decks of poker.
If we open 2 decks of cards, 
what is the probability that we can get a complete set of cards?&lt;/p&gt;
&lt;p&gt;It is hard to solve this specific problem directly.
The viewpoint of treating a deck of cards as a whole is especially a barrier for solving this problem.
Here is the fancy idea.
We can generalize this problem as follows.
Suppose there are &lt;span class="math"&gt;\(N\)&lt;/span&gt; distinct cards in a deck of poker.
Now &lt;span class="math"&gt;\(M\)&lt;/span&gt; decks of pokers are mixed together and then put back.
If we draw &lt;span class="math"&gt;\(n\)&lt;/span&gt; cards randomly,
what is the probability that we get &lt;span class="math"&gt;\(m\)&lt;/span&gt; types (cards of the same color and suit are consider to be the same type) of cards?
Now to answer the question that how much chance we can get a complete set of cards if we open &lt;span class="math"&gt;\(k\)&lt;/span&gt; decks of poker,
we just need to calculate the probability of getting &lt;span class="math"&gt;\(N\)&lt;/span&gt; types of cards,
if we draw &lt;span class="math"&gt;\(kN\)&lt;/span&gt; cards randomly from these mixed cards.&lt;/p&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(A_{n,m}\)&lt;/span&gt; to stand for the event of getting &lt;span class="math"&gt;\(m\)&lt;/span&gt; types of cards when &lt;span class="math"&gt;\(n\)&lt;/span&gt; cards are randomly drawn,
and &lt;span class="math"&gt;\(P_{n,m}\equiv P(A_{n,m})\)&lt;/span&gt;.
Then conditioning on the number of types of cards we get in the first &lt;span class="math"&gt;\(n-1\)&lt;/span&gt; draws,
we have the following recursion formula
    &lt;/p&gt;
&lt;div class="math"&gt;$$
    P_{n,m}=P_{n-1,m}\frac{mM-n+1}{NM-n+1}+P_{n-1,m-1}\frac{(N-m+1)M}{NM-n+1}.
    $$&lt;/div&gt;
&lt;p&gt;
We can find a formula for general terms using method of generating functions.
Since there are two subscript changing at the same time,
it is much harder to solve this recursion formula.
However, 
as I mentioned before, 
we have actually solved the problem from
practical view because we have recursion formula and we know the initial values.
We can write a program to help us solve this problem.
The following is an implementation of the recursion formula in Mathematica.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;illegal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The number of selected exeeds the total number.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;nselected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;distinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;Ndistinct&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;distinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;Ncopies&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copies&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;poker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nselected_, ndistinct_, Ndistinct_, Ncopies_&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="n"&gt;    {TotalCardsNumber, TotalChoices, i, j, result = {}, n, nleft},&lt;/span&gt;
&lt;span class="n"&gt;    TotalCardsNumber = Ndistinct*Ncopies;&lt;/span&gt;
&lt;span class="n"&gt;    If[TotalCardsNumber &amp;lt; nselected, &lt;/span&gt;
&lt;span class="n"&gt;        Message[GeneralizedHyperGeometryProbability::illegal&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Ndistinct &amp;lt; ndistinct, Return[0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nselected &amp;lt; ndistinct, Return[0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ndistinct * Ncopies &amp;lt; nselected, Return[0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ndistinct == 1,&lt;/span&gt;
&lt;span class="n"&gt;        Return[Ndistinct * Binomial[Ncopies, nselected&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Binomial&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TotalCardsNumber, nselected&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TotalChoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Binomial&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TotalCardsNumber, nselected&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nselected == ndistinct,&lt;/span&gt;
&lt;span class="n"&gt;        Return[Binomial[Ndistinct, ndistinct&lt;/span&gt;&lt;span class="o"&gt;]*&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;TotalChoices&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= ndistinct, i++,&lt;/span&gt;
&lt;span class="n"&gt;        AppendTo[result, &lt;/span&gt;
&lt;span class="n"&gt;        GeneralizedHyperGeometryProbability[i, i, Ndistinct, Ncopies&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 2, i &amp;lt;= nselected - ndistinct + 1, i++,&lt;/span&gt;
&lt;span class="n"&gt;        result[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i, 1, Ndistinct, Ncopies&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j = 2, j &amp;lt;= ndistinct, j++,&lt;/span&gt;
&lt;span class="n"&gt;            n = j - 1 + i;&lt;/span&gt;
&lt;span class="n"&gt;            nleft = TotalCardsNumber - n + 1;&lt;/span&gt;
&lt;span class="n"&gt;            result[[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nleft&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j - 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nleft&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result[[ndistinct&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;

&lt;span class="ow"&gt;In&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GeneralizedHyperGeometryProbability[54*1, 54, 54, 4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;Out&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;9.19323&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="ow"&gt;In&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GeneralizedHyperGeometryProbability[54*2, 54, 54, 4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;Out&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.0190881&lt;/span&gt;
&lt;span class="ow"&gt;In&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GeneralizedHyperGeometryProbability[54*3, 54, 54, 4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;Out&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.820296&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the following is another implementation of the recursion formula in R.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; @param ndistinct the number of distinct card in the selected card;&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;distinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;card&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; @param Ncopies the copies of poker.&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;pghyper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TotalCardsNumber&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TotalCardsNumber&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;the number of selected exceeds the total number.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TotalChoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;choose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TotalCardsNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;choose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TotalChoices&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;dchoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;choose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dchoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TotalChoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dchoices&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dchoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TotalChoices&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;multiple&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pghyper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nselected&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="n"&gt;pghyper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;nleft&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TotalCardsNumber&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nleft&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j-1&lt;/span&gt;&lt;span class="o"&gt;]*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ndistinct&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nleft&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ndistinct&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pghyper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;9.19323e-20&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pghyper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.01908814&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pghyper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.8202961&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the above result,
we can see that in the original problem the probability 
is only about &lt;span class="math"&gt;\(2\%\)&lt;/span&gt; for us to get a complete set of cards
if we only open 2 decks of pokers 
while the probability is about &lt;span class="math"&gt;\(82\%\)&lt;/span&gt; if we open one more deck of poker (i.e. open 3 decks of pokers).
So for a really lazy person, it seems that to open 3 decks of poker is a good choice.
Let &lt;span class="math"&gt;\(f(k)=P_{54k,54}, k=1,\ldots, 4\)&lt;/span&gt;.
The above result also suggests us that function &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; is a very odd function.
It is small when &lt;span class="math"&gt;\(k\)&lt;/span&gt; is smaller and then suddenly increases to a (relative) very big value,
and then it increases mildly to 1.
Now suppose there are 20 decks of poker (each has 54 cards) involved,
let's see how function &lt;span class="math"&gt;\(f(k)=P_{54k,54}\)&lt;/span&gt;, &lt;span class="math"&gt;\(k=1,\ldots, 20\)&lt;/span&gt;, behaves.
The plot of the function &lt;span class="math"&gt;\(f(k)=P_{54k,54}\)&lt;/span&gt;, &lt;span class="math"&gt;\(k=1,\ldots, 20\)&lt;/span&gt;, 
is shown is in the following figure. 
We can see that for very small &lt;span class="math"&gt;\(k\)&lt;/span&gt;, &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; is very small;
then &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; increase dramatically to a (relative) very big value and then it increase mildly to 1.
For other number of decks of poker, &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; has similar properties.
So in this kind of problems, definitely we will not have a big probability to success if open 1 or 2
decks of poker. However, we do not have to open too many decks of poker, e.g., 4 or 5 decks would
yield a remarkable success probability even if many (e.g., 100) decks of pokers are involved.
&lt;img alt="Probability" src="http://www.legendu.net/media/poker/probability.png"&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="statistics"></category><category term="recursion"></category><category term="probability"></category><category term="Mathematica"></category><category term="fun problems"></category><category term="poker"></category></entry><entry><title>Chance to Take One's Own Seat?</title><link href="https://www.legendu.net/en/blog/chance-take-own-seat/" rel="alternate"></link><published>2012-07-10T13:13:46-07:00</published><updated>2014-08-10T13:13:46-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-10:/en/blog/chance-take-own-seat/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/seat/seat.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are &lt;span class="math"&gt;\(N\)&lt;/span&gt; seats on a plane.
Suppose the first passengers is drunk and he takes a seat randomly.
For each of the other passengers, if his/her seat is not taken by other people,
then he/she sits on his/her own seat, otherwise he/she takes a seat …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/seat/seat.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are &lt;span class="math"&gt;\(N\)&lt;/span&gt; seats on a plane.
Suppose the first passengers is drunk and he takes a seat randomly.
For each of the other passengers, if his/her seat is not taken by other people,
then he/she sits on his/her own seat, otherwise he/she takes a seat randomly.
What is  the probability that the last passenger takes his/her own seat?&lt;/p&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(P_n\)&lt;/span&gt; to stand for the probability that the last passenger takes his/her own seat,
given that there're &lt;span class="math"&gt;\(n\)&lt;/span&gt; seats in total, i.e. &lt;span class="math"&gt;\(N=n\)&lt;/span&gt;.
If the first passenger takes his own seat,
then the last passenger will take his/her own seat.
If the first passenger takes the last passenger's seat,
then the last passenger cannot take his/her own seat (we know that he/she must take the first passenger's seat).
If the first passenger takes the &lt;span class="math"&gt;\(i^{th}, 1&amp;lt;i&amp;lt;n\)&lt;/span&gt; passenger's seat,
then for the &lt;span class="math"&gt;\(j^{th}\)&lt;/span&gt; passenger, &lt;span class="math"&gt;\(1&amp;lt; j\lt i\)&lt;/span&gt;, he/she will takes his/her own seat.
Now the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; passenger has to choose a seat randomly.
Since we don't care about whether the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; passenger takes his/her own seat or not,
we can pretend that the first passenger's seat is the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; passengers.
From this perspective, the problem has been changed to a same problem with &lt;span class="math"&gt;\(N=n-i+1\)&lt;/span&gt;.
So conditioning on the seat that the first passenger takes,
we have the following recursive formula:&lt;/p&gt;
&lt;div class="math"&gt;$$
P_n=\frac{1}{n}\times1+\frac{1}{n}\times0+\sum_{i=2}^{n-1}\frac{1}{n}P_{n-i+1}=\frac{1}{n}\sum_{i=1}^{n-1}P_i,\ n\ge2,
$$&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(P_1=1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We can use method of generating function to find the formula of general terms.
However, if we notice from the recursive formula that &lt;span class="math"&gt;\(P_2=\frac{1}{2}\)&lt;/span&gt;,
&lt;span class="math"&gt;\(P_3=\frac{1}{2}\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_4=\frac{1}{2}\)&lt;/span&gt; and so on.
We can easily see that &lt;span class="math"&gt;\(P_i=\frac{1}{2}\)&lt;/span&gt; for &lt;span class="math"&gt;\(i\ge2\)&lt;/span&gt; is the
unique solution for the general terms.\
So as long as there're more than 1 people,
the probability that the last passenger takes his/her own seat is &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="statistics"></category><category term="recursion"></category><category term="probability"></category><category term="fun problems"></category><category term="seat"></category></entry><entry><title>Sun Bin PK Pang Juan</title><link href="https://www.legendu.net/en/blog/sun-bin-pang-juan/" rel="alternate"></link><published>2010-05-06T10:57:40-07:00</published><updated>2014-08-06T10:57:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-05-06:/en/blog/sun-bin-pang-juan/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pk/pk.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Dating back to the time when I was a sophomore, 
I read a very interesting problem from "Waming", 
which is a magazine of math department of USTC (University of Science and Technology of China).&lt;/p&gt;
&lt;p&gt;One day Guigu Zi (a famous ancient Chinese sophist, 
the teacher of Sun Bin and Pang …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pk/pk.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Dating back to the time when I was a sophomore, 
I read a very interesting problem from "Waming", 
which is a magazine of math department of USTC (University of Science and Technology of China).&lt;/p&gt;
&lt;p&gt;One day Guigu Zi (a famous ancient Chinese sophist, 
the teacher of Sun Bin and Pang Juan) came up with two numbers between 1 and 100, 
and told the product of the two numbers to Sun Bin, the sum to Pang Juan. 
The next day when Pang Juan ran into Sun Bin, he boasted, 
"Now I don't know what the 2 numbers are, 
but I'm pretty sure you don't know either." 
"I have to thank you for the information, 
because I did have no idea of what the 2 numbers are, but now I already know." 
responded Sun Bin. 
Pang Juan thought for a while, smiled and then said, 
"Now the same here." Question: what are the two numbers?&lt;/p&gt;
&lt;p&gt;If you think are a very smart people and very good at logic, you can spend some time think about this problem. 
My code (written in Mathmatica) for solving this problem is given below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;possible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;based&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pang&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Juan&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s first words.*)&lt;/span&gt;
&lt;span class="s1"&gt;PangJuan1[comb_] := Module[{i, n, sum, position, j, Result},&lt;/span&gt;
&lt;span class="s1"&gt;    Result = comb;&lt;/span&gt;
&lt;span class="s1"&gt;    n = Length[Result];&lt;/span&gt;
&lt;span class="s1"&gt;    position = {};&lt;/span&gt;
&lt;span class="s1"&gt;    For[i = 1, i &amp;lt;= n, i++,&lt;/span&gt;
&lt;span class="s1"&gt;        sum = Result[[i, 1]] + Result[[i, 2]];&lt;/span&gt;
&lt;span class="s1"&gt;        If[EvenQ[sum] || PrimeQ[sum - 2] || Floor[sum/2] &amp;lt;= 2, AppendTo[position, {i}]]&lt;/span&gt;
&lt;span class="s1"&gt;    ];&lt;/span&gt;
&lt;span class="s1"&gt;    Result = Delete[Result, position];&lt;/span&gt;
&lt;span class="s1"&gt;    Return[Result];&lt;/span&gt;
&lt;span class="s1"&gt;];&lt;/span&gt;
&lt;span class="s1"&gt;(*function filter possible combinations based on Sun Bin&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SunBin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;comb_&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{n, i, prod, divisors, len, counter, DivisorCombinations, Result, positions, FlagLower, FlagUpper},&lt;/span&gt;
&lt;span class="n"&gt;    Result = comb;&lt;/span&gt;
&lt;span class="n"&gt;    n = Length[Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= n, i++,&lt;/span&gt;
&lt;span class="n"&gt;        prod = Result[[i, 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[i, 2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Divisors&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prod&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;possible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;FlagLower&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Floor&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len/2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;smallest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;subscript&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bigger&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;DivisorCombinations&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;subscript&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bigger&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FlagUpper = FlagLower, &lt;/span&gt;
&lt;span class="n"&gt;            FlagUpper &amp;lt; len &amp;amp;&amp;amp; divisors[[FlagUpper&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FlagUpper&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nf"&gt;len&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;counter = FlagUpper - 1, counter &amp;gt;= FlagLower, counter--,&lt;/span&gt;
&lt;span class="n"&gt;                AppendTo[&lt;/span&gt;
&lt;span class="n"&gt;      DivisorCombinations, {divisors[[len - counter&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[counter&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]}]&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;There&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;should&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;only&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;possible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combination&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;according&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
&lt;span class="n"&gt;imformation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pang&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Juan&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;provided&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;his&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[DivisorCombinations&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;positions, {i}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[PangJuan1[DivisorCombinations&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;positions, {i}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Delete&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result, positions&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;possible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;based&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pang&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Juan&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;second&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;PangJuan2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;comb_&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{n, i, sum, AddendCombinations, j, Result, positions, &lt;/span&gt;
&lt;span class="n"&gt;    counter},&lt;/span&gt;
&lt;span class="n"&gt;   Result = comb;&lt;/span&gt;
&lt;span class="n"&gt;   n = Length[Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= n, i++,&lt;/span&gt;
&lt;span class="n"&gt;    sum = Result[[i, 1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[i, 2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Build&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;possible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;AddendCombinations&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j = 2, j &amp;lt;= counter, j++,&lt;/span&gt;
&lt;span class="n"&gt;     AppendTo[AddendCombinations, {j, sum - j}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[SunBin[AddendCombinations&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;positions, {i}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Delete&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result, positions&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;construct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;all&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;three&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;functions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
&lt;span class="k"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;right&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GuiGuzi&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{Result},&lt;/span&gt;
&lt;span class="n"&gt;   Result = {};&lt;/span&gt;
&lt;span class="n"&gt;   For[i = 2, i &amp;lt;= 100, i++,&lt;/span&gt;
&lt;span class="n"&gt;    For[j = i, j &amp;lt;= 100, j++,&lt;/span&gt;
&lt;span class="n"&gt;      AppendTo[Result, {i, j}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;Use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pang&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Juan&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;provide&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;his&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;those&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;impossible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PangJuan1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;Use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Sun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Bin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;provide&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;those&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
&lt;span class="n"&gt;impossible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SunBin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;Use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pang&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Juan&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;provide&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;his&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;second&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sentenc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;
&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;those&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;impossible&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;combinations&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PangJuan2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;porgram&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;GuiGuzi&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;
&lt;span class="err"&gt;{{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="err"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Fun Problems"></category><category term="puzzle"></category><category term="Mathematica"></category><category term="fun problems"></category><category term="math"></category><category term="number"></category><category term="sum"></category><category term="product"></category></entry><entry><title>Basketball Player</title><link href="https://www.legendu.net/en/blog/basketball-player/" rel="alternate"></link><published>2012-07-28T21:56:16-07:00</published><updated>2014-07-28T21:56:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-28:/en/blog/basketball-player/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/basketball-player/basketball.jpg" 
height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a basketball player make &lt;span class="math"&gt;\(N\)&lt;/span&gt; shots,
and we know that in the first &lt;span class="math"&gt;\(n(\le N)\)&lt;/span&gt; shots he sinked &lt;span class="math"&gt;\(m(\le n)\)&lt;/span&gt; shots.
If from the &lt;span class="math"&gt;\((n+1)^{th}\)&lt;/span&gt; shot, 
his ratio of sink a shot is his accumulative ratio before the shot,
e.g., suppose he sinked 40 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/basketball-player/basketball.jpg" 
height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a basketball player make &lt;span class="math"&gt;\(N\)&lt;/span&gt; shots,
and we know that in the first &lt;span class="math"&gt;\(n(\le N)\)&lt;/span&gt; shots he sinked &lt;span class="math"&gt;\(m(\le n)\)&lt;/span&gt; shots.
If from the &lt;span class="math"&gt;\((n+1)^{th}\)&lt;/span&gt; shot, 
his ratio of sink a shot is his accumulative ratio before the shot,
e.g., suppose he sinked 40 shots in the first 50 shots,
then his ratio of sink the next shot is 80%.
What's the probability that he will make &lt;span class="math"&gt;\(M\)&lt;/span&gt; shots finally?&lt;/p&gt;
&lt;p&gt;Using the knowledge of permutation and combination, we can solve this problem directly.
Let &lt;span class="math"&gt;\(E_{m,n}\)&lt;/span&gt; be the event that &lt;span class="math"&gt;\(m\)&lt;/span&gt; success in the first &lt;span class="math"&gt;\(n\)&lt;/span&gt; shots.
It turns out to be that&lt;/p&gt;
&lt;div class="math"&gt;$$
P\left( E_{M,N}\mid E_{m,n}\right)
=\frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} } ,\ m\le M\le N-(n-m).
$$&lt;/div&gt;
&lt;p&gt;Notice that&lt;/p&gt;
&lt;div class="math"&gt;$$
P\left( E_{M,N}\mid E_{1,2}\right)=\frac{1}{N-1},\ 1\le M\le N-1.
$$&lt;/div&gt;
&lt;p&gt;i.e., the number of sinked shots &lt;span class="math"&gt;\(M\)&lt;/span&gt; is uniformly distributed on its support
given that the player only sinked 1 shot in the first 2 shots.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_k, n\le k\le N\)&lt;/span&gt; be the number of shots the player sinks in the first &lt;span class="math"&gt;\(k\)&lt;/span&gt; shots,
then the distribution of &lt;span class="math"&gt;\(X_{k+1}\)&lt;/span&gt; conditioning on &lt;span class="math"&gt;\(X_{k}\)&lt;/span&gt; is given in &lt;a href="http://dclong.github.io/media/basketball-player/table.pdf"&gt;Table 1&lt;/a&gt;.
Using the similar method as we've done in the first 3 problems,
we can easily find the first and second moment of &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; which are given below:&lt;/p&gt;
&lt;div class="math"&gt;$$
E(X_k\mid E_{m,n})=k\frac{m}{n},\ n\le k\le N;
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
E(X_k^2)=(k+1)k\frac{(m+1)m}{(n+1)n}-k\frac{m}{n},\ n\le k\le N.
$$&lt;/div&gt;
&lt;p&gt;So the variance of &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; is&lt;/p&gt;
&lt;div class="math"&gt;$$
Var(X_k)=EX_k^2-\left( E X_k\right)^2=k(k-n)\frac{m(n-m)}{n^2(n+1)},\ n\le k\le N.
$$&lt;/div&gt;
&lt;p&gt;From the above formulas, we can know that the expectation and variance
of the number of sinked shots are linear quadratic functions of &lt;span class="math"&gt;\(k\)&lt;/span&gt; respectively,
and both of them increase as &lt;span class="math"&gt;\(k\)&lt;/span&gt; increases.
This makes it hard for us to predict &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; when &lt;span class="math"&gt;\(k\)&lt;/span&gt; is big.
The 2-&lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; intervals for &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; is shown in the follow figure. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.legendu.net/media/basketball-player/interval.png" 
height="200" width="240" align="middle"/&gt;&lt;/p&gt;
&lt;!---
![a picture](http://www.legendu.net/media/basketball-player/interval.png) 
--&gt;

&lt;p&gt;Since we know the distribution of the number of sinked shots 
given that the player sinked &lt;span class="math"&gt;\(m\)&lt;/span&gt; shots in the first &lt;span class="math"&gt;\(n\)&lt;/span&gt; shots,
we can calculate the first and second moments directly, 
which yields the following equations:&lt;/p&gt;
&lt;div class="math"&gt;$$
\sum_M \frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} }=1;
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
\sum_M M\frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} }=N\frac{m}{n};
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
\sum_M M^2\frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} }=(k+1)k\frac{(m+1)m}{(n+1)n}-k\frac{m}{n}.
$$&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="statistics"></category><category term="condition"></category><category term="probability"></category><category term="fun problems"></category><category term="basket ball player"></category></entry><entry><title>Some Useful Properties of Modified Bessel Functions of the First Kind</title><link href="https://www.legendu.net/en/blog/bessel-first-property/" rel="alternate"></link><published>2012-05-28T21:55:16-07:00</published><updated>2014-07-28T21:55:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-28:/en/blog/bessel-first-property/</id><summary type="html">&lt;p&gt;I have to deal with Modified Bessel functions of the first kind frequently in my research. 
Here I list some useful properties of them for future reference. 
    &lt;/p&gt;
&lt;div class="math"&gt;$$I_0'(x) = I_1(x)$$&lt;/div&gt;
&lt;div class="math"&gt;$$I_1'(x) = \frac{I_0(x)+I_2(x)}{2} $$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{I_1(x)}{I_0(x)}\uparrow \Leftrightarrow I_0(x)(I_0(x …&lt;/div&gt;</summary><content type="html">&lt;p&gt;I have to deal with Modified Bessel functions of the first kind frequently in my research. 
Here I list some useful properties of them for future reference. 
    &lt;/p&gt;
&lt;div class="math"&gt;$$I_0'(x) = I_1(x)$$&lt;/div&gt;
&lt;div class="math"&gt;$$I_1'(x) = \frac{I_0(x)+I_2(x)}{2} $$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{I_1(x)}{I_0(x)}\uparrow \Leftrightarrow I_0(x)(I_0(x)+I_2(x))-2I_1^2(x)&amp;gt;0,\forall x&amp;gt;0$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{I_1(x)-I_2(x)}{I_0(x)-I_1(x)}\uparrow$$&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(I_n(x)\)&lt;/span&gt; is the modified Bessel function of order &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For more properties about modified Bessel functions of the first kind, 
please refer to &lt;a href="http://mathworld.wolfram.com/ModifiedBesselFunctionoftheFirstKind.html"&gt;Wolfram MathWorld&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Research"></category><category term="derivative"></category><category term="monotone"></category><category term="Research"></category><category term="Mathematica"></category><category term="positive"></category><category term="Bessel functions"></category></entry><entry><title>Automated Phone Bill Using Ruby Program</title><link href="https://www.legendu.net/en/blog/automated-verizon-bill-using-ruby/" rel="alternate"></link><published>2012-06-18T08:17:18-07:00</published><updated>2014-06-18T08:17:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-18:/en/blog/automated-verizon-bill-using-ruby/</id><summary type="html">&lt;p&gt;I have decided to try different programming languages. 
I learn Python a month ago. 
I would like to say that Python is great scripting language. 
The only thing I do not like so far is inconsistent about methods and functions.
It is annoying to remember whether a call should be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have decided to try different programming languages. 
I learn Python a month ago. 
I would like to say that Python is great scripting language. 
The only thing I do not like so far is inconsistent about methods and functions.
It is annoying to remember whether a call should be made by method or by function. 
I started learning Ruby a few weeks ago.
I have to say that the syntax of Rudy looks weird to me at first,
and I even doubted whether it is worth my effort to learn this language since I already 
know how to program in Python. 
But I have long heard about cool stuff such as Ruby on Rails, Cucumber and so on. 
So I finally convinced myself to continue on studying Ruby. 
As I mentioned in another post, the best way to learn a language is to use it.
I have been thinking about writing a program to parse the statement (in pdf) of 
my Verizon family plan, calculating bill for each member and send email to notify
the bill each of them has to pay automatically. 
I had a R script which can do the calculation part provided that I type some
information manually. 
I decided to make my job as the primary user of the family plan easier.
I am happy that I left this coding job to Ruby for practise. 
&lt;a href="https://github.com/dclong/Ruby-Verizon"&gt;My code&lt;/a&gt; is on GitHub.
If the code does not run, 
you have to install a few ruby packages in order to use it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo gem install pdf-reader actionmailer highline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code only works for current Verizon family plan statement. 
I wish Verizon not to change the format of the family plan statement so that
this program can be used by people like me for a long time, otherwise I have to
make this program more robust to support statement in other format as well.&lt;/p&gt;</content><category term="Computer Science"></category><category term="Python"></category><category term="programming"></category><category term="Verizon"></category><category term="Ruby"></category><category term="email"></category><category term="phone"></category></entry><entry><title>How Many People Stay in the Same Position?</title><link href="https://www.legendu.net/en/blog/same-position-permutation/" rel="alternate"></link><published>2012-07-17T15:16:03-07:00</published><updated>2013-11-17T15:16:03-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-17:/en/blog/same-position-permutation/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/people/same.jpg" width="240" height="200" align="right"&gt;&lt;/p&gt;
&lt;p&gt;There are 100 seats on a plane.
If each of the 100 passengers randomly take a seat,
how many people will have his/her own seat on average?&lt;/p&gt;
&lt;p&gt;There is a classic way to solve this problem, 
which is to decompose a (complicated) random variable into a sum of simple …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/people/same.jpg" width="240" height="200" align="right"&gt;&lt;/p&gt;
&lt;p&gt;There are 100 seats on a plane.
If each of the 100 passengers randomly take a seat,
how many people will have his/her own seat on average?&lt;/p&gt;
&lt;p&gt;There is a classic way to solve this problem, 
which is to decompose a (complicated) random variable into a sum of simple random variables.
This is an important trick. 
See &lt;a href="http://www.legendu.net/en/blog/calculate-covariance-between-multinomial-categories-by-hand/"&gt;this post&lt;/a&gt; 
for the use of this trick to calculate the covariance 
of observastions in two categories in a multinomial distribution.&lt;/p&gt;
&lt;p&gt;Let's generalize this problem to assume that 
there are &lt;span class="math"&gt;\(n\)&lt;/span&gt; seats and &lt;span class="math"&gt;\(n\)&lt;/span&gt; passengers. 
Let &lt;span class="math"&gt;\(Y_i=I(\text{passenger } i \text{ takes its seat})\)&lt;/span&gt;, &lt;span class="math"&gt;\(1\le i \le n\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(I\)&lt;/span&gt; is an indicator function. 
&lt;span class="math"&gt;\(Y_i\)&lt;/span&gt;'s are exchangeable, 
which means that for a fixed &lt;span class="math"&gt;\(k\)&lt;/span&gt; (&lt;span class="math"&gt;\(1\le k\le n\)&lt;/span&gt;), 
any subset of &lt;span class="math"&gt;\(\\{Y_i: 1\le i \le n\\}\)&lt;/span&gt; with &lt;span class="math"&gt;\(k\)&lt;/span&gt; elements has the same distribution.
Specially,
it's easy to see that &lt;/p&gt;
&lt;div class="math"&gt;$$
Y_i\overset{iid}{\sim}\text{Bernoulli}(\frac{1}{n}),
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
Y_iY_j\overset{iid}{\sim}Bernoulli(\frac{1}{n(n-1)}), i\ne j.
$$&lt;/div&gt;
&lt;p&gt;So we have &lt;/p&gt;
&lt;div class="math"&gt;$$
EY_i=\frac{1}{n},
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
EY_iY_j=\frac{1}{n(n-1)}, i\ne j, 
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
Var(Y_i)=\frac{n-1}{n^2},
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
Cov(Y_1,Y_2)=EY_1Y_2-EY_1EY_2=\frac{1}{n^2(n-1)}.
$$&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_n\equiv\sum_{i=1}^nY_i\)&lt;/span&gt;, 
which is the number of passengers taking their own seats.
From above results we know that&lt;/p&gt;
&lt;div class="math"&gt;$$
E(X_n)=E\left( \sum_{i=1}^nY_i\right)=\sum_{i=1}^n E Y_i=n E Y_1=n\frac{1}{n}=1,
$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
Var\left( X_n\right) &amp;amp;= Var\left( \sum_{i=1}^nY_i\right)
                =\sum_{i=1}^n Var(Y_i)+\sum_{i\ne j}Cov(Y_i,Y_j) \nonumber \newline
                     &amp;amp;=  nVar(Y_1)+n(n-1)Cov(Y_1,Y_2) \nonumber \newline
                     &amp;amp;=  n\frac{n-1}{n^2}+n(n-1)\frac{1}{n^2(n-1)}=1. \nonumber
\end{align}&lt;/div&gt;
&lt;p&gt;Surprisingly, both the mean and the variance of &lt;span class="math"&gt;\(X_n\)&lt;/span&gt; is 1,
which suggests that we can predict &lt;span class="math"&gt;\(X_n\)&lt;/span&gt;,
i.e. the number of integers that have the same position as their
original position very well.&lt;/p&gt;
&lt;p&gt;The above solution is elegant. 
However, 
I'd like to try to solve this problem using my preferred universal procedure.
Let &lt;span class="math"&gt;\(Y_i\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_i\)&lt;/span&gt;, &lt;span class="math"&gt;\(1\le i \le n\)&lt;/span&gt;, be as defined above. 
Conditioning &lt;span class="math"&gt;\(X_n\)&lt;/span&gt; on &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt; gives us a recursive/differtial equation.
If &lt;span class="math"&gt;\(Y_1=1\)&lt;/span&gt; (with probability &lt;span class="math"&gt;\(\frac{1}{n}\)&lt;/span&gt;), 
i.e., the first passenger sits on its seat,
then &lt;span class="math"&gt;\(X_n = 1 + X_{n-1}\)&lt;/span&gt;;
It's a little tricky when &lt;span class="math"&gt;\(Y_1=0\)&lt;/span&gt; (with probability &lt;span class="math"&gt;\(1-\frac{1}{n}\)&lt;/span&gt;),
i.e., the first passenger sits on other people's seat. 
Assume the first passenger takes &lt;span class="math"&gt;\(k^{th}\)&lt;/span&gt; (&lt;span class="math"&gt;\(2\le k\le n\)&lt;/span&gt;) passenger's seat.
If we pretend that seat 1 is the &lt;span class="math"&gt;\(k^{th}\)&lt;/span&gt; passenger's seat,
then we have &lt;span class="math"&gt;\(X_n = X_{n-1}\)&lt;/span&gt;. 
However, seat 1 is not &lt;span class="math"&gt;\(k^{th}\)&lt;/span&gt; passenger's seat,
and we cannot count it into &lt;span class="math"&gt;\(X_{n-1}\)&lt;/span&gt;. 
Let &lt;span class="math"&gt;\(E_k\equiv I(\text{passenger } k \text{ sits on seat 1})\)&lt;/span&gt;. 
We only miss count &lt;span class="math"&gt;\(X_{n-1}\)&lt;/span&gt; by extra 1 when &lt;span class="math"&gt;\(E_k=1\)&lt;/span&gt;, 
so when &lt;span class="math"&gt;\(Y_1=0\)&lt;/span&gt; we have 
&lt;/p&gt;
&lt;div class="math"&gt;$$
X_n = X_{n-1} - E_k.
$$&lt;/div&gt;
&lt;p&gt;
It's easy to see that &lt;span class="math"&gt;\(E_k\sim\text{Bernoulli}(\frac{1}{n-1})\)&lt;/span&gt;. 
So using the conditional expectation formula, we have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
EX_n &amp;amp;= E(E(X_n|Y_1))\nonumber\newline 
     &amp;amp;= E\left(\frac{1}{n}(1 + X_{n-1}) + (1-\frac{1}{n}) (X_{n-1} - E_k)\right)\nonumber\newline
     &amp;amp;=EX_{n-1},
\end{align}&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(EX_1=1\)&lt;/span&gt;.
This is the simplest recursive/differential equation. 
Anyone can immediately see that &lt;span class="math"&gt;\(EX_n=1, \forall n\ge1\)&lt;/span&gt; is the solution to this recursive/differential equation.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="same position"></category><category term="statistics"></category><category term="probability"></category><category term="linear recursion"></category><category term="fun problems"></category><category term="conditional expectation"></category><category term="permutation"></category></entry><entry><title>Calculate Covariance Between Multinomial Categories by Hand</title><link href="https://www.legendu.net/en/blog/calculate-covariance-between-multinomial-categories-by-hand/" rel="alternate"></link><published>2013-11-17T15:14:27-08:00</published><updated>2013-11-17T15:14:27-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-11-17:/en/blog/calculate-covariance-between-multinomial-categories-by-hand/</id><summary type="html">&lt;p&gt;Let &lt;span class="math"&gt;\((X_1, \ldots, X_k)\sim\text{Multinomial}(n, p_1, \ldots, p_k)\)&lt;/span&gt;. 
I'll show how to calculate &lt;span class="math"&gt;\(Cov(X_i, X_j), i\ne j\)&lt;/span&gt;. 
The main purpose of doing this is to illustrate the little trick 
of reducing complexity of problems by decomposing a complicated random variable 
into simple ones. &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\((Y_ …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Let &lt;span class="math"&gt;\((X_1, \ldots, X_k)\sim\text{Multinomial}(n, p_1, \ldots, p_k)\)&lt;/span&gt;. 
I'll show how to calculate &lt;span class="math"&gt;\(Cov(X_i, X_j), i\ne j\)&lt;/span&gt;. 
The main purpose of doing this is to illustrate the little trick 
of reducing complexity of problems by decomposing a complicated random variable 
into simple ones. &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\((Y_{i1}, \ldots, Y_{ik})\overset{iid}{\sim}\text{Multinomial}(1, p_1, \ldots, p_k), i\ge1\)&lt;/span&gt;,
then 
&lt;/p&gt;
&lt;div class="math"&gt;$$
X_j = \sum_{i=1}^n Y_{ij}, 1\le j \le k.
$$&lt;/div&gt;
&lt;p&gt;
So,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
Cov(X_i,X_j) &amp;amp;= Cov(\sum_{l=1}^n Y_{li}, \sum_{m=1}^n Y_{mj})\nonumber\newline
             &amp;amp;= \sum_{l=1}^n\sum_{m=1}^n Cov(Y_{li}, Y_{mj})\nonumber\newline
             &amp;amp;= \sum_{m=1}^n Cov(Y_{mi}, Y_{mj})\nonumber\newline
             &amp;amp;= nCov(Y_{1i}, Y_{1j}) = n(EY_{1i}Y_{1j} - EY_{1i}EY_{1j})\nonumber\newline
             &amp;amp;= -np_ip_j\nonumber\newline
\end{align}&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="fun problem"></category><category term="statistics"></category><category term="probability"></category><category term="multinomial"></category><category term="covariance"></category></entry><entry><title>Creative Use of Keepassx -- Odd Skills?</title><link href="https://www.legendu.net/en/blog/creative-use-of-keepassx-odd-skills/" rel="alternate"></link><published>2013-09-30T22:15:37-07:00</published><updated>2013-10-30T22:15:37-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-09-30:/en/blog/creative-use-of-keepassx-odd-skills/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/logo/keepassx.jpeg"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I had to schedule an event on Doodle.
I wanted to fill in all possible regular meeting times 
(starting at 8:00 am with 30 minutes interval).
I am such a lazy guy who never want to repeat the same thing for more than 3 times.
Typing all these time …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/logo/keepassx.jpeg"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I had to schedule an event on Doodle.
I wanted to fill in all possible regular meeting times 
(starting at 8:00 am with 30 minutes interval).
I am such a lazy guy who never want to repeat the same thing for more than 3 times.
Typing all these time slots in Doodle was obvious a pain for me.
I immediately came out with the idea of simulating keyboard events. 
I started search in gooled for such a tool in Linux, 
then I immediately realized that I already had such a tool -- keepassx. 
Odd enough, keepassx is a tool for managing passwords!
That's right! 
keepassx allows one to send customized keys to windows.
This is what I wanted. 
Readers might think aloud: 
"Huh, 
so you transformed the work of repeated typing in Doodle into repeated typing in keepassx?"
The answer is letting R 
(or any script language you're familiar with) 
to generate the string for you!
Another advantage of this way is that you work is saved in keepassx.
Scheduling events with the same time slots in future is greatly simplified.
Though I might have used less time to get the work done 
by just typing in Doodle,
I enjoyed getting my worked done creatively. 
And as mentioned above, 
my work is saved. 
I have killed many birds (scheduling similar events in future) with one stone.&lt;/p&gt;</content><category term="Fun Problems"></category><category term="skills"></category><category term="Linux"></category><category term="software"></category><category term="fun problems"></category></entry><entry><title>Inverse of a Special Class of Matrices with High Dimensions</title><link href="https://www.legendu.net/en/blog/inverse-of-matrix/" rel="alternate"></link><published>2010-05-30T22:12:02-07:00</published><updated>2013-10-30T22:12:02-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-05-30:/en/blog/inverse-of-matrix/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/math/matrix-inverse.png"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;One day, my officemate Tieming asked me about a problem that she met in her research. 
Suppose &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is a symmetric matrix of huge dimension 
and &lt;span class="math"&gt;\(\boldsymbol{D}\)&lt;/span&gt; is a diagonal matrix with nonnegative diagonal elements. 
The inverse of &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is already known, 
how can we calculate the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/math/matrix-inverse.png"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;One day, my officemate Tieming asked me about a problem that she met in her research. 
Suppose &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is a symmetric matrix of huge dimension 
and &lt;span class="math"&gt;\(\boldsymbol{D}\)&lt;/span&gt; is a diagonal matrix with nonnegative diagonal elements. 
The inverse of &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is already known, 
how can we calculate the inverse of &lt;span class="math"&gt;\(\boldsymbol{B}+\boldsymbol{D}\)&lt;/span&gt; efficiently? 
I thought for a while and found a good way to solve the problem. 
See solution in &lt;a href="http://dclong.github.io/media/inverse-of-matrix.pdf"&gt;Inverse of Matrix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I haven't implemented the algorithm yet, 
but a roughly estimate of the complexity of this algorithm tells me that even R can handle it. 
I will write a R function to do this later when I have time.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="inverse"></category><category term="fun problems"></category><category term="matrix"></category><category term="math"></category><category term="statistics"></category><category term="R"></category><category term="high dimension"></category></entry><entry><title>Which One Is the Best Strategy? (continued)</title><link href="https://www.legendu.net/en/blog/best-strategy-2/" rel="alternate"></link><published>2012-07-30T15:13:01-07:00</published><updated>2013-10-30T15:13:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-30:/en/blog/best-strategy-2/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose we flip a coin which has probability 0.7 to be head again 
and again and two people choose two different sequences of length 3 (e.g., THH). 
The people whose sequence appears first wins. 
If you are allowed to choose first, which sequence will you choose?&lt;/p&gt;
&lt;p&gt;I discussed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose we flip a coin which has probability 0.7 to be head again 
and again and two people choose two different sequences of length 3 (e.g., THH). 
The people whose sequence appears first wins. 
If you are allowed to choose first, which sequence will you choose?&lt;/p&gt;
&lt;p&gt;I discussed about the following interesting probability problem in my post 
&lt;a href="http://dclong.github.io/en/blog/best-strategy/"&gt;Which One is the Best Strategy?&lt;/a&gt; before.
I mentioned that there are better ways to solve this problem. 
I will talk about these methods here. &lt;/p&gt;
&lt;p&gt;In this problem, we have to calculate the probabilities for two given sequences to come out first. 
There are at least two ways to do this. 
The first way is to use Markov Chain, which is simple and direct. 
As long as we can write down the transition matrix,
we can calculate the limiting probabilities in various ways.
Since this process is similar to Example ??, I will just skip it here. 
The other way is by introducing a new random variable &lt;span class="math"&gt;\(M = min\{X_1 , X_2 \}\)&lt;/span&gt;, 
where &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; are the steps needed for the two patterns to first come out. 
Conditioning on the event &lt;span class="math"&gt;\(E_1 \equiv \text{pattern 1 comes out first}\)&lt;/span&gt;, 
we get an equation involves &lt;span class="math"&gt;\(P_1 \equiv P (E_1 )\)&lt;/span&gt;, &lt;span class="math"&gt;\(E(M )\)&lt;/span&gt; 
and the expected time for some patterns (pattern 1, pattern 2 and probably some new patterns) to occur. 
Similarly, conditioning on the event &lt;span class="math"&gt;\(E_2 \equiv \text{pattern 2 comes out first}\)&lt;/span&gt;, 
we get an equation involves &lt;span class="math"&gt;\(P_2 \equiv P (E_2 )\)&lt;/span&gt;, &lt;span class="math"&gt;\(E(M )\)&lt;/span&gt;
and the expected time of some patterns (pattern 1, pattern 2 and probably
some new patterns) to occur. 
In addition, we have the constraint &lt;span class="math"&gt;\(P_1 + P_2 = 1\)&lt;/span&gt;. 
I have already talked about how to calculate the expected time for a sequence to occur 
in the post &lt;a href="http://dclong.github.io/en/blog/how-long-observe-pattern/"&gt;How Long Does It Take to Observe a Sequence?&lt;/a&gt;,
so what we have to do is just to solve a group of linear equations. &lt;/p&gt;
&lt;p&gt;Before doing any calculation, I guess many people will choose pattern "HHH". 
However, this pattern is beaten by "THH". 
There's an easy way to show this. 
Suppose we first observe sequence HHH at step &lt;span class="math"&gt;\(n(&amp;gt;3)\)&lt;/span&gt;, 
then the outcome must be "T" at step &lt;span class="math"&gt;\(n − 3\)&lt;/span&gt;,
which means that we have observed "THH" at step &lt;span class="math"&gt;\(n − 1\)&lt;/span&gt;. 
So for "HHH" to win against "THH", it must appear at step 3. 
So the probability for "HHH" to beat "THH" is &lt;span class="math"&gt;\(0.7^3 = 0.343 &amp;lt; 0.5\)&lt;/span&gt;, 
i.e. "HHH" is not as good as "THH".
This method is very neat, but unfortunately it does not work for all pairs of patterns. 
To compare other pairs of patterns, 
we can use function "PatternFirstComeOurProbability" in the code of the post 
&lt;a href="http://dclong.github.io/en/blog/how-long-observe-pattern/"&gt;How Long Does It Take to Observe a Sequence?&lt;/a&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PatternFirstComeOutProbability[{ {1, 1, 1}, {0, 1, 1} }, {1, 0}, {7/10, 3/10}]
{219/49, 343/1000, 657/1000}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the above result we can see that the chance for pattern "HHH" to beat
pattern "THH" is &lt;span class="math"&gt;\(343/1000 = 0.343 &amp;lt; 0.5\)&lt;/span&gt; which matches the results I got
before.&lt;/p&gt;
&lt;p&gt;Now we already know that pattern "HHH" is beaten by pattern "THH". 
A nature question people might ask is that cannot pattern "THH" beat all other
patterns? The answer is no, and actually there's no pattern which can beat all
other patterns in this problem. 
The following Mathematica code will help us
to calculate the probability for a pattern to come our first when compared to
some other pattern.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Tuples&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{0, 1}, 3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ProbMatrix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Null, {8}, {8}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt; 8, i++,&lt;/span&gt;
&lt;span class="n"&gt;    For[j = i + 1, j &amp;lt;= 8, j++,&lt;/span&gt;
&lt;span class="n"&gt;        probs =&lt;/span&gt;
&lt;span class="n"&gt;        PatternFirstComeOutProbability[{patterns[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ProbMatrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[i, j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;ProbMatrix&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[j, i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = 1, i &amp;lt;= 8, i++,&lt;/span&gt;
&lt;span class="n"&gt;    AppendTo[ProbMatrix[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nf"&gt;Min&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Drop[ProbMatrix[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Position[ProbMatrix[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Null&lt;/span&gt;&lt;span class="err"&gt;]]]]]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;names&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;StringJoin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;IntegerString&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;TableForm&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ProbMatrix, TableHeadings -&amp;gt; {AppendTo[names, &amp;quot;Min&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;names&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result of the above code is presented in 
&lt;a href="http://dclong.github.io/media/pattern/pattern-first-out-probability.pdf"&gt;Table 1&lt;/a&gt;. 
From Table 1, we can see
that none of the 8 rows has values that're all at least 0.5, which means that none
of the 8 patterns can beat all other patterns. 
Though we cannot find a pattern
which can always give you a higher chance to win against other patterns, we still
have to make a decision. Suppose we have to let our competitor know which
pattern we choose , and he/she is smart enough (which means that he/she will
always make the best choice based the pattern we choose), we want to choose
the pattern which yields highest winning probability. So we have to choose
the pattern which is the best (yields the highest winning probability) in the
worst situation. This is kind of like the Mini-Max rule in decision theory. The
following Mathematica code help us find the right pattern.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;patterns[[Flatten[Position[ProbMatrix[[All, 9]], Max[ProbMatrix[[All, 9]]]]]]]
{ {&amp;quot;T&amp;quot;, &amp;quot;H&amp;quot;, &amp;quot;H&amp;quot;} }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So if the other player is smart enough, we should choose pattern "THH".
Though in this problem we only compare two patterns at a time, function
"PatternFirstComeOurProbability" can handle the case when multiple patterns
are involved. For example, suppose 3 people are in this game and they choose
pattern "THH", "HHH" and "TTT" respectively. Running function 
"PatternFirstComeOurProbability" in Mathematica yields the following result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PatternFirstComeOutProbability[{ {&amp;quot;T&amp;quot;, &amp;quot;H&amp;quot;, &amp;quot;H&amp;quot;}, {&amp;quot;H&amp;quot;, &amp;quot;H&amp;quot;,&amp;quot;H&amp;quot;}, {&amp;quot;T&amp;quot;, &amp;quot;T&amp;quot;, &amp;quot;T&amp;quot;} }, {&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;}, {7/10, 3/10}]
{30441/7270, 418509/727000, 343/1000, 5913/72700}
N[%]
{4.18721, 0.575666, 0.343, 0.0813343}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That is the probabilities for the 3 people to win are about 0.576, 0.343 and 0.081
respectively.
Indeed function "PatternFirstComeOurProbability" is powerful, but it also
has a limitation. It might give us wrong results when patterns with different
lengths are compared with function PatternFirstComeOurProbability. 
For example, pattern "HT" will definitely appear before pattern "HHTH", however,
function PatternFirstComeOurProbability doesn't give us the right answer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;PatternFirstComeOutProbability[{ {&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;}, {&amp;quot;H&amp;quot;, &amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;, &amp;quot;H&amp;quot;} }, {&amp;quot;H&amp;quot;, &amp;quot;T&amp;quot;}]
{9/2, 3/4, 1/4}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These kind of situations are easy to handle. A always safe way compare patterns
with differen lengths is to change the problem to one in which all patterns have
the same length. For example, instead of letting function PatternFirstComeOur-
Probability compare patterns "HH" and "HTH", we can let it compare patterns
"HHT", "HHH" and "HTT".
Based on the above idea, it's easy to write a function which is able to handle
all situations, however, this is trivia and I don't think it's worth my time. Time
is finite while knowledge is infinite. We should spend time on more valuable
things.&lt;/p&gt;
&lt;p&gt;Actually we've killed multiple birds with one stone in this problem. We can
also calculate the expected time for a pattern to show up, given that some
other pattern has already occurred, 
see function PatternAdditionalExpected Time. 
However, this function have a similar issue as function PatternFirst-
ComeOurProbability has. And what's more, we have to carefully define what
"addition step needed" means.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="Mathematica"></category><category term="pattern"></category><category term="Markov chain"></category><category term="statistics"></category><category term="probability"></category><category term="sequence"></category><category term="coin"></category><category term="fun problems"></category></entry><entry><title>Expected Gain of Tossing a Dice</title><link href="https://www.legendu.net/en/blog/dice-expected-gain/" rel="alternate"></link><published>2012-07-30T09:37:39-07:00</published><updated>2013-10-30T09:37:39-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-30:/en/blog/dice-expected-gain/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/dice/dice.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose you toss a symmetric dice. 
You are allowed to quit the game and
get money which equals the total points you get at any time if 6 has never
showed up. Whenever 6 shows up, the game is over and you get nothing. For
example, if the first three …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/dice/dice.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose you toss a symmetric dice. 
You are allowed to quit the game and
get money which equals the total points you get at any time if 6 has never
showed up. Whenever 6 shows up, the game is over and you get nothing. For
example, if the first three tosses turn out to be 2, 3 and 5 you can quit the
game immediately and gain 10 dollars or you can choose to continue the game.
What is the expected gains of this game?&lt;/p&gt;
&lt;p&gt;First we have to decide how to play the game, i.e. when to quit the game.
Suppose &lt;span class="math"&gt;\(T\)&lt;/span&gt; is the total points we get now.
If we choose to continue the game, the distribution of our profit is presented in &lt;a href="http://dclong.github.io/media/dice/tables.pdf"&gt;Table 1&lt;/a&gt;.
So our net profit is &lt;span class="math"&gt;\(\frac{15-T}{6}\)&lt;/span&gt; if we choose to continue the game,
which suggests us quit the game when &lt;span class="math"&gt;\(T\ge15\)&lt;/span&gt;.
Let's use &lt;span class="math"&gt;\(W\)&lt;/span&gt; to denote the final gain in this game,
then &lt;span class="math"&gt;\(W\)&lt;/span&gt; can be either 0 or some element in &lt;span class="math"&gt;\(A\equiv\{15, 16, 17, 18, 19\}\)&lt;/span&gt;.
To find the expected gains,
we have to find the distribution of &lt;span class="math"&gt;\(W\)&lt;/span&gt;,
i.e. we have to find &lt;span class="math"&gt;\(P(W=i)\)&lt;/span&gt;, &lt;span class="math"&gt;\(i\in A\)&lt;/span&gt;.
There're at least two ways to do this.
One of them is to use the powerful tool Markov Chain and the other is to use recursion formula.&lt;/p&gt;
&lt;h2 id="method-i-markov-chain"&gt;Method I: Markov Chain&lt;/h2&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt;, &lt;span class="math"&gt;\(n\in \mathbb{N}\)&lt;/span&gt; to stand for the total points we get at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;.
Let &lt;span class="math"&gt;\(X_0=0\)&lt;/span&gt;; &lt;span class="math"&gt;\(X_k=s\)&lt;/span&gt; (just a symbol to avoid confusion with the other states of &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt;) for &lt;span class="math"&gt;\(k\ge n\)&lt;/span&gt; if the tossing result turns out to 6 at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;;
&lt;span class="math"&gt;\(X_k=t\)&lt;/span&gt; for &lt;span class="math"&gt;\(k\ge n\)&lt;/span&gt; if &lt;span class="math"&gt;\(X_n=t\in A\)&lt;/span&gt;.
It's easy to check that &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt; is a Markov Chain and its limiting distribution is what we are interested in.
The transition probability matrix of &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt; is given in &lt;a href="http://dclong.github.io/media/dice/tables.pdf"&gt;Table 1&lt;/a&gt;.
The probabilities that &lt;span class="math"&gt;\(W=i\)&lt;/span&gt; where &lt;span class="math"&gt;\(i\in A\)&lt;/span&gt;,
are the probabilities that &lt;span class="math"&gt;\(X_n\)&lt;/span&gt; ends in the corresponding states,
i.e. &lt;span class="math"&gt;\(lim_n P(X_n=i)\)&lt;/span&gt;, &lt;span class="math"&gt;\(i\in A\)&lt;/span&gt;.
To find these limiting probabilities, we need to find the limit of &lt;span class="math"&gt;\(P^n\)&lt;/span&gt; (actually we only care about the limit property of the second row of the transition matrix since &lt;span class="math"&gt;\(X_0=0\)&lt;/span&gt;).
With the help of R, we can easily find these probabilities which are given below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; probs.pos
15         16         17         18         19
0.13128076 0.10092009 0.07407628 0.04813533 0.02337223
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So the average gain of this game is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; probs.pos%*%15:19
[,1]
[1,] 6.153738
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="method-ii-recursion-formula"&gt;Method II: Recursion Formula&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt;, &lt;span class="math"&gt;\(n\in \mathbb{N}\)&lt;/span&gt; and &lt;span class="math"&gt;\(A\)&lt;/span&gt; be the same as in Method I.
Let &lt;span class="math"&gt;\(E_{t,n}\)&lt;/span&gt; be the event that &lt;span class="math"&gt;\(X_n=t, X_{n-1}&amp;lt;t\)&lt;/span&gt; 
and &lt;span class="math"&gt;\(P_{t,n}\equiv P(E_{t,n})\)&lt;/span&gt;,
then &lt;span class="math"&gt;\(P_{t,n}\)&lt;/span&gt; stands for the probability that we first achieve total points &lt;span class="math"&gt;\(t\)&lt;/span&gt; at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;.
Specially for &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_{t,n}\)&lt;/span&gt; stand for the probability that the game ends with total points at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;.
Let &lt;span class="math"&gt;\(P_t\equiv \sum_{n\ge0} P_{t,n}\)&lt;/span&gt;, then &lt;span class="math"&gt;\(P_t\)&lt;/span&gt;, &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt; are what we're interested in.
Conditioning &lt;span class="math"&gt;\(E_{t,n}\)&lt;/span&gt; on the value &lt;span class="math"&gt;\(X_{n-1}\)&lt;/span&gt; takes, we have the following recursion formula
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{t,n}=\frac{1}{6}P_{t-1,n-1}+\frac{1}{6}P_{t-2,n-1} +\frac{1}{6}P_{t-3,n-1}\\
    +\frac{1}{6}P_{t-4,n-1} +\frac{1}{6}P_{t-5,n-1},\text{ for } 0&amp;lt;t\le 15,\ n\ge1.  
$$&lt;/div&gt;
&lt;p&gt;Because the game is over when &lt;span class="math"&gt;\(t\ge15\)&lt;/span&gt;,
we have different formulas for &lt;span class="math"&gt;\(t&amp;gt;15\)&lt;/span&gt; and &lt;span class="math"&gt;\(n\ge1\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{16,n}=\frac{1}{6}P_{14,n-1}+\frac{1}{6}P_{13,n-1}+\frac{1}{6}P_{12,n-1}+\frac{1}{6}P_{11,n-1},
$$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{17,n}=\frac{1}{6}P_{14,n-1}+\frac{1}{6}P_{13,n-1}+\frac{1}{6}P_{12,n-1}, $$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{18,n}=\frac{1}{6}P_{14,n-1}+\frac{1}{6}P_{13,n-1},$$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{19,n}=\frac{1}{6}P_{14,n-1}.  $$&lt;/div&gt;
&lt;p&gt;It's obvious that &lt;span class="math"&gt;\(P_{t,0}=0\)&lt;/span&gt; for &lt;span class="math"&gt;\(t&amp;gt;0\)&lt;/span&gt;.
Sum the above formulas over &lt;span class="math"&gt;\(n\)&lt;/span&gt; from 1 to &lt;span class="math"&gt;\(\infty\)&lt;/span&gt; we have
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{t}=\frac{1}{6}P_{t-1}+\frac{1}{6}P_{t-2}+\frac{1}{6}P_{t-3}
+\frac{1}{6}P_{t-4}+\frac{1}{6}P_{t-5},\text{ for } 0&amp;lt;t\le 15,
$$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{16}=\frac{1}{6}P_{14}+\frac{1}{6}P_{13}+\frac{1}{6}P_{12}+\frac{1}{6}P_{11}, $$&lt;/div&gt;
&lt;div class="math"&gt;$$P_{17}=\frac{1}{6}P_{14}+\frac{1}{6}P_{13}+\frac{1}{6}P_{12},$$&lt;/div&gt;
&lt;div class="math"&gt;$$P_{18}=\frac{1}{6}P_{14}+\frac{1}{6}P_{13},$$&lt;/div&gt;
&lt;div class="math"&gt;$$P_{19}=\frac{1}{6}P_{14}.$$&lt;/div&gt;
&lt;p&gt;To solve this system, we have to ascertain the initial values.
It's not hard to find values for &lt;span class="math"&gt;\(P_0,\ldots,P_4\)&lt;/span&gt;, however,
we can make things even easier by extending the recursion formula forward to term
&lt;span class="math"&gt;\(P_{-4}\)&lt;/span&gt;.
Under this extension, the initial conditions for this system are as follows&lt;/p&gt;
&lt;div class="math"&gt;$$ P_{-4}=P_{-3}=P_{-2}=P_{-1}=0 \text{ and } P_0=1.  $$&lt;/div&gt;
&lt;p&gt;Now we can find values for &lt;span class="math"&gt;\(P_t\)&lt;/span&gt;, &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt; easily.
One way is to use method of generating functions to find the general term for &lt;span class="math"&gt;\(P_t\)&lt;/span&gt; when &lt;span class="math"&gt;\(t\le15\)&lt;/span&gt; and then calculate &lt;span class="math"&gt;\(P_t\)&lt;/span&gt; for &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt;.
Another easier way and more practical way is use computer to find these values directly based on these formulas given above.
The implementation in Mathmatica and the corresponding result are as follows. 
Notice that their is a built-in function called &lt;code&gt;LinearRecurrence&lt;/code&gt; in Mathematica which 
does a similar job to the function &lt;code&gt;LinearRecursion&lt;/code&gt; here. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nl"&gt;LinearRecursion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;SmallOrder&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The order of the linear recursive equation must be at least 2.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;LinearRecursion&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;NotMatch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;The length of argument &amp;#39;coef&amp;#39; doesn&amp;#39;t match the length of &amp;#39;initial&amp;#39;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;LinearRecursion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n_, ini_, coef_: Null, start_: 1, irev_: False, crev_: False&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{nmax, result, i, coefficient, order, index, initials},&lt;/span&gt;
&lt;span class="n"&gt;    order = Length[ini&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;order &amp;lt; 2, Message[LinearRecursion::SmallOrder&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;coef === Null,&lt;/span&gt;
&lt;span class="n"&gt;        coefficient = Table[1, {order}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length[coef&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;LinearRecursion::NotMatch&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Return&lt;/span&gt;&lt;span class="err"&gt;[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;coefficient&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;irev, initials = Reverse[ini&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;initials&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;crev, coefficient = Reverse[coefficient&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;nmax&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Max&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nmax &amp;lt;= order, Return[initials[[index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0, {nmax}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[Table[i, {i, 1, order}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;initials&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i = order + 1, i &amp;lt;= nmax, i++,&lt;/span&gt;
&lt;span class="n"&gt;        result[[i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[Table[j, {j, i - order, i - 1}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coefficient&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[index&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;

&lt;span class="ow"&gt;In&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;142&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LinearRecursion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;11, ini, coef, -4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LinearRecursion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;12, ini, coef, -4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LinearRecursion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;13, ini, coef, -4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p14&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LinearRecursion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;14, ini, coef, -4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p15&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LinearRecursion&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;15, ini, coef, -4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p16&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p11&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p17&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p12&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p18&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p19&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;p15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p19&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;gain&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i, {i, 15, 19}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;Out&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;159&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;
&lt;span class="mi"&gt;2893395172951&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;470184984576&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The implementation in R and the corresponding result are as below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; @param n is the subscript of the array to be calculated&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;values&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;starting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;term&lt;/span&gt;
&lt;span class="err"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;@param&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;coefficients&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recursion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;equation&lt;/span&gt;
&lt;span class="n"&gt;fibo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;irev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;crev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;the order of the difference equation must be at least 2.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;the lengths of the coefficents vector and the initial&lt;/span&gt;
&lt;span class="ss"&gt;    values vector must be the same.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;nmax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nmax&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;crev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nmax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1:order&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;nmax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]=&lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;(i-order):(i-1)&lt;/span&gt;&lt;span class="o"&gt;]%*%&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;p11&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fibo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p12&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fibo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fibo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p14&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fibo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p15&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fibo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ini&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;coef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;p16&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p12&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;
&lt;span class="n"&gt;p17&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p12&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;
&lt;span class="n"&gt;p18&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;
&lt;span class="n"&gt;p19&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;p14&lt;/span&gt;
&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p19&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;gain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;%*%&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;gain&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;,1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;1,&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;6.153738&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can easily generalize this problem by assume the dice to be a nonsymmetric one with &lt;span class="math"&gt;\(f\)&lt;/span&gt; faces having arbitrary points on it.
Both of the two above methods can apply to the generalized problem,
however the second method is simpler for this kind of problems.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="Mathematica"></category><category term="recursion"></category><category term="statistics"></category><category term="probability"></category><category term="Markov chain"></category><category term="fun problems"></category></entry><entry><title>Randomly Select an Integer?!</title><link href="https://www.legendu.net/en/blog/integer-probability-measure/" rel="alternate"></link><published>2012-08-29T17:23:24-07:00</published><updated>2013-10-29T17:23:24-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-29:/en/blog/integer-probability-measure/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/number/numbers.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I found this "probability" problem when I read a person's blog. &lt;/p&gt;
&lt;p&gt;What's probability that two randomly chosen nature numbers are relatively prime?&lt;/p&gt;
&lt;p&gt;It is claimed that there is a very elegant solution for this problem. 
This problem reminds me another one. 
Some people asked for an example of a 0-probability …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/number/numbers.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I found this "probability" problem when I read a person's blog. &lt;/p&gt;
&lt;p&gt;What's probability that two randomly chosen nature numbers are relatively prime?&lt;/p&gt;
&lt;p&gt;It is claimed that there is a very elegant solution for this problem. 
This problem reminds me another one. 
Some people asked for an example of a 0-probability event 
that is not impossible on &lt;a href="http://www.legendu.net/en/tag/fun-problems.html"&gt;COS&lt;/a&gt;. 
And a person said "randomly pick an integer from all integers".
While this example sounds like a neat one, 
it is invalid actually. 
The example assumes that there exists a probablity measure on all integers
such that the measure for each integer is that same. 
However, such a probabiliy measure does not exists. 
This is easy to see. 
Suppose the probability measure for each integer is 0, 
then from countable additivity the probability measure for all integers is 0, 
which is contrary to the fact that the probability measure for the whole set is 1. 
Suppose the probability measure for each integer is &lt;span class="math"&gt;\(\delta&amp;gt;0\)&lt;/span&gt;, 
then from countable additivity the probability measure for all integers is &lt;span class="math"&gt;\(\infty\)&lt;/span&gt;,
which is also contrary to the fact that the probability measure for the whole set is 1.
Coming back to the problem mentioned in the title, 
it essentially makes the assumption there there exists a probability measure on
nature numbers such that each the measure on each number is the same. 
From my previous argument we know such a probability measure does not exist, 
thus this problem is nonsense. 
Bummer! What is the ELEGANT solution? &lt;/p&gt;
&lt;p&gt;A reframed (valid) question is as follows.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(n\)&lt;/span&gt; be a (large) positive integer. 
What's the probability that 2 randomly chosen integers 
between (inclusive) 1 and &lt;span class="math"&gt;\(n\)&lt;/span&gt; are relatively prime? 
And does the probability has a limit as &lt;span class="math"&gt;\(n\)&lt;/span&gt; goes to infinity?
If so, what's the limiting probability?&lt;/p&gt;
&lt;p&gt;I will think about how to solve this reframed (valid) question when I have time. 
Possibly the ELEGANT solution mentioned before is a solution to this problem.&lt;/p&gt;
&lt;p&gt;PS: Ask the question that randomly pick an number from all integers, what is the probability
that the number is even. 
I bet most people will answer 0.5.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="random"></category><category term="statistics"></category><category term="nature number"></category><category term="probability"></category><category term="relatively prime"></category><category term="fun problems"></category></entry><entry><title>Fix Microphone Problem of Skype in Debian</title><link href="https://www.legendu.net/en/blog/fix-skype-microphone-problem-in-debian/" rel="alternate"></link><published>2013-08-21T00:00:00-07:00</published><updated>2013-08-21T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-08-21:/en/blog/fix-skype-microphone-problem-in-debian/</id><summary type="html">&lt;p&gt;Install Pulseaudio if you only have ALSA. 
ALSA alone does NOT work with skype whatever people 
on the #Debian channel might think and tell you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install pulseaudio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install pulseaudio volume control&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install pavucontrol
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run Skype.&lt;/p&gt;
&lt;p&gt;Go to the Sound devices sections. 
Click on the Open PulseAudio …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Install Pulseaudio if you only have ALSA. 
ALSA alone does NOT work with skype whatever people 
on the #Debian channel might think and tell you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install pulseaudio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install pulseaudio volume control&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install pavucontrol
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run Skype.&lt;/p&gt;
&lt;p&gt;Go to the Sound devices sections. 
Click on the Open PulseAudio Volume Control button. 
pavucontrol will open.&lt;/p&gt;
&lt;p&gt;In every tab maximize ALL the volume sliders.
Go to the configuration tab. Mine has two sections. 
One is called RV710/730. 
Turn this off in the dropdown menu below it.
The other one is called "Internal Audio". 
Choose "Analog Stereo Duplex" in the dropdown menu.
When you go back to the "Input Devices" tab now, 
you will see that there is an setting for "Internal Audio Analog Stereo". 
Crank this to 100%.
In the "Output Devices" tab, 
choose the "Analog Output" port from the dropdown menu. 
Crank the front left as well as front right channel to the max 100%.&lt;/p&gt;</content><category term="Software"></category><category term="audio"></category><category term="Software"></category><category term="Linux"></category></entry><entry><title>Culture of My Summer Intern Team</title><link href="https://www.legendu.net/en/blog/team-culture-of-Credit-portfolio-risk-analysis/" rel="alternate"></link><published>2013-08-01T00:00:00-07:00</published><updated>2013-08-01T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-08-01:/en/blog/team-culture-of-Credit-portfolio-risk-analysis/</id><summary type="html">&lt;p&gt;I work as a student intern in the Credit Portfolio Risk Analysis group 
in a bank this summer.
One Friday afternoon,
Jimmy, the manager of my manager, 
asked me to his office and talked about our team cultures.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ownership &lt;br&gt;
Whenever you have a project, 
you are the ownner. 
Be proud …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;I work as a student intern in the Credit Portfolio Risk Analysis group 
in a bank this summer.
One Friday afternoon,
Jimmy, the manager of my manager, 
asked me to his office and talked about our team cultures.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ownership &lt;br&gt;
Whenever you have a project, 
you are the ownner. 
Be proud of it, do your best, and make a difference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teamwork&lt;br&gt;
The bank wants a strong team rather than strong individuals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom Service&lt;br&gt;
Custom service is the most important thing for the team.
We need to build good relationships with customs and earn their trust.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge Sharing&lt;br&gt;
Be willing to share your knowledge with other team members,
and be willing to learn from other team members.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous Learning &lt;br&gt;
"Every night before you go to sleep, 
ask yourself, 
what have I learned today?"&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p align="right"&gt;
-- Jimmy
&lt;/p&gt;</content><category term="Career"></category><category term="work"></category><category term="office"></category><category term="team culture"></category></entry><entry><title>Java Programming Style</title><link href="https://www.legendu.net/en/blog/java-programming-style/" rel="alternate"></link><published>2012-12-03T00:00:00-08:00</published><updated>2012-12-03T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-03:/en/blog/java-programming-style/</id><summary type="html">&lt;h2 id="good-writing-style"&gt;Good Writing Style&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is recommend to always use &lt;code&gt;{}&lt;/code&gt; if even there is only one statement inside it. 
The reason is that you never know whether you are going to add more statements into it or not. 
And it will make the code more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feel free to declare the …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="good-writing-style"&gt;Good Writing Style&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is recommend to always use &lt;code&gt;{}&lt;/code&gt; if even there is only one statement inside it. 
The reason is that you never know whether you are going to add more statements into it or not. 
And it will make the code more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feel free to declare the variable in the smallest &lt;code&gt;{}&lt;/code&gt; block possible. 
The compiler will optimize this kind of code for us. 
So it is better to make the code more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is always good to write code similar to how you would solve the problem naturely. 
It is easy to make mistakes when we try to make the code more concise. 
Unless you can dramatically improve the performance of the code, 
do not change the code for conciseness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid using a same name for a different types (instance, local and argument) of variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="style"></category><category term="Java"></category><category term="programming"></category></entry><entry><title>Pointers in C++</title><link href="https://www.legendu.net/en/blog/pointers-in-cpp/" rel="alternate"></link><published>2012-10-21T00:00:00-07:00</published><updated>2012-10-21T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-21:/en/blog/pointers-in-cpp/</id><summary type="html">&lt;h2 id="pointers"&gt;Pointers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No pointer, no polymorphism.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ is notorious for raw pointers. 
While pointers can boost up the speed of programs, 
it invites a trillion chances for making mistakes. 
You should avoid using raw pointers, 
instead, 
consider using &lt;code&gt;unique_ptr&lt;/code&gt;, &lt;code&gt;shared_ptr&lt;/code&gt; and &lt;code&gt;weak_ptr&lt;/code&gt;.
They are almost as efficient as raw pointers …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="pointers"&gt;Pointers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No pointer, no polymorphism.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ is notorious for raw pointers. 
While pointers can boost up the speed of programs, 
it invites a trillion chances for making mistakes. 
You should avoid using raw pointers, 
instead, 
consider using &lt;code&gt;unique_ptr&lt;/code&gt;, &lt;code&gt;shared_ptr&lt;/code&gt; and &lt;code&gt;weak_ptr&lt;/code&gt;.
They are almost as efficient as raw pointers but much safer to use. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If &lt;code&gt;p&lt;/code&gt; is a dynamically allocated array, 
you have to use &lt;code&gt;delete[] p&lt;/code&gt; to delete it when it is no longer required. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto_ptr&lt;/code&gt; objects cannot be stored in STL containers, 
because they are not copy-construable or assignable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="C++"></category><category term="programming"></category><category term="pointer"></category></entry><entry><title>Write Portable C++ Code</title><link href="https://www.legendu.net/en/blog/write-portable-cpp-code/" rel="alternate"></link><published>2012-10-21T00:00:00-07:00</published><updated>2012-10-21T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-21:/en/blog/write-portable-cpp-code/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Addresses on 64 and 32 OS are different, 
so you have to be careful when your program have to deal with address. 
For example, 
if you take the difference of two pointers/iterators, 
you should type &lt;code&gt;std::ptrdiff_t&lt;/code&gt; (which is essentially a singed integer type). 
Using an arbitrary integer type …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Addresses on 64 and 32 OS are different, 
so you have to be careful when your program have to deal with address. 
For example, 
if you take the difference of two pointers/iterators, 
you should type &lt;code&gt;std::ptrdiff_t&lt;/code&gt; (which is essentially a singed integer type). 
Using an arbitrary integer type makes you code non-portable. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;std::size_t&lt;/code&gt; represents the unsigned native integer size 
on the current architecture (i.e. 16-bit, 32-bit or 64-bit) compiling the code. 
So, to make your code portable,
you should decare indexing variables in loops as &lt;code&gt;std::size_t&lt;/code&gt; instead of &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;unsigned int&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="C++"></category><category term="programming"></category><category term="portable"></category></entry><entry><title>Automated Verizon Phone Bill (Continued)</title><link href="https://www.legendu.net/en/blog/automated-verizon-phone-bill-continued/" rel="alternate"></link><published>2012-09-05T00:00:00-07:00</published><updated>2012-09-05T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-09-05:/en/blog/automated-verizon-phone-bill-continued/</id><summary type="html">&lt;p&gt;I have switched to the "Share Everything" plan of Verizon two weeks ago,
and I got a little complex bill this month due to people leaving and joining my family plan. 
My ruby program for parsing phone bill still works well. 
It is actually surprising smarter than I thought on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have switched to the "Share Everything" plan of Verizon two weeks ago,
and I got a little complex bill this month due to people leaving and joining my family plan. 
My ruby program for parsing phone bill still works well. 
It is actually surprising smarter than I thought on this complicated bill. 
Big congratulations to myself!&lt;/p&gt;</content><category term="Computer Science"></category><category term="phone"></category><category term="verizon"></category><category term="Ruby"></category><category term="programming"></category></entry><entry><title>String in C++11</title><link href="https://www.legendu.net/en/blog/cpp-auto-string/" rel="alternate"></link><published>2012-08-20T00:00:00-07:00</published><updated>2012-08-20T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-20:/en/blog/cpp-auto-string/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto s = "abcd"&lt;/code&gt; creats &lt;code&gt;const char *&lt;/code&gt; not string, so use &lt;code&gt;auto&lt;/code&gt; with caution. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since a string in C++ is an array of chars, 
you can operate it like an array. 
For example, you can use range-based for loop and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is recommended that you use &lt;code&gt;std::string&lt;/code&gt; in …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto s = "abcd"&lt;/code&gt; creats &lt;code&gt;const char *&lt;/code&gt; not string, so use &lt;code&gt;auto&lt;/code&gt; with caution. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since a string in C++ is an array of chars, 
you can operate it like an array. 
For example, you can use range-based for loop and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is recommended that you use &lt;code&gt;std::string&lt;/code&gt; in function which are not intended to be 
interfaces, and you use &lt;code&gt;const char *&lt;/code&gt; as parameters of function that are intended to be 
interfaces (e.g., compiled as shared library and so on).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;==&lt;/code&gt; to compare whether the content of two &lt;code&gt;std::string&lt;/code&gt; are the same,
but you cannot use &lt;code&gt;==&lt;/code&gt; to compare the content of &lt;code&gt;const char *&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="auto"></category><category term="iteration"></category><category term="programming"></category><category term="C/C++"></category><category term="string"></category><category term="loop"></category><category term="char"></category></entry><entry><title>Make Eclipse Support C++11</title><link href="https://www.legendu.net/en/blog/eclipse-cpp11/" rel="alternate"></link><published>2012-08-20T00:00:00-07:00</published><updated>2012-08-20T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-20:/en/blog/eclipse-cpp11/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a new C++ project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default options for everything&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once created, right-click the project and go to "Properties"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ Build -&amp;gt; Settings -&amp;gt; Tool Settings -&amp;gt; GCC C++ Compiler -&amp;gt; Miscellaneous -&amp;gt; Other Flags. 
Put -std=c++0x at the end. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C++ General -&amp;gt; Paths and Symbols -&amp;gt; Symbols -&amp;gt; GNU C++. 
Click "Add..." and paste &lt;code&gt;__GXX_EXPERIMENTAL_CXX0X__ …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a new C++ project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default options for everything&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once created, right-click the project and go to "Properties"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ Build -&amp;gt; Settings -&amp;gt; Tool Settings -&amp;gt; GCC C++ Compiler -&amp;gt; Miscellaneous -&amp;gt; Other Flags. 
Put -std=c++0x at the end. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C++ General -&amp;gt; Paths and Symbols -&amp;gt; Symbols -&amp;gt; GNU C++. 
Click "Add..." and paste &lt;code&gt;__GXX_EXPERIMENTAL_CXX0X__&lt;/code&gt; (ensure to append and prepend two underscores) 
into "Name" and leave "Value" blank.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hit Apply, do whatever it asks you to do, then hit OK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="C/C++"></category><category term="software"></category><category term="eclipse"></category></entry><entry><title>How Many Balls Do We Need?</title><link href="https://www.legendu.net/en/blog/how-many-balls-do-we-need/" rel="alternate"></link><published>2012-07-10T00:00:00-07:00</published><updated>2012-07-10T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-10:/en/blog/how-many-balls-do-we-need/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/ball-in-box.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes until &lt;span class="math"&gt;\(n(\le m)\)&lt;/span&gt; of them are occupied,
what is the expectation of the number of balls needed?&lt;/p&gt;
&lt;p&gt;See my neat solution &lt;a href="http://dclong.github.io/media/ball-box/balls.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left …&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/ball-in-box.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes until &lt;span class="math"&gt;\(n(\le m)\)&lt;/span&gt; of them are occupied,
what is the expectation of the number of balls needed?&lt;/p&gt;
&lt;p&gt;See my neat solution &lt;a href="http://dclong.github.io/media/ball-box/balls.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="statistics"></category><category term="probability"></category><category term="fun problems"></category></entry><entry><title>Number of Records?</title><link href="https://www.legendu.net/en/blog/number-of-records/" rel="alternate"></link><published>2012-07-10T00:00:00-07:00</published><updated>2012-07-10T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-10:/en/blog/number-of-records/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/records/break-record.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose there are &lt;span class="math"&gt;\(n\)&lt;/span&gt; distinct numbers &lt;span class="math"&gt;\(x_1,\ldots, x_n\)&lt;/span&gt;,
 and &lt;span class="math"&gt;\(y_1, \ldots, y_n\)&lt;/span&gt; is a random permutations of them.
 If &lt;span class="math"&gt;\(\exists k\)&lt;/span&gt; such that &lt;span class="math"&gt;\(y_k&amp;lt;y_i, \forall 1\le i&amp;lt;k\)&lt;/span&gt;,
 then we say that &lt;span class="math"&gt;\(y_k\)&lt;/span&gt; is a record 
 (we always count &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; as a record).
 What is the expected …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/records/break-record.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose there are &lt;span class="math"&gt;\(n\)&lt;/span&gt; distinct numbers &lt;span class="math"&gt;\(x_1,\ldots, x_n\)&lt;/span&gt;,
 and &lt;span class="math"&gt;\(y_1, \ldots, y_n\)&lt;/span&gt; is a random permutations of them.
 If &lt;span class="math"&gt;\(\exists k\)&lt;/span&gt; such that &lt;span class="math"&gt;\(y_k&amp;lt;y_i, \forall 1\le i&amp;lt;k\)&lt;/span&gt;,
 then we say that &lt;span class="math"&gt;\(y_k\)&lt;/span&gt; is a record 
 (we always count &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; as a record).
 What is the expected number of records in &lt;span class="math"&gt;\(y_1, \ldots, y_n\)&lt;/span&gt;?&lt;/p&gt;
&lt;p&gt;See my neat solution &lt;a href="http://dclong.github.io/media/records/records.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="statistics"></category><category term="records"></category><category term="probability"></category><category term="permutation"></category><category term="fun problems"></category></entry><entry><title>How Many Empty Boxes?</title><link href="https://www.legendu.net/en/blog/how-many-empty-boxes/" rel="alternate"></link><published>2012-07-08T00:00:00-07:00</published><updated>2012-07-08T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-08:/en/blog/how-many-empty-boxes/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/empty-box.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put &lt;span class="math"&gt;\(n(\ge1)\)&lt;/span&gt; balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes, 
what is the expectation of the number of empty boxes?&lt;/p&gt;
&lt;p&gt;See my neat answer &lt;a href="http://dclong.github.io/media/ball-box/empty-box.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em …&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/empty-box.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put &lt;span class="math"&gt;\(n(\ge1)\)&lt;/span&gt; balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes, 
what is the expectation of the number of empty boxes?&lt;/p&gt;
&lt;p&gt;See my neat answer &lt;a href="http://dclong.github.io/media/ball-box/empty-box.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js','color.js','mhchem.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Fun Problems"></category><category term="expectation"></category><category term="ball"></category><category term="box"></category><category term="probability"></category><category term="fun problems"></category><category term="statistic"></category></entry><entry><title>Define Operator in R</title><link href="https://www.legendu.net/en/blog/overload-operator-r/" rel="alternate"></link><published>2012-06-08T00:00:00-07:00</published><updated>2012-06-08T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-08:/en/blog/overload-operator-r/</id><summary type="html">&lt;p&gt;One thing I do not like R is that operations on String in R 
are not as convenient as in other programming langauges such as Java, Python and Ruby. 
In these 3 programming languages, 
you can simply use &lt;code&gt;+&lt;/code&gt; to concatenate strings while in R you have to use the function …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One thing I do not like R is that operations on String in R 
are not as convenient as in other programming langauges such as Java, Python and Ruby. 
In these 3 programming languages, 
you can simply use &lt;code&gt;+&lt;/code&gt; to concatenate strings while in R you have to use the function &lt;code&gt;paste&lt;/code&gt;.
The inconvenience result from unable to overload functions and operators in R. 
However, you can still define/override operators in R. 
For example,
the following code renew the definition of &lt;code&gt;+&lt;/code&gt; to concatenate two strings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;+&amp;quot; = function(x,y){
    paste(x,y,sep=&amp;quot;&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Computer Science"></category><category term="R"></category><category term="operator"></category><category term="overloading"></category><category term="override"></category><category term="programming"></category></entry><entry><title>Abuse of Vector in R</title><link href="https://www.legendu.net/en/blog/abuse-vector-r/" rel="alternate"></link><published>2012-05-16T00:00:00-07:00</published><updated>2012-05-16T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-16:/en/blog/abuse-vector-r/</id><summary type="html">&lt;p&gt;R is a language that is friendly to vector operation, 
so vector is an important data structure in R. 
A single data (of basic types, e.g., numeric or character) is essentially a
vector of length 1. A matrix or an array in R is essentially a vector. 
R make …&lt;/p&gt;</summary><content type="html">&lt;p&gt;R is a language that is friendly to vector operation, 
so vector is an important data structure in R. 
A single data (of basic types, e.g., numeric or character) is essentially a
vector of length 1. A matrix or an array in R is essentially a vector. 
R make extensive use of vectors. A vector in R can either be a column vector or
a row vector depending on how you write the code. This is perhaps OK with most
people though it invites chances to make mistakes. One annoying thing about
vector is that When you extract a row or a column from a
matrix, you get a vector. 
I think this is one place that R abuse vectors. When you extract a sub matrix,
you want it to be a matrix as well most of the time. Even if you do want a
vector, most functions in R coerce a matrix to vector automatically, so return a
matrix instead of a vector doesn't hurt. MATLAB goes to another
extreem on vectors. There is no separate data structre for vector in MATLAB. 
A vector in MATLAB is either a matrix with 1 row or a matrix with 1 column. &lt;/p&gt;
&lt;p&gt;R is famous for its simple and flexible syntax, however, it's too
flexible and as coinsequence that it's slow compared to many other programming 
languages, and it's easy to make tricky mistakes in R. &lt;/p&gt;</content><category term="Computer Science"></category><category term="programming"></category><category term="matrix"></category><category term="data sturcture"></category><category term="data"></category><category term="vector"></category><category term="R"></category></entry><entry><title>Tips for VB/VB.net</title><link href="https://www.legendu.net/en/blog/tips-vb.net/" rel="alternate"></link><published>2011-08-31T00:00:00-07:00</published><updated>2011-08-31T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2011-08-31:/en/blog/tips-vb.net/</id><summary type="html">&lt;h2 id="about-string-functions"&gt;About String Functions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The uniform random variables generated by VB is pretty good.
At least it's acceptable according to the test in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String functions that return a string can be used with a dollar sign at the end, 
which is a faster version of the corresponding function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="about-string-functions"&gt;About String Functions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The uniform random variables generated by VB is pretty good.
At least it's acceptable according to the test in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String functions that return a string can be used with a dollar sign at the end, 
which is a faster version of the corresponding function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;trim&lt;/code&gt; gets rid of leading and trailing spaces.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;instr&lt;/code&gt; supports both case sensitive and case insensitive comparisons.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;split&lt;/code&gt; can split a string into a string array.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Computer Science"></category><category term="tips"></category><category term="VB/VB.net"></category><category term="programming"></category><category term="string"></category></entry></feed>