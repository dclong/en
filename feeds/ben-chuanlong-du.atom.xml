<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ben Chuanlong Du's Blog - Ben Chuanlong Du</title><link href="http://www.legendu.net/en/" rel="alternate"></link><link href="http://www.legendu.net/en/feeds/ben-chuanlong-du.atom.xml" rel="self"></link><id>http://www.legendu.net/en/</id><updated>2019-08-30T22:30:27-07:00</updated><subtitle>And let it direct your passion with reason.</subtitle><entry><title>String in Python</title><link href="http://www.legendu.net/en/blog/string-in-python/" rel="alternate"></link><published>2019-08-30T22:30:27-07:00</published><updated>2019-08-30T22:30:27-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-08-30:/en/blog/string-in-python/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\&lt;/code&gt; needs to be escaped (i.e., use &lt;code&gt;\\&lt;/code&gt;) in triple quotes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are a few ways to write a long string in Python.
    The first way is of course to have the long string on the the same line,
    which can be ugly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;This is a very looooooooooooooooooooooooooooooooooooooooooooooooooooooong string.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\&lt;/code&gt; needs to be escaped (i.e., use &lt;code&gt;\\&lt;/code&gt;) in triple quotes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are a few ways to write a long string in Python.
    The first way is of course to have the long string on the the same line,
    which can be ugly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;This is a very looooooooooooooooooooooooooooooooooooooooooooooooooooooong string.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The second way is to use &lt;code&gt;+&lt;/code&gt; to concatenate multiple string,
which is not recommended.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;This is a very&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;loooooooooooooooooooooooooooooooooooong string.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The third way is to use triple quotes.
However,
whites spaces are kept literally in a triple-qutoe string,
which might not be what you want.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;This is a very&lt;/span&gt;
&lt;span class="s1"&gt;    loooooooooooooooooooooooooooooooooooooong string.&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The fourth way is to use parentheses which avoids the side effect of white spaces.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;long&lt;/span&gt; &lt;span class="n"&gt;_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;This is a very&amp;#39;&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;looooooooooooooooooooooooooooooooooooong string.&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last way is to use &lt;code&gt;\&lt;/code&gt; to break a string into multiple lines
if you don't like the parentheses way.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;long_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;This is a very&amp;#39;&lt;/span&gt; \
    &lt;span class="s1"&gt;&amp;#39;looooooooooooooooooooooooooooooooooong string.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since the &lt;code&gt;str&lt;/code&gt; class is immutable in Python,
    no method of the &lt;code&gt;str&lt;/code&gt; class is in-place.
    Instead,
    all methods of the &lt;code&gt;str&lt;/code&gt; class returns a new copy of string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;str.capitalize&lt;/code&gt; capitalizes the first letter of a string.
    The method &lt;code&gt;str.title&lt;/code&gt; capitalizes each word.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;str.replace&lt;/code&gt; replaces an old string with a new string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no method named &lt;code&gt;contains&lt;/code&gt; in the &lt;code&gt;str&lt;/code&gt; class.
    You can either use the &lt;code&gt;in&lt;/code&gt; keyword (preferred)
    or &lt;code&gt;str.find&lt;/code&gt; to perform substring match.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a b&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# or&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a b&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="string-prefix"&gt;String Prefix&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;f&lt;/code&gt; are supported prefixes for strings in Python. 
    Notice that prefixes &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt; can be used together. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="f-string"&gt;f-String&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Be careful about security holes in f-String. 
  Since f-String can run any code passed to it, 
  it is open to injection attack. 
  Avoid using f-String when user input involved.&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="Python"></category><category term="string"></category><category term="str"></category><category term="character"></category></entry><entry><title>My Docker Images</title><link href="http://www.legendu.net/en/blog/my-docker-images/" rel="alternate"></link><published>2019-08-18T00:23:13-07:00</published><updated>2019-08-18T00:23:13-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-08-18:/en/blog/my-docker-images/</id><summary type="html">&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;dclong/jupyterlab&lt;/code&gt; Docker image is well maintained (which is the base image of &lt;code&gt;dclong/jupyterhub&lt;/code&gt;), 
    however, 
    many of the &lt;code&gt;dclong/jupyterlab-*&lt;/code&gt; Docker images are not maintained any more.
    Please use the corresponding &lt;code&gt;dclong/jupyterhub-*&lt;/code&gt;  Docker images instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;dclong/xubuntu*&lt;/code&gt; Docker images due …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;dclong/jupyterlab&lt;/code&gt; Docker image is well maintained (which is the base image of &lt;code&gt;dclong/jupyterhub&lt;/code&gt;), 
    however, 
    many of the &lt;code&gt;dclong/jupyterlab-*&lt;/code&gt; Docker images are not maintained any more.
    Please use the corresponding &lt;code&gt;dclong/jupyterhub-*&lt;/code&gt;  Docker images instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is an issue with the &lt;code&gt;dclong/xubuntu*&lt;/code&gt; Docker images due to Xfce on Ubuntu 18.04.
    It is suggested that you use the corresponding &lt;code&gt;dclong/lubuntu*&lt;/code&gt; Docker images instead,
    which are based on LXQt.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;h3 id="install-docker"&gt;Install Docker&lt;/h3&gt;
&lt;p&gt;You must have Docker installed.
If you are on Ubuntu,
the just use the command below to install the community edition of Docker.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install docker.io
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you'd rather install the enterprise edition
or if you are on other platforms,
please refer to the offical Docker doc &lt;a href="https://docs.docker.com/install/"&gt;Install Docker&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="pull-the-docker-image"&gt;Pull the Docker Image&lt;/h3&gt;
&lt;p&gt;Taking &lt;code&gt;dclong/jupyterhub-ds&lt;/code&gt; as an example,
you can pull it using the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull dclong/jupyterhub-ds
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For people in mainland of China,
please refer to the post
&lt;a href="http://www.legendu.net/en/blog/speedup-docker-pulling-and-pushing/"&gt;Speedup Docker Pulling and Pushing&lt;/a&gt;
on ways to speed up pushing/pulling of Docker images.
If you don't bother,
then just use the command below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker pull registry.docker-cn.com/dclong/jupyterhub-ds
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="start-a-container"&gt;Start a Container&lt;/h3&gt;
&lt;p&gt;Below are some Docker command arguments explained.
These are for properly handling file permissions in the Docker container and on the host.
Keep the default if you don't know what are the best to use.
&lt;code&gt;DOCKER_PASSWORD&lt;/code&gt; is probably the only argument you want to and should change.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DOCKER_USER&lt;/code&gt;: The user to be created (dynamically) in the container.
    By default, the name of the current user on the host is used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_USER_ID&lt;/code&gt;: The ID of the user to be created in the container.
    By default, the ID of the current user on the host is used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_PASSWORD&lt;/code&gt;: The password of the user to be created.
    By default, it's the same as the user name.
    You'd better change it for security reasons.
    Of course, users can always change it later using the command &lt;code&gt;passwd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_GROUP_ID&lt;/code&gt;: The group of the user to be created.
    By default, it's the group ID of the current user on the host.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DOCKER_ADMIN_USER&lt;/code&gt; (&lt;code&gt;dclong/jupyterhub-*&lt;/code&gt; only): The admin of the JupyterLab server.
    By default, it's the user to be created in the container.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USER_MEM_LIMIT&lt;/code&gt; (&lt;code&gt;dclong/jupyterhub-*&lt;/code&gt; only): The memory limit that each user can use.
    Note that this optional is not in effect now.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The root directory of JupyterLab/Jupyter notebooks is &lt;code&gt;/workdir&lt;/code&gt; in the container.
You can mount directory on the host to it as you wish.
Below are illustration using the Docker image &lt;code&gt;dclong/jupyterhub-ds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following command starts a container 
and mounts the current working directory and &lt;code&gt;/home&lt;/code&gt; on the host machine 
to &lt;code&gt;/workdir&lt;/code&gt; and &lt;code&gt;/home_host&lt;/code&gt; in the container respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt; \
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="nv"&gt;jupyterhub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt; \
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;opt&lt;/span&gt; &lt;span class="nv"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;:&lt;span class="mi"&gt;8000&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;5006&lt;/span&gt;:&lt;span class="mi"&gt;5006&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;un&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_USER_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;u&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;un&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_GROUP_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;g&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_ADMIN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;un&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt; `&lt;span class="nv"&gt;pwd&lt;/span&gt;`:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;workdir&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt; `&lt;span class="k"&gt;dirname&lt;/span&gt; $&lt;span class="nv"&gt;HOME&lt;/span&gt;`:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;home_host&lt;/span&gt; \
    &lt;span class="nv"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;jupyterhub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following command (only works on Linux) does the same as the above one 
except that it limits the use of CPU and memory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;d&lt;/span&gt; \
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt; &lt;span class="nv"&gt;jupyterhub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt; \
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;opt&lt;/span&gt; &lt;span class="nv"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt; \
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;memory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;$&lt;span class="ss"&gt;((&lt;/span&gt;$&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;meminfo&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{print $2}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="nv"&gt;k&lt;/span&gt; \
    &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;cpus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;$&lt;span class="ss"&gt;((&lt;/span&gt;`&lt;span class="nv"&gt;nproc&lt;/span&gt;` &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;:&lt;span class="mi"&gt;8000&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;5006&lt;/span&gt;:&lt;span class="mi"&gt;5006&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;un&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_USER_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;u&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;un&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_GROUP_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;g&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_ADMIN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;`&lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;un&lt;/span&gt;` \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt; `&lt;span class="nv"&gt;pwd&lt;/span&gt;`:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;workdir&lt;/span&gt; \
    &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt; `&lt;span class="k"&gt;dirname&lt;/span&gt; $&lt;span class="nv"&gt;HOME&lt;/span&gt;`:&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;home_host&lt;/span&gt; \
    &lt;span class="nv"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;jupyterhub&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="use-the-jupyterhub-server"&gt;Use the JupyterHub Server&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open your browser and and visit &lt;code&gt;your_host_ip:8000&lt;/code&gt;
  where &lt;code&gt;your_host_ip&lt;/code&gt; is the URL/ip address of your server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login to the JupyterHub server 
  using your user name (by default your user name on the host machine)
  and password (by default your user name on the host machine). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is strongly suggested (for security reasons) that you change your password (using the command &lt;code&gt;passwd&lt;/code&gt;)
  in the container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enjoy JupyterLab notebook!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="add-a-new-user-to-the-jupyterhub-server"&gt;Add a New User to the JupyterHub Server&lt;/h2&gt;
&lt;p&gt;By default,
any user in the Docker container can visit the JupyterHub server.
So if you want to grant access to a new user,
just create an account for him in the Docker container.
You can of course use the well know commands &lt;code&gt;useradd&lt;/code&gt;, &lt;code&gt;adduser&lt;/code&gt;, etc. to achive it.
To make things easier for you,
there are some shell scripts in the directory &lt;code&gt;/scripts/&lt;/code&gt; to create usres for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user.sh&lt;/code&gt;: Create a new user. It's the base script for creating users.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user_group.sh&lt;/code&gt;: Create a new user with the given (existing) group.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user_nogroup.sh&lt;/code&gt;: Create a new user with group name &lt;code&gt;nogroup&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/scripts/sys/create_user_docker.sh&lt;/code&gt;: Create a new user with group name &lt;code&gt;docker&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use the option &lt;code&gt;-h&lt;/code&gt; to print help doc for these commands.
For example, &lt;code&gt;/scripts/sys/create_user_nogroup.sh -h&lt;/code&gt; prints the below help doc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Create a new user with the group name &lt;span class="s2"&gt;&amp;quot;nogroup&amp;quot;&lt;/span&gt;.
Syntax: create_user_nogroup user user_id &lt;span class="o"&gt;[&lt;/span&gt;password&lt;span class="o"&gt;]&lt;/span&gt;
Arguments:
user: user name
user_id: user id
password: Optional password of the user. If not provided, &lt;span class="k"&gt;then&lt;/span&gt; the user name is used as the password.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now suppose you want to create a new user &lt;code&gt;dclong&lt;/code&gt; with user ID &lt;code&gt;2000&lt;/code&gt; and group name &lt;code&gt;nogroup&lt;/code&gt;,
you can use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /scripts/sys/create_user_nogroup.sh dclong &lt;span class="m"&gt;2000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since we didn't specify a password for the user,
the default password (same as the user name) is used.&lt;/p&gt;
&lt;h2 id="remote-connection-to-desktop-in-the-container"&gt;Remote Connection to Desktop in the Container&lt;/h2&gt;
&lt;p&gt;If you are running a Docker container with a desktop environment (&lt;code&gt;dclong/lubuntu*&lt;/code&gt; or &lt;code&gt;dclong/xubuntu*&lt;/code&gt;),
you can connect to the desktop environment in the Docker container using NoMachine.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the NoMachine client from &lt;a href="https://www.nomachine.com/download"&gt;https://www.nomachine.com/download&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install the NoMachine client on your computer.&lt;/li&gt;
&lt;li&gt;Create a new connection from your computer 
    to the desktop environment in the Docker image using the NX protocol and port 4000.
    You will be asked for a user name and password.
    By default,
    the user name used to start the Docker container on the host machine 
    is used as both the user name and password in the Docker container.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="use-spark-in-jupyterlab-notebook"&gt;Use Spark in JupyterLab Notebook&lt;/h2&gt;
&lt;h3 id="spark-the-beakerx-scala-kernel"&gt;Spark - The BeakerX Scala Kernel&lt;/h3&gt;
&lt;p&gt;Currently &lt;a href="https://hub.docker.com/r/dclong/jupyterhub-ds/"&gt;dclong/jupyterhub-ds&lt;/a&gt; uses the BeakerX Scala kernel.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open a JupyterLab notebook with the BeakerX Scala kernel from the launcher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download Spark (say, 2.3.1) dependencies. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;%%classpath add mvn&lt;/span&gt;
&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;core_2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mf"&gt;2.3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sql_2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mf"&gt;2.3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a SparkSession object.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.spark.sql.SparkSession&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.spark.sql.functions._&lt;/span&gt;

&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;local[2]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Spark Example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;spark.some.config.option&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;some-value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;spark.implicits._&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Use Spark as usual. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;toDF&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="spark-the-almond-scala-kernel"&gt;Spark - The Almond Scala Kernel&lt;/h3&gt;
&lt;p&gt;Currently &lt;a href="https://hub.docker.com/r/dclong/jupyterhub-almond/"&gt;dclong/jupyterhub-almond&lt;/a&gt; uses the Almond Scala kernel.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open a JupyterLab notebook with the Almond Scala kernel from the launcher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download Spark (say, 2.3.1) dependencies. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;interp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;load&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ivy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;org.apache.spark&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;spark-core_2.11&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;2.3.1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a SparkSession object.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.spark.sql.SparkSession&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.spark.sql.functions._&lt;/span&gt;

&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;local[2]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Spark Example&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;spark.some.config.option&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;some-value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;spark.implicits._&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Use Spark as usual. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;toDF&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please refer to 
&lt;a href="https://github.com/almond-sh/examples/blob/master/notebooks/spark.ipynb"&gt;almond-sh/examples&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;h3 id="spark-apache-toree"&gt;Spark - Apache Toree&lt;/h3&gt;
&lt;p&gt;Currently &lt;a href="https://hub.docker.com/r/dclong/jupyterhub-toree/"&gt;dclong/jupyterhub-toree&lt;/a&gt; uses the Apache Toree Scala kernel.&lt;/p&gt;
&lt;p&gt;The Docker image 
&lt;a href="https://github.com/dclong/docker-jupyterhub-toree"&gt;dclong/jupyterhub-toree&lt;/a&gt;
has Spark and Apache Toree installed and configured.
Since Spark is already installed in it, 
you don't need to download and install Spark by yourself.
By default, 
a Spark Session object named &lt;code&gt;spark&lt;/code&gt; is created automatically just like spark-shell.
So, you can use Spark/Scala out-of-box in a JupyterLab notebook with the &lt;code&gt;Scala - Apache Toree&lt;/code&gt; kernel.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open a JupyterLab notebook with the &lt;code&gt;Scala - Apache Toree&lt;/code&gt; kernel from the launcher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Spark as usual.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Range&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;toDF&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="pyspark-pyspark-and-findspark"&gt;PySpark - pyspark and findspark&lt;/h3&gt;
&lt;p&gt;The Docker image
&lt;a href="https://github.com/dclong/docker-jupyterhub-toree"&gt;dclong/jupyterhub-toree&lt;/a&gt;
has Spark (2.4.3) and the Python packages &lt;code&gt;pyspark&lt;/code&gt; and &lt;code&gt;findspark&lt;/code&gt; installed and configured.
For convenience, 
a symbolic link of the Spark home directory (&lt;code&gt;/opt/spark-2.4.3-bin-hadoop2.7&lt;/code&gt;) is made to &lt;code&gt;/opt/spark&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open a JupyterLab notebook with the &lt;code&gt;Scala - Apache Toree&lt;/code&gt; kernel from the launcher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find and initialize PySpark.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;findspark&lt;/span&gt;
&lt;span class="c1"&gt;# A symbolic link of the Spark Home is made to /opt/spark for convenience&lt;/span&gt;
&lt;span class="n"&gt;findspark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/opt/spark&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyspark&lt;/span&gt;
&lt;span class="n"&gt;sc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pyspark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SparkContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myAppName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Use Spark as usual.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="list-of-images-and-detailed-information"&gt;List of Images and Detailed Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/gitpod-svim/"&gt;dclong/gitpod-svim&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/gitpod-py3/"&gt;dclong/gitpod-py3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/deepin_b/"&gt;dclong/deepin_b&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/deepin_cn/"&gt;dclong/deepin_cn&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/deepin/"&gt;dclong/deepin&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/ubuntu_b/"&gt;dclong/ubuntu_b&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OS: Ubuntu 18.04&lt;br&gt;
Time Zone: US Pacific Time&lt;br&gt;
Desktop Environment: None&lt;br&gt;
Remote Desktop: None  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/proxychains/"&gt;dclong/proxychains&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/linuxbrew/"&gt;dclong/linuxbrew&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/samba/"&gt;dclong/samba&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/nfs/"&gt;dclong/nfs&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/nodejs/"&gt;dclong/nodejs&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/typescript/"&gt;dclong/typescript&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jdk/"&gt;dclong/jdk&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/scala/"&gt;dclong/scala&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/hadoop/"&gt;dclong/hadoop&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/hive/"&gt;dclong/hive&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/spark/"&gt;dclong/spark&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/zeppelin/"&gt;dclong/zeppelin&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/h2o/"&gt;dclong/h2o&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/r-base/"&gt;dclong/r-base&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/r-pop/"&gt;dclong/r-pop&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/rstudio/"&gt;dclong/rstudio&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/qt5/"&gt;dclong/qt5&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/conda/"&gt;dclong/conda&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/conda-build/"&gt;dclong/conda-build&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/conda-yarn/"&gt;dclong/conda-yarn&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/tdodbc/"&gt;dclong/tdodbc&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/tdodbc-py/"&gt;dclong/tdodbc-py&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python/"&gt;dclong/python&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 3.6  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/theia/"&gt;dclong/theia&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/wdb/"&gt;dclong/wdb&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python-jdk/"&gt;dclong/python-jdk&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/python-nodejs/"&gt;dclong/python-nodejs&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/mlflow/"&gt;dclong/mlflow&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/flask/"&gt;dclong/flask&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/dryscrape/"&gt;dclong/dryscrape&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyter/"&gt;dclong/jupyter&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter Notebook: 5.7.0  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyter-nodejs/"&gt;dclong/jupyter-nodejs&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NodeJS: 10.15.0  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterlab"&gt;dclong/jupyterlab&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JupyterLab: 0.35.4  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub/"&gt;dclong/jupyterhub&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JupyterHub: 0.9.3  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-ts/"&gt;dclong/jupyterhub-ts&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-julia/"&gt;dclong/jupyterhub-julia&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-jdk/"&gt;dclong/jupyterhub-jdk&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenJDK 8&lt;br&gt;
Maven: 3.3.9  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-py/"&gt;dclong/jupyterhub-py&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;numpy scipy pandas dask&lt;br&gt;
torch torchvision tensorflow keras h2o&lt;br&gt;
gensim nltk&lt;br&gt;
scikit-learn xgboost&lt;br&gt;
matplotlib seaborn bokeh plotly&lt;br&gt;
tabulate&lt;br&gt;
JayDeBeApi pymysql pymongo sqlalchemy&lt;br&gt;
pysocks requests[socks] Scrapy beautifulsoup4 wget  ansible  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/holoviews/"&gt;dclong/holoviews&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-ai/"&gt;dclong/jupyterhub-ai&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;torch torchvision tensorflow keras h2o&lt;br&gt;
gensim pytext    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-beakerx/"&gt;dclong/jupyterhub-beakerx&lt;/a&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SQL (based on JDBC) via BeakerX 1.1.0&lt;br&gt;
Scala 2.11.12 via BeakerX 1.1.0&lt;br&gt;
Java 8, Clojure, Groovy, Kotlin via BeakerX 1.1.0  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/jupyterhub-ds/"&gt;dclong/jupyterhub-ds&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/ubuntu_cn/"&gt;dclong/ubuntu_cn&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu/"&gt;dclong/lubuntu&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-qt5/"&gt;dclong/lubuntu-qt5&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-pyside2/"&gt;dclong/lubuntu-pyside2&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-nodejs/"&gt;dclong/lubuntu-nodejs&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-vscode/"&gt;dclong/lubuntu-vscode&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-py/"&gt;dclong/lubuntu-py&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-pycharm/"&gt;dclong/lubuntu-pycharm&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-jdk/"&gt;dclong/lubuntu-jdk&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-scala/"&gt;dclong/lubuntu-scala&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/lubuntu-intellij/"&gt;dclong/lubuntu-intellij&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu/"&gt;dclong/xubuntu&lt;/a&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-nodejs/"&gt;dclong/xubuntu-nodejs&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-vscode/"&gt;dclong/xubuntu-vscode&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-py/"&gt;dclong/xubuntu-py&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-pycharm/"&gt;dclong/xubuntu-pycharm&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-jdk/"&gt;dclong/xubuntu-jdk&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-scala/"&gt;dclong/xubuntu-scala&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com/r/dclong/xubuntu-intellij/"&gt;dclong/xubuntu-intellij&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="known-issues"&gt;Known Issues&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The subprocess managment issue.
    This is not an issue at all in most use cases.
    This Docker image launch service using a shell script
    so there won't be orphan subprocesses
    when the process of the Docker container is killed.
    However, launching by shell script is not the best way for managing processes.
    Please refer to &lt;a href="https://blog.phusion.nl/2015/01/20/docker-and-the-pid-1-zombie-reaping-problem/#asimpleinitsystem"&gt;A Simple Init System&lt;/a&gt;
    for more details.
    I might switch to the &lt;a href="https://github.com/Supervisor/supervisor"&gt;Supervisor&lt;/a&gt; for process management
    or use the base image of &lt;a href="https://hub.docker.com/r/phusion/baseimage/"&gt;pushion/baseimage&lt;/a&gt; in future.&lt;/li&gt;
&lt;/ol&gt;</content><category term="software"></category><category term="Docker"></category><category term="Docker image"></category><category term="Ubuntu"></category><category term="JupyterLab"></category><category term="Lubuntu"></category><category term="dclong"></category></entry><entry><title>Manage Docker Images and Containers</title><link href="http://www.legendu.net/en/blog/docker-image-and-container-management/" rel="alternate"></link><published>2019-06-23T02:38:23-07:00</published><updated>2019-06-23T02:38:23-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-06-23:/en/blog/docker-image-and-container-management/</id><summary type="html">&lt;p&gt;It is suggested that you use &lt;a href="https://osquery.io/"&gt;osquery&lt;/a&gt;
to query Docker images, containers, etc.&lt;/p&gt;
&lt;h2 id="remove-containers"&gt;Remove Containers&lt;/h2&gt;
&lt;p&gt;Note that running containers will NOT be removed by default.
This is what users want generally speaking. 
You can use the option &lt;code&gt;-f&lt;/code&gt; to force removing running containers,
but use it with caution and at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is suggested that you use &lt;a href="https://osquery.io/"&gt;osquery&lt;/a&gt;
to query Docker images, containers, etc.&lt;/p&gt;
&lt;h2 id="remove-containers"&gt;Remove Containers&lt;/h2&gt;
&lt;p&gt;Note that running containers will NOT be removed by default.
This is what users want generally speaking. 
You can use the option &lt;code&gt;-f&lt;/code&gt; to force removing running containers,
but use it with caution and at your own risk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove all existing containers (not images).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;pipe&lt;/span&gt;
&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aq&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;osquery&lt;/span&gt;
&lt;span class="n"&gt;osqueryi&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;select id from docker_containers&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;--list --header=false | xargs docker rm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove exited containers.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aqf&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;exited&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt;
&lt;span class="n"&gt;osqueryi&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;select id from docker_containers where state=exited&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;--list --header=false | xargs docker rm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="remove-images"&gt;Remove Images&lt;/h2&gt;
&lt;p&gt;Note that images required by running containers will NOT be removed by default.
This is what users want generally speaking. 
You can use the option &lt;code&gt;-f&lt;/code&gt; to force removing images,
but use it with caution and at your own risk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove images without names (with the help of &lt;code&gt;awk&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{ if ($1 == &amp;quot;&amp;amp;lt;none&amp;amp;gt;&amp;quot;) print $3 }&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;xargs&lt;/span&gt; &lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove images without versions (with the help of &lt;code&gt;awk&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{ if ($2 == &amp;quot;&amp;amp;lt;none&amp;amp;gt;&amp;quot;) print $3 }&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;xargs&lt;/span&gt; &lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove images without names or versions (with the help of &lt;code&gt;awk&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{ if ($1 == &amp;quot;&amp;amp;lt;none&amp;amp;gt;&amp;quot; || $2 == &amp;quot;&amp;amp;lt;none&amp;amp;gt;&amp;quot;) print $3 }&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;xargs&lt;/span&gt; &lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove images without names or versions (with the help of &lt;code&gt;osquery&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;osqueryi&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;select id from docker_images where tags = &amp;#39;&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;--list --header=false | xargs docker rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all images belong to the eclipse organization with the help of &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;q&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;+/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tH&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;select [image id] from - where repository like &amp;#39;eclipse/%&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all images belong to the eclipse organization with the help of &lt;code&gt;osquery&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;osqueryi&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;select id from docker_images where tags like &amp;#39;eclipse/%&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;--list --header=false | xargs docker rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can force removing an image with the &lt;code&gt;--force&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;rmi&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt; &lt;span class="c1"&gt;--force&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have multiple tags on the same docker image, 
    you cannot remove the docker image by image id (without using &lt;code&gt;--force&lt;/code&gt;.)
    One way (without using &lt;code&gt;--force&lt;/code&gt;) is to specify the tag name to remove.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="get-container-id-inside-container"&gt;Get Container ID Inside Container&lt;/h2&gt;
&lt;p&gt;You can get the container ID inside the docker container 
by running the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cgroup&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;docker-.*.scope&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;s/docker-\(.*\).scope/\\1/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or another simpler way is to run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;HOSTNAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But it will not work in the following two cases. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;if hostname is explicitly specified with &lt;code&gt;--hostname&lt;/code&gt; flag. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when using &lt;code&gt;--net=host&lt;/code&gt; mode.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="importexport-docker-containerimages"&gt;Import/Export Docker Container/Images&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://blog.giantswarm.io/moving-docker-container-images-around/"&gt;Moving Docker Containers and Images Around&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Save a docker image to a tar.gz file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;gzip&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load a docker image from tar file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="kill-a-process-in-a-container"&gt;Kill a Process in a Container&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; container_name &lt;span class="nb"&gt;kill&lt;/span&gt; process_name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="volume"&gt;Volume&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ALWAYS create a directory in the Docker container first
    before you mount a volume into it.
    If the directory (to mount into) in the Docker container does not exists,
    it will be created automatically by the root user
    (unless you specified a different user to run the Docker container).
    The newly created directory is owned by the root,
    which might not be as expected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AVOID mounting a volume into your home directory in the Docker container.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You might screw up the permission of your home directory in the Docker container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you mount your home on the host into your home in the Docker container,
    you might accidentally overwrite things in your home directory on the host.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is recommend that you always mount a volume to &lt;code&gt;/some_dir&lt;/code&gt; and then link to home if needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you mount a volume from the host to a Docker container,
    make sure that you have the right permissions to the directory on the host,
    o.w., you might run into various issues (such as the Docker container fails to start).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You following instructions in 
        &lt;a href="https://stackoverflow.com/questions/30642844/how-to-list-docker-mounted-volumes-from-within-the-container"&gt;this discussion&lt;/a&gt;
    to list mounted volumens.
    Another way is to use &lt;a href="https://osquery.io/"&gt;osquery&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="permission"&gt;Permission&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you have your user name added into the &lt;code&gt;docker&lt;/code&gt; group
    so that you can run Docker commands without using &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside a Docker container,
    files created belong to the user in the Docker container.
    If the files are created in a mounted host directory,
    then on the host these files belong to the user with the same user ID.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="port"&gt;Port&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Do NOT forget to forward ports from the host to the Docker containers
    while using docker containers.
    For example,
    if you run a Flask application in a Docker,
    you have to forward a port on the host to the port 5000 in the Docker container.
    If you run multiple services in a Docker container (not recommended),
    you have to forward all needed ports into the Docker container.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="sharing-files"&gt;Sharing Files&lt;/h2&gt;
&lt;p&gt;Copying file between a docker container and the host.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker cp foo.txt mycontainer:/foo.txt
docker cp mycontainer:/foo.txt foo.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;By default log in a Docker container is redirected to the standard output.
    However,
    you won't be able to see the log if you start the Docker container as a deamon (using the &lt;code&gt;-d&lt;/code&gt; option).
    For debugging purposes,
    it is suggested that you use the &lt;code&gt;-it&lt;/code&gt; options instead the &lt;code&gt;-d&lt;/code&gt; option.
    A more general and robust way is of course to redirect log of applications to a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple running instances of the same Docker image
    do not interact with each other.
    The are running isolated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Amazon AWS is blocked in China (currently).
    Do NOT run Docker services on Amazon if your users are in the mainland of China.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="issues-solutions"&gt;Issues &amp;amp; Solutions&lt;/h2&gt;
&lt;h3 id="issueerror-1"&gt;Issue/Error 1&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;docker: Error response from daemon: Get https://registry-1.docker.io/v2/dclong/jupyterlab-rstudio/manifests/latest: dial tcp 50.17.62.194:443: getsockopt: connection refused&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First retry starting the Docker container.
If it still does not work
then restart the Docker daemon using the command below will resolve the issue.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="k"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="issueerror-2"&gt;Issue/Error 2&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Jupyter notebook connection failed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Due to proxy!!! Connect without proxy works!!!&lt;/p&gt;
&lt;p&gt;https://stackoverflow.com/questions/31280465/ipython-notebook-connection-failed-issue&lt;/p&gt;
&lt;h2 id="issueerror-3"&gt;Issue/Error 3&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Docker Error: Returned a Non-zero Code: 137&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This issue is due to out of memory error.
To fix it,
you can either add more RAM or add more swap memory.&lt;/p&gt;
&lt;p&gt;https://samwize.com/2016/05/19/docker-error-returned-a-non-zero-code-137/&lt;/p&gt;</content><category term="software"></category><category term="Docker"></category><category term="Docker image"></category><category term="container"></category><category term="management"></category><category term="remove"></category></entry><entry><title>Summary on Random Number Generators</title><link href="http://www.legendu.net/en/blog/summary-random-number-generators/" rel="alternate"></link><published>2019-05-27T21:14:07-07:00</published><updated>2019-05-27T21:14:07-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-05-27:/en/blog/summary-random-number-generators/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="mersenne-twister"&gt;Mersenne Twister&lt;/h2&gt;
&lt;p&gt;The most popular pseudo random number generator (PRNG) currently is Mersenne Twister. 
It is implemented in many programming languages 
and is the default in many software and programming languages.
Mersenne Twister has many different versions, 
among which the MT19937 is the most widely used one. 
The period of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="mersenne-twister"&gt;Mersenne Twister&lt;/h2&gt;
&lt;p&gt;The most popular pseudo random number generator (PRNG) currently is Mersenne Twister. 
It is implemented in many programming languages 
and is the default in many software and programming languages.
Mersenne Twister has many different versions, 
among which the MT19937 is the most widely used one. 
The period of MT19937 is extreemly long (&lt;span class="math"&gt;\(2^{19937}-1\)&lt;/span&gt;)
and is equidistributed for generating vectors up to dimension 623. 
The MT19937 generate 32 bits random numbers. 
Combining two random blocks, 
one can generate 64 bits random numbers.
This is often implemented together with the 32 bit version, 
and usually call MT19937_64.
The MT19937_64 is equidistributed for generating vectors up to dimension 311.&lt;/p&gt;
&lt;h2 id="well"&gt;WELL&lt;/h2&gt;
&lt;p&gt;A more modern family of random number generators than Mersenne Twister 
is the WELL random number generators, 
which have better equidistribution property and are better to escape the zeroland 
(initialization array contains many zero bits). 
However, 
the speed of the WELL generators is about 0.6 to 0.7 compared to the Mersenne Twister generators. 
Also the WELL random number generators has a large inner state 
(e.g., the WELL44497b uses about 33kb for its inner state while the MT19937 uses only about 2.5kb). 
This is usually not a problem on modern computers, 
but if you use lots of random number generators at the same time 
or if the code is run on a embedded device, 
it might worth considering the consume of memories of these generators. 
Among different versions of WELL generators, 
WELL19937c and WELL44497b are commonly used. &lt;/p&gt;
&lt;h2 id="sfmt"&gt;SFMT&lt;/h2&gt;
&lt;p&gt;SIMD-oriented Fast Mersenne Twister (SFMT) is an improved version of Mersenne Twister. 
It uses parallelism of modern CPUs and is about twice faster than mersenne Twister. 
SFMT also has better equidistribution property than Mersenne Twister, 
but not as good as WELL.
SFMT recovers from 0-excess initial state faster than Mersenne Twister, 
but not faster than WELL.
C++ implementations are available but I don't see a popular Java implementation so far.&lt;/p&gt;
&lt;h2 id="pcg"&gt;&lt;a href="http://www.pcg-random.org/"&gt;PCG&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;PCG is a family of simple fast space-efficient statistically good algorithms 
for random number generation. 
Unlike many general-purpose RNGs, 
they are also hard to predict.
C++ implementations are available but I don't see a popular Java implementation at this time.&lt;/p&gt;
&lt;h2 id="libraries-for-random-number-generators"&gt;Libraries for Random Number Generators&lt;/h2&gt;
&lt;h3 id="java"&gt;Java&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://commons.apache.org/proper/commons-math/javadocs/api-3.6/org/apache/commons/math3/random/RandomDataGenerator.html"&gt;org.apache.commons.math3.random.RandomDataGenerator&lt;/a&gt;
    is a popular one. 
    By default it uses a Well19937c generator.
    A customized RandomGenerator can be provided in the constructor.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="python"&gt;Python&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;a href="https://docs.python.org/3/library/random.html"&gt;random&lt;/a&gt; model.
    It is based on a Mersenne Twister random number generator.&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="WELL"></category><category term="RNG"></category><category term="statistics"></category><category term="SFMT"></category><category term="dimension"></category><category term="MT"></category><category term="PCG"></category><category term="Java"></category><category term="Python"></category></entry><entry><title>Good Ways to Do Scientific Computing</title><link href="http://www.legendu.net/en/blog/good-ways-scientific-computing/" rel="alternate"></link><published>2019-05-15T19:07:49-07:00</published><updated>2019-05-15T19:07:49-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-05-15:/en/blog/good-ways-scientific-computing/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Break down the work into smaller modules and develop pipelines (consists of module) for the work.
  Be sure to save (important) intermediate results so that you can resume failed modules withouting reruning succeeded ones.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manage your project in GitHub and use issues to manage tasks to do and their priorities …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Break down the work into smaller modules and develop pipelines (consists of module) for the work.
  Be sure to save (important) intermediate results so that you can resume failed modules withouting reruning succeeded ones.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manage your project in GitHub and use issues to manage tasks to do and their priorities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep your code clean. 
  Make sure to follow good coding (especially naming) styles no matter which programming language you use.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write help documents for your code (classes, methods, etc.)
  and keep a up-to-date readme file (explaining design, TODO or refer to other docs) for your project. 
  Bullets 2 and 3 are critical to make sure sustainable progress on projects that last for a long time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use seeds when you generate random numbers. 
  This makes sure that your work can be reproduced later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test running your code using a small dataset or complexity degree 
  to estimate the time needed to run at full scale. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update the progress of running regularlly if a program is time-consuming.
  It is good practice to log both the time ellapsed and the amount of work that has been done
  so that you can estimate the ETA.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Research"></category><category term="scientific computing"></category></entry><entry><title>Examples of Using pdftk to Manipulating PDF Files</title><link href="http://www.legendu.net/en/blog/pdftk-examples/" rel="alternate"></link><published>2019-05-12T15:25:00-07:00</published><updated>2019-05-12T15:25:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-05-12:/en/blog/pdftk-examples/</id><summary type="html">&lt;p&gt;Even though &lt;code&gt;pdftk&lt;/code&gt; is a great command-line tool,
it is suggested that you use Python libraries to manipulating PDFs.
Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/editing-PDF-files/"&gt;Editing PDF Files&lt;/a&gt;
and
&lt;a href="http://www.legendu.net/misc/blog/pypdf2-examples/"&gt;PyPDF2 Examples&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fill in forms in an I-9 doc. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# &lt;span class="nv"&gt;dump&lt;/span&gt; &lt;span class="nv"&gt;fields&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;form&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;optional&lt;/span&gt;, &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;human&lt;/span&gt; &lt;span class="nv"&gt;examination&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;pdftk&lt;/span&gt; &lt;span class="nv"&gt;i9 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Even though &lt;code&gt;pdftk&lt;/code&gt; is a great command-line tool,
it is suggested that you use Python libraries to manipulating PDFs.
Please refer to 
&lt;a href="http://www.legendu.net/misc/blog/editing-PDF-files/"&gt;Editing PDF Files&lt;/a&gt;
and
&lt;a href="http://www.legendu.net/misc/blog/pypdf2-examples/"&gt;PyPDF2 Examples&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fill in forms in an I-9 doc. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# &lt;span class="nv"&gt;dump&lt;/span&gt; &lt;span class="nv"&gt;fields&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;form&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;optional&lt;/span&gt;, &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;human&lt;/span&gt; &lt;span class="nv"&gt;examination&lt;/span&gt; &lt;span class="nv"&gt;only&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;pdftk&lt;/span&gt; &lt;span class="nv"&gt;i9&lt;/span&gt;.&lt;span class="nv"&gt;pdf&lt;/span&gt; &lt;span class="nv"&gt;dump_data_fields&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; fields.txt &lt;/span&gt;
# &lt;span class="nv"&gt;generate&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;FDF&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt;
&lt;span class="nv"&gt;pdftk&lt;/span&gt; &lt;span class="nv"&gt;i9&lt;/span&gt;.&lt;span class="nv"&gt;pdf&lt;/span&gt; &lt;span class="nv"&gt;generate_fdf&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;.&lt;span class="nv"&gt;fdf&lt;/span&gt; 
# &lt;span class="nv"&gt;after&lt;/span&gt; &lt;span class="nv"&gt;fill&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;fileds&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;FDF&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt;, &lt;span class="nv"&gt;run&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;following&lt;/span&gt; &lt;span class="nv"&gt;command&lt;/span&gt;
&lt;span class="nv"&gt;pdftk&lt;/span&gt; &lt;span class="nv"&gt;i9&lt;/span&gt;.&lt;span class="nv"&gt;pdf&lt;/span&gt; &lt;span class="nv"&gt;fill_form&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt;.&lt;span class="nv"&gt;fdf&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt; &lt;span class="nv"&gt;i9_2&lt;/span&gt;.&lt;span class="nv"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the PDF form to fill in using &lt;code&gt;pdftk&lt;/code&gt; is encrypted, 
you have to decrypt it first. 
&lt;a href="http://smallpdf.com/"&gt;SmallPDF&lt;/a&gt; is a good online service,
which can help you unlock PDF documents if you don't have the encryption password.&lt;/p&gt;
&lt;p&gt;Notice that some PDF forms (e.g., time card, I-9 form, etc.) 
cannot be saved (only a blank copy can be saved). 
after filled in using Adobe Reader.
&lt;code&gt;pdftk&lt;/code&gt; provides a solution to this problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract pages (from 149 to 186) 
    from the PDF file "training.pdf" 
    as "chap_05.pdf"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pdftk&lt;/span&gt; &lt;span class="n"&gt;training&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="mi"&gt;149&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;186&lt;/span&gt; &lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="n"&gt;chap_05&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combine all my i-20s (all PDF files in current directory) into a single file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pdftk&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="n"&gt;_all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combine scaned pages into the right order.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pdftk&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20141206171918820&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20141206171951015&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;A1&lt;/span&gt; &lt;span class="n"&gt;B1&lt;/span&gt; &lt;span class="n"&gt;A2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rotate the first PDF page to 90 degrees clockwise&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;pdftk&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt;.&lt;span class="nv"&gt;pdf&lt;/span&gt; &lt;span class="nv"&gt;cat&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nv"&gt;east&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt; &lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rotate all pages in the second PDF file to 180 degrees&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pdftk&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;m11&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;m25&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;Bsouth&lt;/span&gt; &lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="n"&gt;comed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rotate an entire PDF document to 180 degrees&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pdftk&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;endsouth&lt;/span&gt; &lt;span class="k"&gt;output&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</content><category term="pdftk"></category><category term="software"></category><category term="examples"></category><category term="PDF"></category></entry><entry><title>Tips on Installing Debian Series Linux Distributions</title><link href="http://www.legendu.net/en/blog/tips-for-installing-debian/" rel="alternate"></link><published>2019-05-11T01:05:59-07:00</published><updated>2019-05-11T01:05:59-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-05-11:/en/blog/tips-for-installing-debian/</id><summary type="html">&lt;h2 id="before-installation"&gt;Before Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can either create a boot CD/DVD or flash drive to install debian.
    The way I prefer is to instal debian using a bootable flash drive 
    because many laptops do not have CD/DVD trays. 
    To write a debian image to flash drive, you can use the …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="before-installation"&gt;Before Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can either create a boot CD/DVD or flash drive to install debian.
    The way I prefer is to instal debian using a bootable flash drive 
    because many laptops do not have CD/DVD trays. 
    To write a debian image to flash drive, you can use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;dd&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_debian_image&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_of_device&lt;/span&gt; &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nv"&gt;M&lt;/span&gt;&lt;span class="c1"&gt;; sync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or can you also use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;path_to_debian_image&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;path_of_device&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where path of device is the path of the flash drive. 
Note that you must use the whole device (e.g., /dev/sdb) not just a partition (e.g., /dev/sdb1),
otherwise the flash drive is not bootable.
You have to aware that both the 2 commands above are dangerous 
as they can destory data on the device,
so you'd better be sure about what you are doing. 
For more information, see &lt;a href="http://www.debian.org/CD/faq/#write-usb"&gt;http://www.debian.org/CD/faq/#write-usb&lt;/a&gt;.
(The two simple ways for creating bootable falsh drives also applies to many other Linux distributions.)
It requires that the ISO image is hybrid. 
If not, 
you can use the following command to make it hybird if it uses isolinux/syslinux technology.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;isohybrid&lt;/span&gt; &lt;span class="n"&gt;path_to_linux_image&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then you can use either &lt;code&gt;dd&lt;/code&gt; or &lt;code&gt;cat&lt;/code&gt; to the write the image into a device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better have ethernet connection. 
    The wireless support for Linux is still not perfect.
    Depending on the brand of your laptop, 
    you might need to connect to internet through ethernet network during installation.
    What's more, 
    the ethernet network is faster than a wireless network. 
    So it is suggested that you alway use a ethernet network connection while installing debian.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the power of your laptop is plugged in. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="during-installation"&gt;During Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is recommended that you use the text installation. 
    The text installation of Debian actually is pretty intuitive and easy to follow.
    The graphical installation of Debian did not work on any of my laptops.
    I am not sure whether the problem has been fixed or not, 
    but it does not hurt to use the text installation. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since Debian can keep data in the home directory during installation,
    it is suggested that you do not use a separate home directory. 
    Following this suggestion, 
    you have to set the mount point of the disk to install debian as &lt;code&gt;/&lt;/code&gt; (root directory). 
    You also have to use a swap partition. 
    The size of the swap parition is controversial, 
    generally speaking it should be 1 to 2 times the memory of the computer.
    I often set the size of the swap partition to be 1.5 times the memory of the computer. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your network is not very fast, 
    you can choose not to use network mirrors especially 
    when your installation image is update to date. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do not like the default desktop enviroment of Debian (currently Gnome),
    you can deselect the desktop environment during installation. 
    This also makes the installation faster.
    You can install a desktop enviroment you like manually after installtion of Debian. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="after-installation"&gt;After Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The first thing to do after installtion is 
    to edit the APT (advance package tool) configuration file &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;. 
    By default, debian uses the installing media as a repository after installation.
    However, the media is usually removed and thus unavailable after installation.
    So, you probably want to delete or comment out the repository using the installing media.
    Also, if you did not use a network mirror duing installation, 
    you have to add a debian repository into the APT configuration file manually.
    For example, you can add the following lines into the APT configuration file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://ftp.us.debian.org/debian/&lt;/span&gt; &lt;span class="kp"&gt;wheezy&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;span class="k"&gt;deb&lt;/span&gt; &lt;span class="s"&gt;http://ftp.us.debian.org/debian/&lt;/span&gt; &lt;span class="kp"&gt;wheezy&lt;/span&gt; &lt;span class="kp"&gt;main&lt;/span&gt; &lt;span class="kp"&gt;contrib&lt;/span&gt; &lt;span class="kp"&gt;non-free&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is suggested that you include &lt;code&gt;contrib&lt;/code&gt; and &lt;code&gt;non-free&lt;/code&gt; in the repository.
This ensures that you can also use many non-open source but cost-free softwares.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The second thing to do after installation of Debian is 
    to install the &lt;code&gt;sudo&lt;/code&gt; package and configure it.
    You have to switch to root to install packages.
    To switch to root, type in &lt;code&gt;su&lt;/code&gt; (super user) in the terminal. 
    You will be asked for the password of root.
    After authentication, you are in root user. 
    Notice that the prompt character is &lt;code&gt;#&lt;/code&gt; (instead of &lt;code&gt;$&lt;/code&gt;) for the root user. 
    You can type &lt;code&gt;apt-get install sudo&lt;/code&gt; in the terminal (as root) to install the package &lt;code&gt;sudo&lt;/code&gt;.
    After installation of &lt;code&gt;sudo&lt;/code&gt;,
    you have to add your user name to the &lt;code&gt;sudo&lt;/code&gt; group. 
    To do this, 
    run the following command as root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;adduser&lt;/span&gt; &lt;span class="n"&gt;your_user_name&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, 
this will not take effect immediately. 
To notify the change (of group permission) to the system, 
you can run the following command as root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;newgrp&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If this does not work, 
you can manually log out and then log in
and the change of group permissions will take effect.
Now you are in the &lt;code&gt;sudo&lt;/code&gt; group, 
you can use &lt;code&gt;sudo&lt;/code&gt; (instead of the root user) to run commands
that need root permission.
You can now exit the root terminal (by running &lt;code&gt;exit&lt;/code&gt;) 
if you are still in the root terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The third thing to do after installation of Debian is to install the &lt;code&gt;wajig&lt;/code&gt; package.
    To do this, 
    type &lt;code&gt;sudo apt-get install wajig&lt;/code&gt; in the terminal (as your own user).
    You will be prompt for your user password to install the package. 
    Surely, 
    you can install the &lt;code&gt;wajig&lt;/code&gt; package together with the &lt;code&gt;sudo&lt;/code&gt; package in the second step. 
    To do this, 
    you can run command &lt;code&gt;apt-get install sudo wajig&lt;/code&gt; as root. 
    However, it is suggested that you avoid use th root user as much as possible. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The last step is to install and configure other necessary packages.
    Now you have &lt;code&gt;sudo&lt;/code&gt; and &lt;code&gt;wajig&lt;/code&gt; installed, 
    you can use &lt;code&gt;wajig&lt;/code&gt; to manage packages,
    and you should use &lt;code&gt;sudo&lt;/code&gt; instead of the root user to operations need root permissions.
    For example, 
    to install other packages such as &lt;code&gt;vim&lt;/code&gt; and &lt;code&gt;eclipse&lt;/code&gt;, 
    you can type &lt;code&gt;wajig install vim eclipse&lt;/code&gt; in the terminal (as your own user).
    You will be prompt for your user password to continue. 
    Notice that &lt;code&gt;wajig&lt;/code&gt; is a little special command, 
    it automatically uses &lt;code&gt;sudo&lt;/code&gt; to install packages when necessary. 
    For other operations that need root permission, 
    you have to use &lt;code&gt;sudo&lt;/code&gt; before the command. 
    For example, if you use &lt;code&gt;apt-get&lt;/code&gt; to install packages &lt;code&gt;vim&lt;/code&gt; and &lt;code&gt;eclipse&lt;/code&gt;,
    you must use &lt;code&gt;sudo apt-get install vim eclipse&lt;/code&gt; manually.
    However, in practice I avoid using &lt;code&gt;sudo&lt;/code&gt; as much as possible. 
    I often use a command first without prefixing it with &lt;code&gt;sudo&lt;/code&gt;, 
    if it fails because of permission, 
    I then use command &lt;code&gt;sudo !!&lt;/code&gt; to run it using &lt;code&gt;sudo&lt;/code&gt; quickly.
    Generally speaking, this is safer than abusing &lt;code&gt;sudo&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="wireless"&gt;Wireless&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You might have to install wireless dirvers manually 
    depending on the type of wireless card in your computer. 
    You can use the following command to check the type of the wireless card in your computer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;lspci&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;wireless&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then you can search for the driver/package that support your wireless card. 
For example, the result of the above command on my laptop is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;00.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Intel&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Corporation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PRO&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Wireless&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;5100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AGN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Shiloh&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Network&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Connection&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This wireless card is supported by iwlwifi. 
If you have included non-free softwares in your debian repository 
(see the first step after installation),
you can type &lt;code&gt;wajig install firmware-iwlwifi&lt;/code&gt; in terminal to install it. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have installed a desktop environment, 
    you usually have a network manager to manager the wireless interface. 
    In this case, 
    it is strongly suggested that 
    you comment everything out in the (or use an empty) configuration file &lt;code&gt;/etc/network/interface&lt;/code&gt;.
    Otherwise, 
    you might not be able to use the wireless network 
    though the network manager shows that you have connected to it. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="sshfs-and-fuse"&gt;sshfs and fuse&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you want to be able to mount remove Linux filesystem on you computer, 
    you can install sshfs and fuse using the following command. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;sshfs&lt;/span&gt; &lt;span class="n"&gt;fuse&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is suggested that you add you user name into the fuse group using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;usermod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aG&lt;/span&gt; &lt;span class="n"&gt;fuse&lt;/span&gt; &lt;span class="n"&gt;user_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have to restart your computer to make the action take effect. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="suggestions-for-other-debian-series-linux-distributions"&gt;Suggestions for Other Debian Series Linux Distributions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you create a boot flash drive for Ubuntu in Windows using UNetbootin or other softwares, 
    then you'd better format the flash drive as &lt;code&gt;FAT&lt;/code&gt; instead of &lt;code&gt;FAT32&lt;/code&gt;. 
    Otherwise, 
    you might get the error information: "BOOTMGR is missing".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, LMDE installs 486 on 32 bit computers.
    If your computer has more than 1 cores/processors, 
    you can upgrade to 686-pae manually by running the following command in terminal
    and then reboot your computer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;686&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pae&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</content><category term="install"></category><category term="Linux"></category><category term="software"></category><category term="Debian"></category></entry><entry><title>Compare Two Directories on Linux</title><link href="http://www.legendu.net/en/blog/compare-two-directories-on-linux/" rel="alternate"></link><published>2019-05-10T19:13:40-07:00</published><updated>2019-05-10T19:13:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-05-10:/en/blog/compare-two-directories-on-linux/</id><summary type="html">&lt;h2 id="on-the-same-machine"&gt;On the Same Machine&lt;/h2&gt;
&lt;p&gt;If the two directories are on the same machine, 
you can use either &lt;code&gt;colordiff&lt;/code&gt; (preferred over &lt;code&gt;diff&lt;/code&gt;) or &lt;code&gt;git diff&lt;/code&gt;
to find the differences between them. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;colordiff -qr dir_1 dir_2
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git diff --no-index dir_1 dir_2
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="on-different-machines"&gt;On Different Machines&lt;/h2&gt;
&lt;p&gt;It is a little bit tricky when the …&lt;/p&gt;</summary><content type="html">&lt;h2 id="on-the-same-machine"&gt;On the Same Machine&lt;/h2&gt;
&lt;p&gt;If the two directories are on the same machine, 
you can use either &lt;code&gt;colordiff&lt;/code&gt; (preferred over &lt;code&gt;diff&lt;/code&gt;) or &lt;code&gt;git diff&lt;/code&gt;
to find the differences between them. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;colordiff -qr dir_1 dir_2
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git diff --no-index dir_1 dir_2
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="on-different-machines"&gt;On Different Machines&lt;/h2&gt;
&lt;p&gt;It is a little bit tricky when the two directories are on different machines. 
You have to first calculate md5sums of files in the two directories recursively,
and then compare the md5sums.
To calculate the md5sums of files in a directory recursively 
and output the results into a file &lt;code&gt;md5.txt&lt;/code&gt;, 
you can use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;md5deep -r path_to_directory &amp;gt; md5.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you have the md5sums for the 2 directories calculated 
and outputed into files (e.g., &lt;code&gt;j.txt&lt;/code&gt;) on the 2 machines,
you can then compare the contents of the 2 files on the 2 machines.
One way to achieve this is to run the following command on one of the machines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -p port user_name@the_other_server cat md5.txt &lt;span class="p"&gt;|&lt;/span&gt; git diff --no-index md5.txt -
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also copy (using &lt;code&gt;rsync&lt;/code&gt; or &lt;code&gt;scp&lt;/code&gt;) the output file on one machine to the other machine 
and then compare them locally using &lt;code&gt;git diff&lt;/code&gt;.&lt;/p&gt;</content><category term="difference"></category><category term="directory"></category><category term="folder"></category><category term="Linux"></category><category term="md5sum"></category><category term="md5deep"></category><category term="diff"></category><category term="ssh"></category></entry><entry><title>Parallel Computing in Different Programming Languages</title><link href="http://www.legendu.net/en/blog/summary-parallel-computing/" rel="alternate"></link><published>2019-04-28T11:50:22-07:00</published><updated>2019-04-28T11:50:22-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-04-28:/en/blog/summary-parallel-computing/</id><summary type="html">&lt;p&gt;There many different ways for parallel computing. 
This article focus on multithreading computing.
Generally speaking, commercial softwares have very good support for parallel computing. 
For example, Mathematica, MATLAB and Revolution R all have solid support for parallel computing. 
Mathematica and MATLAB also have good support for GPU computing. &lt;/p&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;Multithreading …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There many different ways for parallel computing. 
This article focus on multithreading computing.
Generally speaking, commercial softwares have very good support for parallel computing. 
For example, Mathematica, MATLAB and Revolution R all have solid support for parallel computing. 
Mathematica and MATLAB also have good support for GPU computing. &lt;/p&gt;
&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;Multithreading does not speed up computation in Python due to GIL. 
An alternative way use multiprocessing (using the &lt;code&gt;multiprocessing&lt;/code&gt; library) in Python.
This is contrarary to most other programming languages which encourages multithreading rather than multiprocessing 
as processes are much heavier than thread and communication among processes are harder than communications among threads.
Despite this, &lt;code&gt;multiprocess.Pool.map&lt;/code&gt; makes parallel computing real easy in Python.&lt;/p&gt;
&lt;h2 id="parallel-computing-in-bash"&gt;&lt;a href="http://www.legendu.net/misc/blog/parallel-computing-in-bash/"&gt;Parallel Computing in Bash&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id="mathematica"&gt;Mathematica&lt;/h2&gt;
&lt;p&gt;In Mathematica,&lt;br&gt;
there are a bunch of functions starting with "Parallel" 
(e.g., &lt;code&gt;ParallelTable&lt;/code&gt;, &lt;code&gt;ParallelSubmit&lt;/code&gt;, etc) for the purpose of parallel computing. 
If I remember correctly, 
one has to distribute a user-defined function to kernels manually before you can use it for parallel computing in Mathmatica 7 and earlier. 
In Mathematica 8+, 
user-defined functions are automatically distributed to kernels 
so that you can use your own function for parallel computing directly, 
which is very convenient. 
Actually, 
Mathematica is the most convenient one to do parallel computing among all programming languages mentioned in this post, 
but at the cost of effciency of parallel computing. 
Mathematica is famous for its intellegency but also nutorious (at least I think so) for running slow. 
It is the most smart but also the slowest programming languages among all programming languages 
that I have ever used (not just these mentioned in this post). 
It is probably safe to say that Mathematica is the slowest programming language. 
The more convenient a language is, the slower it is generally speaking. 
It is hard to get both. 
A way to improve the speed of Mathematica code is 
to compile the code to C code or some other code that is more efficient to run. 
I will not go deeply into this since it is not the main purpose of this post.&lt;/p&gt;
&lt;h2 id="matlab"&gt;MATLAB&lt;/h2&gt;
&lt;p&gt;There are several ways to do parallel computing in MATLAB. 
The one I know (and is probably the easiest way) is to use &lt;code&gt;parfor&lt;/code&gt; instead of &lt;code&gt;for&lt;/code&gt; in loops. 
If there is only 1 thread, 
&lt;code&gt;parfor&lt;/code&gt; works in serial. 
To better use &lt;code&gt;parfor&lt;/code&gt; for parallel computing, 
you have to learn some concept about different kinds of variables, 
e.g., slicing variables, reduced variables, etc.
Understanding these concept helps you write better parallel code, 
and it help debugging if your code does not work. 
To let &lt;code&gt;parfor&lt;/code&gt; use multiple threads, 
you must open the matlabpool manually. 
For example, 
to use the local host for parallel computing, 
you use the following command to initilize a pool with 8 workers 
(I assume the computer has 8 cores). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;matlabpool&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="n"&gt;local&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;parfor&lt;/code&gt; in MATLAB works like a charm most of the time. 
Consider the fact that MATLAB code is very fast compared to other scripting languages, 
it is a good choice for heavy numeric computing.&lt;br&gt;
However, 
for some reason I am not sure about (probably bug in MATLAB interpreter), 
sometimes even very simple parallel code does not work. 
If this is happens, 
it is usually not easy to get if fixed. What you try is to change reduced variables to a slicing variable, 
and operate on the slicing variable after parallel computing. 
Another annoying thing I met when doing parallel computing in MATLAB was that 
sometimes the exactly same code did not work on another machine with the same version of MATLAB. 
I was not sure what caused the problem, 
but I found that it was related to functions end with &lt;code&gt;rnd&lt;/code&gt; 
(random number generating functions) I used in the code. 
There are some old version functions starting with &lt;code&gt;rand&lt;/code&gt; for generating random numbers, 
which are more robust and always works well in parallel computing.&lt;/p&gt;
&lt;h2 id="r"&gt;R&lt;/h2&gt;
&lt;p&gt;R (not talking about Revolution R) has many packages for parallel computing.
Actually there are too many and thus make people confused about where to get started. 
Fortunately, the company of Revolution R contributed some packages to CRAN to make parallel computing in R unified. 
It is similar to &lt;code&gt;parfor&lt;/code&gt; in MATLAB. 
You use &lt;code&gt;foreach&lt;/code&gt; together with &lt;code&gt;%dopar%&lt;/code&gt; to do parallel computing. 
To do this, 
you must first register a backend for it. 
The following simple example does parallel computing using package "doMC" as the backend of &lt;code&gt;foreach&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doMC&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;registerDoMC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10000&lt;/span&gt;
&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%dopar%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="m"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;%%&lt;/span&gt; &lt;span class="m"&gt;31&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use package "snow" as the backend if you have access to a cluster.
In R, 
you do not have to worry about different kind of variables. 
Variables outside the &lt;code&gt;foreach&lt;/code&gt; loop are shared among threads, 
and &lt;code&gt;foreach&lt;/code&gt; returns a list of results corresponding to each iteration. 
Surely access variables outside the &lt;code&gt;foreach&lt;/code&gt; loop
make the parallel compting less efficient. 
A better way is to let &lt;code&gt;foreach&lt;/code&gt; return a list of results and then operate on the list. 
Sometimes, 
when you do parallel computing in R, 
the program does not speedup as you expect. 
This is probably because some functions you used has already been implemented in parallel. 
Notice that &lt;code&gt;foreach&lt;/code&gt; is not just for parallel computing. 
Even if you do serial computing, you can still use &lt;code&gt;foreach&lt;/code&gt; with &lt;code&gt;%dopar%&lt;/code&gt; replaced by &lt;code&gt;%do%&lt;/code&gt;. 
It is usually faster than the &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt;
&lt;h2 id="java-c"&gt;Java &amp;amp; C++&lt;/h2&gt;
&lt;p&gt;Both Java and C/C++ support multithreading directly. 
The concept of multithreading computing in these two languages are similar. 
You have to create multiple threads, 
and let each of them run part of the job.
Java has a better support for multithreading in the sense that its standard library supports thread pool. 
There is still no directly support of thread pool in C++11. 
You have to non-standard libraries for this purpose. 
For scientific computing (e.g. statistical simulations), 
it is usually every easy to partition the work by yourself 
and assign them to different threads so that a thread pool is not essential.
For example, 
if you want to do a simulation of 1000 runs, you can create &lt;code&gt;k&lt;/code&gt; threads, 
assign the first &lt;code&gt;1000/k&lt;/code&gt; runs to the first threads, 
assgin the second &lt;code&gt;1000/k&lt;/code&gt; runs to the second threads, 
and so on and so forth.
To share data between different threads, 
usually you have to lock and unlock shared resources. 
In Java, 
this can be done through &lt;code&gt;ReentrantLock&lt;/code&gt; class or &lt;code&gt;synchronized&lt;/code&gt; methods.
In C/C++ this can be done through &lt;code&gt;mutex&lt;/code&gt;. 
Details about multithreading computing in these two languages is beyond the scope of this post. 
For more information about multithreading in Java, 
you can refer to the book &lt;code&gt;Big Java&lt;/code&gt; which is really easy to follow, 
and "C++ Concurrency in Action" is a good book about multithreading for C++. &lt;/p&gt;
&lt;p&gt;Finally, 
I want to mention that not all computing job is suitable for parallel computing. 
The more comminication threads has to make, 
the more dependent the jobs are, the less efficient the parallel computing is. 
In statistical simulations, 
random numbers are usually generated in serial 
(though there are parallel algorithm for random number generating, the popular RNGs are usually serial). 
If a simulation is mostly about generating random numbers, 
it is probably non-benefitial to do parallel computing.&lt;/p&gt;</content><category term="Mathematica"></category><category term="lock"></category><category term="programming"></category><category term="C/C++"></category><category term="thread"></category><category term="Java"></category><category term="HPC"></category><category term="parallel"></category><category term="R"></category><category term="concurrency"></category><category term="mutex"></category><category term="GPU Computing"></category></entry><entry><title>Read PDF in Ruby</title><link href="http://www.legendu.net/en/blog/ruby-read-pdf/" rel="alternate"></link><published>2019-04-18T17:57:21-07:00</published><updated>2019-04-18T17:57:21-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-04-18:/en/blog/ruby-read-pdf/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;"pdf-reader" is a good Ruby libary for reading pdf document. 
You can install it via RubyGems using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have to load the library before you use it. 
To load it, use the command below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pdf-reader&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more information, see the &lt;a href="https://github.com/yob/pdf-reader"&gt;project …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;"pdf-reader" is a good Ruby libary for reading pdf document. 
You can install it via RubyGems using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have to load the library before you use it. 
To load it, use the command below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pdf-reader&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more information, see the &lt;a href="https://github.com/yob/pdf-reader"&gt;project on GitHub&lt;/a&gt;.&lt;/p&gt;</content><category term="library"></category><category term="programming"></category><category term="package"></category><category term="PDF"></category><category term="Ruby"></category></entry><entry><title>Use Eclipse as Your IDE</title><link href="http://www.legendu.net/en/blog/use-eclipse-as-your-ide/" rel="alternate"></link><published>2019-03-29T09:30:34-07:00</published><updated>2019-03-29T09:30:34-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-03-29:/en/blog/use-eclipse-as-your-ide/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are at least 3 ways to jump to errors quickly in Eclipse&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click these red icons on the right margin.&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Previous Annotation&lt;/code&gt; button 
or &lt;code&gt;Next Annotation&lt;/code&gt; buttons on the tool bar or under the &lt;code&gt;Navigation&lt;/code&gt; menu.&lt;/li&gt;
&lt;li&gt;Use hot keys (&lt;code&gt;Ctrl+.&lt;/code&gt; for &lt;code&gt;Next Annotation&lt;/code&gt; and &lt;code&gt;Ctrl+,&lt;/code&gt; for &lt;code&gt;Previous …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are at least 3 ways to jump to errors quickly in Eclipse&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click these red icons on the right margin.&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Previous Annotation&lt;/code&gt; button 
or &lt;code&gt;Next Annotation&lt;/code&gt; buttons on the tool bar or under the &lt;code&gt;Navigation&lt;/code&gt; menu.&lt;/li&gt;
&lt;li&gt;Use hot keys (&lt;code&gt;Ctrl+.&lt;/code&gt; for &lt;code&gt;Next Annotation&lt;/code&gt; and &lt;code&gt;Ctrl+,&lt;/code&gt; for &lt;code&gt;Previous Annotation&lt;/code&gt; by default).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To tidy code, 
    use the &lt;code&gt;Format&lt;/code&gt; button under the &lt;code&gt;Source&lt;/code&gt; menu.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To quickly comment selected code in Eclipse, 
    you can use hot keys &lt;code&gt;Crtl+/&lt;/code&gt;. 
    To uncomment selected code, 
    simply press the hot keys again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To quickly import a package which has no &lt;code&gt;.jar&lt;/code&gt; files 
    (i.e. you have available all source code) to an existing project, 
    you can simply drag the package on the &lt;code&gt;src&lt;/code&gt; folder 
    in the corresponding project in eclipse. 
    Another way is to first create a new package with the same
    name as the existing package, 
    then right click on the newly created
    package and choose &lt;code&gt;Import...&lt;/code&gt; in the short menu. 
    In the prompt out,
    you can choose either &lt;code&gt;Archive File&lt;/code&gt; or &lt;code&gt;File System&lt;/code&gt; under
    the &lt;code&gt;General&lt;/code&gt; tab depending on whether there are &lt;code&gt;.jar&lt;/code&gt; files in the package
    or not. 
    Then you can choose which files you want to import into
    the package and click finish after you have done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To change a variable name, you'd better use refactor which will
    automatically change all occurrences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;TODO&lt;/code&gt; to add task in eclipse.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To build projects manually, 
    follow instructions 
    &lt;a href="http://help.eclipse.org/helios/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Ftasks%2Ftasks-75.htm"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="IDE"></category><category term="programming"></category><category term="Eclipse"></category><category term="software"></category><category term="editor"></category></entry><entry><title>Advanced Use of "head" and "tail"</title><link href="http://www.legendu.net/en/blog/advanced-use-head-tail/" rel="alternate"></link><published>2019-03-29T09:29:01-07:00</published><updated>2019-03-29T09:29:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-03-29:/en/blog/advanced-use-head-tail/</id><summary type="html">&lt;p&gt;Besides passing an unsigned integer as parameter to the option &lt;code&gt;-n&lt;/code&gt;, 
you can also pass a signed integer to it.
When a signed integer is passed to &lt;code&gt;-n&lt;/code&gt;, 
it means from/to (inclusive/exclusive similar to most programming languages) the row with this index (1-based). 
More specifically, 
&lt;code&gt;head -n +/-k …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Besides passing an unsigned integer as parameter to the option &lt;code&gt;-n&lt;/code&gt;, 
you can also pass a signed integer to it.
When a signed integer is passed to &lt;code&gt;-n&lt;/code&gt;, 
it means from/to (inclusive/exclusive similar to most programming languages) the row with this index (1-based). 
More specifically, 
&lt;code&gt;head -n +/-k&lt;/code&gt; means take rows 1 (inclusive) to &lt;code&gt;+/-k&lt;/code&gt; (exclusive).
&lt;code&gt;tail -n +/-k&lt;/code&gt; means take rows &lt;code&gt;+/-k&lt;/code&gt; (inclusive) to the last row. 
Below are some examples to help you fruther understand how it works.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Print all but the last &lt;code&gt;5&lt;/code&gt; lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;means&lt;/span&gt; &lt;span class="k"&gt;without&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;last&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;  
&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print lines 6 and after (i.e., all but the first &lt;code&gt;5&lt;/code&gt; lines).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;means&lt;/span&gt; &lt;span class="n"&gt;starting&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  
&lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print lines 10 to 20.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;  
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/print-rows-from-a-text-file/"&gt;Print Rows from a Text File&lt;/a&gt;
for better ways using &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Linux"></category><category term="shell"></category><category term="command line"></category><category term="head"></category><category term="tail"></category><category term="sed"></category><category term="awk"></category><category term="rows"></category><category term="lines"></category><category term="text manipulation"></category></entry><entry><title>Advanced Use of "ls" in Linux</title><link href="http://www.legendu.net/en/blog/list-files-without-tilde-linux/" rel="alternate"></link><published>2019-03-29T09:29:01-07:00</published><updated>2019-03-29T09:29:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-03-29:/en/blog/list-files-without-tilde-linux/</id><summary type="html">&lt;h2 id="list-files-sorted-by-time"&gt;List Files Sorted by Time&lt;/h2&gt;
&lt;p&gt;You can list files sorted by time (newest first) using the &lt;code&gt;-t&lt;/code&gt; option.
Notice that the &lt;code&gt;-t&lt;/code&gt; option is also support by &lt;code&gt;hdfs dfs -ls&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lht&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="ignore-files"&gt;Ignore Files&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You have to either enclose the pattern in quotes or escape the wildcard in patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Equivalent …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="list-files-sorted-by-time"&gt;List Files Sorted by Time&lt;/h2&gt;
&lt;p&gt;You can list files sorted by time (newest first) using the &lt;code&gt;-t&lt;/code&gt; option.
Notice that the &lt;code&gt;-t&lt;/code&gt; option is also support by &lt;code&gt;hdfs dfs -ls&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lht&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="ignore-files"&gt;Ignore Files&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You have to either enclose the pattern in quotes or escape the wildcard in patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Equivalent commands to ignore JSON files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="c1"&gt;--ignore=*.json&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;quote&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;due&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;space&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignore multiple patterns.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.txt&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.pdf&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.json&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iname&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.pdf&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;*.txt&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;./Movies/*&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;./Downloads/*&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;./Music/*&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignore backup files (whose names end with &lt;code&gt;~&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or you can use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="c1"&gt;--ignore=*~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-contents-of-a-directory-with-the-directory-name-prefixed"&gt;List Contents of a Directory with the Directory Name Prefixed&lt;/h2&gt;
&lt;p&gt;When you list the contents of a directory (e.g., &lt;code&gt;raw&lt;/code&gt;) using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls raw
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the directory name &lt;code&gt;raw&lt;/code&gt; is not prefixed to the returned/printed contents.
You can of course concatenate the directory name &lt;code&gt;raw&lt;/code&gt; to each of its subdirectory/subfile manually,
however,
a more convenient way is to use the the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls raw/*
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="list-only-subdirectories"&gt;List Only Subdirectories&lt;/h2&gt;
&lt;p&gt;You can use the following command to list directories only in the current directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -d ./*
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="list-hidden-files-and-directories"&gt;List Hidden Files and Directories&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Linux"></category><category term="ls"></category><category term="shell"></category></entry><entry><title>Configure SSH to Use a Proxy Server</title><link href="http://www.legendu.net/en/blog/configure-ssh-to-use-a-proxy-server/" rel="alternate"></link><published>2019-03-07T23:42:48-08:00</published><updated>2019-03-07T23:42:48-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-03-07:/en/blog/configure-ssh-to-use-a-proxy-server/</id><summary type="html">&lt;p&gt;Suppose you have a production server that you want to visit via SSH,
however,
it is not accessible directly.
Instead,
you have to visit it from a bastion/proxy server.
You can configure SSH to use the bastion/proxy server when visiting the production server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;production_server&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;ProxyCommand&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;proxy_server …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Suppose you have a production server that you want to visit via SSH,
however,
it is not accessible directly.
Instead,
you have to visit it from a bastion/proxy server.
You can configure SSH to use the bastion/proxy server when visiting the production server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Host&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;production_server&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;ProxyCommand&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;proxy_server&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;

&lt;span class="k"&gt;Host&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;SendEnv&lt;/span&gt; &lt;span class="n"&gt;LANG&lt;/span&gt; &lt;span class="n"&gt;LC_&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;HashKnownHosts&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;GSSAPIAuthentication&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;GSSAPIDelegateCredentials&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="k"&gt;connection&lt;/span&gt; &lt;span class="n"&gt;alive&lt;/span&gt;
&lt;span class="n"&gt;ServerAliveInterval&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;
&lt;span class="n"&gt;ServerAliveCountMax&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Wildcards and NOT operators are supported.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;Host&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="o"&gt;!*&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
    &lt;span class="n"&gt;ProxyCommand&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;proxy_server_address&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;
    &lt;span class="k"&gt;Host&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that you can also specify the proxy to use directly
via the option &lt;code&gt;-o ProxyCommand="ssh proxy_server -W %h:%p"&lt;/code&gt;.
For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;ProxyCommand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;ssh proxy_server -W %h:%p&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;target_server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Linux"></category><category term="SSH"></category><category term="proxy server"></category></entry><entry><title>Proxy for `sudo`</title><link href="http://www.legendu.net/en/blog/proxy-for-sudo/" rel="alternate"></link><published>2019-03-07T23:42:48-08:00</published><updated>2019-03-07T23:42:48-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-03-07:/en/blog/proxy-for-sudo/</id><summary type="html">&lt;p&gt;You can setup proxy in a terminal by export environment variables &lt;code&gt;http_proxy&lt;/code&gt; and `https_proxy'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However,
you might find the exported environment variables are not visible to &lt;code&gt;sudo&lt;/code&gt;.
This can be resovled by simplying adding the &lt;code&gt;-E&lt;/code&gt; (preserve environment) option to &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;You can setup proxy in a terminal by export environment variables &lt;code&gt;http_proxy&lt;/code&gt; and `https_proxy'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proxy_server:port&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However,
you might find the exported environment variables are not visible to &lt;code&gt;sudo&lt;/code&gt;.
This can be resovled by simplying adding the &lt;code&gt;-E&lt;/code&gt; (preserve environment) option to &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo -E command_to_run
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="question"&gt;Question&lt;/h2&gt;
&lt;p&gt;Can a socks proxy be used as a HTTP/HTTPS proxy directly?&lt;/p&gt;</content><category term="Network"></category><category term="proxy"></category><category term="environment variable"></category><category term="sudo"></category></entry><entry><title>Configure Debian Apt Source List</title><link href="http://www.legendu.net/en/blog/configure-debian-sources/" rel="alternate"></link><published>2019-03-07T09:27:00-08:00</published><updated>2019-03-07T09:27:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-03-07:/en/blog/configure-debian-sources/</id><summary type="html">&lt;p&gt;&lt;strong&gt;
Things on this page are
fragmentary and immature notes/thoughts of the author.
It is not meant to readers
but rather for convenient reference of the author and future improvement.
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://debgen.simplylinux.ch/"&gt;Debian Apt Sources List Generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Personally, I prefer stable with backports.
Testing is also good but still update might introduce …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;
Things on this page are
fragmentary and immature notes/thoughts of the author.
It is not meant to readers
but rather for convenient reference of the author and future improvement.
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://debgen.simplylinux.ch/"&gt;Debian Apt Sources List Generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Personally, I prefer stable with backports.
Testing is also good but still update might introduce critial bugs sometimes.
It is not easy to maitainly a stable and update to date balance.
You can certainly use multi-sources,
i.e., use stable, testing, sid and experimental at the same time.
multi-source is much harder to maintain especially when you want to support multi-archi
It is not recommended.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deb http://ftp.us.debian.org/debian stable main contrib non-free
deb-src http://ftp.us.debian.org/debian stable main contrib non-free

deb http://ftp.debian.org/debian/ wheezy-updates main contrib non-free
deb-src http://ftp.debian.org/debian/ wheezy-updates main contrib non-free

deb http://security.debian.org/ wheezy/updates main contrib non-free
deb-src http://security.debian.org/ wheezy/updates main contrib non-free
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# stable&lt;/span&gt;
deb http://ftp.us.debian.org/debian/ stable main contrib non-free
deb-src http://ftp.us.debian.org/debian/ stable main contrib non-free

&lt;span class="c1"&gt;# stable Security&lt;/span&gt;
deb http://security.debian.org/ stable/updates main contrib non-free
deb-src http://security.debian.org/ stable/updates main contrib non-free

&lt;span class="c1"&gt;# stable-updates, previously known as &amp;#39;volatile&amp;#39;&lt;/span&gt;
deb http://ftp.us.debian.org/debian/ stable-updates main contrib non-free
deb-src http://ftp.us.debian.org/debian/ stable-updates main contrib non-free

&lt;span class="c1"&gt;# stable-backports&lt;/span&gt;
deb http://ftp.us.debian.org/debian/ stable-backports main contrib non-free
deb-src http://ftp.us.debian.org/debian/ stable-backports main contrib non-free

&lt;span class="c1"&gt;# testing&lt;/span&gt;
deb http://ftp.us.debian.org/debian/ testing main contrib non-free
deb-src http://ftp.us.debian.org/debian/ testing main contrib non-free

&lt;span class="c1"&gt;# testing Security&lt;/span&gt;
deb http://security.debian.org/ testing/updates main contrib non-free
deb-src http://security.debian.org/ testing/updates main contrib non-free

&lt;span class="c1"&gt;# sid&lt;/span&gt;
deb http://ftp.us.debian.org/debian/ sid main contrib non-free
deb-src http://ftp.us.debian.org/debian/ sid main contrib non-free

&lt;span class="c1"&gt;# experimental&lt;/span&gt;
deb http://ftp.us.debian.org/debian/ experimental main contrib non-free
deb-src http://ftp.us.debian.org/debian/ experimental main contrib non-free
&lt;/pre&gt;&lt;/div&gt;</content><category term="operating system"></category><category term="OS"></category><category term="Linux"></category><category term="Debian"></category><category term="apt-get"></category><category term="apt"></category><category term="source list"></category></entry><entry><title>Ways to Download Files Using Selenium Webdrive</title><link href="http://www.legendu.net/en/blog/ways-to-download-files-using-selenium-webdrive/" rel="alternate"></link><published>2019-02-10T17:14:12-08:00</published><updated>2019-02-10T17:14:12-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-02-10:/en/blog/ways-to-download-files-using-selenium-webdrive/</id><summary type="html">&lt;p&gt;Selenium WebDrive cannot have no control of system Dialog, 
so you have to avoid the Dialog when downloading files using WebDrive.&lt;/p&gt;
&lt;p&gt;The first way is to enable automatical download in the browser
that you use with Seleniu WebDrive. 
So when click a file link, 
the file is automatically downloaded to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Selenium WebDrive cannot have no control of system Dialog, 
so you have to avoid the Dialog when downloading files using WebDrive.&lt;/p&gt;
&lt;p&gt;The first way is to enable automatical download in the browser
that you use with Seleniu WebDrive. 
So when click a file link, 
the file is automatically downloaded to the directory that you set.
The second (and better way) is to export the cookie of the browser,
extract the download link and then use the command &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt; to download it. 
Surely you have to use the cookie with &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;curl&lt;/code&gt; if authentication is required on the web.&lt;/p&gt;</content><category term="Web"></category><category term="WebDrive"></category><category term="automation"></category><category term="Selenium"></category><category term="software"></category></entry><entry><title>Cygwin Ports</title><link href="http://www.legendu.net/en/blog/cygwin-ports/" rel="alternate"></link><published>2019-02-10T13:28:49-08:00</published><updated>2019-02-10T13:28:49-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2019-02-10:/en/blog/cygwin-ports/</id><summary type="html">&lt;p&gt;&lt;a href="http://cygwinports.org/"&gt;Cygwin Ports Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to use a package that is missing in Cygwin 
(especially on the x86_64 version as some packages has not been ported to it yet),
You can install it from 
&lt;a href="https://sourceware.org/cygwinports/"&gt;Cygwin Ports&lt;/a&gt;
following the instruction below if available.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the newest version of Cygwin installtion …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://cygwinports.org/"&gt;Cygwin Ports Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to use a package that is missing in Cygwin 
(especially on the x86_64 version as some packages has not been ported to it yet),
You can install it from 
&lt;a href="https://sourceware.org/cygwinports/"&gt;Cygwin Ports&lt;/a&gt;
following the instruction below if available.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download the newest version of Cygwin installtion program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch the Cygwin installation program with the &lt;code&gt;-K&lt;/code&gt; flag in a Cygwin shell.
    For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cygstart&lt;/span&gt; &lt;span class="c1"&gt;-- /path/to/setup-x86.exe -K http://cygwinports.org/ports.gpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the "Choose Installation Type" page, 
    select "Install from Internet".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the "Choose Download Site(s)" page, 
    select a distro mirror, 
    then enter &lt;a href="ftp://ftp.cygwinports.org/pub/cygwinports"&gt;ftp://ftp.cygwinports.org/pub/cygwinports&lt;/a&gt; 
    in the User URL field and press Add (making sure that both are highlighted).
    You can just select the download site and proceed with it if you have added it before.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Proceed with package selection and installation, 
    making sure to install any indicated dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Linux"></category><category term="Windows"></category><category term="virtualization"></category><category term="software"></category><category term="Cygwin"></category><category term="ports"></category></entry><entry><title>Map Keys in Mac</title><link href="http://www.legendu.net/en/blog/map-keys-in-mac/" rel="alternate"></link><published>2018-01-26T07:30:03-08:00</published><updated>2018-01-26T07:30:03-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-01-26:/en/blog/map-keys-in-mac/</id><summary type="html">&lt;p&gt;Update: As of MacOS Sierra 10.12.1,
the remapping of &lt;code&gt;Caps Lock&lt;/code&gt; to &lt;code&gt;Escape&lt;/code&gt; can be done natively in the Keyboard System Preferences pane.
Follow the steps below to remap Caps Lock to Escape (without relying on 3rd party software).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open System Preferences and click on &lt;code&gt;Keyboard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Update: As of MacOS Sierra 10.12.1,
the remapping of &lt;code&gt;Caps Lock&lt;/code&gt; to &lt;code&gt;Escape&lt;/code&gt; can be done natively in the Keyboard System Preferences pane.
Follow the steps below to remap Caps Lock to Escape (without relying on 3rd party software).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open System Preferences and click on &lt;code&gt;Keyboard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Modifier Keys...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;For &lt;code&gt;Caps Lock Key&lt;/code&gt;, choose &lt;code&gt;Escape&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="the-old-way-of-using-seil"&gt;The Old Way of Using Seil&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://pqrs.org/osx/karabiner/seil.html.en"&gt;Seil&lt;/a&gt;
(previouly known as PCKeyboardHack) is great tool for mapping keys on Mac.
Let me illustrate how to use &lt;code&gt;Seil&lt;/code&gt;.
As a heavy Vim user,
I find it is necessary to swap the &lt;code&gt;Caps Lock&lt;/code&gt; key with the &lt;code&gt;Escape&lt;/code&gt; key.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Change the behavior of Map Caps Lock Key to No Action on Mac.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open &lt;code&gt;System Preferences&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Keyboard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Modifier Keys...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;Caps Lock Key&lt;/code&gt; to &lt;code&gt;No Action&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map the behavior of Caps Lock key to the Escape key using &lt;code&gt;Seil&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &lt;code&gt;Change the caps lock key&lt;/code&gt; in &lt;code&gt;Seil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;Change the caps lock key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fill 53 (keycode of Escape) in the keycode text box&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Map the behavior of the Escape key to the Caps key using &lt;code&gt;Seil&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click on &lt;code&gt;Other keys&lt;/code&gt; in &lt;code&gt;Seil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;Change Escape&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;fill 57 (keycode of the Caps Lock key) in the keycode text box.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Mac"></category><category term="Apple"></category><category term="macOS"></category><category term="mapping"></category><category term="keys"></category><category term="Seil"></category></entry><entry><title>How Long Does It Take to Observe a Sequence?</title><link href="http://www.legendu.net/en/blog/how-long-observe-pattern/" rel="alternate"></link><published>2018-01-04T02:30:19-08:00</published><updated>2018-01-04T02:30:19-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-01-04:/en/blog/how-long-observe-pattern/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are many interesting while at the same time very tricky problems in
statistics. One famous question is that how many steps (expected) does
it take to observe a given sequence (e.g. THTH, TTHH), if we flip a
balanced coin?&lt;/p&gt;
&lt;p&gt;This problem can be solved using (delay) renewal theory …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are many interesting while at the same time very tricky problems in
statistics. One famous question is that how many steps (expected) does
it take to observe a given sequence (e.g. THTH, TTHH), if we flip a
balanced coin?&lt;/p&gt;
&lt;p&gt;This problem can be solved using (delay) renewal theory or martingales.
These two methods are well explained in stochastic processes text books
(e.g. Stochastic Processes, S. M. Ross), so I will not explain them here. 
I implemented an algorithm base on martingales in Mathematica. 
It can deal with all this kind of problems, no matter how
long the pattern to be observed is and no matter which discrete distribution
is specified for the sample space. The following are some running results in
Mathematica.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;pat1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;pat2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pat1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;16&lt;/span&gt;
&lt;span class="n"&gt;PatternExpectedTime&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pat2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some people might be shock by the above results, because they either think
that the result should be the same, or they think that the expected time for
patter "HTHT" to occur should be smaller. Notice that pattern "HTHT" has a
duplicated structure which is the reason make it harder to occur. To be clearer,
we know that a random sequence generated by flipping a coin n times won't have
a big chance to have either too many or too few runs. Duplicated structures
usually result in too many runs in sequence, e.g. "HTHT" has four runs which
is the biggest run we can have in a sequence of length 4, so it would take more
time on average for "HTHT" to come out.&lt;/p&gt;
&lt;p&gt;Here are &lt;a href="http://dclong.github.io/media/pattern/pattern-time-examples.pdf"&gt;more examples and results&lt;/a&gt; of the &lt;a href="http://dclong.github.io/media/pattern/pattern.cdf"&gt;code&lt;/a&gt;.
You need either Mathematica or CDF player to open the code.
For you convenience, the code is also presented below. 
Notice that the code also contains a function for calculating the probability for a 
pattern to come out before other patterns. 
For a more detail description about this interesting problem see my post 
&lt;a href="http://dclong.github.io/en/blog/best-strategy/"&gt;Which One Is the Best Strategy?&lt;/a&gt; and
&lt;a href="http://dclong.github.io/en/blog/best-strategy-2/"&gt;Which One Is the Best Strategy? (continued)&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nprob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;All element of `1` are negative.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;ndist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;The sum of `1` is greater than 1.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;sp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;The sample space `1` has duplicated element(s).&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nmatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;The length of `1` does not match the length of `2`.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;[&lt;span class="nv"&gt;pattern_&lt;/span&gt;, &lt;span class="nv"&gt;samspace_&lt;/span&gt;, &lt;span class="nv"&gt;prob_&lt;/span&gt;: &lt;span class="nv"&gt;Null&lt;/span&gt;, &lt;span class="nv"&gt;padj_&lt;/span&gt;: &lt;span class="nv"&gt;True&lt;/span&gt;] :&lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;algorithm&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;based&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;martingales&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;pattern&lt;/span&gt;: &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt; &lt;span class="nv"&gt;defining&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;pattern&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;observed&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;samspace&lt;/span&gt;: &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt; &lt;span class="nv"&gt;defining&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;sample&lt;/span&gt; &lt;span class="nv"&gt;space&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;prob&lt;/span&gt;: &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt; &lt;span class="nv"&gt;defining&lt;/span&gt; &lt;span class="nv"&gt;probabilites&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;padj&lt;/span&gt;: &lt;span class="nv"&gt;logical&lt;/span&gt;, &lt;span class="nv"&gt;whether&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;auto&lt;/span&gt; &lt;span class="nv"&gt;adjust&lt;/span&gt; &lt;span class="nv"&gt;argument&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;make&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;sum&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;Module&lt;/span&gt;[{&lt;span class="nv"&gt;nsample&lt;/span&gt;, &lt;span class="nv"&gt;npattern&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;ResultProb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {}, &lt;span class="nv"&gt;temp&lt;/span&gt;, &lt;span class="nv"&gt;expect&lt;/span&gt;, &lt;span class="nv"&gt;probs&lt;/span&gt;},
    &lt;span class="nv"&gt;nsample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;DeleteDuplicates&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;]] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nsample,&lt;/span&gt;
        &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;sp&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Return&lt;/span&gt;[]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;Null&lt;/span&gt;,
    &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nsample&lt;/span&gt;, {&lt;span class="nv"&gt;nsample&lt;/span&gt;}],
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;nsample&lt;/span&gt;,
        &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nmatch&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Return&lt;/span&gt;[]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Min&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; 0,&lt;/span&gt;
    &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nprob&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;Return&lt;/span&gt;[]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;padj&lt;/span&gt;,
        &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;],
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; 1,&lt;/span&gt;
          &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;ndist&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;Return&lt;/span&gt;[],
          &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt;
          ]&lt;span class="c1"&gt;;&lt;/span&gt;
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;following&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;core&lt;/span&gt; &lt;span class="nv"&gt;algorithm&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;npattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;pattern&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npattern, i++,&lt;/span&gt;
        &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;ResultProb&lt;/span&gt;, 
        &lt;span class="nv"&gt;probs&lt;/span&gt;[[&lt;span class="nv"&gt;Flatten&lt;/span&gt;[&lt;span class="nv"&gt;Position&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;, &lt;span class="nv"&gt;pattern&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]]]][[&lt;span class="mi"&gt;1&lt;/span&gt;]]]]]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;npattern&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npattern, i++,&lt;/span&gt;
        &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npattern, j++,&lt;/span&gt;
            &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;pattern&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;pattern&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]],
                &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ResultProb&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]],
                &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;Break&lt;/span&gt;[]
            ]
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;Return&lt;/span&gt;[&lt;span class="nv"&gt;expect&lt;/span&gt;]
]

&lt;span class="nv"&gt;PatternAdditionalExpectedTime&lt;/span&gt;[&lt;span class="nv"&gt;pat_&lt;/span&gt;, &lt;span class="nv"&gt;gpat_&lt;/span&gt;, &lt;span class="nv"&gt;samspace_&lt;/span&gt;, &lt;span class="nv"&gt;prob_&lt;/span&gt;: &lt;span class="nv"&gt;Null&lt;/span&gt;, &lt;span class="nv"&gt;padj_&lt;/span&gt;: &lt;span class="nv"&gt;True&lt;/span&gt;] :&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;calculate&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;expected&lt;/span&gt; &lt;span class="nv"&gt;time&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;pat&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;occur&lt;/span&gt; \
&lt;span class="nv"&gt;given&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;gpat&lt;/span&gt; &lt;span class="nv"&gt;already&lt;/span&gt; &lt;span class="nv"&gt;occurs&lt;/span&gt;,
&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;s essentially based on the function PatternExpectedTime[]*)&lt;/span&gt;
&lt;span class="nv"&gt;Module&lt;/span&gt;[{&lt;span class="nv"&gt;npat&lt;/span&gt;, &lt;span class="nv"&gt;ngpat&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;count&lt;/span&gt;, &lt;span class="nv"&gt;win&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {}, &lt;span class="nv"&gt;temp&lt;/span&gt;, &lt;span class="nv"&gt;nsample&lt;/span&gt;, &lt;span class="nv"&gt;probs&lt;/span&gt;},
    &lt;span class="nv"&gt;nsample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;DeleteDuplicates&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;]] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nsample,&lt;/span&gt;
        &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;sp&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Return&lt;/span&gt;[]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;Null&lt;/span&gt;,
        &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nsample&lt;/span&gt;, {&lt;span class="nv"&gt;nsample&lt;/span&gt;}],
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;nsample&lt;/span&gt;,
            &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nmatch&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;Return&lt;/span&gt;[]
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Min&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; 0,&lt;/span&gt;
            &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nprob&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;Return&lt;/span&gt;[]
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;padj&lt;/span&gt;,
            &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;],
            &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; 1,&lt;/span&gt;
                &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;ndist&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;Return&lt;/span&gt;[],
                &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt;
            ]&lt;span class="c1"&gt;;&lt;/span&gt;
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;npat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;pat&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;ngpat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;gpat&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ngpat&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;npat&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;;= 1,&lt;/span&gt;
        &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npat, i++,&lt;/span&gt;
            &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; &lt;span class="nv"&gt;probs&lt;/span&gt;[[&lt;span class="nv"&gt;Flatten&lt;/span&gt;[&lt;span class="nv"&gt;Position&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;, &lt;span class="nv"&gt;pat&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]]]][[&lt;span class="mi"&gt;1&lt;/span&gt;]]]]
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= count, i++,&lt;/span&gt;
            &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npat, j++,&lt;/span&gt;
                &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;gpat&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]] &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;pat&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]],
                    &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;win&lt;/span&gt;, &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
                    &lt;span class="nv"&gt;Goto&lt;/span&gt;[&lt;span class="k"&gt;next&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
                ]&lt;span class="c1"&gt;;&lt;/span&gt;
            ]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;win&lt;/span&gt;, &lt;span class="nv"&gt;temp&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;Label&lt;/span&gt;[&lt;span class="k"&gt;next&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Max&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= ngpat, i++,&lt;/span&gt;
        &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= ngpat, j++,&lt;/span&gt;
            &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;gpat&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]] &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;pat&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]],
                &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;/=&lt;/span&gt; 
                &lt;span class="nv"&gt;probs&lt;/span&gt;[[&lt;span class="nv"&gt;Flatten&lt;/span&gt;[&lt;span class="nv"&gt;Position&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;, &lt;span class="nv"&gt;pat&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]]]][[&lt;span class="mi"&gt;1&lt;/span&gt;]]]],
                &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;Break&lt;/span&gt;[]&lt;span class="c1"&gt;;&lt;/span&gt;
            ]&lt;span class="c1"&gt;;&lt;/span&gt;
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;win&lt;/span&gt;, &lt;span class="nv"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;win&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;win&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;[&lt;span class="nv"&gt;pat&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;, &lt;span class="nv"&gt;probs&lt;/span&gt;, &lt;span class="nv"&gt;padj&lt;/span&gt;] &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;win&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;ngpat&lt;/span&gt;
]

&lt;span class="nv"&gt;PatternFirstComeOutProbability&lt;/span&gt;::&lt;span class="nv"&gt;patnum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Argument `1` requires 2 or more elements.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;PatternFirstComeOutProbability&lt;/span&gt;[&lt;span class="nv"&gt;patterns_&lt;/span&gt;, &lt;span class="nv"&gt;samspace_&lt;/span&gt;, &lt;span class="nv"&gt;prob_&lt;/span&gt;: &lt;span class="nv"&gt;Null&lt;/span&gt;, &lt;span class="nv"&gt;padj_&lt;/span&gt;: &lt;span class="nv"&gt;True&lt;/span&gt;] :&lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="nv"&gt;Module&lt;/span&gt;[{&lt;span class="nv"&gt;npat&lt;/span&gt;, &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {}, &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {}, &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {}, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;nsample&lt;/span&gt;, &lt;span class="nv"&gt;probs&lt;/span&gt;},
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;patterns&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;contains&lt;/span&gt; &lt;span class="nv"&gt;patterns&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;compared&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;dist&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;list&lt;/span&gt; &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;specifies&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;discrete&lt;/span&gt; &lt;span class="nv"&gt;distribution&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;npat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;patterns&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;npat&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; 2,&lt;/span&gt;
        &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternFirstComeOutProbability&lt;/span&gt;::&lt;span class="nv"&gt;patnum&lt;/span&gt;, &lt;span class="nv"&gt;patterns&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Return&lt;/span&gt;[]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;nsample&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;DeleteDuplicates&lt;/span&gt;[&lt;span class="nv"&gt;samspace&lt;/span&gt;]] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nsample,&lt;/span&gt;
        &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;sp&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;Return&lt;/span&gt;[]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;Null&lt;/span&gt;,
        &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nsample&lt;/span&gt;, {&lt;span class="nv"&gt;nsample&lt;/span&gt;}],
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;nsample&lt;/span&gt;,
            &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nmatch&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;, &lt;span class="nv"&gt;samspace&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;Return&lt;/span&gt;[]
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Min&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; 0,&lt;/span&gt;
            &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;nprob&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;Return&lt;/span&gt;[]
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;padj&lt;/span&gt;,
            &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;],
            &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Total&lt;/span&gt;[&lt;span class="nv"&gt;prob&lt;/span&gt;] &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; 1,&lt;/span&gt;
                &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;::&lt;span class="nv"&gt;ndist&lt;/span&gt;, &lt;span class="nv"&gt;prob&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;Return&lt;/span&gt;[],
                &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;prob&lt;/span&gt;
            ]&lt;span class="c1"&gt;;&lt;/span&gt;
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;, {&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;npat&lt;/span&gt;}, {&lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;npat&lt;/span&gt;}]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npat, i++,&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npat, j++,&lt;/span&gt;
            &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="k"&gt;Continue&lt;/span&gt;[]]&lt;span class="c1"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;A&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt;]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;PatternAdditionalExpectedTime&lt;/span&gt;[&lt;span class="nv"&gt;patterns&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]], &lt;span class="nv"&gt;patterns&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]], &lt;span class="nv"&gt;samspace&lt;/span&gt;, &lt;span class="nv"&gt;probs&lt;/span&gt;, &lt;span class="nv"&gt;padj&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
            ]&lt;span class="c1"&gt;;&lt;/span&gt;
        ]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Join&lt;/span&gt;[&lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;, {&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;npat&lt;/span&gt;}, {&lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;}], &lt;span class="nv"&gt;A&lt;/span&gt;, &lt;span class="mi"&gt;2&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;, {&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;npat&lt;/span&gt;}]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;PrependTo&lt;/span&gt;[&lt;span class="nv"&gt;row&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;A&lt;/span&gt;, &lt;span class="nv"&gt;row&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= npat, i++,&lt;/span&gt;
            &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;b&lt;/span&gt;, 
            &lt;span class="nv"&gt;PatternExpectedTime&lt;/span&gt;[&lt;span class="nv"&gt;patterns&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]], &lt;span class="nv"&gt;samspace&lt;/span&gt;, &lt;span class="nv"&gt;probs&lt;/span&gt;, &lt;span class="nv"&gt;padj&lt;/span&gt;]
        ]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;b&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;Return&lt;/span&gt;[&lt;span class="nv"&gt;LinearSolve&lt;/span&gt;[&lt;span class="nv"&gt;A&lt;/span&gt;, &lt;span class="nv"&gt;b&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
]
&lt;/pre&gt;&lt;/div&gt;</content><category term="Mathematica"></category><category term="pattern"></category><category term="Markov chain"></category><category term="statistics"></category><category term="sequence"></category><category term="coin"></category><category term="stochastic"></category><category term="martingale"></category><category term="fun problems"></category></entry><entry><title>Select Columns from Structured Text Files</title><link href="http://www.legendu.net/en/blog/select-columns-from-structured-text-files/" rel="alternate"></link><published>2018-01-01T16:15:21-08:00</published><updated>2018-01-01T16:15:21-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2018-01-01:/en/blog/select-columns-from-structured-text-files/</id><summary type="html">&lt;h2 id="python-pandas"&gt;Python pandas&lt;/h2&gt;
&lt;p&gt;My first choice is pandas in Python. 
However, 
below are some tools for quick and dirty solutions.&lt;/p&gt;
&lt;h2 id="q"&gt;&lt;a href="https://github.com/harelba/q"&gt;q&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -t -H &lt;span class="s1"&gt;&amp;#39;select c1, c3 from file.txt&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="cut"&gt;cut&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cut -d&lt;span class="se"&gt;\t&lt;/span&gt; -f1,3 file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="awk"&gt;awk&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;awk -F&lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $1 &amp;quot;\t&amp;quot; $3}&amp;#39;&lt;/span&gt; file.tsv 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: neither &lt;code&gt;cut …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h2 id="python-pandas"&gt;Python pandas&lt;/h2&gt;
&lt;p&gt;My first choice is pandas in Python. 
However, 
below are some tools for quick and dirty solutions.&lt;/p&gt;
&lt;h2 id="q"&gt;&lt;a href="https://github.com/harelba/q"&gt;q&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -t -H &lt;span class="s1"&gt;&amp;#39;select c1, c3 from file.txt&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="cut"&gt;cut&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cut -d&lt;span class="se"&gt;\t&lt;/span&gt; -f1,3 file.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="awk"&gt;awk&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;awk -F&lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $1 &amp;quot;\t&amp;quot; $3}&amp;#39;&lt;/span&gt; file.tsv 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note: neither &lt;code&gt;cut&lt;/code&gt; nor &lt;code&gt;awk&lt;/code&gt; honors escaped characters.
For working on complicated structured text files, 
pandas in Python is a much better solution.&lt;/p&gt;</content><category term="programming"></category><category term="Python"></category><category term="pandas"></category><category term="SQL"></category><category term="awk"></category><category term="cut"></category><category term="text file"></category><category term="data manipulation"></category><category term="column"></category><category term="field"></category></entry><entry><title>Jupyter Notebook Support in Bitbucket</title><link href="http://www.legendu.net/en/blog/jupyter-notebook-support-in-bitbucket/" rel="alternate"></link><published>2017-12-19T23:34:17-08:00</published><updated>2017-12-19T23:34:17-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-12-19:/en/blog/jupyter-notebook-support-in-bitbucket/</id><summary type="html">&lt;p&gt;GitHub has built-in support for Jupyter Notebooks. 
Bitbucket supports Jupyter Notebooks via a fileview addon. 
It works on both publick and private notebooks.
Follow the steps below to install the addon.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on your avatar in the lower left corner on your homepage of Bitbucket.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the option &lt;code&gt;App marketplace …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;GitHub has built-in support for Jupyter Notebooks. 
Bitbucket supports Jupyter Notebooks via a fileview addon. 
It works on both publick and private notebooks.
Follow the steps below to install the addon.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on your avatar in the lower left corner on your homepage of Bitbucket.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the option &lt;code&gt;App marketplace&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Find the addon &lt;code&gt;Notebook Viewer&lt;/code&gt; in the listings. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the addon &lt;code&gt;Notebook Viewer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open a notebook in one of your Bitbucket repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Default file viwer&lt;/code&gt; (to the left of the button Edit) and select &lt;code&gt;IPython Viwer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bitbucket.org/site/master/issues/11318/enable-rich-rendering-of-jupyter-notebooks"&gt;https://bitbucket.org/site/master/issues/11318/enable-rich-rendering-of-jupyter-notebooks&lt;/a&gt;&lt;/p&gt;</content><category term="programming"></category><category term="Bitbucket"></category><category term="Jupyter Notebook"></category><category term="JupyterLab"></category><category term="software"></category><category term="GitHub"></category></entry><entry><title>Speedup Docker Pulling and Pushing</title><link href="http://www.legendu.net/en/blog/speedup-docker-pulling-and-pushing/" rel="alternate"></link><published>2017-11-29T20:28:31-08:00</published><updated>2017-11-29T20:28:31-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-11-29:/en/blog/speedup-docker-pulling-and-pushing/</id><summary type="html">&lt;p&gt;Pulling/pushing Docker images is extremely slow in China. 
There are a few ways to speed up docker pulling/pushing in China.&lt;/p&gt;
&lt;h2 id="using-the-official-china-mirror"&gt;Using the Official China Mirror&lt;/h2&gt;
&lt;p&gt;Now the best way is to use the offical China mirror.
Please refer to 
&lt;a href="https://www.docker-cn.com/registry-mirror"&gt;Docker 中国官方镜像加速&lt;/a&gt;
for details.
You have to restart the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pulling/pushing Docker images is extremely slow in China. 
There are a few ways to speed up docker pulling/pushing in China.&lt;/p&gt;
&lt;h2 id="using-the-official-china-mirror"&gt;Using the Official China Mirror&lt;/h2&gt;
&lt;p&gt;Now the best way is to use the offical China mirror.
Please refer to 
&lt;a href="https://www.docker-cn.com/registry-mirror"&gt;Docker 中国官方镜像加速&lt;/a&gt;
for details.
You have to restart the Docker daemon in order for the configuration to take effect.
If you are Ubuntu, 
then you can use the following command to restart the daemon.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="k"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="old-way"&gt;Old Way&lt;/h2&gt;
&lt;p&gt;One way to speedup Docker visiting is to use &lt;a href="https://www.daocloud.io/"&gt;DaoCloud&lt;/a&gt; as a proxy.
All you have to do is simply adding the following line into the file &lt;code&gt;/etc/default/docker&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DOCKER_OPTS=&amp;quot;--registry-mirror=&amp;#39;http://a92c904a.m.daocloud.io&amp;#39;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Please refer to &lt;a href="https://www.daocloud.io/mirror#accelerator-doc"&gt;https://www.daocloud.io/mirror#accelerator-doc&lt;/a&gt; for more details.&lt;/p&gt;</content><category term="software"></category><category term="Docker"></category><category term="speedup"></category><category term="performance"></category><category term="DaoCloud"></category></entry><entry><title>Make Your Life Easier with Portable Applications</title><link href="http://www.legendu.net/en/blog/portable-apps/" rel="alternate"></link><published>2017-11-18T09:51:49-08:00</published><updated>2017-11-18T09:51:49-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-11-18:/en/blog/portable-apps/</id><summary type="html">&lt;p&gt;Using portable applications is a good way to make your digital life easier. 
They do not eat up your disk quickly nor do they mess up the registry of your Windows OS.
You can always copy these applications from one computer to another and use it out of box.
Or …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using portable applications is a good way to make your digital life easier. 
They do not eat up your disk quickly nor do they mess up the registry of your Windows OS.
You can always copy these applications from one computer to another and use it out of box.
Or you can install portable applications on a flash drive 
and use it on any computer with a Windows OS.
&lt;a href="http://www.portableapps.com/"&gt;PortableApps&lt;/a&gt; offers all kinds of portable apps.
What is better is that it also offers a plotform 
which integrate many functionalities together 
such as installing portable apps (directly from the repository), 
updating portable apps, 
searching for installed apps, etc.
There is also a &lt;a href="http://www.portableappc.com/"&gt;Chinese website&lt;/a&gt; 
whcih offers portable apps with Chinese characteristics 
that are compatible with the PortableApps platform. &lt;/p&gt;
&lt;p&gt;There are some software that I use often 
but is not support offically by PortableApps yet.
For example, Cygwin and Python.
There is a good portable version of Cygwin named 
&lt;a href="https://github.com/CybeSystems/CygwinPortable"&gt;CygwinPortable&lt;/a&gt;
on GitHub.
It uses ConEmu for the console which supports multi-tabs 
and can also be used as Windows command prompt. 
CygwinPortable also allows you to create users and define the default user, 
which is very convenient.
Another advantage of CygwinPortable 
(over &lt;a href="http://mobaxterm.mobatek.net/"&gt;MobaXterm&lt;/a&gt; and other portable version of Cygwin)
is that it has built-in Python suppport,
which makes Vim and other software installed on it Python-supported.
Though CygwinPortable has built-in Python support, 
the Python coming with it has limitations due to library dependencies.
For example, 
some Python packages such as FuzzyWuzzy and NLTK fails to work in CygwinPortable.
&lt;a href="http://portablepython.com/"&gt;Anaconda Python&lt;/a&gt; is great portable distribution of Python.
It comes with many popular Python packages 
such as NumPy, SciPy, Matplotlib, PIL, PyQt, etc.
and also code editors such as PyCharm, PyScripter and IDLE.&lt;/p&gt;</content><category term="application"></category><category term="Chinese"></category><category term="software"></category><category term="portable"></category><category term="apps"></category><category term="CygwinPortable"></category><category term="Portable Python"></category></entry><entry><title>Schedule Task Using Crontab in Linux</title><link href="http://www.legendu.net/en/blog/schedule-task-using-crontab-in-linux/" rel="alternate"></link><published>2017-11-12T11:31:51-08:00</published><updated>2017-11-12T11:31:51-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-11-12:/en/blog/schedule-task-using-crontab-in-linux/</id><summary type="html">&lt;p&gt;The information of scheuled tasks are saved in the file &lt;code&gt;/etc/crontab&lt;/code&gt;. 
It contains scheduled tasks of all users.
Though you can schedule tasks by editing the file directly,
you'd better not.
It is suggested that you use the command &lt;code&gt;crontab -e&lt;/code&gt; to schedule tasks.
There are 6 fields that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The information of scheuled tasks are saved in the file &lt;code&gt;/etc/crontab&lt;/code&gt;. 
It contains scheduled tasks of all users.
Though you can schedule tasks by editing the file directly,
you'd better not.
It is suggested that you use the command &lt;code&gt;crontab -e&lt;/code&gt; to schedule tasks.
There are 6 fields that you need to fill for a task to be schedule: 
&lt;code&gt;m&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;dom&lt;/code&gt;, &lt;code&gt;mon&lt;/code&gt;, &lt;code&gt;dow&lt;/code&gt; and &lt;code&gt;command&lt;/code&gt;,
which stand for &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;day of month&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day of week&lt;/code&gt;.
The graph below shows possible values for each field.
shortened name 
Notice that abbreviations of days (MON, TUE, etc.) can be used for the field &lt;code&gt;dow&lt;/code&gt;.
For example &lt;code&gt;SUN,MON,THU&lt;/code&gt; for (day of week) 
will exectute the command on Sundays, Mondays on Thursdays.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="err"&gt;┌──────────&lt;/span&gt; &lt;span class="n"&gt;minute&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;┌────────&lt;/span&gt; &lt;span class="n"&gt;hour&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;┌──────&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;┌────&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;┌──&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;week&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Sunday&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Saturday&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt;
 &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt; &lt;span class="err"&gt;│&lt;/span&gt;                &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Monday&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Sunday&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="err"&gt;↓&lt;/span&gt; &lt;span class="err"&gt;↓&lt;/span&gt; &lt;span class="err"&gt;↓&lt;/span&gt; &lt;span class="err"&gt;↓&lt;/span&gt; &lt;span class="err"&gt;↓&lt;/span&gt;
 &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;executed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and &lt;code&gt;command&lt;/code&gt; respectively. 
An alternative way is to save the information of a scheduled task in a file (e.g. 'task.txt'),
and then run the command &lt;code&gt;crontab task.txt&lt;/code&gt; to import it.
To list all scheduled tasks, 
run the command &lt;code&gt;crontab -l&lt;/code&gt;.
To remove a sheduled task,
use the command &lt;code&gt;crontab -r&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As long as you use the &lt;code&gt;crontab&lt;/code&gt; commands to edit the file &lt;code&gt;/etc/crontab&lt;/code&gt;,
you do NOT have to restart &lt;code&gt;cron&lt;/code&gt;.
&lt;code&gt;cron&lt;/code&gt; will automatically reload tasks that were changed.
The log of cron jobs can be found at 
&lt;code&gt;/var/log/syslog&lt;/code&gt; (Ubuntu) or &lt;code&gt;/var/log/cron&lt;/code&gt; (CentOS).
If you do not have read permission to the log files, 
you can redict the standard output and error messages of a cron job when you schedule it. 
Please find an example below.&lt;/p&gt;
&lt;h2 id="start-a-crontab-service-on-ubuntu"&gt;Start a Crontab Service on Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;start&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="k"&gt;start&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt; 
&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;
&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="cron-job-examples"&gt;Cron Job Examples&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run the command &lt;code&gt;duplicity.lbp&lt;/code&gt; at 03:00 every Thursday. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="n"&gt;duplicity&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lbp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the command &lt;code&gt;rsnapshot daily&lt;/code&gt; daily at 22:00. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;22&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="n"&gt;rsnapshot&lt;/span&gt; &lt;span class="n"&gt;daily&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the command &lt;code&gt;rsnapshot daily&lt;/code&gt; hourly at the 5th minutes,
    and redict standard output and error messages to &lt;code&gt;/home/dclong/cron.log&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="o"&gt;*&lt;/span&gt;   &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="o"&gt;*&lt;/span&gt;     &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cron&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="scheduling-tips"&gt;Scheduling Tips&lt;/h2&gt;
&lt;p&gt;You can schedule more frequently in crontab 
and then reduce the running frequency of the application in your scripts.
Below is an example in Bash shell.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; [[ $&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;date&lt;/span&gt; &lt;span class="o"&gt;+%&lt;/span&gt;&lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;$ ]]&lt;span class="c1"&gt;; then&lt;/span&gt;
    ...
&lt;span class="nv"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="check-crontab-logs"&gt;Check Crontab Logs&lt;/h2&gt;
&lt;p&gt;You can use the following command to check crontab logs on Ubuntu.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syslog&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;cron&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="crontab-vs-airflow"&gt;Crontab vs AirFlow&lt;/h2&gt;
&lt;p&gt;Crontab is great for simple scheduling requests. 
For complicated scheduling with many dependencies you probably want to go with AirFlow.&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;https://stackoverflow.com/questions/18919151/crontab-day-of-the-week-syntax&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://askubuntu.com/questions/56683/where-is-the-cron-crontab-log&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="task"></category><category term="crontab"></category><category term="schedule"></category><category term="linux"></category><category term="scheduling"></category><category term="AirFlow"></category></entry><entry><title>Print Rows from a Text File</title><link href="http://www.legendu.net/en/blog/print-rows-from-a-text-file/" rel="alternate"></link><published>2017-11-01T23:51:11-07:00</published><updated>2017-11-01T23:51:11-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-11-01:/en/blog/print-rows-from-a-text-file/</id><summary type="html">&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/advanced-use-head-tail/"&gt;Advanced Use of "head" and "tail"&lt;/a&gt;
on how to use &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; for printing rows from a text file.
These 2 commands are convenient when you want to take head/tail rows. 
If you want to take middle rows of a file,
better ways exists using …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Please refer to 
&lt;a href="http://www.legendu.net/en/blog/advanced-use-head-tail/"&gt;Advanced Use of "head" and "tail"&lt;/a&gt;
on how to use &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; for printing rows from a text file.
These 2 commands are convenient when you want to take head/tail rows. 
If you want to take middle rows of a file,
better ways exists using &lt;code&gt;sed&lt;/code&gt; and &lt;code&gt;awk&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# print lines 10 to 20 using sed&lt;/span&gt;
sed -n &lt;span class="s1"&gt;&amp;#39;10,20p&amp;#39;&lt;/span&gt; filename
&lt;span class="c1"&gt;# print lines 10 to 20 using awk&lt;/span&gt;
awk &lt;span class="s1"&gt;&amp;#39;NR &amp;gt;= 10 &amp;amp;&amp;amp; NR &amp;lt;= 20&amp;#39;&lt;/span&gt; file_name
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you work with a very large file, 
you make the &lt;code&gt;sed&lt;/code&gt; command a little bit more efficient by quitting ealier. 
For example, 
the following command efficiently prints lines 10000000 to 10000020 of the file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -n &lt;span class="s1"&gt;&amp;#39;10000000,10000020p; 10000021q&amp;#39;&lt;/span&gt; file_name 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thi way is faster than &lt;code&gt;awk&lt;/code&gt; (but slower without the quitting early trick) on large files.&lt;/p&gt;</content><category term="Linux"></category><category term="shell"></category><category term="command line"></category><category term="head"></category><category term="tail"></category><category term="sed"></category><category term="awk"></category><category term="rows"></category><category term="lines"></category><category term="text manipulation"></category></entry><entry><title>Sample Lines from a File Using Command Line</title><link href="http://www.legendu.net/en/blog/sample-lines-from-a-file-using-command-line/" rel="alternate"></link><published>2017-10-28T10:52:36-07:00</published><updated>2017-10-28T10:52:36-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-10-28:/en/blog/sample-lines-from-a-file-using-command-line/</id><summary type="html">&lt;p&gt;NOTE: the article talks about sampling "lines" rather than "records". 
If a records can occupy multiple lines, 
e.g., if any field contains a new line (&lt;code&gt;\n&lt;/code&gt;),
the following tutorial does not work 
and you have to fall back to more powerful tools such as Python or R.&lt;/p&gt;
&lt;p&gt;Let's say …&lt;/p&gt;</summary><content type="html">&lt;p&gt;NOTE: the article talks about sampling "lines" rather than "records". 
If a records can occupy multiple lines, 
e.g., if any field contains a new line (&lt;code&gt;\n&lt;/code&gt;),
the following tutorial does not work 
and you have to fall back to more powerful tools such as Python or R.&lt;/p&gt;
&lt;p&gt;Let's say that you want sample 500 lines (without replacement) from a file.
This can be done easily using a scraping language such as R or Python. 
However, if samling lines is all you have to do,
it is much faster to do it in shell. 
While there are many command lines tools you can use, 
the one I found to be elegantest is 'shuf'.
&lt;code&gt;shuf&lt;/code&gt; permuates lines of a file. 
If you want to sample 500 lines, 
then you you just have to keep the first 500 shuffled lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;shuf -n &lt;span class="m"&gt;500&lt;/span&gt; file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is a little more work if the file contains a header line
and you want to keep the header line and sample from the rest lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# keep the header&lt;/span&gt;
head -n &lt;span class="m"&gt;1&lt;/span&gt; file &amp;gt; sample_500
&lt;span class="c1"&gt;# sample from the rest line and append to sample_500&lt;/span&gt;
tail -n +2 file &lt;span class="p"&gt;|&lt;/span&gt; shuf -n &lt;span class="m"&gt;500&lt;/span&gt; &amp;gt;&amp;gt; sample_500
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is another tool named &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;
for performing SQL operations on structured text files. 
If the text file is structured,
then task can be done even easier with &lt;code&gt;q&lt;/code&gt;.
Assume the text file is tab delimited and has a header, 
then you can use the following command to sample 500 lines from it.
The option &lt;code&gt;-O&lt;/code&gt; outputs the header also.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;q -t -H -O &lt;span class="s1"&gt;&amp;#39;select * from file order by random() limit 500&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;q&lt;/code&gt; can be installed with the command below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Even thougt I'm Linux fan, 
I'm a practical Linux fan 
not liking some enthusiasium of Linux 
who broadcasting about solving every probelm using command line.
If there is a simple and elegant command line tool to get your work done,
then use it. 
Otherwise, instead of cooking up a weird, unreadable, anti-human shell command, 
R or Python is a much better choice.&lt;/p&gt;</content><category term="Linux"></category><category term="shell"></category><category term="command line"></category><category term="sample"></category><category term="shuffle"></category><category term="shuf"></category><category term="q"></category><category term="text"></category><category term="SQL"></category></entry><entry><title>Install GNU Utils Using Homebrew</title><link href="http://www.legendu.net/en/blog/install-gnu-utils-using-homebrew/" rel="alternate"></link><published>2017-10-22T13:26:28-07:00</published><updated>2017-10-22T13:26:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-10-22:/en/blog/install-gnu-utils-using-homebrew/</id><summary type="html">&lt;h1 id="configuration"&gt;Configuration&lt;/h1&gt;
&lt;p&gt;Run the following command in terminal before you install any GNU utils using Homebrew.
It will ensures that the installed GNU utils get used by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/opt/findutils/libexec/gnubin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;MANPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/opt/findutils/libexec/gnuman:&lt;/span&gt;&lt;span class="nv"&gt;$MANPATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that upgrading your Mac …&lt;/p&gt;</summary><content type="html">&lt;h1 id="configuration"&gt;Configuration&lt;/h1&gt;
&lt;p&gt;Run the following command in terminal before you install any GNU utils using Homebrew.
It will ensures that the installed GNU utils get used by default.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/opt/findutils/libexec/gnubin:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;MANPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/local/opt/findutils/libexec/gnuman:&lt;/span&gt;&lt;span class="nv"&gt;$MANPATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that upgrading your Mac OS will reset the 2 environment variables.
So you will have to run the above commands again after you upgrading your Mac OS.&lt;/p&gt;
&lt;h1 id="gnu-core-utils"&gt;GNU Core Utils&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install coreutils
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="key-commands"&gt;Key Commands&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install binutils
brew install diffutils
brew install ed --default-names
brew install findutils --with-default-names
brew install gawk
brew install gnu-indent --with-default-names
brew install gnu-sed --with-default-names
brew install gnu-tar --with-default-names
brew install gnu-which --with-default-names
brew install gnutls
brew install grep --with-default-names
brew install gzip
brew install screen
brew install watch
brew install wdiff --with-gettext
brew install wget
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="os-x-ships-a-gnu-version-but-too-old"&gt;OS X ships a GNU version, but too old&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install bash
brew install emacs
brew install gdb &lt;span class="c1"&gt;# gdb requires further actions to make it work. See `brew info gdb`.&lt;/span&gt;
brew install gpatch
brew install m4
brew install make
brew install nano
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="other-commands-non-gnu"&gt;Other commands (non-GNU)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install file-formula
brew install git
brew install less
brew install openssh
brew install perl518 &lt;span class="c1"&gt;# must run &amp;quot;brew tap homebrew/versions&amp;quot; first!&lt;/span&gt;
brew install python
brew install rsync
brew install svn
brew install unzip
brew install vim --override-system-vi
brew install macvim --override-system-vim --custom-system-icons
brew install zsh
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="references"&gt;References&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.topbug.net/blog/2013/04/14/install-and-use-gnu-command-line-tools-in-mac-os-x/"&gt;Install and Use GNU Command Line Tools in Mac OSX&lt;/a&gt;&lt;/p&gt;</content><category term="macOS"></category><category term="Homebrew"></category><category term="GNU"></category></entry><entry><title>Install the Latest Version of Docker CE on Ubuntu</title><link href="http://www.legendu.net/en/blog/docker-installation/" rel="alternate"></link><published>2017-10-22T13:24:32-07:00</published><updated>2017-10-22T13:24:32-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-10-22:/en/blog/docker-installation/</id><summary type="html">&lt;p&gt;You can install the latest version of Docker CE on Ubuntu 16.04 using the commands below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ce&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt;
&lt;span class="n"&gt;gpasswd …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;You can install the latest version of Docker CE on Ubuntu 16.04 using the commands below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ce&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt;
&lt;span class="n"&gt;gpasswd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;whoami&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;
&lt;span class="n"&gt;newgrp&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="software"></category><category term="docker"></category><category term="installation"></category><category term="ubuntu"></category><category term="latest"></category><category term="docker-ce"></category></entry><entry><title>Get Group Names on Linux/Unix</title><link href="http://www.legendu.net/en/blog/get-group-names-on-linux-unix/" rel="alternate"></link><published>2017-10-22T12:37:19-07:00</published><updated>2017-10-22T12:37:19-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-10-22:/en/blog/get-group-names-on-linux-unix/</id><summary type="html">&lt;h2 id="linux"&gt;Linux&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ getent group staff
staff:x:20:
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ getent group staff &lt;span class="p"&gt;|&lt;/span&gt; cut -d: -f3
&lt;span class="m"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mac"&gt;Mac&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dscl . -read /Groups/staff
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dscl . -read /Groups/staff &lt;span class="p"&gt;|&lt;/span&gt; awk …&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="linux"&gt;Linux&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ getent group staff
staff:x:20:
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ getent group staff &lt;span class="p"&gt;|&lt;/span&gt; cut -d: -f3
&lt;span class="m"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mac"&gt;Mac&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get information of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dscl . -read /Groups/staff
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get group ID of the &lt;code&gt;staff&lt;/code&gt; group.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ dscl . -read /Groups/staff &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;($1 == &amp;quot;PrimaryGroupID:&amp;quot;) { print $2 }&amp;#39;&lt;/span&gt;
&lt;span class="m"&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As a matter of fact, 
&lt;code&gt;dscl&lt;/code&gt; in Mac is the equivalence of &lt;code&gt;getent&lt;/code&gt; in Linux.
Both of them can be used to query user information as well. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Querying user information using &lt;code&gt;getent&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;getent&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Querying user information using &lt;code&gt;dscl&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dscl&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;search&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt; &lt;span class="n"&gt;UniqueID&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In both cases, 
you then need to parse the output to get the username. 
The output of &lt;code&gt;getent&lt;/code&gt; is standard /etc/passwd format, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;zamboni&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1005&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1005&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Diego&lt;/span&gt; &lt;span class="n"&gt;Zamboni&lt;/span&gt;&lt;span class="o"&gt;,,,:/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="sr"&gt;/zamboni:/bin/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is very easy to parse (using awk, for example) and gives you the full record at once.
&lt;code&gt;dscl&lt;/code&gt; only provides the field you searched for, something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;zamboni&lt;/span&gt;              &lt;span class="n"&gt;UniqueID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="mi"&gt;501&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So if you want to get the full record, you would need to get the username and then query for it, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dscl&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;read&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zamboni&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The output is harder to parse, 
in "keyword: value" form, 
but with many multiline values. 
You can also use the -plist option to get it in Apple's plist format, which could be easier to parse.&lt;/p&gt;
&lt;h2 id="cross-platform-ways"&gt;Cross-platform Ways&lt;/h2&gt;
&lt;p&gt;You can also get group information using the &lt;code&gt;grp&lt;/code&gt; module in Python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;grp&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getgrnam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;staff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gr_gid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Linux"></category><category term="Mac OSX"></category><category term="group"></category><category term="python"></category><category term="getent"></category><category term="dscl"></category></entry><entry><title>List Running Jupyter Notebook Servers</title><link href="http://www.legendu.net/en/blog/list-running-jupyter-notebook-servers/" rel="alternate"></link><published>2017-10-22T12:21:29-07:00</published><updated>2017-10-22T12:21:29-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-10-22:/en/blog/list-running-jupyter-notebook-servers/</id><summary type="html">&lt;p&gt;You can list running Jupyter Notebook servers using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;jupyter&lt;/span&gt; &lt;span class="n"&gt;notebook&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It works well most of the time. 
However, 
if the servers are launched using the root account (e.g., in a Docker container), 
you might encounter issues. 
In this case,
a better alternative is to list …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can list running Jupyter Notebook servers using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;jupyter&lt;/span&gt; &lt;span class="n"&gt;notebook&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It works well most of the time. 
However, 
if the servers are launched using the root account (e.g., in a Docker container), 
you might encounter issues. 
In this case,
a better alternative is to list running servers using Python script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;notebook&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;notebookapp&lt;/span&gt;
&lt;span class="n"&gt;servers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;notebookapp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_running_servers&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;servers&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more please refer to 
&lt;a href="https://stackoverflow.com/questions/41782255/how-to-get-the-current-jupyter-notebook-servers-in-python"&gt;https://stackoverflow.com/questions/41782255/how-to-get-the-current-jupyter-notebook-servers-in-python&lt;/a&gt;.&lt;/p&gt;</content><category term="software"></category><category term="notebook"></category><category term="Jupyter Notebook"></category><category term="JupyterLab"></category><category term="Python"></category><category term="root"></category><category term="running servers"></category><category term="list"></category></entry><entry><title>Run JAR Applications</title><link href="http://www.legendu.net/en/blog/run-jar-applications/" rel="alternate"></link><published>2017-10-22T12:17:00-07:00</published><updated>2017-10-22T12:17:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-10-22:/en/blog/run-jar-applications/</id><summary type="html">&lt;p&gt;If there is only 1 class with a main method
or if there is a Main-Class defined for the JAR,
you can use the following command to run the application.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you there are multiple classes with main methods in the JAR, 
you can execute any …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If there is only 1 class with a main method
or if there is a Main-Class defined for the JAR,
you can use the following command to run the application.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you there are multiple classes with main methods in the JAR, 
you can execute any of them using the commands below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mycomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;myproj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AnotherClassWithMainMethod&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="programming"></category><category term="Java"></category><category term="JAR"></category><category term="main"></category></entry><entry><title>Docker on Windows</title><link href="http://www.legendu.net/en/blog/docker-on-windows/" rel="alternate"></link><published>2017-08-26T20:09:10-07:00</published><updated>2017-08-26T20:09:10-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-26:/en/blog/docker-on-windows/</id><summary type="html">&lt;p&gt;While Docker can be used on Windows (10 and later) now, 
there are all kinds of issues. 
It is suggested that you avoid running Docker on Windows at this time 
unless you absolutely have to.&lt;/p&gt;
&lt;h2 id="installtion"&gt;Installtion&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Docker is natively supported on Win 10 and later. 
However, 
you need to enable …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;While Docker can be used on Windows (10 and later) now, 
there are all kinds of issues. 
It is suggested that you avoid running Docker on Windows at this time 
unless you absolutely have to.&lt;/p&gt;
&lt;h2 id="installtion"&gt;Installtion&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Docker is natively supported on Win 10 and later. 
However, 
you need to enable Hyper-V and Virtualization (enabled by default usually).
Follow the steps below to enable Hyper-V.&lt;/p&gt;
&lt;p&gt;a. In the Control Panel, click Programs &amp;gt; Programs and Features.&lt;/p&gt;
&lt;p&gt;b. Click Turn Windows features on or off.&lt;/p&gt;
&lt;p&gt;c. Click Hyper-V, click OK, and then click Close.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Best to run Docker commands in CMD rather than in cygwin.
First, 
Cygwin paths (when mounting volumes) are not recognized by Docker on Windows.
Second, 
some docker commands will simply fail.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="issues"&gt;Issues&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It seems that file permission mapping does NOT work on Windows.
(not sure, need to confirm ...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is issue to mount volumes to a docker container on Windows. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Software"></category><category term="Docker"></category><category term="Widnows"></category><category term="Windows 10"></category><category term="Hyper-V"></category><category term="Virtualization"></category></entry><entry><title>Install Java 8 on Ubuntu 14.04</title><link href="http://www.legendu.net/en/blog/install-java-8-on-ubuntu-14.04/" rel="alternate"></link><published>2017-08-26T09:24:18-07:00</published><updated>2017-08-26T09:24:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-08-26:/en/blog/install-java-8-on-ubuntu-14.04/</id><summary type="html">&lt;p&gt;You can install open JDK 8 on Ubuntu 14.04 using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="n"&gt;ppa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ppa&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jdk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more please refer to 
&lt;a href="https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts"&gt;https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can install open JDK 8 on Ubuntu 14.04 using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="n"&gt;ppa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ppa&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="k"&gt;update&lt;/span&gt;
&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jdk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more please refer to 
&lt;a href="https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts"&gt;https://askubuntu.com/questions/464755/how-to-install-openjdk-8-on-14-04-lts&lt;/a&gt;.&lt;/p&gt;</content><category term="Linux"></category><category term="Java"></category><category term="open JDK 8"></category><category term="Java 8"></category><category term="Ubuntu 14.04"></category></entry><entry><title>Develop R Packages Using "roxygen2"</title><link href="http://www.legendu.net/en/blog/develop-r-packages-using-roxygen2/" rel="alternate"></link><published>2017-07-27T12:41:29-07:00</published><updated>2017-07-27T12:41:29-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-07-27:/en/blog/develop-r-packages-using-roxygen2/</id><summary type="html">&lt;p&gt;You have to install the R package &lt;code&gt;roxygen2&lt;/code&gt; first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;roxygen2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Roxygenize the package for compiling.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roxygen2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;roxygenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path_to_package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following are some roxygen2 tags that I use frequently for writing R packages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Some R example code can take a long time to run. 
    To prevent the illustration …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;You have to install the R package &lt;code&gt;roxygen2&lt;/code&gt; first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;install.packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;roxygen2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Roxygenize the package for compiling.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roxygen2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;roxygenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path_to_package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following are some roxygen2 tags that I use frequently for writing R packages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Some R example code can take a long time to run. 
    To prevent the illustration code from running 
    when checking the package, 
    you can surround the example code with &lt;code&gt;\dontrun{}&lt;/code&gt;.
    The following is such an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; @examples&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;dontrun&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; rnorm(100000)&lt;/span&gt;
&lt;span class="s1"&gt;#&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, 
be careful that it is &lt;code&gt;@examples&lt;/code&gt; not &lt;code&gt;@example&lt;/code&gt;. 
If you accidentally use &lt;code&gt;@example&lt;/code&gt;, 
then you will get errors like &lt;code&gt;file cannot be open (or doesn't exist) ...&lt;/code&gt;
when you check the R package. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default roxygen2 does not export a function. To export a function
    so that package users can use it, add tag &lt;code&gt;@export&lt;/code&gt; before the definition
    of the function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the tag &lt;code&gt;@title&lt;/code&gt; to specify the title of a help document. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the tag &lt;code&gt;@description&lt;/code&gt; to start the description part of a help document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To import a package, use the tag &lt;code&gt;@import pkg_name&lt;/code&gt;. To import &lt;code&gt;fun1&lt;/code&gt; 
    and &lt;code&gt;fun2&lt;/code&gt; from a package, use the tag &lt;code&gt;@importFrom pkg_name fun1 fun2&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default roxygen2 creates a Rd document for each exported function
    with the same name as the function name. 
    You can use the tag &lt;code&gt;@rdname&lt;/code&gt; to override the name of the Rd document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Roxygen parses comments that start with &lt;code&gt;#'&lt;/code&gt;. 
    Comment start with &lt;code&gt;#&lt;/code&gt; but not &lt;code&gt;#'&lt;/code&gt; won't be parsed.
    You can take advantage of this to put comment that do not need to parsed into lines starting with &lt;code&gt;#&lt;/code&gt; but not &lt;code&gt;#'&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="compile-and-install-r-packages"&gt;Compile and Install R Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compile and install package on Windows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;CMD&lt;/span&gt; &lt;span class="n"&gt;INSTALL&lt;/span&gt; &lt;span class="c1"&gt;--build package_dir&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that &lt;code&gt;INSTALL&lt;/code&gt; must be in upper case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following LaTex packages &lt;code&gt;texlive&lt;/code&gt;, &lt;code&gt;texinfo&lt;/code&gt; and &lt;code&gt;texlive-fonts-extra&lt;/code&gt; (on Linux) 
    are need to compile R packages 
    if you want to generate and check PDF manuals. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;texlive&lt;/span&gt; &lt;span class="n"&gt;texinfo&lt;/span&gt; &lt;span class="n"&gt;texlive&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you do not want (or have permissions) to install them,
you can compile R packages without generating PDF manuals.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;CMD&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="c1"&gt;--no-manual ...&lt;/span&gt;
&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;CMD&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="c1"&gt;--no-manual ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more details on R package build options, 
please refer to the post 
&lt;a href="https://support.rstudio.com/hc/en-us/articles/200486518-Customizing-Package-Build-Options"&gt;Customizing Package Build Options&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="package"></category><category term="programming"></category><category term="tags"></category><category term="CRAN"></category><category term="roxygen2"></category><category term="develop"></category></entry><entry><title>Extensions for Java</title><link href="http://www.legendu.net/en/blog/extensions-for-java/" rel="alternate"></link><published>2017-06-11T12:02:00-07:00</published><updated>2017-06-11T12:02:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-06-11:/en/blog/extensions-for-java/</id><summary type="html">&lt;p&gt;&lt;a href="https://bitbucket.org/dclong/java_learn/src/1d6428249cae93dc7ad6ca61fa93479dcc7390fc/src/study/access?at=master"&gt;Here&lt;/a&gt; 
are some code examples for the following topics.&lt;/p&gt;
&lt;h2 id="java-native-interface"&gt;Java Native Interface&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You can call native code (typically C, C++ or Fortran) in Java using the Java Native Interface (JNI). 
For the code implemented in native code, 
you must use keyword "native" to tell the compiler that it is implemented …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://bitbucket.org/dclong/java_learn/src/1d6428249cae93dc7ad6ca61fa93479dcc7390fc/src/study/access?at=master"&gt;Here&lt;/a&gt; 
are some code examples for the following topics.&lt;/p&gt;
&lt;h2 id="java-native-interface"&gt;Java Native Interface&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You can call native code (typically C, C++ or Fortran) in Java using the Java Native Interface (JNI). 
For the code implemented in native code, 
you must use keyword "native" to tell the compiler that it is implemented outside Java. 
Also, 
you should surround the Java code which load the compile native code in &lt;code&gt;static{}&lt;/code&gt; 
(i.e. static initialized). 
This will get executed when Java load the class. 
For more information, please refer to Calling C library Routines from Java.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="java-native-access"&gt;Java Native Access&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Java Native Access is a more convenient way to call native code than the Java Native Interface.
It is based on Java Native Interface.&lt;/li&gt;
&lt;/ol&gt;</content><category term="JNI"></category><category term="JNA"></category><category term="extension"></category><category term="Java"></category><category term="programming"></category></entry><entry><title>Zero-length Vector Issue in R</title><link href="http://www.legendu.net/en/blog/zero-length-vector-issue-in-R/" rel="alternate"></link><published>2017-04-10T19:21:27-07:00</published><updated>2017-04-10T19:21:27-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-04-10:/en/blog/zero-length-vector-issue-in-R/</id><summary type="html">&lt;p&gt;The corner case of 0-length vectors is not well considered in R. 
It causes issues in several situations. 
First, &lt;code&gt;1:n&lt;/code&gt; is probably not what you want when &lt;code&gt;n = 0&lt;/code&gt;. 
Second, &lt;code&gt;df$col = 0&lt;/code&gt; throws error when &lt;code&gt;df&lt;/code&gt; is an empty (0 row) data frame.
To avoid these issues, 
it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The corner case of 0-length vectors is not well considered in R. 
It causes issues in several situations. 
First, &lt;code&gt;1:n&lt;/code&gt; is probably not what you want when &lt;code&gt;n = 0&lt;/code&gt;. 
Second, &lt;code&gt;df$col = 0&lt;/code&gt; throws error when &lt;code&gt;df&lt;/code&gt; is an empty (0 row) data frame.
To avoid these issues, 
it is suggested that you write more robust R code. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# use &lt;/span&gt;
&lt;span class="nf"&gt;seq_len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# instead of &lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# use &lt;/span&gt;
&lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nf"&gt;seq_len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kc"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# instead of &lt;/span&gt;
&lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kc"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# use &lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;nrow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# instead of &lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;             
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Strings function in base R do not behavior well when zero-length vectors are involved. 
For example, 
&lt;code&gt;paste('a', character(0))&lt;/code&gt; returns a character vector of length 1 
rather than length 0. 
Functions in the &lt;code&gt;stringi&lt;/code&gt; packages works well when zero-length vectors are involved.
For example, the code below returns a 0-length vector.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stringi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;+%&lt;/span&gt; &lt;span class="nb"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is suggested that you always use string functions in the &lt;code&gt;stringi&lt;/code&gt; package 
rather than string functions in base R.&lt;/p&gt;</content><category term="programming"></category><category term="CRAN"></category><category term="R"></category><category term="issue"></category><category term="trick"></category><category term="trap"></category><category term="vector"></category><category term="zero-length"></category><category term="0-length"></category></entry><entry><title>Add Users to a Group in Linux</title><link href="http://www.legendu.net/en/blog/add-a-user-to-the-sudo-group-on-linux/" rel="alternate"></link><published>2017-04-10T19:05:41-07:00</published><updated>2017-04-10T19:05:41-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-04-10:/en/blog/add-a-user-to-the-sudo-group-on-linux/</id><summary type="html">&lt;p&gt;There are several ways to add users to a group in Linux. 
The following uses the &lt;code&gt;sudo&lt;/code&gt; group as illustration.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gpasswd&lt;/code&gt;, &lt;code&gt;usermod&lt;/code&gt; and &lt;code&gt;adduser&lt;/code&gt; can all be used to add a user to a given group.
    However, it is suggested that you use &lt;code&gt;gpasswd&lt;/code&gt; as it is more portable and …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;There are several ways to add users to a group in Linux. 
The following uses the &lt;code&gt;sudo&lt;/code&gt; group as illustration.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gpasswd&lt;/code&gt;, &lt;code&gt;usermod&lt;/code&gt; and &lt;code&gt;adduser&lt;/code&gt; can all be used to add a user to a given group.
    However, it is suggested that you use &lt;code&gt;gpasswd&lt;/code&gt; as it is more portable and intuitive. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gpasswd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;user_name&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;
&lt;span class="n"&gt;newgrp&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;

&lt;span class="n"&gt;usermod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;aG&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;user_name&lt;/span&gt;
&lt;span class="n"&gt;newgrp&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;works&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Ubuntu&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;CentOS&lt;/span&gt;
&lt;span class="n"&gt;adduser&lt;/span&gt; &lt;span class="n"&gt;user_name&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;
&lt;span class="n"&gt;newgrp&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just adding an user to a group might not make it work right away.
The command &lt;code&gt;newgrp sudo&lt;/code&gt; make the group &lt;code&gt;sudo&lt;/code&gt; in effect right away.
Of course, you can log out and then log in to make it work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some desktop environment (e.g., GNome, Cinnamon, KDE, etc.) can also do this for you. 
    Taking Cinnamon as an example, 
    you can follow the steps below to add/remove groups for a user. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;System Settings&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;code&gt;Users and Groups&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the user you want modify.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;code&gt;Groups&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check/uncheck groups from the prompt list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click the OK to save the changes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Linux"></category><category term="sudo"></category><category term="user"></category><category term="groups"></category><category term="gpasswd"></category><category term="usermod"></category></entry><entry><title>Traps in R</title><link href="http://www.legendu.net/en/blog/traps-in-r/" rel="alternate"></link><published>2017-04-09T23:47:21-07:00</published><updated>2017-04-09T23:47:21-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-04-09:/en/blog/traps-in-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/zero-length-vector-issue-in-R/"&gt;Zero-Length Vector Issue in R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A really tricky problem about is global and local variables. 
You can use any global variable in a user-defined function, 
which is true at least in R with version 2.13 or older. 
For example if you have defined a global variable &lt;code&gt;a&lt;/code&gt;, 
you can …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.legendu.net/en/blog/zero-length-vector-issue-in-R/"&gt;Zero-Length Vector Issue in R&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A really tricky problem about is global and local variables. 
You can use any global variable in a user-defined function, 
which is true at least in R with version 2.13 or older. 
For example if you have defined a global variable &lt;code&gt;a&lt;/code&gt;, 
you can use variable &lt;code&gt;a&lt;/code&gt; directly in user-defined functions. 
However, 
you cannot use &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;-&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; to mutate global variables. 
Whenever you use these three operators, 
R thinks that you're either creating a new variable 
(if the variable is not defined before), 
or you're updating the value of an existing variable 
(if the variable already exists). 
For example, 
suppose there's still a global variable &lt;code&gt;a&lt;/code&gt; in the R workspace. 
You can use variable &lt;code&gt;a&lt;/code&gt; directly in user-defined functions, 
but if you use &lt;code&gt;a=2&lt;/code&gt; (or &lt;code&gt;a&amp;lt;-2&lt;/code&gt; or &lt;code&gt;2-&amp;gt;a&lt;/code&gt;) in the user-defined function, 
R won't think that you're updating the value of the global variable, 
instead it things that you're creating a new local variable &lt;code&gt;a&lt;/code&gt;. 
For this reason, 
if a global variable &lt;code&gt;a&lt;/code&gt; exists 
while there's no local variable &lt;code&gt;a&lt;/code&gt; in a user-defined function, 
error message will be shown if you use &lt;code&gt;a[1]=1&lt;/code&gt; (or other equivalent ways)
and try to run the function, 
because by doing this you're telling R 
that you want to update the value of the first element of local variable &lt;code&gt;a&lt;/code&gt; 
but local variable &lt;code&gt;a&lt;/code&gt; doesn't exist. 
If you really want to update the value of (or create) a global variable 
in a user-defined function, 
you should use operator &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt;. 
For example, 
if you want to update the value of global variable &lt;code&gt;a&lt;/code&gt;, 
you can use &lt;code&gt;a&amp;lt;&amp;lt;-2&lt;/code&gt; (or &lt;code&gt;2-&amp;gt;&amp;gt;a&lt;/code&gt;). 
Now you have seen that global variables can screw the execution result 
of your own defined function easily. 
The situation can become even trickier and thus harder to debug, 
if you define a local variable in a branch 
(e.g. a branch of &lt;code&gt;if()...else...&lt;/code&gt; statement) of the code 
while forget to define the same local variable in other branches 
and at the same time a global variable with the same name exists. 
My suggestion is that you first remove all global variables 
in the R workspace if there is any, 
and then run your program. 
In this way,
you can avoid confusion resulting from global variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always be careful when there is an operation based on two vectors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sequence operator (&lt;code&gt;:&lt;/code&gt;) has a higher priority over arithmetic operators (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;), 
but a lower priority than the power operator (&lt;code&gt;^&lt;/code&gt;) and element operator (&lt;code&gt;[]&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expression &lt;code&gt;2^1^2&lt;/code&gt; is calculated from right to left in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid use function &lt;code&gt;median&lt;/code&gt; if you can, 
because it returns two numbers when the vector has an even number of elements, 
which is usually not what statisticians want 
and might result in serious problems in many cases. 
Actually we can always use &lt;code&gt;quantile(x,prob=0.5)&lt;/code&gt; to get the median of vector &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For functions which takes &lt;code&gt;...&lt;/code&gt; as one of its parameters, 
we have to be very careful.
Because this kind of functions accept any number and any kind of parameters. 
So sometime you think that you are passing values to some argument of a function, 
but actually not. 
For example if you use &lt;code&gt;seq(0,100,step=2)&lt;/code&gt; you might be in trouble. 
The right command that works in this situations can be &lt;code&gt;seq(0,100,by=2)&lt;/code&gt;.
Nowadays, 
there are many different programming languages, 
and all of them have their own advantages and disadvantages. 
So we might have learned several different programming languages. 
And we are probably told not to remember all functions by heart, 
instead, we can check the syntax of functions when we have to use them. 
This is an efficient way which is also my way to learn programming languages.
However, 
this might can lead to problems sometimes. 
Because we're lazy, 
we might just guess syntax of functions that we're going to use. 
This is not a big problem in complied languages, 
because anyway the syntax will be checked later 
and what is more usually we have good editors to help us (e.g. eclipse for Java). 
R is a interpreted language, 
so even if there're syntax errors you might can still run it. 
And because of high flexibility of R, 
it is very hard to editor for R to find these tricky mistakes. 
So if we can, 
we should always at least check the arguments of the functions 
we are going to use in R. 
A simple way is just to use function &lt;code&gt;args&lt;/code&gt;. 
If we have used &lt;code&gt;args&lt;/code&gt; to check the arguments of function &lt;code&gt;seq&lt;/code&gt;, 
then the chance for us to make the mistakes mentioned above is very small. 
Also it is recommended to always pass arguments to functions 
using argument names, 
i.e., 
using the form &lt;code&gt;argname1=argvalue1&lt;/code&gt; to pass arguments to functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get the length of a vector, 
you can use &lt;code&gt;length&lt;/code&gt;. 
However, 
to get the length of a string, 
you should use &lt;code&gt;nchar&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;round&lt;/code&gt; in use the close even number strategy which might not what you expect, 
so be careful when you use it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a &lt;code&gt;for&lt;/code&gt; loop, 
the loop vector is immutable while the loop is running. 
This means that R calculates the loop vector only once, 
an for this reason, feel free to ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is often that one want to build a larger array based on small arrays. 
For example, 
one build a 3-D array by repeating a 2-D matrix. 
You should be careful if the "matrix" you used is obtained by reading data from a file, 
because it's really a data frame often times. 
All elements in an array have the same type, 
while elements in a data frame do not have to share the same type. 
For this reason, 
it is really inefficient to build an array based on a data frame 
(if even all columns of the data frame share the same type). 
If you do this for a large data frame, 
R can choke. 
A good way is to first convert the data frame to a matrix using &lt;code&gt;as.matrix&lt;/code&gt;, 
and then build the array you want based on the matrix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R runs commands in &lt;code&gt;Rprofile.site&lt;/code&gt;, 
then loads the save image (if any), 
and then runs &lt;code&gt;.First&lt;/code&gt; (if exists). 
This means that if you want to run something which depends the R image, 
you must put it into the &lt;code&gt;.First&lt;/code&gt; instead of &lt;code&gt;Rprofile.site&lt;/code&gt;. 
However, 
it seems that there is a bug with Rstudio (at least before version 0.94), 
who does not follow the above order when it starts R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usually the number of levels of a factor equals the number of distinct elements in the factor, 
however, 
it doesn't have to be.
Except factitious ones, 
the situation that the two quantities are not the same usually happens 
after subsetting a data frame or factor. 
If the number of levels of a factor is not the same 
with the number of its distinct elements, 
you can apply &lt;code&gt;factor&lt;/code&gt; on itself to get a factor with the two quantities identical.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never use a factor for the index of subsetting, 
because if used it will be coerced to an integer vector 
which is usually not what people expect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R allows lazy evaluation to some extent, 
e.g., 
as almost all other languages do, 
boolean expression in R are evaluated using lazy evaluation. 
What is more important is that missing arguments are allowed for R functions 
(i.e. you do not have to pass values to some arguments, 
and everything runs OK as long as missing arguments are not involved in computing), 
and missing arguments can even be further passed to sub-functions 
(Everything runs OK as long as missing arguments are never used in computing). 
Here is an illustration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exact&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exact&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="n"&gt;^2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;stats&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;667&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, 
R does not fully support lazy evaluation, 
and you shall not expect code involve advanced lazy evaluation 
(need an example there ...) to work well. 
Part of the reason for not supporting advanced lazy evaluation in R 
is that it invites many problems and can probably result in fetal mistakes.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Because of the way that computers stores double values, 
there are always tiny storing errors associated with double values. 
So if you want to compare whether a double value belongs to a range 
(a point is a closed interval with equal limts), 
you can change the limits (depends on what your want to do) 
of the range slightly to avoid storing errors.&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="global variable"></category><category term="programming"></category><category term="traps"></category><category term="CRAN"></category></entry><entry><title>Tips for Markdown</title><link href="http://www.legendu.net/en/blog/markdown-tips/" rel="alternate"></link><published>2017-04-03T18:54:28-07:00</published><updated>2017-04-03T18:54:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-04-03:/en/blog/markdown-tips/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/markdown/markdown.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Jekyll interprete contents in two nested curly brackets as a variable 
(white spaces around the vairable are trimmed).
For example, if we have &lt;code&gt;{{ abcd }}&lt;/code&gt; in the markdown code, 
then &lt;code&gt;abcd&lt;/code&gt; is interpreted as a variable.
So you should avoid using two nested braces for other purpose in Markdown code, 
otherwise …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/markdown/markdown.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Jekyll interprete contents in two nested curly brackets as a variable 
(white spaces around the vairable are trimmed).
For example, if we have &lt;code&gt;{{ abcd }}&lt;/code&gt; in the markdown code, 
then &lt;code&gt;abcd&lt;/code&gt; is interpreted as a variable.
So you should avoid using two nested braces for other purpose in Markdown code, 
otherwise, 
Jekyll might fail to build your web pages. 
If you do want to dispaly two nested curly brackets, 
you can either insert a space between the two left curly brackets and the two
right curly brackets. Also you can also put it into a literal block (might be 
changed to raw later). There are also other preserved symbol combinations in Jekyll 
(e.g. { followed by %). Use these for other purpose might result in failure of 
building your web pages. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A block indented 4 spaces is treated as a code block in Markdown. 
However, if this block is after a list item, 
you have to indent 8 spaces for it to be treated as code block. 
Indenting 4 spaces means that it is continued part of the list item. 
The addition 4-space means that it is a code block of the list item.
Even though back tildes (see the following examples) can be use specify a code block,
you'd better use the 8-space indentation as back tildes block does not work correctly in list.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;example of code block&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nature numbers in ordred list only indicate order items. 
The actually order of items is according to the order you list them, 
not the order of prefixed nutuarl numbers. 
The values of natural numbers does not matter in ordered list. 
You can use a same nature number if you want. 
Later items do not have to start with bigger nature numbers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Images of format &lt;code&gt;jpg&lt;/code&gt;, &lt;code&gt;png&lt;/code&gt;, &lt;code&gt;gif&lt;/code&gt;, etc. can be embeded in Markdown,
however, PDF images cannot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To insert a link in Markdown, 
you can use &lt;code&gt;[link name](url)&lt;/code&gt;. 
If you want the url to show up as it is, 
you can use &lt;code&gt;[url](url)&lt;/code&gt;.
However, 
this is not convenient. 
A better way is to use &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="latex"&gt;LaTex&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;$$&lt;/code&gt; or &lt;code&gt;\(\)&lt;/code&gt; (depends on configuration) are used for inline LaTex equations usually.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In Latex, you have to use &lt;code&gt;\\&lt;/code&gt; instead of &lt;code&gt;\newline&lt;/code&gt; to indicate a new line in equations. 
In contrast, when you use Latex in Markdown, 
you have to use &lt;code&gt;\newline&lt;/code&gt; instead of &lt;code&gt;\\&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In LaTex, you can supress equation numbers using the star version of equation environments
(e.g., &lt;code&gt;align*&lt;/code&gt;). 
However, when you use LaTex in Markdown,
you'd better use &lt;code&gt;\nonumber&lt;/code&gt; to supress equation numbers manually 
instead of using the star version of equation environments. 
This is because &lt;code&gt;*&lt;/code&gt; has special meaning in Markdown.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Markdown"></category><category term="Jekyll"></category><category term="programming"></category></entry><entry><title>Cygwin Come to Rescue Linux Fans on Windows</title><link href="http://www.legendu.net/en/blog/cygwin-rescue-linux-fan/" rel="alternate"></link><published>2017-03-19T10:37:20-07:00</published><updated>2017-03-19T10:37:20-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-19:/en/blog/cygwin-rescue-linux-fan/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use 32 bit Cygwin as it has a better package support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some tools (e.g., terminator) are not included in the regular release of Cygwin, 
    but can be installed using 
    &lt;a href="http://www.legendu.net/en/blog/cygwin-ports/"&gt;Cygwin Ports&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration files for many applications (e.g., bash and Vim)
    in Linux can …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use 32 bit Cygwin as it has a better package support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some tools (e.g., terminator) are not included in the regular release of Cygwin, 
    but can be installed using 
    &lt;a href="http://www.legendu.net/en/blog/cygwin-ports/"&gt;Cygwin Ports&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration files for many applications (e.g., bash and Vim)
    in Linux can be migrated to Cygwin directly 
    and work out of the box. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You might get an error about "... unexpected token ..." 
    if you edit your bash script in Windows and try to run it under Cygwin. 
    You can fix the problem by convert DOS text file format to Unix/Linux text file format 
    using the command &lt;code&gt;dos2unix&lt;/code&gt;. 
    You can do the opposite using the command &lt;code&gt;unix2dos&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are running Cygwin behind a (corpate) firewall,
    you have to choose "use http proxy" when you install packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To install new packages,
    run the Cygwin installer again and select new packages that you want to install.
    Installed packages will be kept by default.
    There's a script &lt;code&gt;apt-cyg&lt;/code&gt; witten by Stephen Jungels 
    which gives users similar experience to &lt;code&gt;apt-get&lt;/code&gt; and &lt;code&gt;wajig&lt;/code&gt; in Debian/Ubuntu.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;keychain&lt;/code&gt; to manager your SSH public key in Cygwin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes Cygwin fails to download and install new packages
    (even there is no problem with the network and proxy). 
    Restalling it can often solve the problem in this situation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use gawk instead if awk does not work in Cygwin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is best to put your configurations files in the $HOME/archives.
    And link to the home directory in Cygwin.
    Do not put data directly in Cygwin, 
    because it makes things not portable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;rename&lt;/code&gt; utility on Cygwin/MobaXterm has very limited functionality. 
    It mimics the &lt;code&gt;rename&lt;/code&gt; command on older version (2.6) of Linux.
    The new version of &lt;code&gt;rename&lt;/code&gt; (on latest version of Linux) 
    is not compatible with the older version one (on Cygwin/MobaXterm).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
    the &lt;code&gt;PATH&lt;/code&gt; environment variable in Cygwin contains some Windows executable paths 
    before Cygwin executable paths.
    This shelter some Linux commands from being used directly.
    For example, Windows has a &lt;code&gt;find&lt;/code&gt; command which might shelter the Linux &lt;code&gt;find&lt;/code&gt; command.
    If this is case, you can either use the full path to the Linux &lt;code&gt;find&lt;/code&gt; command,
    or you can put it into a Cygwin executable path before Windows executable paths. 
    Sometimes, this causes seriously problems. 
    For example, if you install R and its executables into the PATH environemtn variable,
    its executables shelter Cygwin's and make it not work well.
    It is suggested that you manually prepend $HOME/bin, /usr/local/bin, /usr/bin, etc. 
    into $PATH in the &lt;code&gt;.bashrc&lt;/code&gt; file in Cygwin.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="recommended-packages"&gt;Recommended Packages&lt;/h2&gt;
&lt;h3 id="compiler-related"&gt;Compiler Related&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;make, cmake&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="python-related"&gt;Python Related&lt;/h3&gt;
&lt;p&gt;python-dateutil (via &lt;a href="http://www.legendu.net/en/blog/cygwin-ports/"&gt;Cygwin Ports&lt;/a&gt;), python-pip (manually)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install python-dateutil
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;python-setuptools (contains easy_install)&lt;/p&gt;
&lt;p&gt;However, notice that if you have Python (e.g., Anaconda Python) installed on Windows, 
it might confuse yourself about which one you are using ...
Avoid installing Python on Windows if you have it installed in Cygwin
or at least be careful about the path ...&lt;/p&gt;
&lt;p&gt;it seems to me that the best way to install Python packages on Cygwin is to use Python directly, &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python setup.py --install package_name
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="packages-that-fail-to-work"&gt;Packages that Fail to Work&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;FuzzyWuzzy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NLTK&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NumPy&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="git-related"&gt;Git Related&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;git-completion (required for Git to auto complete in Cygwin)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="editor"&gt;Editor&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Vim&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="text-manipulation-tools"&gt;Text Manipulation Tools&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;colordiff&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="available-tools-installed-by-default"&gt;Available Tools Installed by Default&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;cd, ls, cp, mv, chmod, chown, ln &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;du, df&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;grep, sed, awk &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="availabe-tools-not-installed-by-default"&gt;Availabe Tools not Installed by Default&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;terminator (available via &lt;a href="http://www.legendu.net/en/blog/cygwin-ports/"&gt;Cygwin Ports&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shutdown, halt, reboot (availabe via the &lt;code&gt;shutdown&lt;/code&gt; package)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;openssh-client, scp, rsync, keychain (keyring for ssh)  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;wget (better supported in 32 bit version of Cygwin until 1.7.35), curl, unison, w3m&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gcc, git&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;screen (no help doc available, which is odd)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vim &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pdftk (only available on 32 bit as of Mar 6, 2015)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tmux&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;convert (in the ImageMagic package)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rename (available via the util-linux package, 
    not as powerful as rename in linux but OK for simple batch rename)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clear (available via the ncurses package)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TexMacs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Texlive&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dos2unix, unix2dos&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="missing-tools"&gt;Missing Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;openssh-server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dvipng&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;netstat (use X-NetStat as an alternative)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pandoc, wkhtmltopdf, pdfgrep&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Linux"></category><category term="Windows"></category><category term="virtualization"></category><category term="software"></category><category term="Cygwin"></category></entry><entry><title>Ways to Make a Bootable Flash Drive in Linux</title><link href="http://www.legendu.net/en/blog/ways-to-make-a-bootable-flash-drive/" rel="alternate"></link><published>2017-03-19T10:33:38-07:00</published><updated>2017-03-19T10:33:38-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-19:/en/blog/ways-to-make-a-bootable-flash-drive/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;dd&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_linux_image&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_device&lt;/span&gt; &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nv"&gt;M&lt;/span&gt;&lt;span class="c1"&gt;; sync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;path_to_linux_image&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;path_to_device&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to write a hybird Linux image into a flash drive.
Note that you must use the whole device (e.g., &lt;code&gt;/dev/sdb&lt;/code&gt;) 
not just a partition (e.g., &lt;code&gt;/dev/sdb1&lt;/code&gt;)
on the device.
For …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;dd&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_linux_image&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;path_to_device&lt;/span&gt; &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nv"&gt;M&lt;/span&gt;&lt;span class="c1"&gt;; sync&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;path_to_linux_image&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;path_to_device&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to write a hybird Linux image into a flash drive.
Note that you must use the whole device (e.g., &lt;code&gt;/dev/sdb&lt;/code&gt;) 
not just a partition (e.g., &lt;code&gt;/dev/sdb1&lt;/code&gt;)
on the device.
For a non-hybrid Linux image, 
you can make it hybid using the following command 
if it uses isolinux/syslinux technology.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;isohybird&lt;/span&gt; &lt;span class="n"&gt;path_to_linux_image&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manually copying files to the USB stick.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;`zcat boot.img.gz &amp;gt; /dev/sdX&lt;/li&gt;
&lt;li&gt;Mount the USB stick and copy a iso image to it.&lt;/li&gt;
&lt;li&gt;Umount the USB stick.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the GUI tool &lt;a href="http://unetbootin.sourceforge.net/"&gt;UNetbootin&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the universal online booting tool &lt;a href="http://www.netboot.me/"&gt;netboot.me&lt;/a&gt;.
Note that you must have ethernet connection in order to use netboot.me. 
netboot.me is a fantastic tool for general purposes, 
but it has problems on some old computers.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="bootable"></category><category term="flash drive"></category><category term="hybird"></category><category term="USB"></category><category term="Hardware"></category><category term="Linux"></category></entry><entry><title>Map Keys in Linux</title><link href="http://www.legendu.net/en/blog/map-keys-in-linux/" rel="alternate"></link><published>2017-03-19T10:30:15-07:00</published><updated>2017-03-19T10:30:15-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-19:/en/blog/map-keys-in-linux/</id><summary type="html">&lt;p&gt;Note: For Vim users, it is appealing to make the &lt;code&gt;Caps Lock&lt;/code&gt; function like &lt;code&gt;Escape&lt;/code&gt;.
It is suggested that you make &lt;code&gt;Caps Lock&lt;/code&gt; an additonal &lt;code&gt;Escape&lt;/code&gt;
rather than swap them.
This avoid inconsistent key mapping issues when you work remotely via VNC, NoMachine, etc.&lt;/p&gt;
&lt;h2 id="desktop-environment"&gt;Desktop Environment&lt;/h2&gt;
&lt;p&gt;Some desktop environment (e …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Note: For Vim users, it is appealing to make the &lt;code&gt;Caps Lock&lt;/code&gt; function like &lt;code&gt;Escape&lt;/code&gt;.
It is suggested that you make &lt;code&gt;Caps Lock&lt;/code&gt; an additonal &lt;code&gt;Escape&lt;/code&gt;
rather than swap them.
This avoid inconsistent key mapping issues when you work remotely via VNC, NoMachine, etc.&lt;/p&gt;
&lt;h2 id="desktop-environment"&gt;Desktop Environment&lt;/h2&gt;
&lt;p&gt;Some desktop environment (e.g., Cinnamon, GNOME, etc.) let you define behavior of keys.
For example,
you can follow the steps below to define the behavior of the &lt;code&gt;Caps Lock&lt;/code&gt; key in Cinnamon.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open System Settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select Keybord.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keybord layouts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Options (on the right-bottom corner)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Caps Lock key behavior&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Choose the behavior you want.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the Unity desktop environment,
you need to install &lt;code&gt;unity-tweak-tool&lt;/code&gt;.
And if you are on the GNOME desktop,
you need &lt;code&gt;gnome-tweak-tool&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="setxkbmap"&gt;setxkbmap&lt;/h2&gt;
&lt;p&gt;Swap the Caps and the Escape keys.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;setxkbmap -option -option caps:swapescape
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unfortunately,
the key mapping partially pass to virtual machines or remote desktops,
which is the worst scenario.
It is suggested that you turn off the mapping on the Linux host
when you work in a VM or a remote desktop.&lt;/p&gt;
&lt;h3 id="keyboard-configuration"&gt;Keyboard Configuration&lt;/h3&gt;
&lt;p&gt;Keyboard in configured in by the file &lt;code&gt;/etc/default/keyboard&lt;/code&gt; on Linux.
For example,
you can find the line that starts with &lt;code&gt;XKBOPTIONS&lt;/code&gt;,
and add &lt;code&gt;ctrl:nocaps&lt;/code&gt; to make Caps Lock an additional Control key
or &lt;code&gt;ctrl:swapcaps&lt;/code&gt; to swap Caps Lock and Control.
Run the following command after updating the file &lt;code&gt;/etc/default/keyboard&lt;/code&gt; to make it in effect.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;dpkg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reconfigure&lt;/span&gt; &lt;span class="n"&gt;keyboard&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;configuration&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This way is better as it will take effect on the virtual consoles as well as in the GUI DE.&lt;/p&gt;
&lt;h2 id="more-references"&gt;More References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/444714/how-do-i-swap-escape-and-caps-lock-in-14-04/446725#446725"&gt;http://askubuntu.com/questions/444714/how-do-i-swap-escape-and-caps-lock-in-14-04/446725#446725&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.fascinatingcaptain.com/howto/remap-keyboard-keys-for-ubuntu/"&gt;http://www.fascinatingcaptain.com/howto/remap-keyboard-keys-for-ubuntu/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/885045/how-to-swap-ctrl-and-alt-keys-in-ubuntu-16-04/885047"&gt;http://askubuntu.com/questions/885045/how-to-swap-ctrl-and-alt-keys-in-ubuntu-16-04/885047&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/453793/remapping-caps-lock-in-14-04-trusty-tahr"&gt;http://askubuntu.com/questions/453793/remapping-caps-lock-in-14-04-trusty-tahr&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/444714/how-do-i-swap-escape-and-caps-lock-in-14-04/446725#446725"&gt;http://askubuntu.com/questions/444714/how-do-i-swap-escape-and-caps-lock-in-14-04/446725#446725&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Linux"></category><category term="keyboard"></category><category term="mapping"></category><category term="swap"></category><category term="setxkbmap"></category><category term="Cinnamon"></category><category term="GNOME"></category><category term="keys"></category></entry><entry><title>Tips for AWK</title><link href="http://www.legendu.net/en/blog/awk-tips/" rel="alternate"></link><published>2017-03-19T10:22:17-07:00</published><updated>2017-03-19T10:22:17-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-19:/en/blog/awk-tips/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.grymoire.com/Unix/Awk.html"&gt;AWK Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For small structured text files, 
    it is suggested that you use the &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;
    command to manipulate it.&lt;/p&gt;
&lt;p&gt;For complicated logic, 
it is suggested that you use a scripting language (e.g., Python) instead. 
I personally discourage using of &lt;code&gt;awk&lt;/code&gt; 
unless you have a large file (that q cannot …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.grymoire.com/Unix/Awk.html"&gt;AWK Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For small structured text files, 
    it is suggested that you use the &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;
    command to manipulate it.&lt;/p&gt;
&lt;p&gt;For complicated logic, 
it is suggested that you use a scripting language (e.g., Python) instead. 
I personally discourage using of &lt;code&gt;awk&lt;/code&gt; 
unless you have a large file (that q cannot handle) 
and the operations you want do are simple.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic syntax of &lt;code&gt;awk&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BEGIN {start_action} {action} END {stop_action}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Whether to user single or double quote depends on
    whether you use column variables in the expression.
    This is consistent with shell variable substitution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt; ignorecase when working on files make unnecessary redundant output
    very annoying, not sure why&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;awk&lt;/code&gt; does not recognize escaped characters in CSV formatted. 
    Make sure that the file &lt;code&gt;awk&lt;/code&gt; works on is in simple format.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="field-delimiter"&gt;Field Delimiter&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The delimiter must be quoted. 
    For example, 
    if the field delimiter is tab,
    you must use &lt;code&gt;awk -F'\t'&lt;/code&gt; rather than &lt;code&gt;awk -F\t&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The filed delimiter of AWK supports can be a regular expression.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[/=]&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot;\t&amp;quot; $5 &amp;quot;\t&amp;quot; $8}&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="columnfield-filteringmanipulation"&gt;Column/Field Filtering/Manipulation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Select 1st and 3rd column (seprated by tab)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $1 &amp;quot;\t&amp;quot; $3}&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sum of the 5th filed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;BEGIN {s=0} {s=s+$5} END {print s}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="rows-filteringmanipulation"&gt;Rows Filtering/Manipulation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Print rows of the file with the first field greater than 3.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{ if($1 &amp;amp;gt; 3) print }&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print Docker image IDs that has no repositories names.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{ if ($1 == &amp;quot;&amp;amp;lt;none&amp;amp;gt;&amp;quot;) print $3 }&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print Docker image IDs whose name contains &lt;code&gt;che&lt;/code&gt; using regular expression match.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="nv"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;{if ($1 ~ &amp;quot;che&amp;quot;) print $3}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Print rows with 2 fileds.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;NF == 2&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or more verbosally (and more portable)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;NF == 2 {print} {}&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Count the number of fields in each line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;awk&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print NF}&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;file_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;https://stackoverflow.com/questions/15386632/awk-4th-column-everything-matching-wildcard-before-the&lt;/p&gt;</content><category term="tips"></category><category term="awk"></category><category term="text manipulation"></category></entry><entry><title>Selectively Disable Vimperator on Webpages</title><link href="http://www.legendu.net/en/blog/selectively-disable-vimperator/" rel="alternate"></link><published>2017-03-04T13:28:47-08:00</published><updated>2017-03-04T13:28:47-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-04:/en/blog/selectively-disable-vimperator/</id><summary type="html">&lt;p&gt;You can press &lt;code&gt;shift + esc&lt;/code&gt; to disable Vimperator on pages and &lt;code&gt;insert&lt;/code&gt; to enable it again. 
This is not good solution as often times you wan to disable Vimperator on a few pages 
but still have it enabled on other pages. 
You can achieve this by configurating the &lt;code&gt;~/.vimperatorrc&lt;/code&gt; file …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can press &lt;code&gt;shift + esc&lt;/code&gt; to disable Vimperator on pages and &lt;code&gt;insert&lt;/code&gt; to enable it again. 
This is not good solution as often times you wan to disable Vimperator on a few pages 
but still have it enabled on other pages. 
You can achieve this by configurating the &lt;code&gt;~/.vimperatorrc&lt;/code&gt; file.
Below is an example of disabling Vimperator on Google main, calendar, reader and tasks. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;autocmd&lt;/span&gt; &lt;span class="n"&gt;LocationChange&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;                             &lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;modes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passAllKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;
&lt;span class="n"&gt;autocmd&lt;/span&gt; &lt;span class="n"&gt;LocationChange&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;            &lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;modes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passAllKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;autocmd&lt;/span&gt; &lt;span class="n"&gt;LocationChange&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;calendar&lt;/span&gt;    &lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;modes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passAllKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;autocmd&lt;/span&gt; &lt;span class="n"&gt;LocationChange&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt;      &lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;modes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passAllKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;autocmd&lt;/span&gt; &lt;span class="n"&gt;LocationChange&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="err"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tasks&lt;/span&gt;      &lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;modes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passAllKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Instead of using &lt;code&gt;autocmd&lt;/code&gt;, 
you can also use &lt;code&gt;ignorekeys&lt;/code&gt;. 
Below is an exampel of disabling Vimperator on Yahoo and Google mail.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ignorekeys&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yahoo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;ignorekeys&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;mail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;google&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/14271624/disable-vimperator-temporarily"&gt;Disable Vimperator Temporarily&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="software"></category><category term="Vimperator"></category><category term="Vim"></category><category term="Firefox"></category><category term="browser"></category></entry><entry><title>Working Remotely in Linux</title><link href="http://www.legendu.net/en/blog/work-remotely-linux/" rel="alternate"></link><published>2017-03-01T23:20:51-08:00</published><updated>2017-03-01T23:20:51-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-03-01:/en/blog/work-remotely-linux/</id><summary type="html">&lt;h2 id="from-linux-to-linux"&gt;From Linux to Linux:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Command Line Mode: &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using X forwarding, you can also run GUI applications on the server.
This is not recommended unless it's short quick work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remote File System: &lt;code&gt;sshfs&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You'd better use a mount point which you have full access to,
otherwise, you have use the …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2 id="from-linux-to-linux"&gt;From Linux to Linux:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Command Line Mode: &lt;code&gt;ssh&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using X forwarding, you can also run GUI applications on the server.
This is not recommended unless it's short quick work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remote File System: &lt;code&gt;sshfs&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You'd better use a mount point which you have full access to,
otherwise, you have use the root user to access the mount point. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better add yourself to the &lt;code&gt;fuse&lt;/code&gt; (which is required by sshfs) group.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remote Desktop&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;NX (NoMachine)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VNC (e.g., vino or tight vnc, remmina)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teamviewer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="from-linux-to-windows"&gt;From Linux to Windows:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Remote Desktop:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Remmina&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;rdesktop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NoMachine&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teamviewer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remote File System: &lt;code&gt;smb&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open nautilus file manager and press &lt;code&gt;CTRL + L&lt;/code&gt; to show the address field.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type in &lt;code&gt;smb://host_name/folder&lt;/code&gt; in the address field and press enter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type in your user name and password in the prompt to login. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="from-windows-to-linux"&gt;From Windows to Linux:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Comand Line Mode: &lt;code&gt;ssh&lt;/code&gt; (e.g., Security Shell)&lt;/li&gt;
&lt;/ul&gt;</content><category term="software"></category><category term="remote"></category><category term="Linux"></category></entry><entry><title>SQL on Text File</title><link href="http://www.legendu.net/en/blog/sql-on-text-file/" rel="alternate"></link><published>2017-02-18T11:57:33-08:00</published><updated>2017-02-18T11:57:33-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-02-18:/en/blog/sql-on-text-file/</id><summary type="html">&lt;p&gt;&lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt; is a great tool 
for working on structured text files 
using SQL syntax in command line.&lt;/p&gt;
&lt;h2 id="installation-on-ubuntu"&gt;Installation on Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig install python3-q-text-as-data
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="general-tips"&gt;General Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The semantics of &lt;code&gt;q&lt;/code&gt; is identical to &lt;code&gt;sqlite&lt;/code&gt;. 
    &lt;code&gt;q&lt;/code&gt; preserve the original order of rows if no sorting (order by) is applied.
    You force querying …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt; is a great tool 
for working on structured text files 
using SQL syntax in command line.&lt;/p&gt;
&lt;h2 id="installation-on-ubuntu"&gt;Installation on Ubuntu&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig install python3-q-text-as-data
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="general-tips"&gt;General Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The semantics of &lt;code&gt;q&lt;/code&gt; is identical to &lt;code&gt;sqlite&lt;/code&gt;. 
    &lt;code&gt;q&lt;/code&gt; preserve the original order of rows if no sorting (order by) is applied.
    You force querying by the order of insertion 
    by adding an &lt;code&gt;order by rowid&lt;/code&gt; if needed (similar to sqlite).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Output in quote mode does not work well. 
    Double quotes are not escaped.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Joins do not work on files with different separators. 
    You have to convert them to have the same field separator first
    and then perform joins. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If no header, then use c&lt;span class="math"&gt;\(i\)&lt;/span&gt; to stand for the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; column.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Randomly select 500 records.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;q&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;select * from text_file order by random() limit 5&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sample with acceptance ratio 0.01.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;q&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;select * from text_file where random() % 100 = 0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;-&lt;/code&gt; to stand the piped in output. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="n"&gt;text_file&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;select * from - where age &amp;amp;lt; 30&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use q to find Docker images without repository names.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;select c3 from - where c1 = &amp;quot;&amp;amp;lt;none&amp;amp;gt;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remove all images belong to the eclipse organization with the help of sed and q.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="o"&gt;+/&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tH&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;select [image id] from - where repository like &amp;#39;eclipse/%&amp;#39;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;rmi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="alternative-tools"&gt;Alternative Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/dinedal/textql"&gt;textql&lt;/a&gt; (developed in Go) 
    is a very similar tool to &lt;a href="http://harelba.github.io/q/"&gt;q&lt;/a&gt;.
    It has even simplier syntax than q.
    However, 
    it has several disadvantages compared to q.
    First, it is not as actively maintained as q.
    Second, no easy way to install except in Mac (using Homebrew). 
    You have to install from source by yourself in Linux and Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can import text files into database tables and work on them. 
    SQLite3 is a great choice (of embeded database). 
    As a matter of fact, 
    both q and textql are based on SQLite3.
    You can refer to https://www.sqlite.org/cvstrac/wiki?p=ImportingFiles 
    on how to importing files into SQLite3.
    If you prefer a client-server database, 
    you can either MySQL, etc. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;msg&lt;/span&gt; &lt;span class="nb"&gt;VarChar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="nb"&gt;Decimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;LOAD&lt;/span&gt; &lt;span class="k"&gt;DATA&lt;/span&gt; &lt;span class="n"&gt;INFILE&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/tmp/data.txt&amp;#39;&lt;/span&gt; 
&lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="programming"></category><category term="SQL"></category><category term="structured text"></category><category term="CSV"></category><category term="TSV"></category></entry><entry><title>Using Bash in Docker</title><link href="http://www.legendu.net/en/blog/Using-Bash-in-Docker/" rel="alternate"></link><published>2017-01-14T13:54:14-08:00</published><updated>2017-01-14T13:54:14-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2017-01-14:/en/blog/Using-Bash-in-Docker/</id><summary type="html">&lt;p&gt;If the docker container was started using &lt;code&gt;/bin/bash&lt;/code&gt; 
(you can check using &lt;code&gt;docker ps&lt;/code&gt;) command you can access it using &lt;code&gt;attach&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker attach container_name_or_id
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the docker container was started but not with &lt;code&gt;/bin/bash&lt;/code&gt;,
you have to create a bash instance inside the container using &lt;code&gt;exec&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker &lt;span class="nb"&gt;exec …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;If the docker container was started using &lt;code&gt;/bin/bash&lt;/code&gt; 
(you can check using &lt;code&gt;docker ps&lt;/code&gt;) command you can access it using &lt;code&gt;attach&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker attach container_name_or_id
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the docker container was started but not with &lt;code&gt;/bin/bash&lt;/code&gt;,
you have to create a bash instance inside the container using &lt;code&gt;exec&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; -it container_name_or_id /bin/bash 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that &lt;code&gt;attach&lt;/code&gt; does not create a new instance of bash 
but use the already created one in the corresponding docker container.
However, 
both &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; create new bash instances.&lt;/p&gt;
&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;docker&lt;/span&gt; &lt;span class="k"&gt;exec&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;u&lt;/span&gt; &lt;span class="nv"&gt;dclong&lt;/span&gt; &lt;span class="nv"&gt;jupyterlab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;py&lt;/span&gt; &lt;span class="nv"&gt;jupyter&lt;/span&gt; &lt;span class="nv"&gt;nbconvert&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;html&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;execute&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nv"&gt;ExecutePreprocessor&lt;/span&gt;.&lt;span class="nb"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;workdir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;spend&lt;/span&gt;.&lt;span class="nv"&gt;ipynb&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</content><category term="software"></category><category term="docker"></category><category term="bash"></category><category term="shell"></category></entry><entry><title>Start RStudio Server After Upgrading</title><link href="http://www.legendu.net/en/blog/start-rstudio-server-after-upgrading/" rel="alternate"></link><published>2016-12-10T02:09:11-08:00</published><updated>2016-12-10T02:09:11-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-10:/en/blog/start-rstudio-server-after-upgrading/</id><summary type="html">&lt;p&gt;It is quite often that the RStudio server cannot be start after upgrading. 
This is due to running R session in the background. 
A simple solution is to just restart the host machine. 
However, it is very risky to start servers (especially remote shared ones).
An alternative way is to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is quite often that the RStudio server cannot be start after upgrading. 
This is due to running R session in the background. 
A simple solution is to just restart the host machine. 
However, it is very risky to start servers (especially remote shared ones).
An alternative way is to find the R session in the background,
kill it and then start the RStudio server.
The following instruction assumes that 
the port 8787 (default) is used by RStudio server.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find processes that listen to the port 8787.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;fuser&lt;/span&gt; &lt;span class="mi"&gt;8787&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kill all processes that listen to the port 8787. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;fuser&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="mi"&gt;8787&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tcp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or you can also use the command &lt;code&gt;kill&lt;/code&gt; to terminate processes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start RStudio server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;rstudio&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="k"&gt;start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</content><category term="software"></category><category term="IDE"></category><category term="RStudio"></category></entry><entry><title>Install R Packages Behind Proxy on Windows</title><link href="http://www.legendu.net/en/blog/install-r-packages-on-windows-behind-proxy/" rel="alternate"></link><published>2016-12-10T01:57:25-08:00</published><updated>2016-12-10T01:57:25-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-10:/en/blog/install-r-packages-on-windows-behind-proxy/</id><summary type="html">&lt;p&gt;There are 3 ways to install R packages behind a proxy on Windows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download packages and install them locally.
This is generally speaking not recommended 
as it is a hassle to resolve dependencies.
When the package you want to install has no (or very few) dependencies,
you can use this …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;There are 3 ways to install R packages behind a proxy on Windows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Download packages and install them locally.
This is generally speaking not recommended 
as it is a hassle to resolve dependencies.
When the package you want to install has no (or very few) dependencies,
you can use this way to install it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;setInternet2(use=True)&lt;/code&gt; and then install packages as usual.
This is the recommended way to install R packages behind a proxy on Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select "Internet2" when you are asked to specify standard or Internet2 
during installation of R.
If you have done this during the installation of R,
you can install packages as usually with no need to run &lt;code&gt;setInternet2(use=True)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have a proxy server to use, 
you can first setup proxy environment variables 
and then install R packages.
Proxy environment variables can be set using the following code. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;Sys&lt;/span&gt;.&lt;span class="k"&gt;setenv&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;http_proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;proxy_server:port&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;Sys&lt;/span&gt;.&lt;span class="k"&gt;setenv&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;https_proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;proxy_server:port&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a more general way and is recommended if you have a proxy serve to use.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note that working in a Linux virtual machine on your office laptop with Windows OS
can possibly help you circumvent the proxy issue.&lt;/p&gt;</content><category term="programming"></category><category term="R"></category><category term="Windows"></category><category term="install package"></category><category term="proxy"></category></entry><entry><title>Install Jupyter-Scala for JupyterLab</title><link href="http://www.legendu.net/en/blog/install-jupyter-scala-for-jupyterlab/" rel="alternate"></link><published>2016-12-10T01:52:37-08:00</published><updated>2016-12-10T01:52:37-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-10:/en/blog/install-jupyter-scala-for-jupyterlab/</id><summary type="html">&lt;p&gt;Note: Apache Toree is a better alternative than Jupyter Scala.
It is suggested that you use Apache Toree instead of Jupyter Scala.&lt;/p&gt;
&lt;p&gt;You can install Jupyter Scala following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure Java and Scala are installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jdk&lt;/span&gt; &lt;span class="n"&gt;scala&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download coursier and move it to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Note: Apache Toree is a better alternative than Jupyter Scala.
It is suggested that you use Apache Toree instead of Jupyter Scala.&lt;/p&gt;
&lt;p&gt;You can install Jupyter Scala following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure Java and Scala are installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;jdk&lt;/span&gt; &lt;span class="n"&gt;scala&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download coursier and move it to a searchable path. 
I place it in &lt;code&gt;$HOME/bin&lt;/code&gt; which I have included in &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;curl&lt;/span&gt; &lt;span class="nt"&gt;-L&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nt"&gt;coursier&lt;/span&gt; &lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;git&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;io&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;vgvpD&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;x&lt;/span&gt; &lt;span class="nt"&gt;coursier&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the jupyter-scala repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;clone&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;@github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;com&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;alexarchambault&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jupyter&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scala&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the following command insider the directory to insall Jupyter Scala.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jupyter&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scala&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You might have issues due to no permission to create directories/files under &lt;code&gt;$HOME/.local/share/jupyter&lt;/code&gt;.
If that happens, 
change the permission of the directory and try again.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="mi"&gt;777&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jupyter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="Scala"></category><category term="Jupyter"></category><category term="JupyterLab"></category><category term="jupyter-scala"></category><category term="kernel"></category></entry><entry><title>Install the rJava Package in R</title><link href="http://www.legendu.net/en/blog/install-the-rjava-package-in-r/" rel="alternate"></link><published>2016-12-10T01:44:32-08:00</published><updated>2016-12-10T01:44:32-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-10:/en/blog/install-the-rjava-package-in-r/</id><summary type="html">&lt;p&gt;The most convenient way is to install the corresponding Linux package if exists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cran&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rjava&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, this Linux package is often outdated.
Follow the steps below if you'd rather install rJava manually.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install OpenJDK and configure Java. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-*&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;R …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;The most convenient way is to install the corresponding Linux package if exists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cran&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rjava&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, this Linux package is often outdated.
Follow the steps below if you'd rather install rJava manually.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install OpenJDK and configure Java. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;openjdk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-*&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;CMD&lt;/span&gt; &lt;span class="n"&gt;javareconf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the &lt;code&gt;rJava&lt;/code&gt; package in R.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;rJava&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If it does not work, 
please set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable manually in step 1
and then try step 2 again.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-openjdk-amd64/jre
&lt;/pre&gt;&lt;/div&gt;</content><category term="R"></category><category term="rJava"></category><category term="Java"></category><category term="Linux"></category></entry><entry><title>Functions and Calls in R</title><link href="http://www.legendu.net/en/blog/functions-and-calls-in-r/" rel="alternate"></link><published>2016-12-10T01:23:25-08:00</published><updated>2016-12-10T01:23:25-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-12-10:/en/blog/functions-and-calls-in-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"["&lt;/code&gt; is a function in R.
It takes elements from a container (vector, matrix, list, etc.)
For example, suppose &lt;code&gt;lv&lt;/code&gt; is a list of vectors.
The following code takes the first element of each vector in &lt;code&gt;lv&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this way,
you do not have to define a function …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;"["&lt;/code&gt; is a function in R.
It takes elements from a container (vector, matrix, list, etc.)
For example, suppose &lt;code&gt;lv&lt;/code&gt; is a list of vectors.
The following code takes the first element of each vector in &lt;code&gt;lv&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;[&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this way,
you do not have to define a function to get the element of a vector by yourself.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;get_1st_elem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can assign value to an R object by its name (in string) using the function &lt;code&gt;assign&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can get the value (i.e., deep copy not reference) of an R object
(for general expression, use &lt;code&gt;eval&lt;/code&gt; with &lt;code&gt;deparse&lt;/code&gt;)
by its name (string) using the function &lt;code&gt;get&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;as.character&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...)&lt;/span&gt;  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Primitive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;as.character&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;as.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;character&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the contratry,
you can use the function &lt;code&gt;substitute&lt;/code&gt; or &lt;code&gt;quote&lt;/code&gt; to get the name (string) of an object,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;deparse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;substitute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ftree_0_4_0_0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;_100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;ftree_0_4_0_0.5_100&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;substitute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ftree_0_4_0_0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;_100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;ftree_0_4_0_0.5_100&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quote&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ftree_0_4_0_0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;_100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The function &lt;code&gt;dclong.fs::sym2str&lt;/code&gt; is an interesting one
which tries to be smart to convert an R object to the right string.
Note that &lt;code&gt;get&lt;/code&gt; only works on object names not string containing general expressions.
To evaluate a string containing an R expression,
you have to first parse it using the function &lt;code&gt;parse&lt;/code&gt;
and then evaluate it using the function &lt;code&gt;eval&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;x + 1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are several ways to create function calls without executing it.
The first way is to use &lt;code&gt;call&lt;/code&gt; by passing the name of a function
and corresponding parameters to it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;call&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7618801&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2722733&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1521628&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The second way is to create a list containing a function,
and parameters to be passed to the function,
and then set the mode of the list to &lt;code&gt;'call'&lt;/code&gt; or coerce it to a call using &lt;code&gt;as.call&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;
&lt;span class="k"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;call&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;842330&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;027134&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;515679&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;346022&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last way is to use the function &lt;code&gt;parse&lt;/code&gt; to parse expressions (string).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;rnorm(3)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is useful when you want delayed evaluation or flexible calls.
Though you can make a function flexible using dots arguments ("..."),
you can use only one dots arguments,
and all arguments in the dots arguments must be pass to one function.
Using list with mode &lt;code&gt;'call'&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt;,
you can make a user-defined function accept list as argument,
which contains arguments to be passed to a call in the user-defined function.
In this way,
the list argument containing arguments to be passed to a call is comparable to the dots argument.
The advantage of list argument over the dots argument is that
you can use more than multiple list arguments containing arguments
to be passed to different calls in a user-defined function,
thus it is even more flexible.
Another smart use of call and &lt;code&gt;eval&lt;/code&gt; is to apply a function over a list of argument.
For example,
if you want to convert a list (of vectors/matrices) to a matrix,
you can use the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;matrices&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="k"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
   &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is another R &lt;code&gt;do.call&lt;/code&gt; which performs the above operations at once,
i.e., it constructs and executes a function call from a name or a function
and a list of arguments to be passed to it.
The following is another example of converting a list (of vectors/matrices) to a matrix.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;.&lt;span class="nv"&gt;call&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cbind&lt;/span&gt;, &lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
  &lt;span class="nv"&gt;matrix&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;2&lt;/span&gt;, &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,
  &lt;span class="nv"&gt;matrix&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="mi"&gt;2&lt;/span&gt;, &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="ss"&gt;))&lt;/span&gt;
[,&lt;span class="mi"&gt;1&lt;/span&gt;] [,&lt;span class="mi"&gt;2&lt;/span&gt;] [,&lt;span class="mi"&gt;3&lt;/span&gt;] [,&lt;span class="mi"&gt;4&lt;/span&gt;]
[&lt;span class="mi"&gt;1&lt;/span&gt;,]    &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;
[&lt;span class="mi"&gt;2&lt;/span&gt;,]    &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;code&gt;data-structures&lt;/code&gt;,
you learned that there is a &lt;code&gt;sapply&lt;/code&gt; which can apply a function over a list.
The difference between &lt;code&gt;do.call&lt;/code&gt; and &lt;code&gt;sapply&lt;/code&gt; is that&lt;br&gt;
&lt;code&gt;do.call&lt;/code&gt; takes the whole list as an argument and returns only one result
while  &lt;code&gt;sapply&lt;/code&gt; takes each element of the list as argument and returns a list of results
(Sometimes, theses results are reformed to a simpler data structure,
e.g. a vector or a matrix.).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check whether an object is a call, you can use &lt;code&gt;is.call&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can refer to missing arguments in user-defined functions.
R will not complain until these missing arguments are really required.
For example consider the following silly function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;, &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; 0) {&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;...&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
  }
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
}
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; foo(-1)&lt;/span&gt;
[&lt;span class="mi"&gt;1&lt;/span&gt;] &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;...&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that &lt;code&gt;foo(-1)&lt;/code&gt; calls &lt;code&gt;foo(x = 1, y = y)&lt;/code&gt;.
You might think that this is not valid because the argument &lt;code&gt;y&lt;/code&gt; is missing,
however,
R does not complain about it because the argument &lt;code&gt;y&lt;/code&gt; is never used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;try&lt;/code&gt; allows us to handle error-recovery,
which is similar to &lt;code&gt;try-catch-end try&lt;/code&gt; in vb.net.
If you this function,
R does not stop executing code when error is detected,
rather you can decide what to do when error happens.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use function &lt;code&gt;switch&lt;/code&gt; to write branch statement in R,
however this function is not very friendly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use command &lt;code&gt;stop&lt;/code&gt; to stop executing a function in R,
however it will print error message at the same time.
And what's more,
no values can be returned.
To avoid printing error messages or to return values when exiting a function,
we can use function &lt;code&gt;return&lt;/code&gt;.
Even if a function do not return anything,
we can pass it as a argument to &lt;code&gt;return&lt;/code&gt;,
and absolutely nothing will be return in this case.
This can be help if we do not want anything to be return in a user-defined function.
Notice that you can use return as a statement (i.e. put it on a single line),
but it has no effect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the names of build-in functions in R as parameter in self-defined functions.
To avoid confusion,
we can we use name space such as &lt;code&gt;base::matrix&lt;/code&gt; instead of &lt;code&gt;matrix&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define overloaded functions and functions with uncertain number of variables (using &lt;code&gt;...&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can define a function inside another function in R.
This can be helpful when we want to define some function that never be used again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define sub functions in a function, which is very convenient.
For example,
sometimes you want to call another function inside a function.
However,
the function that you want to call is different every time
and you even do not how to define it before you get intermediate results,
i.e. the function that you want to call does not just differ in the form of arguments.
To achieve this,
you can use the strategy of defining sub functions inside a function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some functions in R require a function as argument.
To pass value to the argument,
you can directly give the define of a function instead of writing a function first
and then pass the name of the defined function to the argument.
This can be very convenient sometime,
e.g. when you use function &lt;code&gt;apply&lt;/code&gt;,
the function that you want to call is not define in R yet very simple,
then you can use the strategy of passing definition to argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In R the arguments passed to a function can be changed,
e.g. if x is a argument a function,
then you can assign a new value to x.
Notice that in some other languages,
the arguments passed to a function cannot be changed, e.g. Mathematica.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For most functions in R,
you can just type in their names in R GUI to get their source code;
for functions written in S3,
you can use function &lt;code&gt;getS3method&lt;/code&gt; to get their source code;
for other functions written in C or Fortran,
you have to download the source code of R in order to find the source code of these functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a R function which accepts the dots argument (...),
you can pass basically any argument to it including dots itself.
So if you want to pass all stuff in a dots argument to a function,
you do not have to parse it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usually built-in R functions have many arguments
and because R use partial matches to pass arguments to functions,
you might never get a warning message
if you use some argument that actually does not exist.
If this happens when you use a function directly,
it is possible for you to find this subtle mistake.
However, if you make this kind of mistakes in a user-defined function,
then it can be a very tricky bug.
So it is recommended that you always check the arguments of functions
that you are not very familiar with before you use it.
When you come across some tricky bugs,
you might want to check whether it is resulted from miss-passed argument(s) or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R uses buffer to store the output and then print it when the buffer is full.
In order to print the information immediately you can use function &lt;code&gt;flush.console&lt;/code&gt;
after you use function &lt;code&gt;cat&lt;/code&gt; to print out information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you always use &lt;code&gt;{}&lt;/code&gt; when use branches and loops in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An R object exists ever since it is defined
until the end of its current evaluation environment.
So unlike C++ and Java in which an object defined in a block is only in effect in that block,
an object in R defined in a block will still be in effect outside the block.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;with&lt;/code&gt; allows us to evaluate expressions in a data environment,
so it's convenient to use it to work with data frames.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;T&lt;/code&gt; to stand for &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; stand for &lt;code&gt;FALSE&lt;/code&gt; when you write code in R,
but you'd better use &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt;
when you write user-defined functions
because &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; are actually global variables that are defined as &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt;
while &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt; are constant in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function&lt;code&gt;missing&lt;/code&gt; tests whether a value has been specified as an argument for a function,
so it can be used write very robust functions and functions with flexible number of arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some functions in R can only be use when R is run in interactive mode.
If you want your code to run flawlessly in any mode,
you can use &lt;code&gt;interactive&lt;/code&gt; to check whether R is run in interactive mode or command mode,
and modify your code correspondingly.
Notice that when compiling an R package (commands such as &lt;code&gt;R CMD build&lt;/code&gt; are used),
R is run in command mode.
As the reason mentioned before,
some of your examples might not run correctly,
which can make your package fail to pass the test.
A simply tricky is to include your code in block &lt;code&gt;if (interactive()) { ... }&lt;/code&gt;,
so that it will not run when the package is compiled
while it runs perfectly when copied and pasted in R GUI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pmatch&lt;/code&gt; performs partial string matching. If a function takes a
string argument, you can incorporate partial matching technic so
that the users can use partial values for the string argument. This
can make it a better experience for users to use the function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usually a &lt;code&gt;for&lt;/code&gt; loop is more convenient than a &lt;code&gt;while&lt;/code&gt; loop in all
kinds of programing languages. However, a &lt;code&gt;for&lt;/code&gt; loop in R requires a
vector specifying the loop range. Sometimes it's not very convenient
to construct a general purpose vector for a loop, e.g. if a loop
starts from &lt;code&gt;loopStart&lt;/code&gt; and ends at &lt;code&gt;loopEnd&lt;/code&gt; with a step &lt;code&gt;loopStep&lt;/code&gt;
but &lt;code&gt;loopEnd&lt;/code&gt; is not always greater than &lt;code&gt;loopStart&lt;/code&gt;, then it's
clumsy to use &lt;code&gt;loop&lt;/code&gt;. In this kind of situations, you can use a
&lt;code&gt;while&lt;/code&gt; loop instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The vector in a for loop is calculated once and stored.
So it will not take more time if you put an expression
which generate the needed vector in for loop.
What is more,
if you use an existing vector,
the for loop will not be affected even if you change the original vector.
(How about while loop? I think it is the same.
In one word,
the conditions is determined before the loop and cannot be changed in the loop.
It is the same in MATLAB, but different in Java.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;addTaskCallback&lt;/code&gt; registers an R function that is to be called
each time a top-level task is completed.
&lt;code&gt;removeTaskCallback&lt;/code&gt; and &lt;code&gt;taskCallbackManager&lt;/code&gt; are also very useful functions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="function"></category><category term="programming"></category><category term="call"></category><category term="CRAN"></category></entry><entry><title>Call Java in R Using Package rJava</title><link href="http://www.legendu.net/en/blog/call-java-in-r/" rel="alternate"></link><published>2016-10-23T22:53:22-07:00</published><updated>2016-10-23T22:53:22-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-10-23:/en/blog/call-java-in-r/</id><summary type="html">&lt;p&gt;The package "rJava" offers a convenient way to call Java code from R. 
The following are some tips for using the "rJava" package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You must first start a Java Virtual Machine 
using &lt;code&gt;.jinit&lt;/code&gt; before calling Java code from R. 
You can specifiy a vector of paths for the function &lt;code&gt;.jinit …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;The package "rJava" offers a convenient way to call Java code from R. 
The following are some tips for using the "rJava" package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You must first start a Java Virtual Machine 
using &lt;code&gt;.jinit&lt;/code&gt; before calling Java code from R. 
You can specifiy a vector of paths for the function &lt;code&gt;.jinit&lt;/code&gt;. 
If the Java code relies on some other package or jar files, 
their path must also be added to the search path of the Java
Virtual Machine. 
Notice the the class paths must be full paths rather than relative paths.
If you develop an R package depending on &lt;code&gt;rJava&lt;/code&gt;, 
you can &lt;code&gt;.jpackage&lt;/code&gt; to initializes a Java Virtual Machine (JVM) 
in the function &lt;code&gt;.onLoad&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After creating an Java object, 
you can use &lt;code&gt;$&lt;/code&gt; to invoke its public methods
and access its public fields directly instead of using the function &lt;code&gt;.jcall&lt;/code&gt; or &lt;code&gt;.jfield&lt;/code&gt;. 
This way preserves the flavor of object oriented programming, 
and is much more convenient. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use boolean values, double values, strings directly 
when invoking Java methods in R. 
Because numerical numbers are double numbers be default in R, 
you should either add suffix "L" to a number or use function &lt;code&gt;as.integer&lt;/code&gt; 
to convert it to an integer if you want to pass it as an integer to a Java method. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can call a static method of class using the function &lt;code&gt;.jcall&lt;/code&gt;. 
Just replace the object argument with the name of the class whose 
static method you want to call. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To pass an vector to a Java method, you have to use the function 
&lt;code&gt;.jarray&lt;/code&gt; to convert the vector to a Java array. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The table of JNI:&lt;br&gt;
&lt;code&gt;I&lt;/code&gt;: integer 
&lt;code&gt;D&lt;/code&gt;: double 
&lt;code&gt;J&lt;/code&gt;: long F: float V: void Z: boolean C: char
&lt;code&gt;B&lt;/code&gt;: byte 
&lt;code&gt;L&amp;lt;class\&amp;gt;&lt;/code&gt;: java object of the class &amp;lt;class&gt;, 
e.g.,  &lt;code&gt;Ljava/lang/Object&lt;/code&gt;
&lt;code&gt;[&amp;lt;type\&amp;gt;&lt;/code&gt; array of objects of type &lt;code&gt;&amp;lt;type\&amp;gt;&lt;/code&gt;,
e.g. &lt;code&gt;[D&lt;/code&gt; for an array of doubles&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="Java"></category><category term="array"></category><category term="rJava"></category><category term="R"></category><category term="vector"></category><category term="package"></category></entry><entry><title>Writing R Extensions</title><link href="http://www.legendu.net/en/blog/writing-r-extensions/" rel="alternate"></link><published>2016-10-23T17:13:18-07:00</published><updated>2016-10-23T17:13:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-10-23:/en/blog/writing-r-extensions/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The following are some tips for using the old fashioned way (using &lt;code&gt;.C&lt;/code&gt; and &lt;code&gt;.Call&lt;/code&gt;) 
to write R extensions. 
The state-of-art way to extend R via C/C++ is to use the &lt;code&gt;Rcpp&lt;/code&gt; package.
Check &lt;a href="http://dclong.github.io/en/2012/09/rcpp-rocks/"&gt;this post&lt;/a&gt; For tips on using &lt;code&gt;Rcpp&lt;/code&gt; package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you want to call C code …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The following are some tips for using the old fashioned way (using &lt;code&gt;.C&lt;/code&gt; and &lt;code&gt;.Call&lt;/code&gt;) 
to write R extensions. 
The state-of-art way to extend R via C/C++ is to use the &lt;code&gt;Rcpp&lt;/code&gt; package.
Check &lt;a href="http://dclong.github.io/en/2012/09/rcpp-rocks/"&gt;this post&lt;/a&gt; For tips on using &lt;code&gt;Rcpp&lt;/code&gt; package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you want to call C code from R, 
the arguments of C functions to be called by &lt;code&gt;.C&lt;/code&gt; must be pointers. 
This means that only simple data sturcture (primitive types and array) 
can be passed between R and C.
By default, 
&lt;code&gt;.C&lt;/code&gt; makes a copy of the arguments to be passed to C functions, 
and thus the corresponding variables/objects in R are unchanged. 
If a large array/vector is to be passed to C, 
you can suppress copying using the option &lt;code&gt;DUP=FALSE&lt;/code&gt; to increase performance.&lt;br&gt;
However, 
the corresponding variables/objects in R will be changed if the C code mutates them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is very annoying to work with pointer in C, 
however, 
you are forced to work with pointer if you want to C functions for calling in R. 
One suggestions is to avoid using pointers in functions except
the call that you directly call from R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A matrix in R is essentially a vector with "dim" property, 
so when you pass a matrix to a C function from R, 
you actually pass a 1-dimensional array to the C function. 
This is a place inviting errors. 
Because of the way that a 2-D array is saved in C/C++, 
it is more nature to stretch a 2-D array to a 1-D array by rows 
while a matrix in R is stretched to a vector by columns by default. 
So you have be careful that the matrix you passed to C/C++ is 
in the right form that you want. 
If this is a problem, 
tranposing the matrix can be an easy solutions many times.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A good thing about interface with C in R is that the RNG in R can be synced easily. 
To do this, 
you just have to call the C functions that R supplies for generating random numbers, 
and surround them in &lt;code&gt;GetRNGstate();&lt;/code&gt; and  &lt;code&gt;PutRNGstate();&lt;/code&gt;. 
For more details, 
please refer to the R extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To call C++ code from R, 
you can write C wrapper functions/interfaces (surrounded by  &lt;code&gt;extern "C"{}&lt;/code&gt;) in your C++ code, 
and then call the C wrapper functions/interaces using the &lt;code&gt;.C&lt;/code&gt; function from R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When writing a R package which use external code, 
you do not have to compile it manually on different platforms. 
You just need to place the code into the "src" folder, 
and it will be automatically compiled 
(to the right type of library according to which platform you use) 
when you compile your package. 
What's more, 
&lt;code&gt;library.dynam&lt;/code&gt; helps you to automatically load the compiled code on differently platforms, 
i.e. you don't have to check the type of the platform 
and use &lt;code&gt;dyn.load&lt;/code&gt; to load the compiled code accordingly. 
However, 
you must pass the name of the compiled code to &lt;code&gt;library.dynam&lt;/code&gt; without extension.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="Rcpp"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>An IO Bug in R</title><link href="http://www.legendu.net/en/blog/input-bug-r/" rel="alternate"></link><published>2016-08-15T21:22:47-07:00</published><updated>2016-08-15T21:22:47-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-08-15:/en/blog/input-bug-r/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I encountered an input/output bug in R in Linux system. 
The symptom is that input and output are not displayed in the terminal 
and the warning message 
"An unusual circumstance has arisen in the nesting of readline input. 
Please report using bug.report()" is shown. 
I found that though …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I encountered an input/output bug in R in Linux system. 
The symptom is that input and output are not displayed in the terminal 
and the warning message 
"An unusual circumstance has arisen in the nesting of readline input. 
Please report using bug.report()" is shown. 
I found that though input and output are not displayed, you can still 
interact with the underlying R session. 
A safe way is to save the R workspace, quit the R session, open a new 
R session and load in the saved workspace. To save the R workspace,
just type in &lt;code&gt;save.image('ws_name')&lt;/code&gt; in the console, where &lt;code&gt;ws_name&lt;/code&gt; 
is the name of the workspace. Notice that you will not see anything 
happen on the console, so you have to make sure that you do not make 
any mistake typing in the command. To quit the R session after saving 
the workspace, you can type in 'q('no')' in the console. 
Similarly, you won't see anything in the console, so make sure you do not 
make any mistake. Now can open a new R session, and then load in the saved 
workspace. &lt;/p&gt;</content><category term="warning"></category><category term="IO"></category><category term="programming"></category><category term="R"></category><category term="bug"></category></entry><entry><title>A Bug in Mathematica</title><link href="http://www.legendu.net/en/blog/bug-in-mathematica/" rel="alternate"></link><published>2016-08-15T21:22:23-07:00</published><updated>2016-08-15T21:22:23-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-08-15:/en/blog/bug-in-mathematica/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Mathematica is a very intelligent and powerful math software. 
I use it in my study and research a lot. 
Mathematica's ability to take derivative and to calculate 
limit is obvious powerful–way much beyond many mathematician's ability. 
Mathematica's ability to calculate integral is also powerful. 
There are many integrals than …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Mathematica is a very intelligent and powerful math software. 
I use it in my study and research a lot. 
Mathematica's ability to take derivative and to calculate 
limit is obvious powerful–way much beyond many mathematician's ability. 
Mathematica's ability to calculate integral is also powerful. 
There are many integrals than I'm not able to solve while Mathmatica can. 
For a long time I totally trusted Mathematica. 
I thought that it is so intelligent an software that whenever 
it's able to give me a result it must right, 
until one day I asked Mathematica to do some integrals.&lt;br&gt;
See whether you can find what's wrong with Mathematica.&lt;/p&gt;
&lt;p&gt;What I learn is not just this bug in Mathmatica. 
What I learned is that software has bugs, no matter how intelligent it is. 
Bugs happens when a software grow large. 
Never fully trust a software. You should always judge the result based on your own knowledge.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Integrate&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Exp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Sin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;NIntegrate&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Exp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Sin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="mf"&gt;0.635862&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Integrate[Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Exp&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Cos[theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Sin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Pi&lt;/span&gt;&lt;span class="err"&gt;}]]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Mathematica"></category><category term="programming"></category><category term="bug"></category></entry><entry><title>Transfer Files over Network in Linux</title><link href="http://www.legendu.net/en/blog/transfer-files-over-network-in-linux/" rel="alternate"></link><published>2016-07-13T22:42:20-07:00</published><updated>2016-07-13T22:42:20-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/transfer-files-over-network-in-linux/</id><summary type="html">&lt;p&gt;&lt;strong&gt;
Things on this page are fragmentary and immature notes/thoughts of the author. 
It is not meant to readers but rather for convenient reference of the author and future improvement.
&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="comparison-of-network-drives-remote-file-system"&gt;Comparison of Network Drives (Remote File System)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;NFS is very fast but not secure and it is for Unix/Linux …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;
Things on this page are fragmentary and immature notes/thoughts of the author. 
It is not meant to readers but rather for convenient reference of the author and future improvement.
&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="comparison-of-network-drives-remote-file-system"&gt;Comparison of Network Drives (Remote File System)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;NFS is very fast but not secure and it is for Unix/Linux only. 
    It is a good choice for local network sharing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Samba is fast, secure and cross-platform. 
    it is good for general purpose sharing and popular in companies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SSHFS is slow but very secure and it is for Unix/Linux only. 
    It is good for situations where security is critical but performance is not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To sum up,
&lt;strong&gt;Samba is the one you want to use generally speaking&lt;/strong&gt;.
However,
if you are on a local network and performance is crtical, 
go with NFS.&lt;/p&gt;
&lt;h2 id="comparison-of-file-copying-tools"&gt;Comparison of File-copying Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, 
    &lt;code&gt;rsync&lt;/code&gt; is the tool you want to use in most situations. 
    It is definitely preferred over &lt;code&gt;scp&lt;/code&gt; 
    unless in situations when &lt;code&gt;rsync&lt;/code&gt; is not available (e.g., on Andrioid).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are some other file-copying tools such as mbuffer, nc, etc. 
    if you want to squeeze the most out of network speed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="n"&gt;zcf&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bigfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;m4p&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;mbuffer&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt; &lt;span class="n"&gt;otherhost&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;tar zxf -&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;https://linuxaria.com/article/tar-rsync-netcat-scp&lt;/p&gt;
&lt;p&gt;http://moo.nac.uci.edu/~hjm/HOWTO_move_data.html&lt;/p&gt;
&lt;p&gt;https://unix.stackexchange.com/questions/48399/fast-way-to-copy-a-large-file-on-a-lan&lt;/p&gt;</content><category term="internet"></category><category term="Linux"></category><category term="network"></category><category term="web"></category><category term="transfer"></category><category term="file system"></category><category term="nfs"></category><category term="SSH"></category></entry><entry><title>Some Terminologies in Business Investment</title><link href="http://www.legendu.net/en/blog/some-terminology-in-credit-portifolio-risk-management/" rel="alternate"></link><published>2016-07-13T22:26:26-07:00</published><updated>2016-07-13T22:26:26-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/some-terminology-in-credit-portifolio-risk-management/</id><summary type="html">&lt;h2 id="stock-ticker"&gt;Stock Ticker&lt;/h2&gt;
&lt;p&gt;A stock ticker is a report of the price for certain securities, 
updated continuously throughout the trading session by the various stock exchanges. 
A "tick" is any change in price, 
whether that movement is up or down. 
A stock ticker automatically displays these ticks, 
along with other relevant …&lt;/p&gt;</summary><content type="html">&lt;h2 id="stock-ticker"&gt;Stock Ticker&lt;/h2&gt;
&lt;p&gt;A stock ticker is a report of the price for certain securities, 
updated continuously throughout the trading session by the various stock exchanges. 
A "tick" is any change in price, 
whether that movement is up or down. 
A stock ticker automatically displays these ticks, 
along with other relevant information, 
like volume, 
that investors use to stay informed about current market conditions.&lt;/p&gt;
&lt;p&gt;A limited number of stocks appear on the stock ticker during any particular period, 
due to the large number of stocks that are actually trading at the same time. 
Often, the stocks that have the greatest change in price from the previous day's trading session, 
or those that are trading under the highest volume appear on the stock ticker.&lt;/p&gt;
&lt;p&gt;You may have seen a stock ticker scrolling by at the bottom 
of any financial news networks on television. 
The ticker provides current information for certain stocks, 
including: the ticker symbol (the one to four letter code that represents a particular stock); 
quantity traded (volume for each transaction); 
price, a green "up" arrow if price is higher than the previous day's closing value, 
a red "down" arrow if price is lower than the previous day; 
and the net price change (either as a dollar amount or as a percentage) from the previous day's close. 
If the price is unchanged, 
the arrow may be gray in color or simply absent. 
Often, the ticker symbol and the net price change appear color-coded: 
green if the price is higher than the previous session, red if price is lower.&lt;/p&gt;
&lt;p&gt;Many of today's fully-electronic stock tickers display market data in real-time or with a small delay. 
You can watch stock tickers on a variety of financial news networks, 
and many trading platforms allow you to customize and view stock tickers 
that can be displayed at the bottom of your computer monitor. &lt;/p&gt;
&lt;h2 id="personal-consumption-expenditures-pce"&gt;Personal Consumption Expenditures - PCE&lt;/h2&gt;
&lt;p&gt;A measure of price changes in consumer goods and services. 
Personal consumption expenditures consist of the actual 
and imputed expenditures of households; 
the measure includes data pertaining to durables, non-durables and services. 
It is essentially a measure of goods and services targeted toward individuals and consumed by individuals.&lt;/p&gt;
&lt;p&gt;Also referred to as "consumption."
Investopedia Says &lt;br&gt;
Investopedia explains 'Personal Consumption Expenditures - PCE'
Similar to the Consumer Price Index (CPI), PCE is a report (actually a part of the personal income report) put out by the Bureau of Economic Analysis of the Department of Commerce. &lt;/p&gt;
&lt;p&gt;There are two broad indexes of consumer prices in the United States: the CPI and the Chain Price Index for Personal Consumption Expenditures (PCEPI). They are similar in many respects, but there are some important differences that can lead to large gaps between CPI and PCEPI inflation rates. The PCEPI uses a chain index, which takes consumers' changing consumption due to prices into account; the CPI uses a fixed basket of goods with weightings that do not change over time.&lt;/p&gt;
&lt;p&gt;The PCE is a fairly predictable report that has little impact on the markets.&lt;/p&gt;
&lt;h2 id="beginning-market-value-bmv"&gt;Beginning Market Value (BMV)&lt;/h2&gt;
&lt;p&gt;The valuation at which the property should exchange at the date of origin, 
and the beginning of each period. 
The beginning market value at the start of every period is equal to 
the ending market value of the previous period.&lt;/p&gt;
&lt;p&gt;The market value is based on what both the buyer and seller (effectively, the market), 
deem the true value of the property to be. 
Market value is similar to market price given that the market remains efficient 
and the players are rational.&lt;/p&gt;
&lt;h2 id="ending-market-value-emv"&gt;Ending Market Value (EMV)&lt;/h2&gt;
&lt;p&gt;The value of an investment at the end of the investment period. 
Ending market value (EMV) is calculated by taking the beginning market value 
and adding the interest earned over the course of the investment. &lt;/p&gt;
&lt;div class="math"&gt;$$
\text{Ending Market Value} = \text{Beginning Market Value} \times (1 + \text{Interest Rate}). 
$$&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="math"&gt;$$
\text{Beginning market value} = 100
\text{Interest Rate} = 10%
EMV = 100 \times (1 + 0.10) = 110
$$&lt;/div&gt;
&lt;p&gt;This is an important equation to consider when choosing an investment 
as the time value of money can be a valuable decision-making variable.&lt;/p&gt;
&lt;h2 id="fair-market-value-fmv"&gt;Fair Market Value (FMV)&lt;/h2&gt;
&lt;p&gt;The price that a given property or asset would fetch in the marketplace, 
subject to the following conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prospective buyers and sellers are reasonably knowledgeable about the asset; 
they are behaving in their own best interests and are free of undue pressure to trade.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A reasonable time period is given for the transaction to be completed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Given these conditions, 
an asset's fair market value should represent an accurate valuation or assessment of its worth.&lt;/p&gt;
&lt;p&gt;Fair market values are widely used across many areas of commerce. 
For example, 
municipal property taxes are often assessed based on the fair market value of the owner's property. 
Depending upon how many years the owner has owned the home, 
the difference between the purchase price and the residence's fair market value can be substantial.&lt;/p&gt;
&lt;p&gt;Fair market values are often used in the insurance industry as well. 
For example, when an insurance claim is made as a result of a car accident, 
the insurance company covering the damage to the owner's vehicle will usually cover damages 
up to the fair market value of the automobile.&lt;/p&gt;
&lt;h2 id="capital-appreciation"&gt;Capital Appreciation&lt;/h2&gt;
&lt;p&gt;A rise in the value of an asset based on a rise in market price. 
Essentially, 
the capital that was invested in the security has increased in value, 
and the capital appreciation portion of the investment includes all of the market value 
exceeding the original investment or cost basis. 
Capital appreciation is one of the two main sources of investment returns, 
with the other being dividend or interest income.&lt;/p&gt;
&lt;p&gt;For example, 
say you purchase a share for \&lt;span class="math"&gt;\(10, 
which pays a dividend of a \\)&lt;/span&gt;1 per share each year, 
and is now trading at \&lt;span class="math"&gt;\(15 per share a year later. 
Your capital appreciation in the investment is \\)&lt;/span&gt;5, 
or 50%, 
as the price of the share has increased \&lt;span class="math"&gt;\(5 over your purchase price or cost basis. 
Your interest income return is \\)&lt;/span&gt;1, 
or 10%, 
for a total return on the shares is \$6 or 60%.&lt;/p&gt;
&lt;p&gt;Capital appreciation is often a stated investment goal of many mutual funds. 
These funds look to find investments that will rise in value 
based on increased earnings or other fundamental metrics. 
Investments targeted for capital appreciation tend have more risk 
than assets chosen for capital preservation and income generation, 
such as government, municipal bonds, or dividend-paying stocks. 
Because of this, 
capital appreciation funds are considered appropriate for risk-tolerant investors.&lt;/p&gt;
&lt;h2 id="mutual-fund"&gt;Mutual Fund&lt;/h2&gt;
&lt;p&gt;An investment vehicle that is made up of a pool of funds 
collected from many investors for the purpose of investing in securities 
such as stocks, bonds, money market instruments and similar assets. 
Mutual funds are operated by money managers, 
who invest the fund's capital and attempt to produce capital gains and income 
for the fund's investors. 
A mutual fund's portfolio is structured and maintained to match the investment objectives 
stated in its prospectus.&lt;/p&gt;
&lt;p&gt;One of the main advantages of mutual funds is that they give small investors access 
to professionally managed, diversified portfolios of equities, bonds and other securities, 
which would be quite difficult (if not impossible) to create with a small amount of capital. 
Each shareholder participates proportionally in the gain or loss of the fund. 
Mutual fund units, or shares, are issued and can typically be purchased or redeemed 
as needed at the fund's current net asset value (NAV) per share, 
which is sometimes expressed as NAVPS.&lt;/p&gt;
&lt;h2 id="security"&gt;Security&lt;/h2&gt;
&lt;p&gt;A financial instrument that represents: 
an ownership position in a publicly-traded corporation (stock), 
a creditor relationship with governmental body or a corporation (bond), 
or rights to ownership as represented by an option. 
A security is a fungible, negotiable financial instrument 
that represents some type of financial value. T
he company or entity that issues the security is known as the issuer. &lt;/p&gt;
&lt;p&gt;For example, 
the issuer of a bond issue may be a municipal government raising funds 
for a particular project. 
Investors of securities may be retail investors 
(those who buy and sell securities on their own behalf and not for an organization) 
and wholesale investors 
(financial institutions acting on behalf of clients or acting on their own account). 
Institutional investors include 
investment banks, pension funds, managed funds and insurance companies.&lt;/p&gt;
&lt;p&gt;Securities are typically divided into debt securities and equities. 
A debt security is a type of security that represents money that is borrowed 
that must be repaid, 
with terms that define the amount borrowed, 
interest rate and maturity/renewal date. 
Debt securities include government and corporate bonds, 
certificates of deposit (CDs), 
preferred stock and collateralized securities (such as CDOs and CMOs). &lt;/p&gt;
&lt;p&gt;Equities represent ownership interest held by shareholders in a corporation, 
such as a stock. 
Unlike holders of debt securities who generally receive only interest 
and the repayment of the principal, 
holders of equity securities are able to profit from capital gains. &lt;/p&gt;
&lt;p&gt;In the United States, 
the U.S. Securities and Exchange Commission (SEC) 
and other self-regulatory organizations 
(such as the Financial Industry Regulatory Authority) 
regulate the public offer and sale of securities.&lt;/p&gt;
&lt;h2 id="principal"&gt;Principal&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The amount borrowed or the amount still owed on a loan, separate from interest. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The original amount invested, separate from earnings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The face value of a bond.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The owner of a private company.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The main party to a transaction, 
acting as either a buyer or seller for his/her own account and risk. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Be sure to take into account the context in which this term is used, 
as the exact meaning of the term has many variations. &lt;/p&gt;
&lt;p&gt;Also referred to as "corpus."&lt;/p&gt;
&lt;h2 id="hedge-fund"&gt;Hedge Fund&lt;/h2&gt;
&lt;p&gt;An aggressively managed portfolio of investments 
that uses advanced investment strategies 
such as leveraged, long, short and derivative positions 
in both domestic and international markets 
with the goal of generating high returns 
(either in an absolute sense or over a specified market benchmark).&lt;/p&gt;
&lt;p&gt;Legally, hedge funds are most often set up as private investment partnerships 
that are open to a limited number of investors 
and require a very large initial minimum investment. 
Investments in hedge funds are illiquid 
as they often require investors keep their money in the fund for at least one year.&lt;/p&gt;
&lt;p&gt;For the most part, 
hedge funds (unlike mutual funds) are unregulated 
because they cater to sophisticated investors. 
In the U.S., laws require that the majority of investors in the fund be accredited. 
That is, 
they must earn a minimum amount of money annually 
and have a net worth of more than \$1 million, 
along with a significant amount of investment knowledge. 
You can think of hedge funds as mutual funds for the super rich. 
They are similar to mutual funds in that investments are pooled and professionally managed, 
but differ in that the fund has far more flexibility in its investment strategies.&lt;/p&gt;
&lt;p&gt;It is important to note that hedging is actually the practice of attempting to reduce risk, 
but the goal of most hedge funds is to maximize return on investment. 
The name is mostly historical, 
as the first hedge funds tried to hedge against the downside risk of a bear market 
by shorting the market 
(mutual funds generally can't enter into short positions as one of their primary goals). 
Nowadays, 
hedge funds use dozens of different strategies, 
so it isn't accurate to say that hedge funds just "hedge risk". 
In fact, because hedge fund managers make speculative investments, 
these funds can carry more risk than the overall market.&lt;/p&gt;
&lt;h2 id="total-return"&gt;Total Return&lt;/h2&gt;
&lt;p&gt;When measuring performance, 
the actual rate of return of an investment or a pool of investments 
over a given evaluation period. 
Total return includes interest, capital gains, dividends and distributions 
realized over a given period of time.&lt;/p&gt;
&lt;p&gt;Total return accounts for two categories of return: income and capital appreciation. 
Income includes interest paid by fixed-income investments, 
distributions or dividends. 
Capital appreciation represents the change in the market price of an asset.&lt;/p&gt;
&lt;h2 id="distribution"&gt;Distribution&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When trading volume is higher than that of the previous day without any price appreciation. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The removal of assets from a retirement account. 
The assets are then paid to the retirement account owner or beneficiary. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A company's payment of cash, stock or physical products to its shareholders. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distributions of income and capital gains 
that mutual funds make to their investors periodically during a calendar year.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A market that is in distribution has already hit its apex and is expected to decline. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The retirement account owner (or beneficiary) may be required to pay income tax 
on distributions received during the year. 
Early-distribution penalties may also apply 
if the distribution occurs while the retirement account owner is under the age of 59.5. 
While distributions from IRAs can occur at any time, 
certain requirements must be met before distributions can occur from qualified plans, 
457 plans and 403(b) accounts. 
Participants must check with their employers regarding the rules of the plan. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The income that is generated from an investment trust is given 
to investors through monthly or quarterly distributions. 
In this manner, distributions are similar to stock dividends; 
however, they usually offer much higher yields of up to 10% a year. 
The distributions received reduce a trust's taxable income and, 
therefore, little or no income tax is paid. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mutual funds pay out interest and dividend income received 
from their portfolio holdings as dividends (income distribution) to fund shareholders. 
In addition, capital gains from the portfolio's trading activities 
are generally paid out (capital gains distribution) at the end of the year.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="junk-bond-speculative-investment"&gt;Junk Bond (Speculative Investment)&lt;/h2&gt;
&lt;p&gt;A colloquial term for a high-yield or non-investment grade bond. 
Junk bonds are fixed-income instruments that carry a rating of 'BB' or lower 
by Standard &amp;amp; Poor's, 
or 'Ba' or below by Moody's. 
Junk bonds are so called because of their higher default risk 
in relation to investment-grade bonds. &lt;/p&gt;
&lt;p&gt;Junk bonds are risky investments, 
but have speculative appeal because they offer much higher yields than safer bonds. 
Companies that issue junk bonds typically have less-than-stellar credit ratings, 
and investors demand these higher yields as compensation for the risk of investing in them. 
A junk bond issued from a company that manages to turn its performance around for the better 
and has its credit rating upgraded will generally have a substantial price appreciation.&lt;/p&gt;
&lt;h2 id="investment-grade"&gt;Investment Grade&lt;/h2&gt;
&lt;p&gt;A rating that indicates that a municipal or corporate bond has a relatively low risk of default. 
Bond rating firms, 
such as Standard &amp;amp; Poor's, 
use different designations consisting of upper- and lower-case letters 'A' 
and 'B' to identify a bond's credit quality rating. 
'AAA' and 'AA' (high credit quality) and 'A' and 'BBB' (medium credit quality) 
are considered investment grade. 
Credit ratings for bonds below these designations ('BB', 'B', 'CCC', etc.) 
are considered low credit quality, 
and are commonly referred to as "junk bonds" (or sometimes speculative investment). &lt;/p&gt;
&lt;p&gt;Investors should note that government bonds, 
or Treasuries, are not subject to credit quality ratings. 
These securities are considered to be of the very highest credit quality. 
In the case of municipal and corporate bond funds, 
fund company literature, 
such as the fund prospectus and independent investment research reports 
will report an "average credit quality" for the fund's portfolio as a whole. &lt;/p&gt;
&lt;p&gt;Investors should be aware that an agency 
downgrade of a company's bonds from 'BBB' to 'BB' 
reclassifies its debt from investment grade to "junk" status 
with just a one-step drop in quality. 
The repercussions of such an event can be highly problematic for the issuer 
and can also adversely affect bond prices for investors. 
Safety-conscious fund investors should pay attention to a bond fund's 
portfolio credit quality breakdown.&lt;/p&gt;
&lt;h2 id="loss-given-default-lgd"&gt;Loss Given Default (LGD)&lt;/h2&gt;
&lt;p&gt;The amount of funds that is lost by a bank 
or other financial institution 
when a borrower defaults on a loan. 
Academics suggest that there are several methods 
for calculating the loss given default, 
but the most frequently used method 
compares actual total losses to the total potential exposure at the time of default. &lt;/p&gt;
&lt;p&gt;Of course, most banks don't simply calculate the LGD for one loan. 
Instead, they review their entire portfolio 
and determine LGD based on cumulative losses and exposure.&lt;/p&gt;
&lt;p&gt;Institutions such as banks will determine their credit losses 
through an analysis of the actual loan defaults. 
While quantifying some losses may be simple, 
in some situations it may be quite difficult 
and require the analysis of multiple variables. 
For example, if Bank X loans \&lt;span class="math"&gt;\(1 million to ABC Company 
and ABC defaults on the note, 
Bank X's loss isn't necessarily \\)&lt;/span&gt;1 million. 
This is because Bank X may hold substantial assets as collateral, 
and/or may use the courts in an effort to be made whole. 
When all of these variables are factored in, 
Bank X may have lost substantially less than the original \$1 million loan. 
The process of analyzing all of these variables 
(as well as all of the other loans in Bank X's portfolio) 
is paramount to determining the loss given default.&lt;/p&gt;
&lt;p&gt;Generally speaking, Banks loses more on credit card loans.&lt;/p&gt;
&lt;h2 id="portfolio"&gt;Portfolio&lt;/h2&gt;
&lt;p&gt;A grouping of financial assets such as stocks, bonds and cash equivalents, 
as well as their mutual, exchange-traded and closed-fund counterparts. 
Portfolios are held directly by investors and/or managed by financial professionals.&lt;/p&gt;
&lt;p&gt;Prudence suggests that investors should construct an investment portfolio 
in accordance with risk tolerance and investing objectives. 
Think of an investment portfolio as a pie 
that is divided into pieces of varying sizes representing a variety of asset classes 
and/or types of investments to accomplish an appropriate risk-return portfolio allocation.&lt;/p&gt;
&lt;p&gt;For example, 
a conservative investor might favor a portfolio with large cap value stocks, 
broad-based market index funds, 
investment-grade bonds and a position in liquid, 
high-grade cash equivalents. 
In contrast, a risk loving investor might add some small cap growth stocks 
to an aggressive, large cap growth stock position, 
assume some high-yield bond exposure, and look to real estate, international, 
and alternative investment opportunities for his or her portfolio.&lt;/p&gt;
&lt;h2 id="comprehensive-capitial-analysis-and-review-ccar"&gt;Comprehensive Capitial Analysis and Review (CCAR)&lt;/h2&gt;
&lt;p&gt;CCAR (pronounced as c-car) is an annual exercise 
by the Federal Reserve to ensure that institutions have robust, 
forward-looking capital planning processes that account for their unique risks and sufficient capital 
to continue operations throughout times of economic and financial stress. 
As part of the CCAR, the Federal Reserve evaluates institutions' capital adequacy, 
internal capital adequacy assessment processes, and their plans to make capital distributions, 
such as dividend payments or stock repurchases. 
The CCAR includes a supervisory stress test to support the Federal Reserve's analysis 
of the adequacy of the firms' capital. Boards of directors 
of the institutions are required each year to review 
and approve capital plans before submitting them to the Federal Reserve.&lt;/p&gt;
&lt;h2 id="macroeconomic-factor"&gt;Macroeconomic Factor&lt;/h2&gt;
&lt;p&gt;A factor that is pertinent to a broad economy at the regional or national level 
and affects a large population rather than a few select individuals. 
Macroeconomic factors such as economic output, unemployment, inflation, savings and investment 
are key indicators of economic performance 
and are closely monitored by governments, businesses and consumers. &lt;/p&gt;
&lt;p&gt;The interplay or relationship between various macroeconomic factors 
is the subject of a great deal of study in the field of macroeconomics. 
While macroeconomics deals with the economy as a whole, 
microeconomics is concerned with the study of individual agents 
such as consumers and businesses and their economic decision-making.&lt;/p&gt;
&lt;h2 id="commercial-real-estate-cre"&gt;Commercial Real Estate (CRE)&lt;/h2&gt;
&lt;p&gt;Property that is used solely for business purposes. 
Examples of commercial real estate include malls, 
office parks, restaurants, gas stations, convenience stores and office towers. 
Commercial real estate is one of the three primary types of real estate. 
The other types are residential real estate, 
which is used for living purposes; 
and industrial real estate, 
which is used for manufacturing and production. 
The businesses that occupy commercial real estate usually lease the space. 
An investor usually owns the building and collects rent from each business that operates there. &lt;/p&gt;
&lt;p&gt;There are four primary types of commercial real estate leases, 
each requiring different levels of responsibility 
from the landlord and the tenant. 
In addition to rent, 
a single net lease makes the tenant responsible for paying property taxes; 
a double-net (NN) lease makes the tenant responsible for paying property taxes and insurance; 
and a triple-net (NNN) lease makes the tenant responsible for 
paying property taxes, insurance and maintenance. 
Under a gross lease, the tenant pays only rent; 
the landlord pays for the building's property taxes, insurance and maintenance.&lt;/p&gt;
&lt;p&gt;Investing in commercial real estate often requires 
a considerable amount of startup capital and extensive knowledge 
of the legal, financial and regulatory aspects of owning this type of property. 
Investors who don't want to deal with these hassles directly 
can gain exposure to commercial real estate through real estate investment trusts (REITs).&lt;/p&gt;
&lt;h2 id="quater-over-quater-qoq"&gt;Quater Over Quater (QoQ)&lt;/h2&gt;
&lt;p&gt;A measuring technique that calculates the change between one financial quarter 
and the previous financial quarter. 
This is similar to the year-over-year measure, 
which compares the quarter of one year (Q1 2005) 
to the same quarter of the previous year (Q1 2004). 
The measure gives investors and analysts an idea of how a company is growing over each quarter.&lt;/p&gt;
&lt;p&gt;For example, 
the QOQ measure can be used to compare the earnings between quarters. 
Let's say that the ABC Company's first quarter earnings were \&lt;span class="math"&gt;\(1.50 per share 
and its second quarter earnings were \\)&lt;/span&gt;1.75 per share. 
This means that the company has grown its earnings 
by 16.6% quarter-on-quarter ((\&lt;span class="math"&gt;\(1.75-\\)&lt;/span&gt;1.50)/\$1.50), which is a good sign for investors.&lt;/p&gt;
&lt;h2 id="year-over-year-yoy"&gt;Year Over Year (YoY)&lt;/h2&gt;
&lt;p&gt;A method of evaluating two or more measured events 
to compare the results at one time period 
with those from another time period (or series of time periods), 
on an annualized basis. 
Year-over-year comparisons are a popular way 
to evaluate the performance of investments. 
Any measurable events that recur annually 
can be compared on a year-over-year basis - from annual performance, to quarterly performance, to daily performance.&lt;/p&gt;
&lt;p&gt;Year-over-year performance is frequently used by investors 
seeking to gauge whether a company's financial performance is improving or worsening. 
For example, a business may report that its revenues have increased 
for the third quarter on a year-over-year basis for the last three years. 
This means that revenues at that company in the third quarter of year three 
were higher than revenues in the third quarter in year two, 
which were higher than revenues in the third quarter of year one.&lt;/p&gt;
&lt;p&gt;As another example, 
a mutual fund that returned 50% last year may have a YOY return of 12%, 
as the year-over-year return takes into account each annual return since the fund's inception.&lt;/p&gt;
&lt;h2 id="stress-testing"&gt;Stress Testing&lt;/h2&gt;
&lt;p&gt;A simulation technique used on asset 
and liability portfolios to determine their reactions to different financial situations. 
Stress tests are also used to gauge how certain stressors will affect a company or industry. 
They are usually computer-generated simulation models that test hypothetical scenarios. 
This is also known as a "stress test".&lt;/p&gt;
&lt;p&gt;Stress testing is a useful method 
for determining how a portfolio will fare during a period of financial crisis. 
The Monte Carlo simulation is one of the most widely used methods of stress testing. &lt;/p&gt;
&lt;p&gt;A stress test is also used to evaluate the strength of institutions. 
For example, the Treasury Department could run stress tests on banks 
to determine their financial condition. 
Banks often run these tests on themselves. 
Changing factors could include interest rates, lending requirements or unemployment.&lt;/p&gt;
&lt;p&gt;Default Rate/Probability of Default (PD)/Expected Default Frequency (EDF)&lt;/p&gt;
&lt;p&gt;This rate can be used in reference to two main things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The rate of borrowers who fail to remain current on their loans. 
It is a critical piece of information used by lenders 
to determine their risk exposure and economists 
to evaluate the health of the overall economy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The interest rate charged to a borrower 
when payments on a revolving line of credit are overdue. 
This higher rate is applied to outstanding balances in arrears 
in addition to the regular interest charges for the debt.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Prior to passage of the Credit Card Accountability, 
Responsibility and Disclosure (CARD) Act of 2009, 
the language in some credit card agreements allowed credit card companies 
to hike the interest charged on the card balance to the default rate 
even if consumers were current on their account 
but had an outstanding balance on another credit card (a practice known as "universal default"). &lt;/p&gt;
&lt;p&gt;The law, 
which took effect in the fall of 2009 imposed sweeping new restrictions 
on the credit industry, including the elimination of the universal default rate.&lt;/p&gt;
&lt;h2 id="constant-default-rate-cdr"&gt;Constant Default Rate (CDR)&lt;/h2&gt;
&lt;p&gt;An annualized rate of default on a group of mortgages, 
typically within a collateralized product such as a mortgage-backed security (MBS). 
The constant default rate represents the percentage 
of outstanding principal balances in the pool that are in default, 
which typically equates to the home being past 60-day 
and 90-day notices and in the foreclosure process. &lt;/p&gt;
&lt;p&gt;The constant default rate analysis assumes that 
if a home is in foreclosure (a process that can take 12 months or more to complete), 
the interest and principal payments 
are being advanced into the MBS by the mortgage servicing company. &lt;/p&gt;
&lt;p&gt;The CDR method for evaluating losses is one of several methods 
used by analysts and company controllers 
to determine the current market value or asset value of a mortgage-backed security. 
The CDR method can account for both fixed-rate and adjustable-rate mortgages. &lt;/p&gt;
&lt;p&gt;Another method is the Standard Default Assumption (SDA) model 
created by the Bond Market Association, 
but this is more suited to standard 30-year fixed mortgages. 
In the mortgage crisis of 2007-2008, 
the SDA model proved to have vastly underestimated the true rate of default; 
foreclosure rates hit multi-decade highs during that period.&lt;/p&gt;
&lt;h2 id="commercial-and-industrial-ci-loan"&gt;Commercial and Industrial (C&amp;amp;I) Loan&lt;/h2&gt;
&lt;p&gt;Any type of loan made to a business or corporation 
and not to an individual. 
Commercial and industrial loans can be made 
in order to provide either working capital or to finance major capital expenditures. 
This type of loan is usually short-term in nature 
and is almost always backed with some sort of collateral.&lt;/p&gt;
&lt;p&gt;Commercial loans usually charge flexible rates of interest 
that are tied to the bank prime rate or else to the LIBOR. 
Many borrowers must also file regular financial statements, 
usually at least annually. 
Lenders also usually require proper maintenance of the loan collateral property.&lt;/p&gt;
&lt;h2 id="capital-commitment"&gt;Capital Commitment&lt;/h2&gt;
&lt;p&gt;Future capital expenditures that a company has committed 
to spend on long-term assets over a period of time. 
Capital commitment also refers to securities inventory carried by a market maker. 
The term may also refer to investments in blind pool funds by venture capital investors, 
which they contribute over time when requested to do so by the fund manager.&lt;/p&gt;
&lt;p&gt;A company has to exercise the ultmost care in structuring its capital commitments, 
since an inordinately high amount will put undue strain on its finances. 
It would need to ensure that operating cash flow is sufficient to meet capital expenditures, 
and if it is not, 
make arrangements to ensure that it can raise the additional funds on the capital markets. 
Capital commitments are generally the highest for companies in capital-intensive industries 
such as power generation.&lt;/p&gt;
&lt;h2 id="loan-commitment"&gt;Loan Commitment&lt;/h2&gt;
&lt;p&gt;A loan amount that may be drawn down, 
or is due to be contractually funded in the future. 
Loan commitments are found at commercial banks 
and other lending institutions and consist of both open-end and closed-end loans. 
Open-end loan commitments act like revolving credit lines, 
whereby if a portion of the loan is paid off, 
the principle repayment amount is added back to the allowable loan limit. 
Closed-end loans are reduced once any repayments are made. &lt;/p&gt;
&lt;p&gt;Banks and investment shops must account for the value of 
outstanding loan commitments so that funds are available should the borrower request them. 
They represent a future obligation in full, 
even though a percentage of the notional loan amounts 
will never be utilized by the borrowers themselves. 
Also known as "unfunded loan commitments," 
because the total capital outlay is not provided by the lender up front. &lt;/p&gt;
&lt;p&gt;The aggregate loan commitments of commercial banks, 
savings &amp;amp; loans and investments banks registered in the United States 
must be disclosed on quarterly financial reports to regulators at the FDIC. 
These reports are known as the "Call Reports" 
and can be found either through the FDIC or the lender's corporate website.&lt;/p&gt;
&lt;p&gt;Loan commitments get increased attention during times of economic weakness, 
as more borrowers delay making repayments 
and may draw down the max on their revolving credit lines. 
This decreases the return the bank can earn on the capital deployed. 
The same is true for many construction loans, 
which are typically classified as closed-end loan commitments.&lt;/p&gt;
&lt;h2 id="committed-capital"&gt;Committed Capital&lt;/h2&gt;
&lt;p&gt;A contractual agreement between an investor and a venture-capital fund 
that obligates the investor to contribute money to the fund. 
The investor may pay all of the committed capital at one time, 
or make contributions over a period of time. 
This often takes place over a number of years.
Also known as "commitments".&lt;/p&gt;
&lt;p&gt;When an investor commits capital to a venture capital fund, 
the investor typically has many years to satisfy the agreement. 
Often, contributions will be made over a period of three to five years after the fund is formed. &lt;/p&gt;
&lt;p&gt;The private equity market can be viewed as riskier than the public equity market, 
as returns in the private market tend to have higher dispersion of returns 
than the public market. 
Therefore, 
investing in the right business ventures can offer substantial rewards for top tier funds.&lt;/p&gt;
&lt;h2 id="commitment-fee"&gt;Commitment Fee&lt;/h2&gt;
&lt;p&gt;A fee charged by a lender to a borrower for an unused credit line or undisbursed loan. 
A commitment fee is generally specified as a fixed percentage of the undisbursed loan amount. 
The lender charges a commitment fee as compensation for keeping a line of credit open 
or to guarantee a loan at a specific date in future. 
The borrower pays the fee in return for the assurance that the lender 
will supply the loan funds at the specified future date 
and at the contracted interest rate, 
regardless of conditions in the financial and credit markets. &lt;/p&gt;
&lt;p&gt;A commitment fee is different from interest; 
although, the two are often confused. 
A commitment fee is separate from the interest rate that is charged by the lender on the loan. 
A key distinction is that the commitment fee is charged on the undisbursed loan amount, 
while interest is charged on the disbursed amount of the loan. &lt;/p&gt;
&lt;h2 id="forward-commitment"&gt;Forward Commitment&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A contract pertaining to the future sale or purchase of a security. 
Price and date are specified in the contract. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A formal promise to make a loan sometime in the future. 
It typically refers to a mortgage-backed security 
where the funds are usually needed at a later date. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A formal commitment in the form of a future security sale or purchase 
allows both parties to omit the risk pertaining to stock price volatility. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A formal commitment can provide the borrower 
with the security of knowing they will have the funds 
when they need them as well as give the lender the ability to forecast future business.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="take-out-commitment"&gt;Take-Out Commitment&lt;/h2&gt;
&lt;p&gt;A specific type of mortgage purchase agreement. 
Under a take-out commitment, 
a long-term investor agrees to buy a mortgage from a mortgage banker 
at a specific date in the future. 
Take-out commitments are enforced once a project reaches a particular stage 
where long-term, rather than short-term, financing is the preferred alternative.&lt;/p&gt;
&lt;p&gt;There are a few specific types of investors 
that purchase take-out commitments. 
In most cases, 
these are insurance companies or other financial institutions. 
They are known as "take-out lenders."&lt;/p&gt;
&lt;h2 id="average-outstanding-balance-aob"&gt;Average Outstanding Balance (AOB)&lt;/h2&gt;
&lt;p&gt;The unpaid, 
interest-bearing balance of a loan or loan portfolio averaged over a period of time, 
usually one month. 
The average outstanding balance refers to any term, 
instalment, revolving or credit card debt on which interest is charged.&lt;/p&gt;
&lt;p&gt;The average outstanding balance on credit cards and loans 
is a critical factor in a consumer's credit rating. 
Average outstanding balances on credit cards 
are reported to credit agencies monthly on active accounts, 
along with any amounts that are past due.&lt;/p&gt;
&lt;h2 id="outstanding-shares"&gt;Outstanding Shares&lt;/h2&gt;
&lt;p&gt;Stock currently held by investors, 
including restricted shares owned by the company's officers and insiders, 
as well as those held by the public. 
Shares that have been repurchased by the company are not considered outstanding stock. &lt;/p&gt;
&lt;p&gt;This number is shown on a company's balance sheet under the heading "Capital Stock" 
and is more important than the authorized shares or float. 
It is used to calculate many metrics, 
including market capitalization and earnings per share (EPS).&lt;/p&gt;
&lt;h2 id="net-debt"&gt;Net Debt&lt;/h2&gt;
&lt;p&gt;A metric that shows a company's overall debt situation 
by netting the value of a company's liabilities and debts with its cash 
and other similar liquid assets. &lt;/p&gt;
&lt;p&gt;When investing in a company, 
one of the most important factors you need to consider 
is how much debt the company is carrying. 
Here are some questions to ask yourself when analyzing a company's debt: 
How much debt really exists? 
What kind of debt is it (long/short-term maturities)? 
What is the debt for (repay or refinance old debts)? 
Can the company afford the debt if it runs into financial trouble? 
And, finally, how does it compare to the debt levels of competing companies?&lt;/p&gt;
&lt;h2 id="net-worth"&gt;Net Worth&lt;/h2&gt;
&lt;p&gt;The amount by which assets exceed liabilities. 
Net worth is a concept applicable to individuals and businesses 
as a key measure of how much an entity is worth. 
A consistent increase in net worth indicates good financial health; 
conversely, net worth may be depleted by annual operating losses 
or a substantial decrease in asset values relative to liabilities. 
In the business context, 
net worth is also known as book value or shareholders' equity.&lt;/p&gt;
&lt;p&gt;Consider a couple with the following assets.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;primary residence valued at \$250,000 &lt;/li&gt;
&lt;li&gt;an investment portfolio with a market value of \$100,000 &lt;/li&gt;
&lt;li&gt;automobiles and other assets valued at \$25,000 &lt;/li&gt;
&lt;li&gt;liabilities are primarily an outstanding mortgage balance of \&lt;span class="math"&gt;\(100,000 and a car loan of \\)&lt;/span&gt;10,000 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The couple's net worth would therefore be &lt;/p&gt;
&lt;div class="math"&gt;$$
$265,000 ([\$250,000 + \$100,000 + \$25,000] - [\$100,000 + \$10,000]). 
$$&lt;/div&gt;
&lt;p&gt;Assume that five years later, 
the couple's financial position is as follows &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;residence value \$225,000 &lt;/li&gt;
&lt;li&gt;investment portfolio \$120,000&lt;/li&gt;
&lt;li&gt;savings \$20,000&lt;/li&gt;
&lt;li&gt;automobile and other assets \$15,000&lt;/li&gt;
&lt;li&gt;mortgage loan balance \$80,000&lt;/li&gt;
&lt;li&gt;car loan \$0 (paid off)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The net worth would now be \&lt;span class="math"&gt;\(300,000. 
In other words, the couple's net worth has gone up by \\)&lt;/span&gt;35,000 
despite the decrease in the value of their residence and car, 
because this decline is more than offset by increases 
in other assets (such as the investment portfolio and savings) 
as well as the decrease in their liabilities. &lt;/p&gt;
&lt;p&gt;People with a substantial net worth are known as high net worth individuals, 
and form the prime market for wealth managers and investment counselors. 
Investors with a net worth (excluding their primary residence) of 
at least \$1 million - either alone or together with their spouse - 
are considered as "accredited investors" by the Securities and Exchange Commission, 
for the purpose of investing in unregistered securities offerings. 
A company that is consistently profitable will have a rising net worth or book value, 
as long as these earnings are not fully distributed to shareholders 
but are retained in the business. 
For public companies, 
rising book values over time may be rewarded by an increase in stock market value. &lt;/p&gt;
&lt;h2 id="exposure-at-default-ead"&gt;Exposure At Default (EAD)&lt;/h2&gt;
&lt;p&gt;A total value that a bank is exposed to at the time of default. 
Each underlying exposure that a bank has is given an EAD value 
and is identified within the bank's internal system. 
Using the internal ratings board (IRB) approach, 
financial institutions will often use their own risk management default models 
to calculate their respective EAD systems.&lt;/p&gt;
&lt;p&gt;Exposure at default (along with loss given default (LGD) and probability of default (PD)) 
is used to calculate the credit risk capital of financial institutions. 
The expected loss that will arise at default 
is often measured over one year. 
The calculation of EAD is done by multiplying each credit obligation by an appropriate percentage. 
Each percentage used coincides with the specifics of each respective credit obligation.&lt;/p&gt;
&lt;h2 id="public-companyfirm"&gt;Public Company/Firm&lt;/h2&gt;
&lt;p&gt;A company that has issued securities through an initial public offering (IPO) 
and is traded on at least one stock exchange or in the over the counter market. 
Although a small percentage of shares may be initially "floated" to the public, 
the act of becoming a public company allows the market 
to determine the value of the entire company through daily trading. &lt;/p&gt;
&lt;p&gt;Public companies have inherent advantages over private companies, 
including the ability to sell future equity stakes 
and increased access to the debt markets. 
With these advantages, 
however, 
comes increased regulatory scrutiny 
and less control for majority owners and company founders.&lt;/p&gt;
&lt;p&gt;Once a company goes public, 
it has to answer to its shareholders. 
For example, 
certain corporate structure changes and amendments must be brought up 
for shareholder vote. 
Shareholders can also vote with their dollars by bidding up the company 
to a premium valuation or selling it to a level below its intrinsic value. &lt;/p&gt;
&lt;p&gt;Public companies must meet stringent reporting requirements set out 
by the Securities and Exchange Commission (SEC), 
including the public disclosure of financial statements 
and annual 10-k reports discussing the state of the company. 
Each stock exchange also has specific financial 
and reporting guidelines that govern whether a stock is allowed to be listed for trading.&lt;/p&gt;
&lt;h2 id="private-companyfirm"&gt;Private Company/Firm&lt;/h2&gt;
&lt;p&gt;A company whose ownership is private. 
As a result, 
it does not need to meet the strict Securities 
and Exchange Commission filing requirements of public companies.&lt;/p&gt;
&lt;p&gt;Private companies may issue stock and have shareholders. 
However, their shares do not trade on public exchanges 
and are not issued through an initial public offering. 
In general, 
the shares of these businesses are less liquid 
and the values are difficult to determine.&lt;/p&gt;
&lt;h2 id="private-equity"&gt;Private Equity&lt;/h2&gt;
&lt;p&gt;Equity capital that is not quoted on a public exchange. 
Private equity consists of investors and funds 
that make investments directly into private companies 
or conduct buyouts of public companies that result in a delisting of public equity. 
Capital for private equity is raised from retail and institutional investors, 
and can be used to fund new technologies, 
expand working capital within an owned company, 
make acquisitions, or to strengthen a balance sheet. &lt;/p&gt;
&lt;p&gt;The majority of private equity consists of institutional investors 
and accredited investors who can commit large sums of money for long periods of time. 
Private equity investments often demand long holding periods 
to allow for a turnaround of a distressed company 
or a liquidity event such as an IPO or sale to a public company.&lt;/p&gt;
&lt;p&gt;The size of the private equity market has grown steadily since the 1970s. 
Private equity firms will sometimes pool funds together 
to take very large public companies private. 
Many private equity firms conduct what are known as leveraged buyouts (LBOs), 
where large amounts of debt are issued to fund a large purchase. 
Private equity firms will then try to improve the financial results 
and prospects of the company in the hope of reselling the company 
to another firm or cashing out via an IPO.&lt;/p&gt;
&lt;h2 id="gross-domestic-product-gdp"&gt;Gross Domestic Product (GDP)&lt;/h2&gt;
&lt;p&gt;The monetary value of all the finished goods and services produced 
within a country's borders in a specific time period, 
though GDP is usually calculated on an annual basis. 
It includes all of private and public consumption, 
government outlays, 
investments and exports less imports that occur within a defined territory.&lt;/p&gt;
&lt;div class="math"&gt;$$
GDP = C + G + I + NX
$$&lt;/div&gt;
&lt;p&gt;where:&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(C\)&lt;/span&gt; is equal to all private consumption, or consumer spending, in a nation's economy;
&lt;span class="math"&gt;\(G\)&lt;/span&gt; is the sum of government spending;
&lt;span class="math"&gt;\(I\)&lt;/span&gt; is the sum of all the country's businesses spending on capital;
&lt;span class="math"&gt;\(NX\)&lt;/span&gt; is the nation's total net exports, 
calculated as total exports minus total imports. (&lt;span class="math"&gt;\(NX = Exports - Imports\)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;GDP is commonly used as an indicator of the economic health of a country, 
as well as to gauge a country's standard of living. 
Critics of using GDP as an economic measure 
say the statistic does not take into account the underground economy 
(transactions that, for whatever reason, are not reported to the government). 
Others say that GDP is not intended to gauge material well-being, 
but serves as a measure of a nation's productivity, which is unrelated.&lt;/p&gt;
&lt;h2 id="credit-spread"&gt;Credit Spread&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The spread between Treasury securities 
and non-Treasury securities that are identical in all respects except for quality rating. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An options strategy where a high premium option is sold 
and a low premium option is bought on the same underlying security.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For instance, 
the difference between yields on treasuries and those on single A-rated industrial bonds. 
A company must offer a higher return on their bonds 
because their credit is worse than the government's. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An example would be buying a Jan 50 call on ABC for \&lt;span class="math"&gt;\(2, 
and writing a Jan 45 call on ABC for \\)&lt;/span&gt;5. 
The net amount received (credit) is \$3. 
The investor will profit if the spread narrows. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Can also be called "credit spread option" or "credit risk option".&lt;/p&gt;
&lt;p&gt;(For my intern at Union Bank: Defined as the differeence 
between the interest of Moody's BAA rate cooperate bond and that of the US 10-year treausy.)&lt;/p&gt;
&lt;h2 id="house-price-index-hpi"&gt;House Price Index (HPI)&lt;/h2&gt;
&lt;p&gt;A broad measure of the movement of single-family house prices in the U.S. 
Apart from serving as an indicator of house price trends, 
the House Price Index (HPI) provides an analytical tool for estimating changes 
in the rates of mortgage defaults, 
prepayments and housing affordability. 
The HPI is published by the Federal Housing Finance Agency (FHFA) 
using data supplied by Fannie Mae and Freddie Mac.&lt;/p&gt;
&lt;p&gt;The HPI is based on transactions involving conventional 
and conforming mortgages (only on single-family properties) 
that have been purchased or securitized by Fannie Mae or Freddie Mac. 
It is a weighted, repeat-sales index, 
which means that it measures average price changes in repeat sales 
or refinancings on the same properties. 
A comprehensive HPI report is published every quarter, 
while a monthly report has been published from March 2008. &lt;/p&gt;
&lt;p&gt;The HPI differs from the well-known S&amp;amp;P/Case-Shiller Home Price Indexes 
in a number of ways. 
For example, 
while the Case-Shiller indexes only use purchase prices, 
the all-transactions HPI also includes refinance appraisals. &lt;/p&gt;
&lt;h2 id="dow-jones-industrial-average-djia"&gt;Dow Jones Industrial Average (DJIA)&lt;/h2&gt;
&lt;p&gt;The Dow Jones Industrial Average is a price-weighted average 
of 30 significant stocks traded on the New York Stock Exchange and the Nasdaq. 
The DJIA was invented by Charles Dow back in 1896. &lt;/p&gt;
&lt;p&gt;Often referred to as "the Dow," the DJIA is one of the oldest 
and single most watched index in the world. 
The DJIA includes companies like General Electric, Disney, Exxon and Microsoft. 
When the TV networks say "the market is up today," they are generally referring to the Dow.&lt;/p&gt;
&lt;h2 id="standard-poors-500-index-sp-500"&gt;Standard &amp;amp; Poor's 500 Index - S&amp;amp;P 500&lt;/h2&gt;
&lt;p&gt;An index of 500 stocks chosen for market size, 
liquidity and industry grouping, among other factors. 
The S&amp;amp;P 500 is designed to be a leading indicator of U.S. equities 
and is meant to reflect the risk/return characteristics of the large cap universe. &lt;/p&gt;
&lt;p&gt;Companies included in the index are selected by the S&amp;amp;P Index Committee, 
a team of analysts and economists at Standard &amp;amp; Poor's. 
The S&amp;amp;P 500 is a market value weighted index 
(each stock's weight is proportionate to its market value).&lt;/p&gt;
&lt;p&gt;The S&amp;amp;P 500 is one of the most commonly used benchmarks for the overall U.S. stock market. 
The Dow Jones Industrial Average (DJIA) was at one time the most renowned index for U.S. stocks, 
but because the DJIA contains only 30 companies, 
most people agree that the S&amp;amp;P 500 is a better representation of the U.S. market. 
In fact, many consider it to be the definition of the market.&lt;/p&gt;
&lt;p&gt;Other popular Standard &amp;amp; Poor's indexes include the S&amp;amp;P 600, 
an index of small cap companies with market capitalizations 
between \&lt;span class="math"&gt;\(300 million and \\)&lt;/span&gt;2 billion, 
and the S&amp;amp;P 400, 
an index of mid cap companies with market capitalizations of \&lt;span class="math"&gt;\(2 billion to \\)&lt;/span&gt;10 billion.&lt;/p&gt;
&lt;p&gt;A number of financial products based on the S&amp;amp;P 500 are available to investors. 
These include index funds and exchange-traded funds. 
However, it would be difficult for individual investors to buy the index, 
as this would entail buying 500 different stocks.&lt;/p&gt;
&lt;h2 id="west-texas-intermediate-wti"&gt;West Texas Intermediate (WTI)&lt;/h2&gt;
&lt;p&gt;Light, sweet crude oil commonly referred to as "oil" in the Western world. 
WTI is the underlying commodity of the New York Merchantile Exchange's oil futures contracts.&lt;/p&gt;
&lt;p&gt;WTI is considered a "sweet" crude because it is about 0.24% sulfur, 
a lower concentration than North Sea Brent crude. 
WTI is high quality oil that is easily refined.&lt;/p&gt;
&lt;h2 id="brent-blend"&gt;Brent Blend&lt;/h2&gt;
&lt;p&gt;A type of sweet crude oil that is used as a benchmark for the prices of other crude oils. 
Brent blend is most often found in parts of the North Sea off the coast of the U.K. 
and Norway. 
Brent blend makes up more than half of the world's globally traded supply of crude oil, 
which is why it makes an obvious choice for the benchmark of crude oil.&lt;/p&gt;
&lt;p&gt;As previously mentioned, 
the brent blend is a mix of crude oil from several facilities 
in the Ninian and Brent fields on the North Sea. 
Much like the other internationally recognized benchmark for crude oil, 
West Texas Intermediate, 
the Brent blend is a light and sweet crude oil, 
though not as light or sweet as WTI. 
Brent futures are traded on both the ICE and NYMEX exchanges, 
with delivery dates for all 12 months of the year.&lt;/p&gt;
&lt;h2 id="index"&gt;Index&lt;/h2&gt;
&lt;p&gt;A statistical measure of change in an economy or a securities market. 
In the case of financial markets, 
an index is an imaginary portfolio of securities 
representing a particular market or a portion of it. 
Each index has its own calculation methodology 
and is usually expressed in terms of a change from a base value. 
Thus, the percentage change is more important than the actual numeric value. &lt;/p&gt;
&lt;p&gt;Stock and bond market indexes are used to construct index mutual funds 
and exchange-traded funds (ETFs) whose portfolios mirror the components of the index.&lt;/p&gt;
&lt;p&gt;The Standard &amp;amp; Poor's 500 is one of the world's best known indexes, 
and is the most commonly used benchmark for the stock market. 
Other prominent indexes include the DJ Wilshire 5000 (total stock market), 
the MSCI EAFE (foreign stocks in Europe, Australasia, Far East) 
and the Lehman Brothers Aggregate Bond Index (total bond market).&lt;/p&gt;
&lt;p&gt;Because, technically, you can't actually invest in an index, 
index mutual funds and exchange-traded funds (based on indexes) 
allow investors to invest in securities 
representing broad market segments and/or the total market.&lt;/p&gt;
&lt;h2 id="compound-annual-growth-rate-cagr"&gt;Compound Annual Growth Rate (CAGR)&lt;/h2&gt;
&lt;p&gt;The year-over-year growth rate of an investment over a specified period of time.
The compound annual growth rate is calculated by taking the nth root 
of the total percentage growth rate, 
where n is the number of years in the period being considered.&lt;/p&gt;
&lt;p&gt;This can be written as follows:&lt;/p&gt;
&lt;div class="math"&gt;$$
CAGR = \left(\frac{\text{Ending Value}}{\text{Begining Value}}\right)^{\frac{1}{\text{number of years}}} - 1
$$&lt;/div&gt;
&lt;p&gt;CAGR isn't the actual return in reality. 
It's an imaginary number that describes the rate 
at which an investment would have grown if it grew at a steady rate. 
You can think of CAGR as a way to smooth out the returns.&lt;/p&gt;
&lt;p&gt;Don't worry if this concept is still fuzzy to you.
CAGR is one of those terms best defined by example. 
Suppose you invested \&lt;span class="math"&gt;\(10,000 in a portfolio on Jan 1, 2005. 
Let's say by Jan 1, 2006, 
your portfolio had grown to \\)&lt;/span&gt;13,000, 
then \&lt;span class="math"&gt;\(14,000 by 2007, and finally ended up at \\)&lt;/span&gt;19,500 by 2008.&lt;/p&gt;
&lt;p&gt;Your CAGR would be 
&lt;/p&gt;
&lt;div class="math"&gt;$$
(\frac{19500}{10,000})^{\frac{1}{3}} - 1 = 0.2493
$$&lt;/div&gt;
&lt;p&gt;
Thus, your CAGR for your three-year investment is equal to 24.93%, 
representing the smoothed annualized gain you earned over your investment time horizon.&lt;/p&gt;
&lt;h2 id="average-annual-growth-rate-aagr"&gt;Average Annual Growth Rate (AAGR)&lt;/h2&gt;
&lt;p&gt;The average increase in the value of an individual investment or portfolio 
over the period of a year. 
It is calculated by taking the arithmetic mean of the growth rate over two annual periods. 
The average annual growth rate can be calculated for any investment, 
but will not include any measure of the investment's overall risk, 
as measured by its price volatility.&lt;/p&gt;
&lt;p&gt;For example, 
if your portfolio grows 10% one year and 20% the next, 
your AAGR would be 15%. 
To this end, 
fluctuations in the portfolio's rate of return 
between the beginning of the first year and the end 
of the year are not included in the calculations, 
which may lead to some measurement error. &lt;/p&gt;
&lt;p&gt;To reduce any possible measurement error, 
an analyst can simply take the average price at the beginning 
and end of the two measurement periods, 
and use those average prices to determine each year's return, 
and then the AAGR.&lt;/p&gt;
&lt;p&gt;Moody's&lt;/p&gt;
&lt;p&gt;An independent, 
unaffiliated research company that rates fixed income securities. 
Moody's assigns ratings on the basis of risk 
and the borrower's ability to make interest payments. 
Moody's backs its ratings with exhaustive financial research 
and unbiased commentary and analysis.&lt;/p&gt;
&lt;p&gt;Many bond investors pay close attention to the rating Moody assigns to bonds 
and preferred stock. 
Moody's ratings are ranked as follows:&lt;/p&gt;
&lt;p&gt;AAA - highest grade, best quality issuer, lowest risk 
AA&lt;br&gt;
A&lt;br&gt;
BAA - medium grade, moderate risk
BA&lt;br&gt;
B&lt;br&gt;
CAA - Poor grade, high risk&lt;br&gt;
CA&lt;br&gt;
C  &lt;/p&gt;
&lt;h2 id="financial-statements"&gt;Financial Statements&lt;/h2&gt;
&lt;p&gt;Records that outline the financial activities of a business, 
an individual or any other entity. 
Financial statements are meant to present the financial information 
of the entity in question as clearly 
and concisely as possible for both the entity and for readers. 
Financial statements for businesses usually include: 
income statements, balance sheet, statements of retained earnings 
and cash flows, as well as other possible statements.&lt;/p&gt;
&lt;p&gt;It is a standard practice for businesses to present financial statements 
that adhere to generally accepted accounting principles (GAAP), 
to maintain continuity of information and presentation across international borders. 
As well, financial statements are often audited 
by government agencies, accountants, firms, etc. 
to ensure accuracy and for tax, financing or investing purposes. 
Financial statements are integral to ensuring accurate 
and honest accounting for businesses and individuals alike.&lt;/p&gt;
&lt;h2 id="income-statement"&gt;Income Statement&lt;/h2&gt;
&lt;p&gt;A financial statement that measures a company's financial performance 
over a specific accounting period. 
Financial performance is assessed by giving a summary 
of how the business incurs its revenues and expenses through 
both operating and non-operating activities. 
It also shows the net profit or loss incurred over a specific accounting period, 
typically over a fiscal quarter or year.&lt;/p&gt;
&lt;p&gt;Also known as the "profit and loss statement" or "statement of revenue and expense."&lt;/p&gt;
&lt;p&gt;The income statement is the one of the three major financial statements. 
The other two are the balance sheet and the statement of cash flows. 
The income statement is divided into two parts: the operating and non-operating sections.&lt;/p&gt;
&lt;p&gt;The portion of the income statement that deals with operating items 
is interesting to investors and analysts alike 
because this section discloses information about revenues and expenses 
that are a direct result of the regular business operations. 
For example, if a business creates sports equipment, 
then the operating items section would talk about the revenues 
and expenses involved with the production of sports equipment.&lt;/p&gt;
&lt;p&gt;The non-operating items section discloses revenue 
and expense information about activities that are not tied directly 
to a company's regular operations. 
For example, 
if the sport equipment company sold a factory 
and some old plant equipment, 
then this information would be in the non-operating items section.&lt;/p&gt;
&lt;h2 id="debt-service-coverage-ratio-dscr"&gt;Debt-Service Coverage Ratio (DSCR)&lt;/h2&gt;
&lt;p&gt;In corporate finance, 
it is the amount of cash flow available to meet annual interest 
and principal payments on debt, including sinking fund payments. &lt;/p&gt;
&lt;p&gt;In government finance, 
it is the amount of export earnings needed to meet annual interest 
and principal payments on a country's external debts. &lt;/p&gt;
&lt;p&gt;In personal finance, 
it is a ratio used by bank loan officers in determining income property loans. 
This ratio should ideally be over 1. 
That would mean the property is generating enough income to pay its debt obligations. &lt;/p&gt;
&lt;p&gt;In general, it is calculated by: &lt;/p&gt;
&lt;div class="math"&gt;$$
DSCR = \frac{\text{Net Operating Income}}{\text{Total Debt Service}}
$$&lt;/div&gt;
&lt;p&gt;A DSCR of less than 1 would mean a negative cash flow. 
A DSCR of less than 1, say .95, 
would mean that there is only enough net operating income to cover 95% of annual debt payments. 
For example, 
in the context of personal finance, 
this would mean that the borrower would have to delve into his 
or her personal funds every month to keep the project afloat. 
Generally, lenders frown on a negative cash flow, 
but some allow it if the borrower has strong outside income.&lt;/p&gt;
&lt;h2 id="debt-to-income-ratio-dti"&gt;Debt-To-Income Ratio (DTI)&lt;/h2&gt;
&lt;p&gt;A personal finance measure that compares an individual's debt payments 
to the income he or she generates. 
This measure is important in the lending industry 
as it gives lenders an idea of how likely it is that the borrower will repay the loan.&lt;/p&gt;
&lt;p&gt;The higher this ratio, 
the more burden there is on the individual to make payments on his or her debts. 
If the ratio is too high, 
the individual will have a hard time accessing other forms of financing.&lt;/p&gt;
&lt;h2 id="gross-debt-service-ratio-gds"&gt;Gross Debt Service Ratio (GDS)&lt;/h2&gt;
&lt;p&gt;A debt service measure that financial lenders use 
as a rule of thumb to give a preliminary assessment 
about whether a potential borrower is already in too much debt. 
Receiving a ratio of less than 30% means that the potential borrower 
has an acceptable level of debt.&lt;/p&gt;
&lt;p&gt;Calculated as:&lt;/p&gt;
&lt;div class="math"&gt;$$
GDS = \frac{\text{Annual Mortgage Payments + Property Taxes}}{\text{Gross Family Income}}
$$&lt;/div&gt;
&lt;p&gt;For example, 
Jack and Jill, 
two law students, 
have a monthly mortgage payment of \&lt;span class="math"&gt;\(1,000 (annual payment of \\)&lt;/span&gt;12,000), 
property taxes of \&lt;span class="math"&gt;\(3,000 and a gross family income of \\)&lt;/span&gt;45,000. 
This would give a GDS of 33 %. 
Based on the benchmark of 30%, 
Jack and Jill appear to be carrying an unacceptable amount of debt.&lt;/p&gt;
&lt;p&gt;Keep in mind that this ratio is only a very rough benchmark. 
The acceptance of a loan application is not solely determined by this ratio. 
Since this is a very simple ratio, 
there are a lot of subsequent factors that lenders consider. 
For example, 
even though Jack and Jill's GDS is above the benchmark, 
a lender may still lend to Jack and Jill 
because of their future earning potential as lawyers. 
When combined with other personal information, 
GDS can be a good way for lenders to screen borrowers.&lt;/p&gt;
&lt;h2 id="total-debt-service-ratio-tds"&gt;Total Debt Service Ratio (TDS)&lt;/h2&gt;
&lt;p&gt;A debt service measure that financial lenders use 
as a rule of thumb to give a preliminary assessment of 
whether a potential borrower is already in too much debt. 
More specifically, 
this ratio shows the proportion of gross income 
that is already spent on housing-related and other similar payments. &lt;/p&gt;
&lt;p&gt;Receiving a ratio of less than 40% means that the potential borrower 
has an acceptable level of debt.&lt;/p&gt;
&lt;div class="math"&gt;$$
TDS = \frac{\text{Annual Mortgage Payments} + \text{Propety Taxes} + \text{Other Debt Payments}}{\text{Gross Family Income}}
$$&lt;/div&gt;
&lt;p&gt;For example, 
Jack and Jill, 
two law students, 
have a monthly mortgage payment of \&lt;span class="math"&gt;\(1,000 (annual payment of \\)&lt;/span&gt;12,000), 
property taxes of \&lt;span class="math"&gt;\(3,000, 
credit card balances totaling \\)&lt;/span&gt;1,000 
and a gross family income of \$45,000. 
This would give a TDS of around 36%. 
Based on the benchmark of 40%, 
Jack and Jill appear to be carrying an acceptable amount of debt.&lt;/p&gt;
&lt;p&gt;This ratio is very similar to the gross debt service ratio (GDS) except 
that the GDS does not account for non-housing related payments. 
TDS allows for a slightly more detailed view of a potential borrower's financial situation.&lt;/p&gt;
&lt;h2 id="leverage-ratio"&gt;Leverage Ratio&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Any ratio used to calculate the financial leverage of a company 
to get an idea of the company's methods of financing 
or to measure its ability to meet financial obligations. 
There are several different ratios, 
but the main factors looked at include debt, equity, assets and interest expenses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A ratio used to measure a company's mix of operating costs, 
giving an idea of how changes in output will affect operating income. 
Fixed and variable costs are the two types of operating costs; 
depending on the company and the industry, the mix will differ.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The most well known financial leverage ratio is the debt-to-equity ratio. 
For example, 
if a company has \&lt;span class="math"&gt;\(10M in debt and \\)&lt;/span&gt;20M in equity, 
it has a debt-to-equity ratio of 0.5 (&lt;span class="math"&gt;\(\\)&lt;/span&gt;10M/\&lt;span class="math"&gt;\(20M\)&lt;/span&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Companies with high fixed costs, 
after reaching the breakeven point, 
see a greater increase in operating revenue when output is increased compared 
to companies with high variable costs. 
The reason for this is that the costs have already been incurred, 
so every sale after the breakeven transfers to the operating income. 
On the other hand, 
a high variable cost company sees little increase in operating income 
with additional output, 
because costs continue to be imputed into the outputs. 
The degree of operating leverage is the ratio used 
to calculate this mix and its effects on operating income.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="leverage"&gt;Leverage&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The use of various financial instruments or borrowed capital, 
such as margin, 
to increase the potential return of an investment. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The amount of debt used to finance a firm's assets. 
A firm with significantly more debt 
than equity is considered to be highly leveraged. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Leverage is most commonly used in real estate transactions 
through the use of mortgages to purchase a home.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Leverage can be created through options, 
futures, margin and other financial instruments. 
For example, say you have \&lt;span class="math"&gt;\(1,000 to invest. 
This amount could be invested in 10 shares of Microsoft stock, 
but to increase leverage, 
you could invest the \\)&lt;/span&gt;1,000 in five options contracts. 
You would then control 500 shares instead of just 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most companies use debt to finance operations. 
By doing so, a company increases its leverage 
because it can invest in business operations without increasing its equity. 
For example, 
if a company formed with an investment of \&lt;span class="math"&gt;\(5 million from investors, 
the equity in the company is \\)&lt;/span&gt;5 million - 
this is the money the company uses to operate. 
If the company uses debt financing by borrowing \&lt;span class="math"&gt;\(20 million, 
the company now has \\)&lt;/span&gt;25 million to invest in business operations 
and more opportunity to increase value for shareholders. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Leverage helps both the investor and the firm to invest or operate. 
However, it comes with greater risk. 
If an investor uses leverage to make an investment 
and the investment moves against the investor, 
his or her loss is much greater than 
it would've been if the investment had not been leveraged - 
leverage magnifies both gains and losses. In the business world, 
a company can use leverage to try to generate shareholder wealth, 
but if it fails to do so, the interest expense and credit risk 
of default destroys shareholder value.&lt;/p&gt;
&lt;h2 id="net-operating-income-noi"&gt;Net Operating Income (NOI)&lt;/h2&gt;
&lt;p&gt;A company's operating income after operating expenses are deducted, 
but before income taxes and interest are deducted. 
If this is a positive value, it is referred to as net operating income, 
while a negative value is called a net operating loss (NOL). &lt;/p&gt;
&lt;p&gt;NOI is often viewed as a good measure of company performance. 
Some believe this figure is less susceptible than other figures to manipulation by management.&lt;/p&gt;
&lt;h2 id="charge-off"&gt;Charge-Off&lt;/h2&gt;
&lt;p&gt;A term describing an expense on a company's income statement. 
A charge-off will fall under one of the following categories: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A debt that is deemed uncollectible by the reporting firm 
and is subsequently written off. 
This type will be classified as 'bad debt expense' on the income statement, 
and removed from the balance sheet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A probable one-time extraordinary expense incurred 
by a company that negatively affects earnings 
and results in a write-down of some of the firm's assets. 
The write-down arises due to impairments of assets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bad debt expenses arise when a firm is unable to collect 
on some of its accounts receivable (AR). 
When this occurs, the firm has little recourse; 
it could either sell the probable bad debt to a collection agency 
(a sale will be recorded on the firm's books, but not as an expense), 
or it could just write-off the uncollectible amount as an expense on the income statement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Companies often say something like: 
"we will take a one-time charge against earnings this quarter." 
This means that an extraordinary event has occurred and, 
altough it affects present earnings, 
it is unlikely to occur again. 
As a result, 
a company will usually provide an earnings per share (EPS) figure 
with and without this charge.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="net-charge-off-nco"&gt;Net Charge Off (NCO)&lt;/h2&gt;
&lt;p&gt;The dollar amount representing the difference between gross charge-offs 
and any subsequent recoveries of delinquent debt. 
Net charge offs refer to debt owed to a company 
that is unlikely to be recovered by that company. 
This "bad debt" often written off and classified as gross charge-offs. 
If, at a later date, 
some money is recovered on the debt, 
the amount is subtracted from the gross charge-offs 
to compute the net charge-off value.&lt;/p&gt;
&lt;p&gt;Bad debt or poor credit quality loans are regularly charged off 
as bad debt and purged from the books, 
often on a monthly or quarterly basis. 
If, at a later date, 
the company find out it was wrong and part of the debt is actually repaid, 
the net charge-off can be calculated 
by finding the difference the gross charge-offs 
and the repaid debt. 
A negative value for net charge-offs indicates 
that recoveries are greater than charge-offs 
during a particular accounting period. Companies want this number to be low.&lt;/p&gt;
&lt;h2 id="scenario-analysis"&gt;Scenario Analysis&lt;/h2&gt;
&lt;p&gt;The process of estimating the expected value of a portfolio 
after a given period of time, 
assuming specific changes in the values of the portfolio's securities 
or key factors that would affect security values, 
such as changes in the interest rate.&lt;/p&gt;
&lt;p&gt;Scenario analysis commonly focuses on estimating 
what a portfolio's value would decrease to if an unfavorable event, 
or the "worst-case scenario", were realized. 
Scenario analysis involves computing different reinvestment rates 
for expected returns that are reinvested during the investment horizon.&lt;/p&gt;
&lt;p&gt;There are many different ways to approach scenario analysis, 
but a common method is to determine what the standard deviation of daily 
or monthly security returns are, 
and then compute what value would be expected for the portfolio 
if each security generated returns two or three standard deviations 
above and below the average return.&lt;/p&gt;
&lt;p&gt;In this way, 
an analyst can have reasonable certainty 
that the value of a portfolio is unlikely to fall below (or rise above) 
a specific value during a given time period.&lt;/p&gt;
&lt;h2 id="financial-repression"&gt;Financial Repression&lt;/h2&gt;
&lt;p&gt;A term that describes measures by which governments channel funds 
to themselves as a form of debt reduction. 
This concept was introduced in 1973 by Stanford economists Edward S. Shaw 
and Ronald I. McKinnon. Financial repression 
can include such measures as directed lending to the government, 
caps on interest rates, regulation of capital movement 
between countries and a tighter association between government and banks. 
The term was initially used in response to the emerging market financial systems 
during the 1960s, '70s and '80s.&lt;/p&gt;
&lt;p&gt;In 2011, economists Carmen M. Reinhart and M. Belen Sbrancia hypothesized 
in a National Bureau of Economic Research (NBER) 
working paper entitled "The Liquidation of Government Debt" 
that governments could return to financial repression 
to deal with debt following the 2008 economic crisis. 
Reinhart and Sbrancia indicate that financial repression features:&lt;/p&gt;
&lt;p&gt;Caps or ceilings on interest rates
Government ownership or control of domestic banks and financial institutions
Creation or maintenance of a captive domestic market for government debt
Restrictions on entry to the financial industry
Directing credit to certain industries&lt;/p&gt;
&lt;h3 id="credit-report"&gt;Credit Report&lt;/h3&gt;
&lt;p&gt;A detailed report of an individual's credit history prepared 
by a credit bureau and used by a lender 
to in determining a loan applicant's creditworthiness, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Personal data (current and previous addresses, social security number, employment history)&lt;/li&gt;
&lt;li&gt;Summary of credit history (number and type of accounts that are past-due or in good standing)&lt;/li&gt;
&lt;li&gt;Detailed account information&lt;/li&gt;
&lt;li&gt;Inquires into applicant's credit history (number and type of inquiries into applicant's credit report)&lt;/li&gt;
&lt;li&gt;Details of any accounts turned over to credit agency (such as information about liens, wages garnishments via federal, state or county records)&lt;/li&gt;
&lt;li&gt;Information on how to dispute any of the above information.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once negative information appears on your credit report, 
there is little you can do to clear it up if the information is truthful and accurate. 
Generally such information remains for about seven years, 
while bankruptcy filings typically stay on the credit report for about 10 years. &lt;/p&gt;
&lt;h2 id="absorption-rate"&gt;Absorption Rate&lt;/h2&gt;
&lt;p&gt;The rate at which available homes are sold 
in a specific real estate market during a given time period. 
It is calculated by dividing the total number of available homes 
by the average number of sales per month. 
The figure shows how many months it will take to exhaust the supply of homes on the market. 
A high absorption rate may indicate that the supply of available homes will shrink rapidly, 
increasing the odds that a homeowner will sell a piece of property in a shorter period of time.&lt;/p&gt;
&lt;p&gt;For example, 
suppose that a city has 1,000 homes currently on the market to be sold. 
If buyers snap up 100 homes per month, 
the supply of homes will be exhausted in 10 months 
(1,000 homes divided by 100 homes sold per month). 
If a homeowner is looking to sell a piece of property, 
he knows that half of the market will be sold out in five months. 
This rate does not take in to account additional homes that enter the market. 
The absorption rate can also be a signal to developers to start building new homes. &lt;/p&gt;
&lt;h2 id="market-exposure"&gt;Market Exposure&lt;/h2&gt;
&lt;p&gt;The amount of funds invested in a particular type of security 
and/or market sector or industry and usually expressed as a percentage 
of total portfolio holdings. 
Thus, it is the amount an investor has at risk or the amount he/she can lose.&lt;/p&gt;
&lt;p&gt;The exposure of a portfolio to particular securities/markets/sectors 
must be considered when determining asset allocation 
since it can greatly increase returns or, 
if properly done, minimizes losses. 
For example, a portfolio with both stocks 
and bonds holdings will typically have less risk 
than a portfolio with exposure only to stocks. &lt;/p&gt;
&lt;h2 id="basis-point-bps"&gt;Basis Point (BPS)&lt;/h2&gt;
&lt;p&gt;A unit that is equal to 1/100th of 1%, 
and is used to denote the change in a financial instrument. 
The basis point is commonly used for calculating changes in interest rates, 
equity indexes and the yield of a fixed-income security.&lt;/p&gt;
&lt;p&gt;The relationship between percentage changes 
and basis points can be summarized as follows: 
1% change = 100 basis points, and 0.01% = 1 basis point.&lt;/p&gt;
&lt;p&gt;So, a bond whose yield increases from 5% to 5.5% 
is said to increase by 50 basis points; 
or interest rates that have risen 1% are said to have increased by 100 basis points. &lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="terminology"></category><category term="business"></category><category term="Work"></category><category term="investment"></category><category term="credit risk"></category><category term="finance"></category><category term="bank"></category></entry><entry><title>First 10-digit Prime in Consecutive Digits of Euler Constant?</title><link href="http://www.legendu.net/en/blog/first-prime/" rel="alternate"></link><published>2016-07-13T00:12:11-07:00</published><updated>2016-07-13T00:12:11-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/first-prime/</id><summary type="html">&lt;p&gt;One day my friend Ru He asked me a question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the first 10-digit prime found in consecutive digits of e? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is an easy problem with the help of Mathematica.
The following is the Mathematica code I wrote to solve this question. 
It actually solves the general problem …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One day my friend Ru He asked me a question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the first 10-digit prime found in consecutive digits of e? &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is an easy problem with the help of Mathematica.
The following is the Mathematica code I wrote to solve this question. 
It actually solves the general problem of first n-digit prime in consecutive digits of e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;(*&lt;/span&gt;
&lt;span class="c"&gt;@param k: number of digits of the prime to be found in e*)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;digits&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt;
&lt;span class="o"&gt;*)&lt;/span&gt;
&lt;span class="n"&gt;PrimeInE&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k_&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kn"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
    &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Floor&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;flag&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
    &lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PrimeQ&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;Return&lt;/span&gt;&lt;span class="bp"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Floor&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]];&lt;/span&gt;
    &lt;span class="kn"&gt;Print&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Please choose a bigger value for argument \&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; in order to find the first &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-digit prime in e.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;PrimeInE&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;7427466391&lt;/span&gt;

&lt;span class="n"&gt;PrimeInE&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="mi"&gt;182845904523536028747135266249&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Mathematica"></category><category term="Google"></category><category term="Euler constant"></category><category term="interview"></category><category term="math"></category><category term="fun problems"></category></entry><entry><title>How MATLAB Is Different from Other Programming Languages</title><link href="http://www.legendu.net/en/blog/MATLAB-different/" rel="alternate"></link><published>2016-07-13T00:09:40-07:00</published><updated>2016-07-13T00:09:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/MATLAB-different/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB support command style (like Linux terminal commands).
This means that you do not have to use parentheses when you call some
functions, instead, you can use spaces to separate a function and
its arguments.
And when an argument of a function is string, you
do not have to use …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB support command style (like Linux terminal commands).
This means that you do not have to use parentheses when you call some
functions, instead, you can use spaces to separate a function and
its arguments.
And when an argument of a function is string, you
do not have to use single quotation mark when you call the function
using command style. When a function does not take any arguments,
you can call the function by parentheses with nothing in or you can
ignore the parentheses and just use the name function to call it.
For example, to generate a rand number between 0 and 1, you can use
&lt;code&gt;rand()&lt;/code&gt; or you can simply use &lt;code&gt;rand&lt;/code&gt;. This is much more convenient
compared to many other languages. e.g. R
However, the support not as seamless as Ruby (in which you can use 
command style and function style freely). Not all functions in MATLAB have 
command versions, and usually you
cannot use command version of functions in user-defined functions.
(not very sure whether you can use it in m file or not, check it
later.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In most languages (e.g. ,C++, Java, SAS, etc), 
it is required that you end a statement with &lt;code&gt;;&lt;/code&gt;. 
In some other languages (e.g., R), it does not matter much (if write multiple statements on a line in R, &lt;code&gt;;&lt;/code&gt; can be used to separate them). 
In MATLAB, you are not required to put a &lt;code&gt;;&lt;/code&gt; at the end of a statement. 
However, it is recommneded that you use &lt;code&gt;;&lt;/code&gt; at the end of each statement, 
otherwise the result of the statument will be printed out to the console.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The normal MATLAB statements are continued on new line by putting
three dots (&lt;code&gt;...&lt;/code&gt;), which is different from other popular languages.
Many programming languages allows you to start a new line freely, 
e.g. ,C++, Java, etc. R allows one to start a new line if no ambiguity is introduced. 
Three dots (&lt;code&gt;...&lt;/code&gt;) is often used in other languages (e.g., R and C++11) for variadic functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Though MATLAB support multiple styles of syntax, its
syntax is still more strict than the syntax of R, which make it more
efficient in the cost of convenience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MATLAB use &lt;span class="math"&gt;\(\sim\)&lt;/span&gt; to stand for logical &lt;code&gt;NOT&lt;/code&gt;, which is different
from most of other languages. Usually a programming language uses &lt;code&gt;NOT&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, or &lt;code&gt;$&amp;lt;&amp;gt;$&lt;/code&gt; to stand
for logical &lt;code&gt;NOT&lt;/code&gt;. See a summary on operators in different programming languages 
&lt;a href="http://dclong.github.io/en/2012/06/operators-popular-language/"&gt;in this post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MATLAB uses &lt;code&gt;disp&lt;/code&gt; to display text of array to the console, which is
different from most other programming languages. 
Most programming languages use functions/routines/methods related
to words &lt;code&gt;print&lt;/code&gt; (printf, print, println, etc) and &lt;code&gt;write&lt;/code&gt; (write, writeln, etc) to print message to the standout put of a file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In other programming languages, you have &lt;code&gt;packages&lt;/code&gt; (e.g. Java,
Mathematica and R), &lt;code&gt;libraries&lt;/code&gt; (e.g. C). In MATLAB, a
similar concept which is called &lt;code&gt;toolbox&lt;/code&gt;, however, it is not exactly 
the same as &lt;code&gt;packages&lt;/code&gt; or &lt;code&gt;libraries&lt;/code&gt; in other languages. 
You can use functions in a toolbox as long as the toolbox is installed.
In R, you have to first load a package in order to use functions in it (or you have to full name of the function).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To use strings in MATLAB, you must use single quotation marks,
which is different from many other languages.
For example, in C/C++ and Java, you have to use double quotation marks; 
in languages which have Linux blood (e.g., R, Python, Bash and so on),
you can use either double or single quotation marks (though there might be slight difference between single and double quotations).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MATLAB is not completely case sensitive. MATLAB is case sensitive
for variable names and built-in functions. For scripts and functions
stored in a MATLAB file with a .m extension, case sensitivity is
preserved on UNIX platforms but not on Windows platforms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Loops in MATLAB is faster than loops in R.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="C++"></category><category term="programming"></category><category term="Java"></category><category term="SAS"></category><category term="R"></category><category term="MATLAB"></category></entry><entry><title>Sweave</title><link href="http://www.legendu.net/en/blog/sweave/" rel="alternate"></link><published>2016-07-13T00:05:31-07:00</published><updated>2016-07-13T00:05:31-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/sweave/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do not use sweave unless you are sure that you have run to the same
code again and again on different data sets, and you want the report
to be generate automatically each time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You must start &lt;code&gt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt; at the beginning a line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to do simulation, you'd better …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do not use sweave unless you are sure that you have run to the same
code again and again on different data sets, and you want the report
to be generate automatically each time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You must start &lt;code&gt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt; at the beginning a line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to do simulation, you'd better set a seed for the random
number generator (RNG). In this way, you can reproduce your simulation
and the running result of the R code will always be the same. Sometime,
the result of R code will different every time you run it. For example,
if you want to test the speed of some algorithms, the time needed for
each algorithm will be different each time you run the code even if you
use the computer and use a same seed for RNG (if simulation used). For
this kind of output, you'd better not use Sweave. A better way is to
write the auto-write the result into a tex document, and then include
the file in your main tex file. In this way, you can still redo old work
easily but without worrying out having different outputs every time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="LaTeX"></category><category term="programming"></category><category term="Sweave"></category></entry><entry><title>Set Line Space in LaTeX</title><link href="http://www.legendu.net/en/blog/set-line-space-in-latex/" rel="alternate"></link><published>2016-07-13T00:05:22-07:00</published><updated>2016-07-13T00:05:22-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/set-line-space-in-latex/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;parskip&lt;/code&gt; command makes a skip between paragraphs. 
The length of skip can be set using the command &lt;code&gt;\setlength&lt;/code&gt;, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;setlength&lt;/span&gt;&lt;span class="err"&gt;{\&lt;/span&gt;&lt;span class="n"&gt;parskip&lt;/span&gt;&lt;span class="err"&gt;}{&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="n"&gt;plus&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="n"&gt;minus&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;\itemsep&lt;/code&gt; sets the space between items in lists, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;\&lt;span class="nv"&gt;begin&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
\&lt;span class="nv"&gt;itemsep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;cm&lt;/span&gt;
\&lt;span class="nv"&gt;item …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;parskip&lt;/code&gt; command makes a skip between paragraphs. 
The length of skip can be set using the command &lt;code&gt;\setlength&lt;/code&gt;, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;setlength&lt;/span&gt;&lt;span class="err"&gt;{\&lt;/span&gt;&lt;span class="n"&gt;parskip&lt;/span&gt;&lt;span class="err"&gt;}{&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="n"&gt;plus&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt; &lt;span class="n"&gt;minus&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;pt&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;\itemsep&lt;/code&gt; sets the space between items in lists, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;\&lt;span class="nv"&gt;begin&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
\&lt;span class="nv"&gt;itemsep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="nv"&gt;cm&lt;/span&gt;
\&lt;span class="nv"&gt;item&lt;/span&gt; 
\&lt;span class="k"&gt;end&lt;/span&gt;{&lt;span class="nv"&gt;itemize&lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The command &lt;code&gt;\doublespace&lt;/code&gt; makes lines after this command double spaced. 
This is convenient to produce PDF document for review.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="LaTeX"></category><category term="programming"></category><category term="line"></category><category term="spacing"></category><category term="space"></category></entry><entry><title>Scientific References</title><link href="http://www.legendu.net/en/blog/scientfic-reference/" rel="alternate"></link><published>2016-07-13T00:05:06-07:00</published><updated>2016-07-13T00:05:06-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/scientfic-reference/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JabRef&lt;/code&gt; is an open-source cross-plotform software for managing scientific references.
&lt;code&gt;Mendeley&lt;/code&gt; is a good cost-free cross-platform software for managing scientific references.
It introduces the concept of social research.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use bibtex in your LaTeX code, 
you have to compile your code using &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt; and &lt;code&gt;pdflatex …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JabRef&lt;/code&gt; is an open-source cross-plotform software for managing scientific references.
&lt;code&gt;Mendeley&lt;/code&gt; is a good cost-free cross-platform software for managing scientific references.
It introduces the concept of social research.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use bibtex in your LaTeX code, 
you have to compile your code using &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt; and &lt;code&gt;pdflatex/latex&lt;/code&gt; in sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;natbib&lt;/code&gt; is a LaTeX package for citing references, and it is compatible with bibtex.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use author and date style references and there are duplicate
authors and years, &lt;code&gt;natbib&lt;/code&gt; print out the whole list of names and years
by default instead of using abbreviation for names. To avoid this
problem, you can add letters to the end of years. (not sure about this ...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;\eqref&lt;/code&gt; command is convenient way to reference equations in LaTeX.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="LaTeX"></category><category term="reference"></category><category term="research"></category><category term="Bibtex"></category><category term="software"></category></entry><entry><title>LaTeX for Chinese</title><link href="http://www.legendu.net/en/blog/latex-for-chinese/" rel="alternate"></link><published>2016-07-13T00:04:39-07:00</published><updated>2016-07-13T00:04:39-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/latex-for-chinese/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;xetex&lt;/code&gt; is the state-of-art way for dealing with Chinese type setting.
You can install &lt;code&gt;xetex&lt;/code&gt; on Debian series of Linux distributions (Debian, Ubuntu, Linux Mint, etc.)
using the following command. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig install texlive-xetex 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use command &lt;code&gt;xelatex&lt;/code&gt; to compile. 
The utf-8 format is preferred. &lt;/p&gt;
&lt;p&gt;There are 2 good ways …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;xetex&lt;/code&gt; is the state-of-art way for dealing with Chinese type setting.
You can install &lt;code&gt;xetex&lt;/code&gt; on Debian series of Linux distributions (Debian, Ubuntu, Linux Mint, etc.)
using the following command. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig install texlive-xetex 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use command &lt;code&gt;xelatex&lt;/code&gt; to compile. 
The utf-8 format is preferred. &lt;/p&gt;
&lt;p&gt;There are 2 good ways for writing Chinese doc using LaTeX (TeX Live) in Linux.
You can use either the &lt;code&gt;ctex&lt;/code&gt; or &lt;code&gt;xeCJK&lt;/code&gt; package.
&lt;code&gt;ctex&lt;/code&gt; is based on &lt;code&gt;xeCJK&lt;/code&gt; and is more convenient, 
however &lt;code&gt;xeCJK&lt;/code&gt; is more customizable. 
The following are minimum example using &lt;code&gt;ctex&lt;/code&gt; and &lt;code&gt;xeCJK&lt;/code&gt; respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;ctex&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
中文 English 
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;xeCJK&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
中文 English 
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both template uses the Fandole fonts coming with Tex Live by default (without manually specification of fonts to use). 
With Tex Live 2015 and above, 
the configuration is done automatically and no hassle of manual configuration. 
Both &lt;code&gt;ctex&lt;/code&gt; and &lt;code&gt;xeCJK&lt;/code&gt; need &lt;code&gt;xelatex&lt;/code&gt; (see below) to compile.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xelatex test.tex
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Required packages (&lt;code&gt;texlive&lt;/code&gt;, &lt;code&gt;xelatex&lt;/code&gt;, &lt;code&gt;ctex&lt;/code&gt;, &lt;code&gt;xeCJK&lt;/code&gt;, etc.) can be installed 
on Debian sereis of Linux (Debian, Ubuntu, Linux Mint, etc.)
using the following command. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig install texlive texlive-xetex texlive-lang-cjk
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following command installs all LaTeX components that I personally use frequently.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wajig install texlive latex-beamer wiki2beamer dvipng texlive-xetex texlive-lang-cjk texstudio
&lt;/pre&gt;&lt;/div&gt;</content><category term="LaTeX"></category><category term="Chinese"></category><category term="programming"></category><category term="Tex Live"></category><category term="XeTex"></category><category term="Linux"></category><category term="fonts"></category><category term="markup"></category></entry><entry><title>LaTeX Commands for Compiling</title><link href="http://www.legendu.net/en/blog/latex-commands/" rel="alternate"></link><published>2016-07-13T00:03:31-07:00</published><updated>2016-07-13T00:03:31-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/latex-commands/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;LaTeX&lt;ul&gt;
&lt;li&gt;If your LaTeX code contains only EPS figures, you can use the &lt;code&gt;latex&lt;/code&gt; command (also OK to use &lt;code&gt;pdflatex&lt;/code&gt;) to compile your code.   &lt;/li&gt;
&lt;li&gt;If you use bibtex, you have to compile your code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;latex&lt;/code&gt; and &lt;code&gt;latex&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;If you use the &lt;code&gt;psfrag&lt;/code&gt; package to …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;LaTeX&lt;ul&gt;
&lt;li&gt;If your LaTeX code contains only EPS figures, you can use the &lt;code&gt;latex&lt;/code&gt; command (also OK to use &lt;code&gt;pdflatex&lt;/code&gt;) to compile your code.   &lt;/li&gt;
&lt;li&gt;If you use bibtex, you have to compile your code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;latex&lt;/code&gt; and &lt;code&gt;latex&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;If you use the &lt;code&gt;psfrag&lt;/code&gt; package to edit EPS figures (only work for EPS figures), you have to compile your LaTeX code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;dvi2ps&lt;/code&gt; and &lt;code&gt;ps2pdf&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;To use the &lt;code&gt;tex4ht&lt;/code&gt; tool to convert LaTeX to other formats, you have to use the &lt;code&gt;latex&lt;/code&gt; command to compile. See &lt;a href=""&gt;this post&lt;/a&gt; for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pdflatex&lt;ul&gt;
&lt;li&gt;If you use non-EPS figures in your LaTeX code, you have to use the &lt;code&gt;pdflatex&lt;/code&gt; command to compile your code.&lt;/li&gt;
&lt;li&gt;If you use bibtex, you have to compile your code using commands &lt;code&gt;pdflatex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex&lt;/code&gt; and &lt;code&gt;pdflatex&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;li&gt;Generally speaking the &lt;code&gt;pdflatex&lt;/code&gt; command is preferred to &lt;code&gt;latex&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xelatex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For compiling LaTeX code containing CJK characters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pdfTexify&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A command seen in WinEdt for compiling LaTeX code repeatedly until all issues are resolved. This can be a more convenient alternative to apply commands &lt;code&gt;pdflatex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex&lt;/code&gt; and &lt;code&gt;pdflatex&lt;/code&gt; when you use bibtex in your LaTeX code. Surely one can write bash functions to simplify this process in Linux easily.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="compile"></category><category term="LaTeX"></category><category term="programming"></category></entry><entry><title>Graphics in LaTeX</title><link href="http://www.legendu.net/en/blog/graphics-in-latex/" rel="alternate"></link><published>2016-07-13T00:02:34-07:00</published><updated>2016-07-13T00:02:34-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/graphics-in-latex/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generally PDF figures are preferred for LaTeX code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many useful commands in Linux for converting between different types of figures, e.g., &lt;code&gt;convert&lt;/code&gt;, &lt;code&gt;pdf2ps&lt;/code&gt;, etc. So it does not matter much which types of figures you produce. You can always convert them into other format when needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Generally PDF figures are preferred for LaTeX code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many useful commands in Linux for converting between different types of figures, e.g., &lt;code&gt;convert&lt;/code&gt;, &lt;code&gt;pdf2ps&lt;/code&gt;, etc. So it does not matter much which types of figures you produce. You can always convert them into other format when needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;psfrag&lt;/code&gt; package is useful for editing EPS figures.
If you use it in your LaTeX code, you have to compile your code using commands &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;dvi2ps&lt;/code&gt; and &lt;code&gt;ps2pdf&lt;/code&gt; in sequence.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vector figures (EPS, PDF, etc) can be too big sometimes (e.g., if you do scatter plot). In this case, you'd better use non-vector pictures (e.g., png, jgp, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To include figures in a frame in beamer, you must use the option &lt;code&gt;[fragile]&lt;/code&gt; for that frame. For example
&lt;div class="math"&gt;\begin{frame}[fragile]
\begin{figure}
\includegraphics{graph1}
\caption{captiontext}
\label{figurelabel}
\end{figure}
\end{frame}&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="image"></category><category term="vector"></category><category term="LaTeX"></category><category term="graphics"></category><category term="programming"></category></entry><entry><title>Convert LaTeX to Word</title><link href="http://www.legendu.net/en/blog/convert-latex-to-word/" rel="alternate"></link><published>2016-07-13T00:02:08-07:00</published><updated>2016-07-13T00:02:08-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/convert-latex-to-word/</id><summary type="html">&lt;p&gt;&lt;code&gt;pandoc&lt;/code&gt; is a general purpose tool for converting between different type of documents, 
however, 
it is not good at converting LaTeX code to word.
&lt;code&gt;tex4ht&lt;/code&gt; is a better tool for converting LaTeX code to word. 
The following are instructions to use &lt;code&gt;tex4ht&lt;/code&gt; to convert LaTeX to word.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compile your LaTeX …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;pandoc&lt;/code&gt; is a general purpose tool for converting between different type of documents, 
however, 
it is not good at converting LaTeX code to word.
&lt;code&gt;tex4ht&lt;/code&gt; is a better tool for converting LaTeX code to word. 
The following are instructions to use &lt;code&gt;tex4ht&lt;/code&gt; to convert LaTeX to word.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Compile your LaTeX code. 
Make sure that there are no error messages. 
Do not remove the temporary files produced when compiling your LaTeX code, 
as they are required by the &lt;code&gt;tex4ht&lt;/code&gt; command. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Convert your LaTeX code to html document using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mk4ht&lt;/span&gt; &lt;span class="n"&gt;mzlatex&lt;/span&gt; &lt;span class="n"&gt;you_latex_doc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tex&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the html document using office tools (Microsoft Word, LibreOffice Writer, AbiWord, etc).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save a copy of the html document to the right format you want. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="html"></category><category term="LaTeX"></category><category term="Office"></category><category term="software"></category><category term="Word"></category></entry><entry><title>TeXstudio, Bravo!</title><link href="http://www.legendu.net/en/blog/texstudio-bravo/" rel="alternate"></link><published>2016-07-13T00:01:26-07:00</published><updated>2016-07-13T00:01:26-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-13:/en/blog/texstudio-bravo/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/bravo/bravo.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I have heard about this LaTeX IDE for a long time. I
tried it today on a Debian virtual machine. It works like a charm. I like the preview
function a lot. Using inline preview, you can see compiled result while you are
typing. It works even with user-defined commands …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/bravo/bravo.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I have heard about this LaTeX IDE for a long time. I
tried it today on a Debian virtual machine. It works like a charm. I like the preview
function a lot. Using inline preview, you can see compiled result while you are
typing. It works even with user-defined commands. 
This is very helpful for people who has to use massive math expression in
LaTeX, which make TeXstudio comparable to the WYSIWYG LaTeX IDE "LyX". The
advatantage of TeXstudio over Lyx is obvious. You write pure LaTeX code. You
do not have to remember many shortcuts and commands specific to LyX. TeXstudio has
tons of other features such as auto-complete, highlighting, structure view, reversing
search and so on. It is also cross platform! TeXstudio has the potential to be
the terminator of debate on LaTeX IDEs. &lt;/p&gt;</content><category term="LyX"></category><category term="LaTeX"></category><category term="IDE"></category><category term="software"></category><category term="WYSIWYG"></category><category term="TeXstudio"></category></entry><entry><title>Check Whether an Email Address Is Valid in Java</title><link href="http://www.legendu.net/en/blog/valid-email-address-java/" rel="alternate"></link><published>2016-07-12T23:58:54-07:00</published><updated>2016-07-12T23:58:54-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-12:/en/blog/valid-email-address-java/</id><summary type="html">&lt;p&gt;See the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Pattern&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.+@.+\\.[a-z]+&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Matcher&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matcher&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;matchFound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matches&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchFound&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EMAIL OK&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EMAIL ERROR&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;See the following code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;test@test.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Pattern&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;compile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.+@.+\\.[a-z]+&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Matcher&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matcher&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;matchFound&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;matches&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchFound&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EMAIL OK&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;EMAIL ERROR&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="pattern"></category><category term="match"></category><category term="Java"></category><category term="programming"></category><category term="email address"></category></entry><entry><title>Comparison of Values Involving NA in R</title><link href="http://www.legendu.net/en/blog/comparing-values-involving-NA-in-R/" rel="alternate"></link><published>2016-07-10T20:33:23-07:00</published><updated>2016-07-10T20:33:23-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-10:/en/blog/comparing-values-involving-NA-in-R/</id><summary type="html">&lt;p&gt;The best way to compare values containing &lt;code&gt;NA&lt;/code&gt; in R is to define customized comparison functions.
Here is an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na_as_na&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nf"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
           &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x2 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;The best way to compare values containing &lt;code&gt;NA&lt;/code&gt; in R is to define customized comparison functions.
Here is an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;equals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na_as_na&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nf"&gt;equals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;na_as_na&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
           &lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
           &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
           &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;x2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="programming"></category><category term="R"></category><category term="comparison"></category><category term="NA"></category><category term="missing"></category><category term="CRAN"></category></entry><entry><title>Test Internet Speed</title><link href="http://www.legendu.net/en/blog/test-internet-speed/" rel="alternate"></link><published>2016-07-09T22:55:29-07:00</published><updated>2016-07-09T22:55:29-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-09:/en/blog/test-internet-speed/</id><summary type="html">&lt;p&gt;&lt;a href="http://www.speedtest.net/"&gt;SpeedTest - OOKLA&lt;/a&gt; can help you test the speed of your internet connection. 
Mobile apps and a command-line tool are also available. 
&lt;a href="https://www.howtoforge.com/tutorial/check-internet-speed-with-speedtest-cli-on-ubuntu/"&gt;This page&lt;/a&gt;
explains how to use the command-line tool to test the speed of your internet connection.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.speedtest.net/"&gt;SpeedTest - OOKLA&lt;/a&gt; can help you test the speed of your internet connection. 
Mobile apps and a command-line tool are also available. 
&lt;a href="https://www.howtoforge.com/tutorial/check-internet-speed-with-speedtest-cli-on-ubuntu/"&gt;This page&lt;/a&gt;
explains how to use the command-line tool to test the speed of your internet connection.&lt;/p&gt;</content><category term="internet"></category><category term="speed"></category><category term="web"></category><category term="app"></category><category term="test"></category></entry><entry><title>Input and Output in R</title><link href="http://www.legendu.net/en/blog/io-in-r/" rel="alternate"></link><published>2016-07-09T18:20:45-07:00</published><updated>2016-07-09T18:20:45-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-07-09:/en/blog/io-in-r/</id><summary type="html">&lt;h2 id="readtable-readcsv-readdelim-etc"&gt;read.table, read.csv, read.delim, etc.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and avoid using &lt;code&gt;read.table&lt;/code&gt;.
This is because that the &lt;code&gt;comment.char&lt;/code&gt; is off for &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and on for &lt;code&gt;read.table&lt;/code&gt; by default. 
My experience is that data seldom has …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="readtable-readcsv-readdelim-etc"&gt;read.table, read.csv, read.delim, etc.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and avoid using &lt;code&gt;read.table&lt;/code&gt;.
This is because that the &lt;code&gt;comment.char&lt;/code&gt; is off for &lt;code&gt;read.csv&lt;/code&gt;/&lt;code&gt;read.delim&lt;/code&gt; and on for &lt;code&gt;read.table&lt;/code&gt; by default. 
My experience is that data seldom has comments in them 
and people are usually not aware that &lt;code&gt;comment.char&lt;/code&gt; is on for &lt;code&gt;read.table&lt;/code&gt; by default. 
When there are "comment chararacters" in data which are not intended to be comment characters,
you screw up if you read data using &lt;code&gt;read.table&lt;/code&gt; and forget to turn off comment using &lt;code&gt;comment.char = ''&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
lines starting with &lt;code&gt;#&lt;/code&gt; are treated as comment lines 
and thus are ignored when reading data using &lt;code&gt;read.table&lt;/code&gt;, etc.
If a line is not a comment line, 
avoid starting it with &lt;code&gt;#&lt;/code&gt;. 
Or you can specify a different comment character 
(e.g., &lt;code&gt;$&lt;/code&gt; using option &lt;code&gt;comment.char = "$"&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you always use &lt;code&gt;stringsAsFactors = FALSE&lt;/code&gt; 
when constructing a data frame (data.frame, as.data.frame, read.table, read.csv, etc.).
Factors causes more troubles than conveniences. 
If you do need factors (for building models),
just manual convert columns to factors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a data row have an extra column/field (e.g., due to missing quotes in CSV format),
R will not throw error but instead treats the data to have a row names column. 
This results in shifted columns in some (shorter) rows. 
You can examining the format of a data file 
using the function &lt;code&gt;count.fields&lt;/code&gt; 
which counts the number of fields in each line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;read.csv&lt;/code&gt; for standard CSV files while &lt;code&gt;read.csv2&lt;/code&gt; is for European CSV format. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="writetable-writecsv-writedelim-etc"&gt;write.table, write.csv, write.delim, etc.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you write data frames into CSV format.
CSV format has a clear definition. 
If you tell people that a file is in CSV format,
they know how to read it. 
But if you tell people that a file is in a general delimited format,
people have to ask about what the delimiter is 
and whether fields are quoted, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function&lt;code&gt;write.table&lt;/code&gt; writes a data frame or a matrix into a file. 
Note that it can also append data into a file. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;paste0&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;write.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;out.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x[&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="nf"&gt;write.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;out.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;append&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col.names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;By default &lt;code&gt;write.table&lt;/code&gt; output missing values as character NA (&lt;code&gt;na = "NA"&lt;/code&gt;). 
It is suggested that you output missing values as empty strings (na = "") as it is more portable. 
Other programming languages do not recognize character &lt;code&gt;NA's&lt;/code&gt; as missing values. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always quote fields when you write data into CSV format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;row.names&lt;/code&gt; have different means in &lt;code&gt;read.table&lt;/code&gt; and &lt;code&gt;write.table&lt;/code&gt;.
&lt;code&gt;row.names&lt;/code&gt; is a logical variable indicating 
whether you want to output row names or not in &lt;code&gt;write.table&lt;/code&gt;,
however, it is not a logical variable indicating whether there is a row names in the data.
It is much more complicated. 
Please refer to the R help doc for detailed explanation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you never write row names into files. 
If row names contains useful informtion, 
write row names into file as a column/field.
The reason is that row names causes troubles in IO. 
On one hand,
it is not convenient to read in a file 
with row names into other programming language. 
On another hand,
row names causes side effect in R too.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="ms-excel"&gt;MS Excel&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.thertrader.com/2014/02/11/a-million-ways-to-connect-r-and-excel/"&gt;http://www.thertrader.com/2014/02/11/a-million-ways-to-connect-r-and-excel/&lt;/a&gt;
It is suggested that you avoid using Excel as input/ouput data format. 
CSV is a better alternative.
However, 
if you do have to use Excel as input/output data format,
read the following tips.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are lots of ways to read data from and write data into Excel documents. 
For example, 
packages &lt;code&gt;xlsReadWrite&lt;/code&gt;, &lt;code&gt;xlsx&lt;/code&gt;, &lt;code&gt;RODBC&lt;/code&gt; 
(and many more) all offers ways to import data from and export data to Excel documents. 
&lt;code&gt;xlsx&lt;/code&gt; (which offers &lt;code&gt;read.xlsx&lt;/code&gt; and &lt;code&gt;write.xlsx&lt;/code&gt;) is good package for dealing with Excel spreadsheet.
&lt;code&gt;RODBC&lt;/code&gt; is a universal way to deal with all kinds of databases 
(not just Excel spreadsheet). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is usually very slow to read in (or write to) a large Excel spreadsheet.
It is suggested that you convert large Excel spreadsheets to CSV files first 
and then read in them.
Also, write data into CSV files instead of Excel spreadsheet.
However, 
be careful that the stupid Excel might loss information when converting to CSV format.
Generally speaking, 
this happens when there are very long numbers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Excel might scilently format opened CSV (or imported text) files. 
Generally speaking,
this happens when there are very long numbers in the text file.
Be careful not to introduce undesired changed. 
If you just open a CSV file to view it and do not want change its content, 
then just discard any changes Excel has made. 
If you indeed want to change CSV file in Excel, 
keep your fingers cross. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="binary-data"&gt;Binary Data&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;readBin&lt;/code&gt; reads in binary data 
and the function &lt;code&gt;writeBin&lt;/code&gt; writes binary data into files. 
Both of the two functions have limits on the size of data that they can deal at a time. 
For large binary data, 
you have to use &lt;code&gt;readBin/writeBin&lt;/code&gt; multiple times to read/write them from/to files.
&lt;code&gt;readBin&lt;/code&gt; and &lt;code&gt;writeBin&lt;/code&gt; are compatible with &lt;code&gt;fwrite&lt;/code&gt; and &lt;code&gt;fread&lt;/code&gt; in MATLAB. 
&lt;code&gt;fread&lt;/code&gt; and &lt;code&gt;fwrite&lt;/code&gt; are C style functions, ... (to be checked for compatible with c/c++). 
However, &lt;code&gt;readBin&lt;/code&gt; and &lt;code&gt;writeBin&lt;/code&gt; is not compatible with 
Java classes &lt;code&gt;DataOutputStream&lt;/code&gt; and &lt;code&gt;DataInputStream&lt;/code&gt;. 
To read binary data written using &lt;code&gt;DataOutputStream&lt;/code&gt; from Java, 
you can call Java code for reading binary data using &lt;code&gt;rJava&lt;/code&gt; in R; 
to write binary data that is recognized by &lt;code&gt;DataInputStream&lt;/code&gt; in Java, 
you can call Java code for writing binary data using &lt;code&gt;rJava&lt;/code&gt; in R.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;All most all input/output functions in R support reading data 
from all kinds of source including files, console, clipboard and website.
For example, 
if you have copied a block of data from an Excel document, 
you can read it into R using the following command.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;read.table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;clipboard&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is good and quick way to import part of the data from a Excel document into in R. 
You do not have to worry about formula in cells. 
When you read data from Excel, values (instead formulas) are read in.
If the data is on a website, 
you can just pass the URL to &lt;code&gt;read.table&lt;/code&gt; (or &lt;code&gt;read.delim&lt;/code&gt;, &lt;code&gt;read.csv&lt;/code&gt;, etc.) to read it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;print&lt;/code&gt; prints an R object to the R console 
and &lt;code&gt;cat&lt;/code&gt; can print multiple objects to the R console, clipboard or files. 
There is some difference between the outputs generated by these two functions.
Generally speaking, 
if you want to see the content of an object in R scenario 
(keep special characters as they are), 
you want to use &lt;code&gt;print&lt;/code&gt;; 
if you want to see the content in human readable format
(special characters are translated), 
you want to use function &lt;code&gt;cat&lt;/code&gt;.
I have to mention that &lt;code&gt;cat&lt;/code&gt; doesn't work for all types of R objects 
(e.g. objects of &lt;code&gt;xtable&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;scan&lt;/code&gt; is extremely powerful and flexible. 
You can skip first &lt;code&gt;k&lt;/code&gt; lines using the option &lt;code&gt;skip = k&lt;/code&gt;.
For example, 
the following command skips the first 5 lines.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;skip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can skip lines starting with special characters using the option &lt;code&gt;comment.char&lt;/code&gt;.
For example, 
the following command skips lines starting with "#".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;comment.char&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can decide which special strings are treated as missing values using the option &lt;code&gt;na.string&lt;/code&gt;.
For example,
the following command treats "NA" as missing values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;na.string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;NA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can limit the number of data values/lines to be read in, etc.
Many input functions in R are based on the function &lt;code&gt;scan&lt;/code&gt;, 
for example, &lt;code&gt;read.table&lt;/code&gt;.
These functions inherits the powerfulness and flexibility of &lt;code&gt;scan&lt;/code&gt;. 
&lt;code&gt;scan&lt;/code&gt; is also helpful for interactive programming. 
For example, you can read a string into the variable &lt;code&gt;input&lt;/code&gt; using the following commmand.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;scan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;character&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;  
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, &lt;code&gt;scan&lt;/code&gt; is used to read in a vector, 
so the data to be read in &lt;em&gt;at the same time&lt;/em&gt; must be of the same type. &lt;/p&gt;</content><category term="R"></category><category term="IO"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>Copy SSH Public Key Using "ssh-copy-id"</title><link href="http://www.legendu.net/en/blog/ssh-copy-id/" rel="alternate"></link><published>2016-06-20T22:21:15-07:00</published><updated>2016-06-20T22:21:15-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-20:/en/blog/ssh-copy-id/</id><summary type="html">&lt;p&gt;You can use the following command to copy your SSH public key to a Linux server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub host_machine
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, 
if a Linux server runs the SSH deamon on a non default port (default is 22), 
you have to specify the port with option &lt;code&gt;-p port&lt;/code&gt;. 
In …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You can use the following command to copy your SSH public key to a Linux server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub host_machine
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, 
if a Linux server runs the SSH deamon on a non default port (default is 22), 
you have to specify the port with option &lt;code&gt;-p port&lt;/code&gt;. 
In addition, 
the host machine and the port options must be in quotes 
(either single or double quotes), 
otherwise, 
you will get an error message.
Suppose sshd runs on port 323 on &lt;code&gt;host_machine&lt;/code&gt;, 
the following command copies the ssh public key to it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub &lt;span class="s2"&gt;&amp;quot;host_machine -p 323&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can of course SSH into the server 
and add your SSH public key(s) into the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; file manually.&lt;/p&gt;</content><category term="Linux"></category><category term="SSH"></category><category term="server"></category><category term="remote"></category><category term="port"></category><category term="ssh-copy-id"></category></entry><entry><title>Compress and Decompressing Archives in Linux</title><link href="http://www.legendu.net/en/blog/compress-and-decompress-in-linux/" rel="alternate"></link><published>2016-06-19T12:17:21-07:00</published><updated>2016-06-19T12:17:21-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-19:/en/blog/compress-and-decompress-in-linux/</id><summary type="html">&lt;p&gt;&lt;a href="https://www.tecmint.com/18-tar-command-examples-in-linux/"&gt;18 Tar Command Examples in Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Important tips:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Always test integrity of the compressed file
before you throw away the original archives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a large zip file generated in Windows,
it is possible that it cannot be unzipped correctly in Linux.
(unzip bug?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="universal-way"&gt;Universal Way&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# decompress&lt;/span&gt;
dtrx file_name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="targz-or-tgz"&gt;tar.gz …&lt;/h2&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.tecmint.com/18-tar-command-examples-in-linux/"&gt;18 Tar Command Examples in Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Important tips:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Always test integrity of the compressed file
before you throw away the original archives.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a large zip file generated in Windows,
it is possible that it cannot be unzipped correctly in Linux.
(unzip bug?)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="universal-way"&gt;Universal Way&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# decompress&lt;/span&gt;
dtrx file_name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="targz-or-tgz"&gt;tar.gz or tgz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
tar -ztvf archive_name.tag.gz
&lt;span class="c1"&gt;# extract the archive contents to the current directory&lt;/span&gt;
tar -zxvf archive_name.tag.gz
&lt;span class="c1"&gt;# extract the archive contents to a directory named &amp;quot;exdir&amp;quot;&lt;/span&gt;
tar -zxvf archive_name.tag.gz -C exdir
&lt;span class="c1"&gt;# create an archive&lt;/span&gt;
tar -zcvf archive_name.tar.gz file_or_directory
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="gz"&gt;.gz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# decompress&lt;/span&gt;
gunzip -c archive_name.gz &amp;gt; decompressed_file_name
&lt;span class="c1"&gt;# or&lt;/span&gt;
gzip -cd archive_name.gz &amp;gt; decompressed_file_name
&lt;span class="c1"&gt;# or&lt;/span&gt;
zcat archive_name.gz &amp;gt; decompressed_file_name
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that you have to use the &lt;code&gt;-c&lt;/code&gt; option,
otherwise,
the original compressed file is removed.&lt;/p&gt;
&lt;h2 id="tarbz2"&gt;tar.bz2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
tar -jtvf archive_name.tar.bz2
&lt;span class="c1"&gt;# extract the archive contents to the current directory&lt;/span&gt;
tar -jxvf archive_name.tar.bz2
&lt;span class="c1"&gt;# extract the archive contents to a directory named &amp;quot;exdir&amp;quot;&lt;/span&gt;
tar -jxvf archive_name.tar.bz2 -C exdir
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="zip"&gt;zip&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
unzip -l archive_name.zip
&lt;span class="c1"&gt;# test integrity of the archive&lt;/span&gt;
unzip -t archive_name.zip
&lt;span class="c1"&gt;# extract the archive contents into the current directory&lt;/span&gt;
unzip archive_name.zip
&lt;span class="c1"&gt;# extract the archive contents into the directory &amp;quot;exdir&amp;quot;&lt;/span&gt;
unzip archive_name.zip -d exdir
&lt;span class="c1"&gt;# zip all files and subdirectories in current directory&lt;/span&gt;
zip -r archive_name.zip .
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="rar"&gt;rar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
unrar l file_name
&lt;span class="c1"&gt;# test integrity of the archive&lt;/span&gt;
unrar t file_name
&lt;span class="c1"&gt;# extract the archive with full names&lt;/span&gt;
unrar x file_name
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="jar"&gt;Jar&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;extract&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt;
&lt;span class="n"&gt;jar&lt;/span&gt; &lt;span class="n"&gt;xf&lt;/span&gt; &lt;span class="n"&gt;jar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;archived&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="7zip"&gt;7zip&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# list the archive contents&lt;/span&gt;
7za l file_name
&lt;span class="c1"&gt;# test the archive contents&lt;/span&gt;
7za t file_name
&lt;span class="c1"&gt;# extract the archive contents with full names&lt;/span&gt;
7za x file_name
&lt;span class="c1"&gt;# extract a file/folder from the archive&lt;/span&gt;
7za x archive_name path_to_file_to_be_extracted
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If the compressed archive is splitted into several smaller files,
just replace &lt;code&gt;file_name&lt;/code&gt; in the above commands
with the name of the first file of the compressed archive.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;rar&lt;/code&gt; and &lt;code&gt;7za&lt;/code&gt;,
I'm not sure whether there are options for creating a new directory
to uncompress the archive into.
However, you can always first create an empty directory,
move the archive into it and then uncompress it.&lt;/p&gt;
&lt;h2 id="multiple-archives"&gt;Multiple Archives&lt;/h2&gt;
&lt;p&gt;The archive related commands (e.g., &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;unzip&lt;/code&gt;, etc.) in Linux
does not support decompressing from multiple archives
or compressing files into multiple archives directly.
To extract content from multiple archives,
you need to first concatenate them into a single one.
For example,
you can use the following command to unzip archives
&lt;code&gt;BigDataLite-3.0.zip.001&lt;/code&gt;, &lt;code&gt;BigDataLite-3.0.zip.002&lt;/code&gt;, &lt;code&gt;BigDataLite-3.0.zip.003&lt;/code&gt;,
&lt;code&gt;BigDataLite-3.0.zip.004&lt;/code&gt;, &lt;code&gt;BigDataLite-3.0.zip.005&lt;/code&gt; and &lt;code&gt;BigDataLite-3.0.zip.006&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# concatenate zipped archives into a single one&lt;/span&gt;
cat BigDataLite-3.0.zip.00? &amp;gt; BigDataLite-3.0.zip
&lt;span class="c1"&gt;# unzip the combined archive&lt;/span&gt;
unzip BigDataLite-3.0.zip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To compress files into multiple archives,
you have to first compress them into a single archive
using one of the commands introduced before
and then split the single archive into multiple ones
using the command &lt;code&gt;split&lt;/code&gt;.
For example,
the following command split the archive &lt;code&gt;WinTPC_1.tar.gz&lt;/code&gt;
into smaller ones named &lt;code&gt;WinTPC_1.tar.gz_part??&lt;/code&gt; with size around 2.7G.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;split -b 2700M -d WinTPC_1.tar.gz WinTPC_1.tar.gz_part
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An alternative way (and better in my opinion)
is to specify the number of archives (with about equal size) to split into.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;split -n &lt;span class="m"&gt;5&lt;/span&gt; -d xp_2.tar.gz xp_2.tar.gz_part
&lt;/pre&gt;&lt;/div&gt;</content><category term="Linux"></category><category term="decompress"></category><category term="compress"></category><category term="archive"></category><category term="split"></category><category term="multiple"></category><category term="zip"></category><category term="tar"></category><category term="gz"></category><category term="bz2"></category><category term="dtrx"></category><category term="rar"></category><category term="7zip"></category></entry><entry><title>Install the R Package "arrayQualityMetrics"</title><link href="http://www.legendu.net/en/blog/arrayQualityMetrics/" rel="alternate"></link><published>2016-06-11T19:11:28-07:00</published><updated>2016-06-11T19:11:28-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-06-11:/en/blog/arrayQualityMetrics/</id><summary type="html">&lt;p&gt;I had to use the R package "arrayQualityMetrics" to check the quality of some gene chips. 
Installing this package in Linux takes a few steps. 
The following is the brief instruction on how to install R package "arayQualityMetrics" in Debian.    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# install the graphics library cairo&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libcairo2 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I had to use the R package "arrayQualityMetrics" to check the quality of some gene chips. 
Installing this package in Linux takes a few steps. 
The following is the brief instruction on how to install R package "arayQualityMetrics" in Debian.    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# install the graphics library cairo&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libcairo2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;span class="c1"&gt;# install X toolkit intrinsiscs development files&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libxt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;span class="c1"&gt;# install development files for the Gnome XML library&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libxml2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;span class="c1"&gt;# if you have installed BiocInstaller &lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BiocInstaller&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;arrayQualityMetrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# if you haven&amp;#39;t installed R package BiocInstaller&lt;/span&gt;
&lt;span class="nf"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://bioconductor.org/biocLite.R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;biocLite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;arrayQualityMetrics&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Installing R package "arrayQualityMetrics" takes a while, so be patient. &lt;/p&gt;</content><category term="research"></category><category term="programming"></category><category term="biostatistics"></category><category term="package"></category><category term="arrayQualityMetrics"></category><category term="R"></category><category term="CRAN"></category></entry><entry><title>Useful Packages and Commands for LaTex</title><link href="http://www.legendu.net/en/blog/useful-packages-for-latex/" rel="alternate"></link><published>2016-05-29T11:37:43-07:00</published><updated>2016-05-29T11:37:43-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2016-05-29:/en/blog/useful-packages-for-latex/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/latex/latex.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="math-packages"&gt;Math Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{amssymb} &lt;ul&gt;
&lt;li&gt;popular math fonts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{dsfont} &lt;ul&gt;
&lt;li&gt;&lt;code&gt;\mathds&lt;/code&gt; font&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{bm} % bold math symbols&lt;ul&gt;
&lt;li&gt;bold math symbols&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsmath} &lt;ul&gt;
&lt;li&gt;math formulas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsthm} &lt;ul&gt;
&lt;li&gt;theorem environments&lt;/li&gt;
&lt;li&gt;proof enviroment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-packages"&gt;List Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{enumerate} &lt;ul&gt;
&lt;li&gt;universal list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="graphics-packages"&gt;Graphics Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{ifpdf} &lt;ul&gt;
&lt;li&gt;allow including figures without extensions and select the right type of …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/latex/latex.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="math-packages"&gt;Math Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{amssymb} &lt;ul&gt;
&lt;li&gt;popular math fonts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{dsfont} &lt;ul&gt;
&lt;li&gt;&lt;code&gt;\mathds&lt;/code&gt; font&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{bm} % bold math symbols&lt;ul&gt;
&lt;li&gt;bold math symbols&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsmath} &lt;ul&gt;
&lt;li&gt;math formulas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{amsthm} &lt;ul&gt;
&lt;li&gt;theorem environments&lt;/li&gt;
&lt;li&gt;proof enviroment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="list-packages"&gt;List Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{enumerate} &lt;ul&gt;
&lt;li&gt;universal list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="graphics-packages"&gt;Graphics Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{ifpdf} &lt;ul&gt;
&lt;li&gt;allow including figures without extensions and select the right type of figures according to the compiler used&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{graphicx} &lt;ul&gt;
&lt;li&gt;for including pictures&lt;/li&gt;
&lt;li&gt;the graphics driver is selected automatically if none is specified (via arguments of the package) &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{psfrag} &lt;ul&gt;
&lt;li&gt;for editing eps figures in Latex (e.g., replacing text)&lt;/li&gt;
&lt;li&gt;need to compile using command &lt;code&gt;latex&lt;/code&gt;, &lt;code&gt;dvips&lt;/code&gt; and &lt;code&gt;ps2pdf&lt;/code&gt; in sequence&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{epsfig} &lt;ul&gt;
&lt;li&gt;for including eps figures&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="bibliography"&gt;Bibliography&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{natbib} &lt;ul&gt;
&lt;li&gt;for citing refernce&lt;/li&gt;
&lt;li&gt;compatible with bibtex&lt;/li&gt;
&lt;li&gt;compile using &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;bibtex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt;, &lt;code&gt;pdflatex/latex&lt;/code&gt; in sequence&lt;/li&gt;
&lt;li&gt;some Latex IDE (e.g., WinEdt) has a single button/command (PDFTexify) for simplifying the compiling process&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="color"&gt;Color&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage[usenames,dvipsnames]{color} &lt;ul&gt;
&lt;li&gt;using color by name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mutiple-files"&gt;Mutiple Files&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You can use command &lt;code&gt;\input&lt;/code&gt; or &lt;code&gt;\include&lt;/code&gt; to include Latex source files. 
Generally speaking, 
&lt;code&gt;\input&lt;/code&gt; is preferred over &lt;code&gt;\include&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;\usepackage{subfiles}
For more information, please refer to &lt;a href="http://en.wikibooks.org/wiki/LaTeX/General_Guidelines"&gt;wiki book&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="chinese-packages"&gt;Chinese Packages&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;\usepackage{xeCJK} &lt;ul&gt;
&lt;li&gt;no need if use ctexart, ctexbook and so on&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\usepackage{fontspec}&lt;ul&gt;
&lt;li&gt;choose font theme &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;\setCJKmainfont{Adobe Song Std} &lt;ul&gt;
&lt;li&gt;use adobe fonts as the main font&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="color"></category><category term="programming"></category><category term="list"></category><category term="Latex"></category><category term="package"></category><category term="bibliography"></category><category term="enumerate"></category><category term="formula"></category><category term="math"></category><category term="graphics"></category></entry><entry><title>Probability to Lose All Money</title><link href="http://www.legendu.net/en/blog/probability-lose-all-money/" rel="alternate"></link><published>2015-11-22T03:56:28-08:00</published><updated>2015-11-22T03:56:28-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-11-22:/en/blog/probability-lose-all-money/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/object/money-1.jpeg"
width="240" height="200" align="right" /&gt;&lt;/p&gt;
&lt;p&gt;A few days ago I found someone asking an interview questions on &lt;a href="http://www.mitbbs.com/"&gt;mitbbs&lt;/a&gt;.
The question is as follows. 
A gambler plays a fair game and bet 1 dollar each time. 
If he lose all his money, 
the game stops. 
Suppose he has 10 dollars and is only allowed to play …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/object/money-1.jpeg"
width="240" height="200" align="right" /&gt;&lt;/p&gt;
&lt;p&gt;A few days ago I found someone asking an interview questions on &lt;a href="http://www.mitbbs.com/"&gt;mitbbs&lt;/a&gt;.
The question is as follows. 
A gambler plays a fair game and bet 1 dollar each time. 
If he lose all his money, 
the game stops. 
Suppose he has 10 dollars and is only allowed to play 50 rounds at most, 
what is the probability that he lose all his money?&lt;/p&gt;
&lt;p&gt;This is a problem of random work. 
I am pretty sure that there are very neat solutions to 
this problem using &lt;em&gt;reflection&lt;/em&gt;. 
However, 
as I mentioned in my book &lt;em&gt;Statistics Thinkings&lt;/em&gt;, 
there is a universal way to solve this kind of problems. 
The key is to find a recursive forumula using conditional expectation/probability. 
First, 
we can generalize the problem to the following one. 
A gamber palys a fair game and bet 1 dollar each time. 
If he lose all his money, 
the game stops. 
Suppoe he has &lt;span class="math"&gt;\(m_0\)&lt;/span&gt; dollars and is only allowed to play &lt;span class="math"&gt;\(k\)&lt;/span&gt; rounds at most,
what is the probability that he end up with &lt;span class="math"&gt;\(m\)&lt;/span&gt; dollars?&lt;/p&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(P_{n,m}\)&lt;/span&gt; to stand the probability 
that the player end up with &lt;span class="math"&gt;\(m\)&lt;/span&gt; dollars after &lt;span class="math"&gt;\(n\)&lt;/span&gt; steps. 
Conditioning on step &lt;span class="math"&gt;\(n-1\)&lt;/span&gt;, 
we have
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{n,m} = 0.5 P_{n-1,m+1} + 0.5 P_{n-1,m-1} I(m&amp;gt;1)
$$&lt;/div&gt;
&lt;p&gt;
with initial condition 
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{0,m} = I(m=m_0),
$$&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(I\)&lt;/span&gt; is the indicator function. 
As I mentioned in my book &lt;em&gt;Statistics Thinkings&lt;/em&gt; and other similar posts on my blog,
there are several ways (e.g., moment generating function) to solve for &lt;span class="math"&gt;\(P_{n,m}\)&lt;/span&gt;. 
A pratical way is write a program to do this. &lt;/p&gt;
&lt;p&gt;I recently learned C++11, so I wrote a program in C++11 to solve this problem just for practice. 
The core code is just a recursive function. 
Though recursive algorithms are convenient, they are usually not efficient. 
A simple way to improve the speed of recursive algorithm is to use cache. 
In my code, I used a ordered map to store previous calculated probabilities 
to avoid duplicated computations. Since the code uses the standard library of C++11, 
it has to be compiled with option &lt;code&gt;-std=c++0x&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;to_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="nf"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;hp_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;second&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;final_money&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;final_money&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;final_money&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;hp_table&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hp_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="nf"&gt;lose_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;hit_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please type in the initial amount of money:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Please type in the stop step:&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lose_probability&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;init_money&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;The probablity to lose all money is: &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="cache"></category><category term="C++"></category><category term="simulation"></category><category term="statistics"></category><category term="map"></category><category term="probability"></category><category term="recursive"></category><category term="condition"></category><category term="fun problems"></category><category term="hash table"></category><category term="money"></category><category term="lose"></category></entry><entry><title>The Power of Generating Functions</title><link href="http://www.legendu.net/en/blog/generating-functions/" rel="alternate"></link><published>2015-11-22T02:20:55-08:00</published><updated>2015-11-22T02:20:55-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-11-22:/en/blog/generating-functions/</id><summary type="html">&lt;p&gt;Generating functions is a very powerful way to find closed 
formula for sequences defined iteratively.
I was so bored during the final week, 
so I went on internet for fun. 
Finally I found someone from Sydney University was asking for help on this question:&lt;/p&gt;
&lt;p&gt;(a) If Ln=Ln-1+Ln-2 for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Generating functions is a very powerful way to find closed 
formula for sequences defined iteratively.
I was so bored during the final week, 
so I went on internet for fun. 
Finally I found someone from Sydney University was asking for help on this question:&lt;/p&gt;
&lt;p&gt;(a) If Ln=Ln-1+Ln-2 for n&amp;gt;1 and Lo=2 and L1=1, please Find a closed formula for Ln.&lt;/p&gt;
&lt;p&gt;(b) Sn=Ln+ Ln-1 + … + Lo, please find an closed formula for Sn.&lt;/p&gt;
&lt;p&gt;(c) An=Ln-1So + Ln-2S1 + … + LoSn-1, please find a closed formula for An.&lt;/p&gt;
&lt;p&gt;I gave a solution using generating functions. See &lt;a href="http://www.legendu.net/media/sequence.pdf"&gt;sequence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you're from math department, 
you might question that do these series defined converge, 
if so what are the domains of convergence? 
Dating back to some day when I was still a sophomore, 
I read a book about generating functions 
and talked with my friend Hao Ying about how powerful it is. 
I cited the author's words:" We don't even have to check the domain of convergence of the series…". 
Hao bugged up and said:" What? You don't need to check the domain of converge? 
It's not important what others said. 
What really matters is what you think. 
Do you really think that's valid?…". 
Well, I still have to say that really we don't need check the converge domain of the series we used. 
It's trifle and might too be hard. 
As is known too all, 
it's easy to use mathematical induction method to prove or disprove 
a closed formula for a sequence define iteratively. 
If the formula can be proved, 
the generating method works, vise versa. 
So far I haven't come across a situation 
that generating functions method fails to work.&lt;/p&gt;</content><category term="series"></category><category term="statistics"></category><category term="sequence"></category><category term="math"></category><category term="fun problems"></category><category term="generating function"></category></entry><entry><title>Missing Values in SAS</title><link href="http://www.legendu.net/en/blog/missing-values-in-sas/" rel="alternate"></link><published>2015-08-28T17:02:54-07:00</published><updated>2015-08-28T17:02:54-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-08-28:/en/blog/missing-values-in-sas/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SAS uses a dot (&lt;code&gt;.&lt;/code&gt;) to stand for a numeric missing value 
    and any number (can be 0 which correspond to the blank string &lt;code&gt;""&lt;/code&gt;) 
    of white spaces (e.g., &lt;code&gt;"  "&lt;/code&gt;) for character missing value. 
    (This also means that you cannot save pure white spaces in SAS.) 
    However, 
    when you enter values after …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SAS uses a dot (&lt;code&gt;.&lt;/code&gt;) to stand for a numeric missing value 
    and any number (can be 0 which correspond to the blank string &lt;code&gt;""&lt;/code&gt;) 
    of white spaces (e.g., &lt;code&gt;"  "&lt;/code&gt;) for character missing value. 
    (This also means that you cannot save pure white spaces in SAS.) 
    However, 
    when you enter values after &lt;code&gt;datalines&lt;/code&gt; in the data step,
    you always use dots (not a blank/space) to stand for missing values 
    (no matter a variable is numeric or character). 
    You can use &lt;code&gt;where v is null&lt;/code&gt; or &lt;code&gt;where v is missing&lt;/code&gt; 
    to check whether the variable &lt;code&gt;v&lt;/code&gt; is null/missing.
    Here &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;missing&lt;/code&gt; have the same meaning. 
    However, 
    both of &lt;code&gt;is null&lt;/code&gt; and &lt;code&gt;is missing&lt;/code&gt; can only be used 
    in the &lt;code&gt;where&lt;/code&gt; clause (in any procedure) and the &lt;code&gt;on&lt;/code&gt; clause (in the SQL procedure).
    In other logical comparisons (e.g., if), 
    you have to use &lt;code&gt;v = .&lt;/code&gt; or &lt;code&gt;v = " "&lt;/code&gt; 
    according to whether &lt;code&gt;v&lt;/code&gt; is a numeric variable or a character variable.
    In Teradata SQL, 
    &lt;code&gt;null&lt;/code&gt; means missing value and you can use &lt;code&gt;null&lt;/code&gt; (and only &lt;code&gt;null&lt;/code&gt;) 
    for both numeric and character variables and in any logical comparisons. 
    When SAS displays missing values, 
    a numerical missing value is displayed as a dot 
    and a character missing value is displayed as a blank/space.
    When Teradata SQL Assistant displays query results, 
    &lt;code&gt;null&lt;/code&gt; values are indicated by &lt;code&gt;?&lt;/code&gt;.
    It is suggested that you always &lt;code&gt;is null&lt;/code&gt; 
    instead of &lt;code&gt;is missing&lt;/code&gt; or &lt;code&gt;v = .&lt;/code&gt; or &lt;code&gt;v = " "&lt;/code&gt; in &lt;code&gt;where&lt;/code&gt; clauses in SAS. 
    This makes your SAS SQL code more portable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the IML procedure (seems also true for data step?) missing values 
    and white space (no matter how many) all have length 1,
    which is ridiculous.
    You have to be very careful when you work with string in &lt;code&gt;proc iml&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SAS treats the numeric missing value (&lt;code&gt;.&lt;/code&gt;) as the smallest numerical value.
    When you check whether a numeric value is negative, 
    you have to first get rid of missing values. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most functions (e.g., &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, etc.) in SAS ignores missing values
    instead of propagate missing values. 
    This is a little bit crazy as propagating missing values sounds more reasonable.
    You'd better filtering out missing values (if any) before you do calculations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;input("", 8.)&lt;/code&gt; returns &lt;code&gt;.&lt;/code&gt; (numeric missing value) 
    while &lt;code&gt;put(., 3.)&lt;/code&gt; returns &lt;code&gt;"."&lt;/code&gt; instead of &lt;code&gt;""&lt;/code&gt; (character missing value).
    The inconsistent is annoying.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="questions"&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Numeric missing value (&lt;code&gt;.&lt;/code&gt;) affects functions such as &lt;code&gt;lag&lt;/code&gt; and &lt;code&gt;dif&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the missing(.) function is strange, check it, and I think it should replaced by &lt;code&gt;x is missing&lt;/code&gt; or &lt;code&gt;x is null&lt;/code&gt; ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="SAS"></category><category term="missing values"></category><category term="null"></category><category term="white space"></category></entry><entry><title>Transpose Data in SAS</title><link href="http://www.legendu.net/en/blog/transpose-data-in-sas/" rel="alternate"></link><published>2015-08-26T22:09:17-07:00</published><updated>2015-08-26T22:09:17-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-08-26:/en/blog/transpose-data-in-sas/</id><summary type="html">&lt;p&gt;You can use the transpose procedure to tranpose a fat/thin data to a thin/fat data in SAS.
For example, 
suppose we have a data set s1 in SAS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;data &lt;/span&gt;s1; 
    &lt;span class="k"&gt;input&lt;/span&gt; famid faminc96 faminc97 faminc98 spend96 spend97 spend98 ; 
&lt;span class="k"&gt;    datalines; &lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;1 40000 40500 41000 38000 39000 40000 &lt;/span&gt;
&lt;span class="x"&gt;2 45000 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;You can use the transpose procedure to tranpose a fat/thin data to a thin/fat data in SAS.
For example, 
suppose we have a data set s1 in SAS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;data &lt;/span&gt;s1; 
    &lt;span class="k"&gt;input&lt;/span&gt; famid faminc96 faminc97 faminc98 spend96 spend97 spend98 ; 
&lt;span class="k"&gt;    datalines; &lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;1 40000 40500 41000 38000 39000 40000 &lt;/span&gt;
&lt;span class="x"&gt;2 45000 45400 45800 42000 43000 44000 &lt;/span&gt;
&lt;span class="x"&gt;3 75000 76000 77000 70000 71000 72000 &lt;/span&gt;
&lt;span class="x"&gt;; &lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can transpose the fat data set to a thin one using the transpose procedure.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc transpose &lt;/span&gt;data=s1 &lt;span class="k"&gt;out&lt;/span&gt;=s2 (&lt;span class="k"&gt;rename&lt;/span&gt;=(&lt;span class="kc"&gt;_name_&lt;/span&gt;=year)) prefix=&lt;span class="k"&gt;x&lt;/span&gt;;
    &lt;span class="k"&gt;by&lt;/span&gt; famid;
    var faminc96-faminc98&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This gives you the following data set.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;famid&lt;/th&gt;
&lt;th align="center"&gt;year&lt;/th&gt;
&lt;th align="center"&gt;x1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;faminc96&lt;/td&gt;
&lt;td align="center"&gt;40000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;faminc97&lt;/td&gt;
&lt;td align="center"&gt;40500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;faminc98&lt;/td&gt;
&lt;td align="center"&gt;41000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;faminc96&lt;/td&gt;
&lt;td align="center"&gt;45000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;faminc97&lt;/td&gt;
&lt;td align="center"&gt;45400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;faminc98&lt;/td&gt;
&lt;td align="center"&gt;45800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;faminc96&lt;/td&gt;
&lt;td align="center"&gt;75000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;faminc97&lt;/td&gt;
&lt;td align="center"&gt;76000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;faminc98&lt;/td&gt;
&lt;td align="center"&gt;77000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can transpose this thin data back to a fat one. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc transpose &lt;/span&gt;data=s2 &lt;span class="k"&gt;out&lt;/span&gt;=s3 (&lt;span class="k"&gt;drop&lt;/span&gt;=&lt;span class="kc"&gt;_name_&lt;/span&gt;);
    &lt;span class="k"&gt;by&lt;/span&gt; famid ;
    id year&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following are a few tips.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; statement specifies one or more variables in the input data set 
whose formatted values name the transposed variables in the output data set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;var&lt;/code&gt; statement specified variables in the input data set to be transposed. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;by&lt;/code&gt; statement defines groups and the transpose will be done in each &lt;code&gt;by&lt;/code&gt; group.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="SAS"></category><category term="data manipulation"></category><category term="transpose"></category></entry><entry><title>Write R Code that Runs Faster</title><link href="http://www.legendu.net/en/blog/fast-computing-r/" rel="alternate"></link><published>2015-08-26T22:08:17-07:00</published><updated>2015-08-26T22:08:17-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-08-26:/en/blog/fast-computing-r/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/run-fast.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;R is a popular statistical software which is famous for enormous amout of
packages. The syntax of R is very flexible with make it convenient at the cost
of performance. R is indeed slow compared to many other scripting languages, but
there are a few tricks which can make your …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/run-fast.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;R is a popular statistical software which is famous for enormous amout of
packages. The syntax of R is very flexible with make it convenient at the cost
of performance. R is indeed slow compared to many other scripting languages, but
there are a few tricks which can make your R code run faster.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use vector and matrix operation if possible. Theses &lt;code&gt;*apply&lt;/code&gt; functions
are very helpful for this purpose.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid changing the type and size of object in R. Though we use R object
as if they are typeless, they have type actually. Changing the type and size
of a R object forces R to reallocate a memory space which is of course
ineffecient. I have seen so many people writing R code like &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;NULL&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;condition&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;    
&lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;,&lt;span class="nv"&gt;fun&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you know the length of &lt;code&gt;s&lt;/code&gt; ahead, it is better to allocate &lt;code&gt;s&lt;/code&gt; as a
vector/list and access its elements in the loop instead of changing its
size. R coerces between different types of object implicitly whenever necessary.
For example, if you have a data frame with columns of the same type, 
you can do many matrix operations on it because R coerces the data frame to 
a matrix when needed. This is very inefficient especially when you have a large 
data frame. A better way is first convert the data frame to a matrix,
and then operate on the matrix. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;foreach(i=1:n) %dopar% {}&lt;/code&gt; to do parallel computing if applicable
(you check my another post on parallel computing). Even if a &lt;code&gt;for&lt;/code&gt; loop is
not parallelizeable, &lt;code&gt;foreach(i=1:n) %do% {}&lt;/code&gt; is a better alternative. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use native code (e.g., Fortran, C/C++) for computationally intensive job if applicable. 
Though native code can increase the performance, there is overheading to invoke native code. 
It is less benefitial to invoke native code many times to do a smart part of job each time. 
You have to use command &lt;code&gt;R CMD SHLIB file_to_compile&lt;/code&gt; to compile native code, 
and use the function &lt;code&gt;dyn.load&lt;/code&gt; to load the shared library object. 
A more convenient way is to use R package "Rcpp" if you are confident about writing C++ code. 
However, you have to pay extra attention when you interact between R and other programming language. 
For example, passing arrays betwwen R and other languages can be tricky. 
For more information about this, refer to &lt;a href="http://dclong.github.io/en/2012/05/r-interface-other-languages/"&gt;this post&lt;/a&gt;.    &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Split big data object (e.g., big data frame or matrix) to smaller ones,
and operate on these smaller objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid creating too many objects in the each working environment. Not having
enough memeory can not only make your code run slower but also make it fail
to run if have to allocate big vectors. One way to do this is to writing
small functions and run your functions instead of running everything
directly in a working environment. Small functions make sure that objects
can be garbage collected quickly when they are no longer needed. If you leave them in
the working environment, they will never release memory seized. Partition
big work into smaller functions also helps reducing bugs. Aftering creating
and remove big data objects, you can also call the function &lt;code&gt;gc&lt;/code&gt; manually to
collect garbage. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;double(n)&lt;/code&gt; to create a vector of length &lt;code&gt;n&lt;/code&gt; instead of using code
&lt;code&gt;rep(0,n)&lt;/code&gt;, and similar for others.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use matrix instead of data frame wheneve possible. Actually data frame
cause problem in many cases. Only use data frame when necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;to be continued ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="DLL"></category><category term="programming"></category><category term="HPC"></category><category term="high performance computing"></category><category term="parallel"></category><category term="R"></category><category term="memory"></category><category term="GC"></category><category term="speedup"></category><category term="fast"></category><category term="CRAN"></category></entry><entry><title>Useful Plugins for Eclipse</title><link href="http://www.legendu.net/en/blog/useful-plugins-for-eclipse/" rel="alternate"></link><published>2015-08-26T22:07:38-07:00</published><updated>2015-08-26T22:07:38-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-08-26:/en/blog/useful-plugins-for-eclipse/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="terminal-plug-in"&gt;Terminal Plug-in&lt;/h2&gt;
&lt;p&gt;"Terminal Plug-in" is a fully-working command-line terminal for Eclipse.&lt;/p&gt;
&lt;h2 id="easyshell"&gt;EasyShell&lt;/h2&gt;
&lt;p&gt;"EasyShell" allows to open a shell window or file manager from the popup menu 
in the navigation tree or editor view.&lt;/p&gt;
&lt;h2 id="vrapper"&gt;Vrapper&lt;/h2&gt;
&lt;p&gt;Vrapper provides Vim-like scheme for Eclispe.
You can edit code similar as what you do in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="terminal-plug-in"&gt;Terminal Plug-in&lt;/h2&gt;
&lt;p&gt;"Terminal Plug-in" is a fully-working command-line terminal for Eclipse.&lt;/p&gt;
&lt;h2 id="easyshell"&gt;EasyShell&lt;/h2&gt;
&lt;p&gt;"EasyShell" allows to open a shell window or file manager from the popup menu 
in the navigation tree or editor view.&lt;/p&gt;
&lt;h2 id="vrapper"&gt;Vrapper&lt;/h2&gt;
&lt;p&gt;Vrapper provides Vim-like scheme for Eclispe.
You can edit code similar as what you do in Vim 
plus that you can use mouse to copy and paste code. 
In my opinion, 
it is better than either Eclipse or Vim alone. 
The configuration file of Vrapper is &lt;code&gt;.vrapper&lt;/code&gt; or &lt;code&gt;_vrapperrc&lt;/code&gt; (on Windows).&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://eclim.org/"&gt;Eclim&lt;/a&gt; project provides a great alternative to the Vrapper plugin. 
Eclim is a seemless integration of Eclipse and the native Vim (rather than a Vim plugin). 
All plugins in Vim works well. &lt;/p&gt;
&lt;h2 id="codeinterview-plugin"&gt;CodeInterview Plugin&lt;/h2&gt;
&lt;p&gt;"CodeInterview Plugin" allows you to write code in Eclipse instead of on CodeInterview directly. 
This is helpful if you will be interviewed for coding skills on CodeInterview.&lt;/p&gt;</content><category term="Vim"></category><category term="Eclipse"></category><category term="shell"></category><category term="C/C++"></category><category term="IDE"></category><category term="software"></category><category term="plugins"></category><category term="addons"></category></entry><entry><title>Working with Class in C++</title><link href="http://www.legendu.net/en/blog/working-with-class-in-cpp/" rel="alternate"></link><published>2015-08-05T10:56:31-07:00</published><updated>2015-08-05T10:56:31-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-08-05:/en/blog/working-with-class-in-cpp/</id><summary type="html">&lt;p&gt;Illustrative examples for the following discussions can be found 
&lt;a href="https://github.com/dclong/cearn/tree/master/class"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you also provide a default constructor 
if you ever provide a user-defined constructor when writing a C++ class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to allow deleting a derived class from a pointer of the base class,
you have …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Illustrative examples for the following discussions can be found 
&lt;a href="https://github.com/dclong/cearn/tree/master/class"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you also provide a default constructor 
if you ever provide a user-defined constructor when writing a C++ class.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to allow deleting a derived class from a pointer of the base class,
you have to make the destructor of the base class &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;virtual&lt;/code&gt; 
even if it does nothing. 
If you want to prevent deleting a derived class from a pointer of the base class, 
make the descturctor of the base class &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;virtual&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you derive a class from a base class, 
the destructor of the base class is called automatically 
so that you do not have to call it manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a derived class &lt;code&gt;D&lt;/code&gt; has a method with the name &lt;code&gt;fun&lt;/code&gt;, 
then all non-virtual methods with the name &lt;code&gt;fun&lt;/code&gt; (no matter what signature they have) in its 
base class &lt;code&gt;B&lt;/code&gt; are &lt;code&gt;hidden&lt;/code&gt; by the method &lt;code&gt;fun&lt;/code&gt; in &lt;code&gt;D&lt;/code&gt;.
Suppose &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are instances of the class &lt;code&gt;D&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; respectively,
and you invoke the method &lt;code&gt;fun&lt;/code&gt; throught these two instances, 
then everything works OK (in the sense that the &lt;code&gt;right&lt;/code&gt; method is invoked).
However, this is different from &lt;code&gt;overridding&lt;/code&gt;.
The problem is that &lt;code&gt;hidden&lt;/code&gt; does not support polymorphism. 
If you have a pointer of the base class &lt;code&gt;B&lt;/code&gt; pointing to an instance of the 
derived class &lt;code&gt;D&lt;/code&gt;, and you invoke the method via the pointer, 
then &lt;code&gt;fun&lt;/code&gt; of the base class &lt;code&gt;B&lt;/code&gt; will be called. 
To support polymophism, you have to &lt;code&gt;override&lt;/code&gt; the method &lt;code&gt;fun&lt;/code&gt; in the base class &lt;code&gt;B&lt;/code&gt;.
To do this, you have to mark &lt;code&gt;fun&lt;/code&gt; as virtual in the base class. 
To help the compiler (and also make your code more readable), 
you can use &lt;code&gt;override&lt;/code&gt; after the signature of method explicitly.
&lt;a href="https://github.com/dclong/cearn/tree/master/class/inheritance"&gt;Here&lt;/a&gt; is 
an example illustrating problems discussed above. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overriding method must have the same return type as the overrided method.
(not sure whether this is required in Java)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you write your own version constructor for a class, 
you'd better also provide the copy/move constructor and assignment operator. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not use lvalue references in a class that point to an object outside the class.
A better way is to pass the object by lvalue reference to methods that need it.
If you ever decide to use a lvalue reference in a class that point to an object outside the class, 
you must initialize it in the initialization list of a constructor. 
This is because when you initialize a lvalue reference, 
you must point it to a valide object. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, member variables should not be declared as public,
unless they are &lt;code&gt;static constant&lt;/code&gt;. 
Also you should not declare member variables as &lt;code&gt;protected&lt;/code&gt; unless 
you are sure that the derived classes want to access these member variables directly. 
If you define a proteced member &lt;code&gt;m&lt;/code&gt; in a base class &lt;code&gt;B&lt;/code&gt;, 
a derived class &lt;code&gt;D&lt;/code&gt; can access and modify (if &lt;code&gt;m&lt;/code&gt; is a data member) &lt;code&gt;m&lt;/code&gt; in its own class or throught its own instances
but not throught other arbitrary object.
For example, if &lt;code&gt;b&lt;/code&gt; is an object of the base class &lt;code&gt;B&lt;/code&gt;, 
you cannot access or modify &lt;code&gt;b.m&lt;/code&gt; directly in the definition of the derived class &lt;code&gt;D&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you provide a &lt;code&gt;to_string&lt;/code&gt; method, 
rather than overridding the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; operator. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not use overloading and default parameters at the same time. 
Because this might make compiler fail to find the right version of function/method to call. 
Generally speaking, overloading is more powerful and thus prefereed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inheritance works with template class, 
i.e., you can derive class from template classes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;swap&lt;/code&gt; method can make the implementation of copy and move structor unified and thus more conveneint. 
It is suggested that you make the &lt;code&gt;swap&lt;/code&gt; function &lt;code&gt;public&lt;/code&gt; (at least &lt;code&gt;protected&lt;/code&gt;) if you provide one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If a class have many variables to be initialized, 
you can think of intializing non-critical variables in the definition 
of the class and provide public method to access and modify them. 
This make it easier to implement constructors. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always mark a method as &lt;code&gt;const&lt;/code&gt; if it does not change the state of the object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you intialize member variables in the constructor initializeing list 
(after &lt;code&gt;:&lt;/code&gt; before &lt;code&gt;{&lt;/code&gt;).
Surely you can achieve the same by assigning values to member variables in the body of constructors, 
but in this way these member variables are first initialized to default values and then assigned values,
which is not as efficient.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="virtuality"&gt;Virtuality&lt;/h2&gt;
&lt;p&gt;The following are some guidelines for virtuality from Herb Sutter.
The original article can be found &lt;a href="http://www.gotw.ca/publications/mill18.htm"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prefer to make interfaces nonvirtual, using Template Method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prefer to make virtual functions private.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only if derived classes need to invoke the base implementation of a virtual function, make the virtual function protected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A base class destructor should be either public and virtual, or protected and nonvirtual.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A few points to add:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A virtual method can be overridden by a derived class even if it is private.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A class without a public destructor cannot be used by itself. 
It servers as a base class only. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="C++"></category><category term="destructor"></category><category term="programming"></category><category term="inheritance"></category><category term="override"></category><category term="class"></category><category term="hidding"></category><category term="constructor"></category></entry><entry><title>Compile MATLAB Code</title><link href="http://www.legendu.net/en/blog/compile-matlab-code/" rel="alternate"></link><published>2015-06-07T23:48:09-07:00</published><updated>2015-06-07T23:48:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-06-07:/en/blog/compile-matlab-code/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB code can be compile to C/C++ code or stand alone applications. 
Usually you can run the stand-alone application in Windows system directly, 
but for Linux system it is a little headachy. 
The stand-alone application usually takes less than 50% of the time 
that the original MATLAB code takes …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB code can be compile to C/C++ code or stand alone applications. 
Usually you can run the stand-alone application in Windows system directly, 
but for Linux system it is a little headachy. 
The stand-alone application usually takes less than 50% of the time 
that the original MATLAB code takes to run.
This depend on different situations. 
It can happen that the stand-alone application runs slower than the original MATLAB code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To compile MATLAB code to c code, 
you can use &lt;code&gt;mcc -mc mainfn sub1fn sub2fn&lt;/code&gt;, 
and to produce an stand alone executable file from c files,
you can use &lt;code&gt;mbuild mainfun sub1fn sub2fn&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To compile MATLAB code to c++ code 
and to create a corresponding stand-alone executable file 
you can use &lt;code&gt;mcc -p mainfn sub1fn sub2fn&lt;/code&gt;. 
To compile MATLAB code that contains Handle Graphics functions into C++ 
and to create a corresponding stand-alone executable file, 
you can use &lt;code&gt;mcc -B sglcppp mainfn sub1fn sub2fn&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To compile MATLAB code to c and to create corresponding stand-alone executable file, 
you can use &lt;code&gt;mcc -m mainfn sub1fn sub2fn&lt;/code&gt;. 
To compile MATLAB code that contains Handle Graphics functions into c 
and to crate a corresponding stan-alone executable file, 
you can use &lt;code&gt;mcc -B sgl mainfn sub1fn sub2fn&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you use parallel computing, 
you will not be able to run the compiled application (at least before version 2010b) 
unless you have MATLAB Distributed Computing Server (MDCS) available on a computer cluster. 
If you have access to a MDCS, 
there is little necessary for you to compile your MATLAB parallel code to a stand-alone application, 
so just do not bother to compile your MATLAB parallel code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="compile"></category><category term="compiler"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Import/Export Data to/from SAS</title><link href="http://www.legendu.net/en/blog/import-export-data-sas/" rel="alternate"></link><published>2015-05-30T14:20:50-07:00</published><updated>2015-05-30T14:20:50-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-30:/en/blog/import-export-data-sas/</id><summary type="html">&lt;h2 id="import-data-to-sas"&gt;Import Data to SAS&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;IMPORT&lt;/code&gt; procedure is based on the &lt;code&gt;DATA&lt;/code&gt; step.
When you run an &lt;code&gt;IMPORT&lt;/code&gt; procedure, 
the unlying data step code is printed into the log.
Sometimes the &lt;code&gt;IMPORT&lt;/code&gt; procedure does a little bit extra work 
to automatically decide the most possible format you want (especially when …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="import-data-to-sas"&gt;Import Data to SAS&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;IMPORT&lt;/code&gt; procedure is based on the &lt;code&gt;DATA&lt;/code&gt; step.
When you run an &lt;code&gt;IMPORT&lt;/code&gt; procedure, 
the unlying data step code is printed into the log.
Sometimes the &lt;code&gt;IMPORT&lt;/code&gt; procedure does a little bit extra work 
to automatically decide the most possible format you want (especially when you have date related data).
If it is not what you want, 
you can copy and paste the &lt;code&gt;DATA&lt;/code&gt; step code 
generated in the log and modify it where necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better use SAS valid names for sheet names and column names in each sheet. 
This saves you trouble when importing data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also use the data step to read a text/CSV file,
however, 
the &lt;code&gt;IMPORT&lt;/code&gt; procedure is preferred over the data step for reading files
as you can read in variable names from the file instead of specifying them manually 
(as you would do in a data step).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is suggested that you use CSV files whenever possible
as it is easier to modify a text file than a binary file (especially on a Linux server).
Also, you have better control over a CSV file compared to, e.g., an Excel file 
when using &lt;code&gt;proc import&lt;/code&gt;.
You should avoid using other general format text file 
as it might take you or others extra effort to figure out the exact format of the file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A common problem with the &lt;code&gt;IMPORT&lt;/code&gt; procedure is that 
if you work on SAS server and import an Excel or CSV file created on Windows, 
the last column will always be character.
This is due to different termination of line used on Linux and Windows. 
I always upload data files using rsync/scp via command line, 
and never encounter the problem when importing an Excel file.
I do observe the problem on CSV (and other text files). 
A solution is to simply convert the CSV (or text) files&lt;br&gt;
from Windows format to Linux format using the command &lt;code&gt;dos2unix&lt;/code&gt;.
Or you can manually import the CSV/Excel file into SAS using "File -&amp;gt; Import Data".
Another "dirty" solution is to append a "junk" column as the last column in the CSV (or text) file. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A trick problem that might happen when you import data using &lt;code&gt;proc import&lt;/code&gt; 
is that text might get truncated if it is too long.
A way to resolve the issue is to add the option &lt;code&gt;guessingRows=n;&lt;/code&gt;,
where &lt;code&gt;n&lt;/code&gt; is a large enough number (e.g., the number of rows in the data set).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following SAS code reads in the sheet named "Hist_Macro" 
from the Excel file "data.xlsx"
using the &lt;code&gt;IMPORT&lt;/code&gt; procedure.
The option replace overwrites the data set macro if it already exists.
Notice that you have to end the &lt;code&gt;IMPORT&lt;/code&gt; statement (semicolon after replace) 
before you use other statement (sheet, getNames, etc.).
The getNames statement controls whether the first row in the range is read in as column names.
If Yes, the first row in the range is read in as column name, vice versa.
The default is to read in the first row (of a sheet/range) as column names.
The dataRow statement controls from which row the data is read in.
The default is to read in data from the first row of a sheet.
This option is overwritten if the range statement is used.
The statement &lt;code&gt;guessingRows=100&lt;/code&gt; asks the &lt;code&gt;IMPORT&lt;/code&gt; procedure 
to scans the first 100 rows in the input file 
to determine the appropriate data type and length of columns.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc import &lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;=macro
    datafile=&lt;span class="s"&gt;&amp;quot;~/projects/data.xlsx&amp;quot;&lt;/span&gt; 
    dbms=xlsx 
    &lt;span class="k"&gt;replace&lt;/span&gt;
    ; 
    sheet=&lt;span class="s"&gt;&amp;quot;Hist_Macro&amp;quot;&lt;/span&gt;;
    getNames=Y;
    dataRow=&lt;span class="m"&gt;5&lt;/span&gt;;
    guessingRows=&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following SAS code reads in data from the range A35:B40 
of the sheet "Hist_Macro" of the Excel file "data.xlsx". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc import &lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;=s1
    dataFile=&lt;span class="s"&gt;&amp;quot;~/projects/data.xlsx&amp;quot;&lt;/span&gt; 
    dbms=xlsx
    &lt;span class="k"&gt;replace&lt;/span&gt;
    ;
    range=&lt;span class="s"&gt;&amp;quot;Hist_Macro$A35:B40&amp;quot;&lt;/span&gt;;
    getNames=N&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can also use the IMPORT procedure to read a CSV file 
(A CSV file is a text file with data fields seprated by commas).
or a general text file. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc import &lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;=shoes
    dataFile=&lt;span class="s"&gt;&amp;quot;~/test.csv&amp;quot;&lt;/span&gt;
    dbms=csv
    &lt;span class="k"&gt;replace&lt;/span&gt;
    ;
    getNames=no;
    dataRow=&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc import &lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;=class
    dataFile=&lt;span class="s"&gt;&amp;#39;~/tab.txt&amp;#39;&lt;/span&gt;
    dbms=dlm
    &lt;span class="k"&gt;replace&lt;/span&gt;
    ;
    &lt;span class="k"&gt;delimiter&lt;/span&gt;=&lt;span class="s"&gt;&amp;#39;09&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;x&lt;/span&gt;;
    getNames=Y;
    dataRow=&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="export-data-from-sas"&gt;Export Data from SAS&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;When SAS export data to csv, missing values are left as blank.
SAS automatically decide whether quoting is needed.
When there is ambiguition (e.g., a string contains comma), 
then SAS automatically quote data when exporting to CSV. &lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc export &lt;/span&gt;data=dataset (&lt;span class="k"&gt;where&lt;/span&gt;=(conditions))
    outfile=&lt;span class="s"&gt;&amp;quot;file_path&amp;quot;&lt;/span&gt;
    dbms= csv
    &lt;span class="k"&gt;replace&lt;/span&gt;&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="programming"></category><category term="SAS"></category><category term="import"></category><category term="procedure"></category><category term="Excel"></category></entry><entry><title>Find Out Proxy in Use</title><link href="http://www.legendu.net/en/blog/find-out-proxy-in-use/" rel="alternate"></link><published>2015-05-27T21:31:02-07:00</published><updated>2015-05-27T21:31:02-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-27:/en/blog/find-out-proxy-in-use/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using a Web Service.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure the proxy out from the contents it returns.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the command &lt;code&gt;netstat&lt;/code&gt;.
This is a universal way and is especially helpful 
when &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt; is not available. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Inspect the output of &lt;code&gt;netstat -an | egrep "EST|Proto"&lt;/code&gt; ("EST" is …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Using a Web Service.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure the proxy out from the contents it returns.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the command &lt;code&gt;netstat&lt;/code&gt;.
This is a universal way and is especially helpful 
when &lt;a href="http://wpad/wpad.dat"&gt;http://wpad/wpad.dat&lt;/a&gt; is not available. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Inspect the output of &lt;code&gt;netstat -an | egrep "EST|Proto"&lt;/code&gt; ("EST" is short for "ESTABLISHED") 
in a Linux-like environment. 
You can use Cygwin if you are on Windows.
Note that &lt;code&gt;netstat&lt;/code&gt; comes with Windows not Cygwin. 
If you cannot use it in Cygwin,
it is probably due to a misconfigured path environment variable.
You can of course run the &lt;code&gt;netstat -an&lt;/code&gt; command in the command prompt in Windows
but you do not have a convenient command like &lt;code&gt;grep&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to a fresh site that you have not recently visited.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the &lt;code&gt;netstat -an | grep "EST"&lt;/code&gt; command again 
and look for the new connection. 
It might look like the following.
In this example, 
your proxy's IP is 192.168.1.88 and it is listening on port 8080.
A proxy server typcial listens to the 8080 port.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TCP&lt;/span&gt; &lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1989&lt;/span&gt; &lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt; &lt;span class="n"&gt;ESTABLISHED&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The second method only shows the proxy currently in use. 
If more than one proxy is configured in your environment, 
and you want to know all of them, 
you have to repeat the procedure above periodically to get the full list.
Note that working in a Linux virtual machine on your office laptop with Windows OS
can possibly help you circumvent the proxy issue.&lt;/p&gt;</content><category term="web"></category><category term="internet"></category><category term="proxy"></category></entry><entry><title>Date Utilities in SAS</title><link href="http://www.legendu.net/en/blog/date%20utilities%20in%20sas/" rel="alternate"></link><published>2015-05-17T18:49:20-07:00</published><updated>2015-05-17T18:49:20-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-17:/en/blog/date utilities in sas/</id><summary type="html">&lt;h3 id="convert-a-date-to-a-string-of-the-format-yyyymmdd"&gt;Convert a Date to a String of the Format "YYYYMMDD"&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;23Aug2014&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yymmddn8&lt;/span&gt;&lt;span class="p"&gt;.);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;putn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;23Aug2014&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;yymmddn8.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both of the 2 data steps print "20140823".
The following is a comprehensive list of expressions 
(that …&lt;/p&gt;</summary><content type="html">&lt;h3 id="convert-a-date-to-a-string-of-the-format-yyyymmdd"&gt;Convert a Date to a String of the Format "YYYYMMDD"&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;23Aug2014&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yymmddn8&lt;/span&gt;&lt;span class="p"&gt;.);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;putn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;23Aug2014&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;yymmddn8.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both of the 2 data steps print "20140823".
The following is a comprehensive list of expressions 
(that can be used in data steps and procedures)
to convert dates into strings with given formats. 
Let &lt;code&gt;d&lt;/code&gt; be a numeric variable with the value 19958 
(which represent Aug 23, 2014 in SAS).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Expression 1&lt;/th&gt;
&lt;th align="center"&gt;Expression 2&lt;/th&gt;
&lt;th align="center"&gt;Return Value&lt;/th&gt;
&lt;th align="center"&gt;Return Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, date9.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "date9.")&lt;/td&gt;
&lt;td align="center"&gt;23Aug2014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, date7.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "date7.")&lt;/td&gt;
&lt;td align="center"&gt;23Aug14&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymmdd10.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymmdd10.")&lt;/td&gt;
&lt;td align="center"&gt;2014/08/23&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmddyy10.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmddyy10.")&lt;/td&gt;
&lt;td align="center"&gt;08/23/2014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, ddmmyy10.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "ddmmyy10.")&lt;/td&gt;
&lt;td align="center"&gt;23/08/2014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymmdd8.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymmdd8.")&lt;/td&gt;
&lt;td align="center"&gt;14/08/23&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymmddn8.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymmddn8.")&lt;/td&gt;
&lt;td align="center"&gt;20140823&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmddyy8.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmddyy8.")&lt;/td&gt;
&lt;td align="center"&gt;08/23/14&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmddyyn8.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmddyyn8.")&lt;/td&gt;
&lt;td align="center"&gt;08232014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, ddmmyy8.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "ddmmyy8.")&lt;/td&gt;
&lt;td align="center"&gt;23/08/14&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, ddmmyyn8.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "ddmmyyn8.")&lt;/td&gt;
&lt;td align="center"&gt;23082014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymmdd6.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymmdd6.")&lt;/td&gt;
&lt;td align="center"&gt;140823&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymmddn6.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymmddn6.")&lt;/td&gt;
&lt;td align="center"&gt;140823&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmddyy6.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmddyy6.")&lt;/td&gt;
&lt;td align="center"&gt;082314&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmddyyn6.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmddyyn6.")&lt;/td&gt;
&lt;td align="center"&gt;082314&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, ddmmyy6.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "ddmmyy6.")&lt;/td&gt;
&lt;td align="center"&gt;230814&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, ddmmyyn6.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "ddmmyyn6.")&lt;/td&gt;
&lt;td align="center"&gt;230814&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymm.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymm.")&lt;/td&gt;
&lt;td align="center"&gt;2014M08&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, yymmn.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "yymmn.")&lt;/td&gt;
&lt;td align="center"&gt;201408&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmyy.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmyy.")&lt;/td&gt;
&lt;td align="center"&gt;08M2014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;put(d, mmyyn.)&lt;/td&gt;
&lt;td align="center"&gt;putn(d, "mmyyn.")&lt;/td&gt;
&lt;td align="center"&gt;092014&lt;/td&gt;
&lt;td align="center"&gt;Character&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A convenient way is to wrap these formats 
into functions with (better) meaningful names in the fcmp procedure for use.&lt;/p&gt;
&lt;h3 id="convert-a-string-of-the-format-yyyymmdd-to-a-date"&gt;Convert a string of the format "YYYYMMDD" to a Date&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;20140823&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yymmdd8&lt;/span&gt;&lt;span class="p"&gt;.);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inputn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;20140823&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;yymmdd8.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Both of the 2 data steps print "23AUG2014",
which menas that the string has been converted to a date successfully.
The following is a comprehensive list of expressions
(that can be used in data steps and procedures)
to convert strings with valid formats into dates.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Expression 1&lt;/th&gt;
&lt;th align="center"&gt;Expression 2&lt;/th&gt;
&lt;th align="center"&gt;Return Value&lt;/th&gt;
&lt;th align="center"&gt;Return Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("23Aug2014", date9.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("23Aug2014", "date9.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("23Aug14", date7.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("23Aug14", "date7.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("2014/08/23", yymmdd10.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("2014/08/23", "yymmdd10.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("08/23/2014", mmddyy10.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("08/23/2014", "mmddyy10.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("23/08/2014", ddmmyy10.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("23/08/2014", "ddmmyy10.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("20140823", yymmdd8.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("20140823", "yymmdd8.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("14/08/23", yymmdd8.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("14/08/23", "yymmdd8.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("08/23/14", mmddyy8.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("08/23/14", "mmddyy8.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("23/08/14", ddmmyy8.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("23/08/14", "ddmmyy8.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("140823", yymmdd6.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("140823", "yymmdd6.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("082314", mmddyy6.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("082314", "mmddyy6.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;input("230814", ddmmyy6.)&lt;/td&gt;
&lt;td align="center"&gt;inputn("230814", "ddmmyy6.")&lt;/td&gt;
&lt;td align="center"&gt;19958&lt;/td&gt;
&lt;td align="center"&gt;Numeric&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Notice that several interesting things I'd like to point out here.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;For converting a string to date, 
all numeric informats 
(yymmddn8., mmddyyn8., ddmmyyn8., yymmddn6., mmddyyn6., ddmmyyn6., yymmn. and mmyyn.)
and incomplete informats (yymm. and mmyy.) are invalid.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both "20140823" and "14/08/23" use the informat &lt;code&gt;yymmdd8.&lt;/code&gt;
when converting to dates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The informat names must NOT be quoted if you use the function &lt;code&gt;input&lt;/code&gt;,
while they must be quoted if you use the function &lt;code&gt;inputn&lt;/code&gt; or &lt;code&gt;inputc&lt;/code&gt;.
The underlying difference is that &lt;code&gt;input&lt;/code&gt; takes a compile-time informat,
so there is no need to quote the informat and it is fixed.
The function &lt;code&gt;inputn/inputc&lt;/code&gt; takes a run-time informat,
so you must quote the informat and it can be changed based on different contexts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;inputn&lt;/code&gt; converts a character value to a numeric one;
takes numeric informat
the function &lt;code&gt;inputc&lt;/code&gt; converts a character value to a character value;
takes character informat
the function &lt;code&gt;input&lt;/code&gt; converts a character value to a character/numeric one.
character/numeric informat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SAS implicitly convert between numeric and character values ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="create-a-date-from-year-month-and-day"&gt;Create a Date From Year, Month and Day&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mdy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="extract-year-month-or-day-from-a-date"&gt;Extract Year, Month or Day from a Date&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;_null_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mdy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;month&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;day&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt; &lt;span class="n"&gt;date9&lt;/span&gt;&lt;span class="p"&gt;.;&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;put&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that all the 3 functions &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt; and &lt;code&gt;day&lt;/code&gt; return numeric values.&lt;/p&gt;
&lt;h3 id="arithmatic-operations-on-date"&gt;Arithmatic Operations on Date&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;last day of the month in a given date&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    d = &lt;span class="nb"&gt;intnx(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;month&amp;#39;&lt;/span&gt;, d, &lt;span class="m"&gt;0&lt;/span&gt;, &lt;span class="s"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;);
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="convert-between-data-and-datetime"&gt;convert between data and datetime&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;data &lt;/span&gt;&lt;span class="kc"&gt;_null_&lt;/span&gt;;
    d = &lt;span class="s"&gt;&amp;#39;29FEB1984&amp;#39;&lt;/span&gt;d;&lt;span class="k"&gt;&lt;/span&gt;
&lt;span class="k"&gt;    put &lt;/span&gt;&lt;span class="err"&gt;d date.;&lt;/span&gt;
    &lt;span class="c"&gt;/* convert date to DateTime */&lt;/span&gt;
    dt = &lt;span class="nb"&gt;dhms(&lt;/span&gt;d,&lt;span class="m"&gt;0&lt;/span&gt;,&lt;span class="m"&gt;0&lt;/span&gt;,&lt;span class="m"&gt;0&lt;/span&gt;);&lt;span class="k"&gt;&lt;/span&gt;
&lt;span class="k"&gt;    put &lt;/span&gt;&lt;span class="err"&gt;dt datetime.;&lt;/span&gt;
    &lt;span class="c"&gt;/* extract date from DateTime */&lt;/span&gt;
    d = &lt;span class="nb"&gt;datepart(&lt;/span&gt;dt);&lt;span class="k"&gt;&lt;/span&gt;
&lt;span class="k"&gt;    put &lt;/span&gt;&lt;span class="err"&gt;d date.;&lt;/span&gt;
&lt;span class="kr"&gt;run;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="programming"></category><category term="SAS"></category><category term="date"></category></entry><entry><title>Generating YYYYMM Formatted Dates Using Python</title><link href="http://www.legendu.net/en/blog/generating-yyyymm-formatted-dates-using-python/" rel="alternate"></link><published>2015-05-17T17:05:55-07:00</published><updated>2015-05-17T17:05:55-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-17:/en/blog/generating-yyyymm-formatted-dates-using-python/</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;monthdelta&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;md&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;dt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;quarter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#end def&lt;/span&gt;

&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthdelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;yyyymms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;yymms …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;monthdelta&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;md&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;dt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;quarter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#end def&lt;/span&gt;

&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monthdelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;yyyymms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;yymms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yyyymms&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yymms&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The between ... and clause is also convenient to work with YYYYMM numbers
I saw people use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt; m &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;&amp;amp;months.&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to check ..
while a much more convenient way is to use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt; m between &lt;span class="m"&gt;200201&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="m"&gt;201212&lt;/span&gt;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;if you are sure &lt;code&gt;m&lt;/code&gt; contains only YYYYMM formated numbers.&lt;/p&gt;</content><category term="programming"></category><category term="Python"></category><category term="credit risk"></category><category term="risk capital"></category><category term="stress testing"></category><category term="YYYYMM"></category><category term="YYYYQQ"></category></entry><entry><title>Keep Matrix Structure when Extract a Row/Column from a Matrix</title><link href="http://www.legendu.net/en/blog/keep-matrix-structure-r/" rel="alternate"></link><published>2015-05-14T22:04:52-07:00</published><updated>2015-05-14T22:04:52-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-14:/en/blog/keep-matrix-structure-r/</id><summary type="html">&lt;p&gt;I talked in the post &lt;a href=""&gt;Abuse of Vector in R&lt;/a&gt; that 
it is often the case that we want keep the matrix sturcture when 
extracting a row/column from a matrix,
i.e., we often want to return a matrix with 1 row/column when extracting 
a row/column from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I talked in the post &lt;a href=""&gt;Abuse of Vector in R&lt;/a&gt; that 
it is often the case that we want keep the matrix sturcture when 
extracting a row/column from a matrix,
i.e., we often want to return a matrix with 1 row/column when extracting 
a row/column from a matrix. 
By default R returns a vector when you extract a row/column from a matrix.
To override this behavior, you can specify the option &lt;code&gt;drop=FALSE&lt;/code&gt; when 
extracting submatrix from matrix. A illustrative example is given below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt;&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt;    &lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the contrary, if you want to keep the sturcture of a matrix with multiple
rows and columns but convert a matrix with 1 row/column to a vector in R, 
you can the function &lt;code&gt;drop&lt;/code&gt;. See the following example. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt;    &lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mi"&gt;10&lt;/span&gt;   &lt;span class="mi"&gt;14&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mi"&gt;11&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mi"&gt;12&lt;/span&gt;   &lt;span class="mi"&gt;16&lt;/span&gt;
&lt;span class="k"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="programming"></category><category term="data structure"></category><category term="algebra"></category><category term="matrix"></category><category term="R"></category><category term="vector"></category><category term="CRAN"></category></entry><entry><title>Easy Made Mistakes when Writing R code</title><link href="http://www.legendu.net/en/blog/mistakes-r/" rel="alternate"></link><published>2015-05-14T22:04:09-07:00</published><updated>2015-05-14T22:04:09-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-14:/en/blog/mistakes-r/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/mistake.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Being flexible is a two-side sword to R. 
While it make it convenient and productive to use R,
it is also very easy to make mistakes when writing R code. 
The following is list of mistakes that happens all the time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Miss passed arguments&lt;br&gt;
This is often due the to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/mistake.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Being flexible is a two-side sword to R. 
While it make it convenient and productive to use R,
it is also very easy to make mistakes when writing R code. 
The following is list of mistakes that happens all the time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Miss passed arguments&lt;br&gt;
This is often due the to "dots" argument (...). 
For example, I used to use VB a lot, so when I 
use the function &lt;code&gt;seq&lt;/code&gt;, I wrote code like this&lt;/p&gt;
&lt;p&gt;seq(1,10,step=2)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Another example is &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You thought you write &lt;code&gt;data&lt;/code&gt; into the file &lt;code&gt;file_name&lt;/code&gt;,
however you just print &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;file_name&lt;/code&gt; to the
console. The annoying things about dots argument is that
it accept any kind of arguments. So whatever you pass to
a function accepting a dots argument, no warning or error 
about argument passing will be shown. The dots argument
opens the Pandor's box. &lt;!---'--&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Global variables&lt;br&gt;
While you can assign values to global variables using &lt;code&gt;=&lt;/code&gt;,
&lt;code&gt;&amp;lt;-&lt;/code&gt; and &lt;code&gt;-&amp;gt;&lt;/code&gt; inside a user-defined function, the change (of the global
variable) is only in effect in the duration of the function. 
When the function ends, the change is no longer in effect. 
In another words, the global variable remains unchanged 
outside the function. To make the change in effect outside the 
function, you must use &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt; and &lt;code&gt;-&amp;gt;&amp;gt;&lt;/code&gt; to assign values to the
global variable. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Priority of operators
The colon (:) operator precede over arithmatic operators 
such as +, -, *, / and so on. However, [] precede over the 
colon operator. When you write code &lt;code&gt;1:n-1&lt;/code&gt;, you thought
you get a vector from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt; while you actually get
a vector from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;n-1&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miss used functions
The function &lt;code&gt;length&lt;/code&gt; is used for querying length of 
vectors not the length of characters. For the later purpose,
use the function &lt;code&gt;nchar&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &amp;amp;&amp;amp; or || on vectors&lt;br&gt;
For vector operation, you should use &amp;amp; and |.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use vectors or missing value as conditions&lt;br&gt;
For if and while statement, the condition must be a non-missing
scaler (a vector of length 1).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;*apply&lt;/code&gt; functions to operate on rows of data frames.
A row of data frame is still a data frame (with 1 row). R is 
evil in the sence that it coerce data type wheneve necessary 
without noticing users. ...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="vector"></category><category term="operator"></category><category term="mistake"></category><category term="programming"></category><category term="R"></category><category term="CRAN"></category></entry><entry><title>Filesystem in MATLAB</title><link href="http://www.legendu.net/en/blog/filesystem-in-matlab/" rel="alternate"></link><published>2015-05-14T22:02:00-07:00</published><updated>2015-05-14T22:02:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-14:/en/blog/filesystem-in-matlab/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;path&lt;/code&gt; can be used to either display or modify the search path of MATLAB. 
Its functionality in MATLAB is similar to the functionality of environment variable &lt;code&gt;PATH&lt;/code&gt; 
for DOS shell in Windows systems, 
and the use of them is also similar. 
&lt;code&gt;addpath&lt;/code&gt; can be used to add new folders …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;path&lt;/code&gt; can be used to either display or modify the search path of MATLAB. 
Its functionality in MATLAB is similar to the functionality of environment variable &lt;code&gt;PATH&lt;/code&gt; 
for DOS shell in Windows systems, 
and the use of them is also similar. 
&lt;code&gt;addpath&lt;/code&gt; can be used to add new folders to the search path. 
It is a more friendly and convenient way to modify the search path than &lt;code&gt;path&lt;/code&gt;. 
To add a folder and all its subfolders to the search path, 
you can use &lt;code&gt;addpath&lt;/code&gt; together with &lt;code&gt;genpath&lt;/code&gt; 
which can generate path strings for a folder and all its subfolders. 
To remove an existing path from the search path, 
you can use &lt;code&gt;rmpath&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;what&lt;/code&gt; can list the path for the current folder, 
and also files and folders relevant to MATLAB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;dlmread&lt;/code&gt; is helpful to read delimited files (e.g. Excel files), 
and &lt;code&gt;dlmwrite&lt;/code&gt; is helpful to write delimited files. 
However,
be careful with &lt;code&gt;dlmwrite&lt;/code&gt; when you want to write high accuracy data into a file, 
because by default &lt;code&gt;dlmwrite&lt;/code&gt; keeps only a few digits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To read data from or write data into a file, 
you must first use function &lt;code&gt;fopen&lt;/code&gt; to open it to get a file pointer, 
and then you can use all different kinds of ways to read from 
(e.g. &lt;code&gt;fread&lt;/code&gt;, &lt;code&gt;dlmread&lt;/code&gt;, &lt;code&gt;fscanf&lt;/code&gt; and &lt;code&gt;textread&lt;/code&gt;) 
or write into a file (e.g.  &lt;code&gt;fwrite&lt;/code&gt;, &lt;code&gt;dlmwrite&lt;/code&gt;, &lt;code&gt;fprintf&lt;/code&gt;). 
If you want to access a file randomly, 
you can use &lt;code&gt;fseek&lt;/code&gt; to move the file point to a specific position. 
Never forget to close the file pointer using function &lt;code&gt;fclose&lt;/code&gt; after you have done reading or writing. 
Usually it is much faster to read from or write into a binary file 
than to read from or write into a text file, 
and typically a binary file is smaller than a text file that contains the same data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are serveral ways to test the speed of code in MATLAB. 
The first way is to use the &lt;code&gt;Profile&lt;/code&gt; button under &lt;code&gt;Desktop&lt;/code&gt; menu. 
It is also the recommended way if you work in MATLAB IDE
as it tells you which part of your code is the bottle neck of performance.
The second way is to surround the code that you want to test with &lt;code&gt;tic&lt;/code&gt; and &lt;code&gt;toc&lt;/code&gt;.
For example, &lt;code&gt;tic; f(); toc&lt;/code&gt; measures the time of running the code &lt;code&gt;f();&lt;/code&gt;. 
The third way is to record the time manually using the function &lt;code&gt;now&lt;/code&gt; 
and then use the function &lt;code&gt;etime&lt;/code&gt; to calculate the elapsed time. 
The last ways is similar to the third way, 
but you record the cpu time using function &lt;code&gt;cputime&lt;/code&gt; instead of the system time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt; can print out the current work directory of MATLAB, 
which is similar to the &lt;code&gt;pwd&lt;/code&gt; command in Linux shell.
Though it is mutable, 
you'd better not change it. 
Because even if you change it, 
the current working directory will not change. 
To change the current working directory to a new one, 
you can use function &lt;code&gt;cd&lt;/code&gt;. 
Whenever the working directory is changed, 
&lt;code&gt;pwd&lt;/code&gt; be change to the current working directory. 
Note that the current working directory is always in the search path of MATLAB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;save&lt;/code&gt; to save MATLAB workspace 
or selected variables into a file 
and &lt;code&gt;load&lt;/code&gt; to load data from a MAT file to MATLAB workspace. 
To display variables in the workspace, 
you can use &lt;code&gt;whos&lt;/code&gt;; 
to remove some variables from the workspace, 
you can use &lt;code&gt;clear&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To display files and sub-folders of a folder, 
you can use &lt;code&gt;ls&lt;/code&gt; or &lt;code&gt;dir&lt;/code&gt;, 
which is same to Linux terminal command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;exit&lt;/code&gt; or &lt;code&gt;quit&lt;/code&gt; to terminate current session of MATLAB,
but you'd better save the MATLAB workspace first if necessary. 
If you want MATLAB to do some tasks before quitting, 
you can put put the corresponding code into file &lt;code&gt;finish.m&lt;/code&gt; 
and place the file into the search path of MATLAB or into the current folder.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To remove files or graphics objects, 
you can use &lt;code&gt;delete&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fileattrib&lt;/code&gt; can get and set attributes of files and folders in MATLAB.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="filesystem"></category><category term="programming"></category><category term="MATLAB"></category><category term="file system"></category></entry><entry><title>Skills for R</title><link href="http://www.legendu.net/en/blog/skills-for-r/" rel="alternate"></link><published>2015-05-14T21:59:32-07:00</published><updated>2015-05-14T21:59:32-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-05-14:/en/blog/skills-for-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unlike C/C++, Java and SAS, 
you do not have semicolon to indicate the end of a command, 
but you can do this if you like. 
It is helpful if you have to write multiple commands on a line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R support command/terminal mode, 
and if you open R in …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unlike C/C++, Java and SAS, 
you do not have semicolon to indicate the end of a command, 
but you can do this if you like. 
It is helpful if you have to write multiple commands on a line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R support command/terminal mode, 
and if you open R in a command/terminal window, 
the working directory of R will be the working directory of the command/terminal window. 
For some GUI for R, 
you can only use a single application, 
e.g. you cannot open two Rstudio at the same time. 
But sometimes, 
you might want to open more than one R applications in different directories. 
To do this, 
you can use the command/terminal mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you do not know how use a function, 
you can always type a question mark 
before the function name to open the help document of the function. 
For example, 
if you do not know how to use &lt;code&gt;sum&lt;/code&gt;, 
you can type in &lt;code&gt;?sum&lt;/code&gt; in R console to open the help document for &lt;code&gt;sum&lt;/code&gt;.
Sometimes, 
you might just want see what arguments a function have,
instead of opening the help document. 
In this case, 
you can use &lt;code&gt;args&lt;/code&gt; which display the declaration of a function. 
It is quite often that you want to use a function in R, 
but you cannot remember the name of the function. 
If you still know part of the function name, 
you can type in &lt;code&gt;??partial_name&lt;/code&gt; in R console, 
then R will try to match it with all possible functions using regular expression.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes, 
you might want to hide an object 
(i.e. do not display the object when using the command &lt;code&gt;ls()&lt;/code&gt;) in the R workspace, 
for example if you write a package
which relies on some global variables or some functions that should never by renamed. 
To do this, 
you can give a name to the object starting with a dot. 
For example there are some functions such as &lt;code&gt;.jinit&lt;/code&gt;, &lt;code&gt;.jcall&lt;/code&gt; and so on in R &lt;code&gt;rJava&lt;/code&gt;, 
but you cannot see them by use &lt;code&gt;ls()&lt;/code&gt;. 
If you do want to display all objects including these that start with a dot in R workspace, 
you can use &lt;code&gt;ls(all.names=TRUE)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
numerical variables in R are double values 
even you even they do not have decimal digits. 
To use data type of integer, 
you can put an &lt;code&gt;L&lt;/code&gt; after integers. 
For example to assign a integer 5 to a variable &lt;code&gt;aInt&lt;/code&gt;, 
you can use &lt;code&gt;aInt = 5L&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;comment&lt;/code&gt; can be use to set or query &lt;code&gt;comment&lt;/code&gt; of an object in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;with&lt;/code&gt; allows you evaluate an expression 
inside a data environment (usually a data frame), 
so you do not have to attach the data into R workspace 
(Attaching data into R workspace might mark other variables with the same names, 
so it is encouraged to do so.). 
within transform &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;class&lt;/code&gt; gets/sets the class of a R object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;attr&lt;/code&gt; can get and set attributes of objects, 
e.g.  it can list names of objects. 
The difference between them is that &lt;code&gt;attributes&lt;/code&gt; can set the attributes of a null object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;str&lt;/code&gt; shows the structure of an arbitrary R object. 
For example, 
if you have a large data frame &lt;code&gt;df&lt;/code&gt; you can use &lt;code&gt;str(df)&lt;/code&gt; to show its structure, 
so that you know what columes (type of data and names) it has.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;ESC&lt;/code&gt; hot key halts current unfinished command, 
which is helpful when you make typo in a command 
(especially when you miss a single/double quotation mark).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Rprof&lt;/code&gt; enables profiling an R is execution, 
which helps you write efficient R code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to run some code 
without writing any intermediate result into the workspace, 
you can put the code into &lt;code&gt;local&lt;/code&gt; surrounded by curly braces. 
However, 
you must use &lt;code&gt;-\&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;-&lt;/code&gt; instead of &lt;code&gt;=&lt;/code&gt; in the code. 
Note that you can use semicolon to separate different commands.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;exists&lt;/code&gt; checks whether a R object with a given name has been defined. 
For example,&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;aNon_Exist_Object&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;[1]&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;missing&lt;/code&gt; checks whether an argument of a function has been passed a value or not. 
It can only be used inside a function to help check availability of arguments.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;shell("shutdown/s")&lt;/code&gt; (in Windows) 
to shutdown the computer after R has finished computing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When write a user-defined function, 
you'd better return a comprehensive result 
which contains not only the final outcomes 
but also other information such as parameters used in the computation.
This gives you the ability to work on a project in the long term,
especially when the names of variables do not give you much information 
about parameters used in computation 
(typical they do not because otherwise they will be long).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="skills"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>Don't Do Statistics If You Don't Really Undestand It</title><link href="http://www.legendu.net/en/blog/statistics-traps/" rel="alternate"></link><published>2015-04-10T07:50:16-07:00</published><updated>2015-04-10T07:50:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-04-10:/en/blog/statistics-traps/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/statistics/lie.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lies, damned lies, and statistics.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a statistician I'm very glad to see 
that statistics is being widely used in many areas.
However, 
time after time I found that it is really dangerous 
for people who don't really understand statistics to use it.
As we all know that there are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/statistics/lie.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lies, damned lies, and statistics.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As a statistician I'm very glad to see 
that statistics is being widely used in many areas.
However, 
time after time I found that it is really dangerous 
for people who don't really understand statistics to use it.
As we all know that there are 3 basic assumptions in linear regression:
independency, normality and homoscedasticity.
However, not many people really understand what these assumptions mean.
For example, 
most people don't know that an "independency" test is actually with respect to some "order".
For human beings, there are 2 nature orders: time 
(for which people developped time series analysis) 
and space (for which people developped spatial analysis).
While we test for "independency", 
mostly of the time we test for "independency" with respect to time. 
Here comes the problem. 
Many people do simple linear regression, 
and they are "smart" enough to remember to check assumptions of linear regression. 
Many people use some kind of test statistics 
(e.g., the Ljung-Box test statistics) to help them 
especially when there are many model candidates. 
Not many of them realized that this test is probably meaningless 
as they are actually testing "independency" with respect to the order of observations. 
But what if I reorder the observations 
(in linear regression there's usually no chronological order among observations)? 
This can obviously change the decision of the "independency" test. 
For example, 
if I reorder the observations according the magnitude of the residuals 
the Ljung-Box test will obviously be significant 
and reject the null hypothesis of "independency";
and if I randomize the order of observations, 
the Ljung-Box test will probably be non-significant 
and fail to reject the null hypothesis of "independency".
Keep in mind that an "independency" test is with respect to some "order",
e.g., time, space or some nature grouping.
Be sure that you are not testing "independency" with respect to some meaningless order.&lt;/p&gt;</content><category term="statistics"></category><category term="independence"></category><category term="linear model"></category><category term="linear regression"></category><category term="hypothesis test"></category><category term="Ljung-Box test"></category></entry><entry><title>Input and Output in C++</title><link href="http://www.legendu.net/en/blog/input-and-output-in-cpp/" rel="alternate"></link><published>2015-03-24T22:22:41-07:00</published><updated>2015-03-24T22:22:41-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-24:/en/blog/input-and-output-in-cpp/</id><summary type="html">&lt;p&gt;Check the &lt;code&gt;io&lt;/code&gt; directory on the page &lt;a href="https://bitbucket.org/dclong/cpp-learn/src"&gt;https://bitbucket.org/dclong/cpp-learn/src&lt;/a&gt;
for some illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can format output of numbers using functions 
&lt;code&gt;std::setpresicion&lt;/code&gt; and &lt;code&gt;std::setw&lt;/code&gt; in the &lt;imanip&gt; header.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you read data from a file into an array or write data …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Check the &lt;code&gt;io&lt;/code&gt; directory on the page &lt;a href="https://bitbucket.org/dclong/cpp-learn/src"&gt;https://bitbucket.org/dclong/cpp-learn/src&lt;/a&gt;
for some illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can format output of numbers using functions 
&lt;code&gt;std::setpresicion&lt;/code&gt; and &lt;code&gt;std::setw&lt;/code&gt; in the &lt;imanip&gt; header.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you read data from a file into an array or write data from an array to a file,
you can just use the address of the array.
However, 
if a vector (e.g., vector &lt;code&gt;x&lt;/code&gt;) is used instead of an array,
you have to use the address of the underlying data in the vector &lt;code&gt;x&lt;/code&gt; which is &lt;code&gt;&amp;amp;x[0]&lt;/code&gt;. 
Also, 
when you read/write data into/from a vector, 
you have use the size of the vector &lt;code&gt;x&lt;/code&gt; multiplied by the memory used by each element 
to calculate the total number of bytes, 
i.e. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or if &lt;code&gt;x&lt;/code&gt; is a vector of double values you can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;double&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You cannot use &lt;code&gt;sizeof(x)&lt;/code&gt;, 
because it is the size of the vector itself 
(without counting the underlying array) and is always the same (12 bytes). &lt;/p&gt;</content><category term="C/C++"></category><category term="IO"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Software I Use in Windows System</title><link href="http://www.legendu.net/en/blog/softwares-windows/" rel="alternate"></link><published>2015-03-13T10:54:07-07:00</published><updated>2015-03-13T10:54:07-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-13:/en/blog/softwares-windows/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/windows/windows.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I switched from Windows System to Linux System half a year ago. 
The following is a summary of softwares I used in Windows system. 
I keep the list here in case I have to switch back to Windows sometime.
Surely a good way to avoid reintalling software is to portable …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/windows/windows.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I switched from Windows System to Linux System half a year ago. 
The following is a summary of softwares I used in Windows system. 
I keep the list here in case I have to switch back to Windows sometime.
Surely a good way to avoid reintalling software is to portable applications. 
There is a post on my blog discussing this top.&lt;/p&gt;
&lt;h2 id="linux-tools"&gt;Linux Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Virtualbox/VMware&lt;/li&gt;
&lt;li&gt;coLinux&lt;/li&gt;
&lt;li&gt;andLinux&lt;/li&gt;
&lt;li&gt;Cygwin&lt;/li&gt;
&lt;li&gt;GnuWin32&lt;/li&gt;
&lt;li&gt;UnxUtils&lt;/li&gt;
&lt;li&gt;MinGW/MSYS&lt;/li&gt;
&lt;li&gt;console2&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="archive-tools"&gt;Archive Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;zip (come with with Windows)&lt;/li&gt;
&lt;li&gt;7zip &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="communication"&gt;Communication&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;QQ&lt;/li&gt;
&lt;li&gt;Skype &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="network"&gt;Network&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;IIS (for webhosting)&lt;/li&gt;
&lt;li&gt;Cisco VPN Client (for connecting to work network)  &lt;/li&gt;
&lt;li&gt;Chrome and Firefox (for surfing web)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="pdf"&gt;PDF&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Adobe Reader (for reading pdf documents)&lt;/li&gt;
&lt;li&gt;Latex and Texstudio (for word processing)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="scientific-computing"&gt;Scientific Computing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;R, Rtools and Rstudio (for statistical computing and graphics)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="anit-virus"&gt;Anit-virus&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Microsoft Security Essentials&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="downloading-tools"&gt;Downloading Tools&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;QQ Xuanfeng&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="other-things"&gt;Other Things&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Classic Shell&lt;/li&gt;
&lt;/ol&gt;</content><category term="anti-virus"></category><category term="Windows"></category><category term="software"></category><category term="archive"></category><category term="Linux"></category><category term="virtualization"></category></entry><entry><title>Common Mistakes in C++ Code and Ways to Debug</title><link href="http://www.legendu.net/en/blog/cpp-common-mistakes-and-debug/" rel="alternate"></link><published>2015-03-13T10:53:45-07:00</published><updated>2015-03-13T10:53:45-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-13:/en/blog/cpp-common-mistakes-and-debug/</id><summary type="html">&lt;h2 id="debugging"&gt;Debugging&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;gdb is a excellent command tool for debugging C/C++ code. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="syntax-mistakes"&gt;Syntax Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Missing "}". 
When this happens, 
you usually get lots of error message when you compile your code. 
And these error messages are often hard to understand and seems not related to your code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Missing template arguments. 
This …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="debugging"&gt;Debugging&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;gdb is a excellent command tool for debugging C/C++ code. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="syntax-mistakes"&gt;Syntax Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Missing "}". 
When this happens, 
you usually get lots of error message when you compile your code. 
And these error messages are often hard to understand and seems not related to your code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Missing template arguments. 
This is relative easy to debug. 
The compiler will usually give clear enough error message. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using member types of template types without the &lt;code&gt;typename&lt;/code&gt; prefix. 
For example, 
instead of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;InputIt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;set&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;InputIt&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;value_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;void&lt;/span&gt; &lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(...)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;it should be &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;InputIt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;class&lt;/span&gt; &lt;span class="nt"&gt;set&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;typename&lt;/span&gt; &lt;span class="nt"&gt;InputIt&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nd"&gt;value_type&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;void&lt;/span&gt; &lt;span class="nt"&gt;f&lt;/span&gt;&lt;span class="o"&gt;(...)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The g++ compiler is usually smart enough to detect a missing &lt;code&gt;typename&lt;/code&gt; and give you the right instruction
on how to fix the code. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Accessing members in a template base class without using &lt;code&gt;this&lt;/code&gt; pointer.
The compiler will tell you that these members are not found. &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="logical-mistakes"&gt;Logical Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Abuse of &lt;code&gt;auto&lt;/code&gt;. 
Tough &lt;code&gt;auto&lt;/code&gt; it a lot more convenient to work with template code, 
it is dangerous if an expression corresponds to several different types. 
For example, 
if you use &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;then &lt;code&gt;x&lt;/code&gt; is of type &lt;code&gt;const char *&lt;/code&gt; not &lt;code&gt;std::string&lt;/code&gt;. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Passing invalid iterators to functions/methods that operate on containers.
This usually result in segmentation fault. 
For example, 
if you use the &lt;code&gt;erase&lt;/code&gt; method of a vector &lt;code&gt;x&lt;/code&gt; (of length 10) to erase a range of elements from it,
the second iterator must be no "smaller" than the first iterator.
The code &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;will result in an error message of segmentation fault when you compile it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Forgeting to return a value for a non-void function/method. 
This usually results in segmentation fault.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="compile-option-mistakes"&gt;Compile Option Mistakes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Forgetting the &lt;code&gt;-lpthread&lt;/code&gt; option when compile code which uses the &lt;code&gt;&amp;lt;thread&amp;gt;&lt;/code&gt; header.
The compiler usually gives the following error message.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;terminate&lt;/span&gt; &lt;span class="k"&gt;called&lt;/span&gt; &lt;span class="k"&gt;after&lt;/span&gt; &lt;span class="n"&gt;throwing&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;std::system_error&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;  &lt;span class="k"&gt;Unknown&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="mi"&gt;4294967295&lt;/span&gt;
&lt;span class="n"&gt;Aborted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</content><category term="debug"></category><category term="C++"></category><category term="mistake"></category><category term="programming"></category><category term="trap"></category><category term="bug"></category><category term="error"></category></entry><entry><title>Differences Between Vector and ArrayList in Java</title><link href="http://www.legendu.net/en/blog/vector-arraylist-difference-java/" rel="alternate"></link><published>2015-03-13T10:50:05-07:00</published><updated>2015-03-13T10:50:05-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-13:/en/blog/vector-arraylist-difference-java/</id><summary type="html">&lt;p&gt;A good summay is &lt;a href="http://javarevisited.blogspot.com/2011/09/difference-vector-vs-arraylist-in-java.html"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;A good summay is &lt;a href="http://javarevisited.blogspot.com/2011/09/difference-vector-vs-arraylist-in-java.html"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="synchronization"></category><category term="thread"></category><category term="Java"></category><category term="programming"></category><category term="vector"></category><category term="ArrayList"></category><category term="data structure"></category></entry><entry><title>Insert Rows Missing as Missing Records in SAS</title><link href="http://www.legendu.net/en/blog/set%20missing%20rows%20as%20missing%20data%20in%20sas/" rel="alternate"></link><published>2015-03-13T00:59:10-07:00</published><updated>2015-03-13T00:59:10-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-13:/en/blog/set missing rows as missing data in sas/</id><summary type="html">&lt;p&gt;I recent come across a problem.
I have a table &lt;code&gt;A&lt;/code&gt; in SAS with columns &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt;.
The table almost exhaust the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; but has some rows missing.
I need to create macro variables with the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recent come across a problem.
I have a table &lt;code&gt;A&lt;/code&gt; in SAS with columns &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt;.
The table almost exhaust the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; but has some rows missing.
I need to create macro variables with the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; as names 
and &lt;code&gt;z&lt;/code&gt; as corresponding values.
If a combination of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; is missing from the table, 
then set it as missing value.
I came up with 2 approaches to this problem.
The first way is to create macro variables based on table &lt;code&gt;A&lt;/code&gt;,
and then loop through the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; 
to check whether a macro variable exists or not (with the help of &lt;code&gt;%symexists&lt;/code&gt;).
If a macro variable does not exists,
then create it with missing value.
The second approach is to complete table &lt;code&gt;A&lt;/code&gt; with missing rows (with the help of left/right join in SQL)
and then create macro variables based on it.
The first approach is a little bit tedious
and took the second approach. 
Here I demonstrate in detail how I did it.&lt;/p&gt;
&lt;p&gt;To make illustration convenient,
suppose &lt;code&gt;A&lt;/code&gt; is as below,&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;x&lt;/th&gt;
&lt;th align="center"&gt;y&lt;/th&gt;
&lt;th align="center"&gt;z&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;a&lt;/td&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;0.33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;a&lt;/td&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;0.91&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;b&lt;/td&gt;
&lt;td align="center"&gt;1&lt;/td&gt;
&lt;td align="center"&gt;1.38&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;b&lt;/td&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;8.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;b&lt;/td&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;c&lt;/td&gt;
&lt;td align="center"&gt;2&lt;/td&gt;
&lt;td align="center"&gt;5.78&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;c&lt;/td&gt;
&lt;td align="center"&gt;3&lt;/td&gt;
&lt;td align="center"&gt;8.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;and 
&lt;code&gt;x = (a, b, c)&lt;/code&gt; 
and 
&lt;code&gt;y = (1, 2, 3)&lt;/code&gt;
.
First, 
we need to create a table of the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.
Please refer to &lt;a href=""&gt;this post&lt;/a&gt; about how to do it. 
Now suppose we have the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in the table &lt;code&gt;cart&lt;/code&gt;,
we can complete missing rows with &lt;code&gt;z&lt;/code&gt; set as missing value using the following SQL code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="k"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;select&lt;/span&gt;
        &lt;span class="n"&gt;cart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;
    &lt;span class="k"&gt;from&lt;/span&gt; 
        &lt;span class="n"&gt;A&lt;/span&gt;
    &lt;span class="k"&gt;right&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt;
        &lt;span class="n"&gt;cart&lt;/span&gt;
    &lt;span class="k"&gt;on&lt;/span&gt;
        &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;
    &lt;span class="k"&gt;and&lt;/span&gt; 
        &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="programming"></category><category term="SAS"></category><category term="missing"></category></entry><entry><title>Conversation Mode in Thunderbird</title><link href="http://www.legendu.net/en/blog/conversation-mode-in-thunderbird/" rel="alternate"></link><published>2015-03-10T20:19:01-07:00</published><updated>2015-03-10T20:19:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-10:/en/blog/conversation-mode-in-thunderbird/</id><summary type="html">&lt;p&gt;There is a Thunderbird add-on &lt;code&gt;Conversation&lt;/code&gt; 
which enables you read emails in the Gmail-like conversation mode.
However, 
it has some limitations. 
For example, many shortcuts do not work if you use the &lt;code&gt;Conversation&lt;/code&gt; add-on.
Actually, thunderbird has a built-in conversation mode.
To enable the built-in conversation mode,
you need to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There is a Thunderbird add-on &lt;code&gt;Conversation&lt;/code&gt; 
which enables you read emails in the Gmail-like conversation mode.
However, 
it has some limitations. 
For example, many shortcuts do not work if you use the &lt;code&gt;Conversation&lt;/code&gt; add-on.
Actually, thunderbird has a built-in conversation mode.
To enable the built-in conversation mode,
you need to popup the menu,
select &lt;code&gt;View&lt;/code&gt; -&amp;gt; &lt;code&gt;Sort by&lt;/code&gt;,
and check both &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;Threaded&lt;/code&gt;.
The makes emails in a folder shown in the conversation mode. 
However, it does not help much if you do not all emails in one folder 
(e.g., you probably don't have the sent emails in the Inbox folder).
You cannot of course setup Thunderbird to put all emails in the Inbox folder,
however,
there is a universal and more useful way to read emails in conversation mode.
You can open an email (and all other emails in the same conversation) in conversation mode, 
following the instructions below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Right click on the message. &lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Open Message in Conversation&lt;/code&gt; in the popup menu.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;An even quicker way is to use the shortcut "CTRL + SHIFT + O" after selecting the message.&lt;/p&gt;</content><category term="software"></category><category term="Thunderbird"></category><category term="conversation mode"></category></entry><entry><title>Useful Shortcuts for Thunderbird</title><link href="http://www.legendu.net/en/blog/useful-shortcuts-for-thunderbird/" rel="alternate"></link><published>2015-03-10T19:18:24-07:00</published><updated>2015-03-10T19:18:24-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-10:/en/blog/useful-shortcuts-for-thunderbird/</id><summary type="html">&lt;h2 id="message"&gt;Message&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;F8: Message Preview Pane &lt;/li&gt;
&lt;li&gt;CTRL + N: New email&lt;/li&gt;
&lt;li&gt;CTRL + O: Open email&lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + O: Open in conversation&lt;/li&gt;
&lt;li&gt;CTRL + U: Email source&lt;/li&gt;
&lt;li&gt;CTRL + R: Reply to an email&lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + R: Reply to all&lt;/li&gt;
&lt;li&gt;CTRL + L: Foward email&lt;/li&gt;
&lt;li&gt;CTRL + E: Edit email as new&lt;/li&gt;
&lt;li&gt;CTRL + ENTER: Send current email …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="message"&gt;Message&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;F8: Message Preview Pane &lt;/li&gt;
&lt;li&gt;CTRL + N: New email&lt;/li&gt;
&lt;li&gt;CTRL + O: Open email&lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + O: Open in conversation&lt;/li&gt;
&lt;li&gt;CTRL + U: Email source&lt;/li&gt;
&lt;li&gt;CTRL + R: Reply to an email&lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + R: Reply to all&lt;/li&gt;
&lt;li&gt;CTRL + L: Foward email&lt;/li&gt;
&lt;li&gt;CTRL + E: Edit email as new&lt;/li&gt;
&lt;li&gt;CTRL + ENTER: Send current email &lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + ENTER: Send email later (you need the SendLater add-on)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="misc"&gt;Misc&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;CTRL + W: Close window&lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + M: Move again&lt;/li&gt;
&lt;li&gt;CTRL + SHIFT + B: Open address book&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="menu"&gt;Menu&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;ALT + F: pop up the "File" menu&lt;/li&gt;
&lt;li&gt;ALT + E: pop up the "Edit" menu&lt;/li&gt;
&lt;li&gt;ALT + V: pop up the "View" menu&lt;/li&gt;
&lt;li&gt;ALT + S: pop up the "History" menu&lt;/li&gt;
&lt;li&gt;ALT + B: pop up the "Bookmark" menu&lt;/li&gt;
&lt;li&gt;ALT + T: Pop up the "Tool" menu.&lt;/li&gt;
&lt;li&gt;ALT + H: pop up the "Help" menu&lt;/li&gt;
&lt;/ol&gt;</content><category term="software"></category><category term="Thunderbird"></category><category term="email client"></category><category term="shortcut"></category><category term="hotkey"></category></entry><entry><title>Power Settings in Linux with GNOME Desktop</title><link href="http://www.legendu.net/en/blog/linux-gnome-power-settings/" rel="alternate"></link><published>2015-03-03T10:17:32-08:00</published><updated>2015-03-03T10:17:32-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-03:/en/blog/linux-gnome-power-settings/</id><summary type="html">&lt;p&gt;Full control of the power settings in Linux with Gnome Desktop can be done through 
&lt;strong&gt;dconf-editor&lt;/strong&gt; at org-&amp;gt;gnome-&amp;gt;settings-daemon-&amp;gt;plugins-&amp;gt;power.
The default way to determine low battery, critical low battery and to carray out 
critical low action is by counting left battery time. 
You can change the way …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Full control of the power settings in Linux with Gnome Desktop can be done through 
&lt;strong&gt;dconf-editor&lt;/strong&gt; at org-&amp;gt;gnome-&amp;gt;settings-daemon-&amp;gt;plugins-&amp;gt;power.
The default way to determine low battery, critical low battery and to carray out 
critical low action is by counting left battery time. 
You can change the way to measuring percentage of battery. 
To get help on what an entry means, single click on the entry. &lt;/p&gt;</content><category term="configuration"></category><category term="battery"></category><category term="power"></category><category term="Linux"></category><category term="GNOME"></category></entry><entry><title>Estimation of False Discovery Rate using Sequential Permutation Pvalues</title><link href="http://www.legendu.net/en/blog/sequential-permutation-test/" rel="alternate"></link><published>2015-03-03T10:17:03-08:00</published><updated>2015-03-03T10:17:03-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-03:/en/blog/sequential-permutation-test/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
I wrote a paper on sequential permutation test with Tim Bancroft and Dan Nettleton. 
The paper "T. Bancroft, C. Du and D. Nettleton (2012). 
Estimation of False Discovery Rate Using Sequential Permutation P­Values." 
has been accepted by Biometrics. To illustrate ideas in the paper and make sequential 
permutation test …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
I wrote a paper on sequential permutation test with Tim Bancroft and Dan Nettleton. 
The paper "T. Bancroft, C. Du and D. Nettleton (2012). 
Estimation of False Discovery Rate Using Sequential Permutation P­Values." 
has been accepted by Biometrics. To illustrate ideas in the paper and make sequential 
permutation test easier to use, I wrote an R package &lt;strong&gt;dclong.spt&lt;/strong&gt; which is availabe 
on &lt;a href="https://github.com/dclong/dclong.spt"&gt;GitHub&lt;/a&gt;. In order to make the package smaller, 
I moved these big datasets (used for illustrations in the paper) from the package to this website. &lt;/p&gt;
&lt;p&gt;The data &lt;a href="http://dclong.github.io/media/spt/marker.rda"&gt;barley&lt;/a&gt; was produced by experiment 
"Genetic regulation of gene expression of barley in response
to stem rust (Pgt isolate TTKS)" and can be access from PLEXdb (BB64). 
There is a file called "BB64_RMA_tmt_medians.txt" on the download page contains RMA expressions. 
The rma expression for the 75 chips involve fungas infection is the dataset barley in this package. &lt;/p&gt;
&lt;p&gt;The Band T-cell Acute Lymphocyctic Leukemia (ALL) data set can be 
access via the Bioconductor ALL package at &lt;www.bioconductor.org&gt;. 
Measures of messenger ribonucleic acid (mRNA) commonly referred to as expression levels
are available for 12,625 probesets in 128 ALL patients.
Of these 128 patients, we focus on the 21 males who have been classified as having a translocation
between chromosomes 9 and 22 (BCR/ABL) and the 5 males who have a translocation between
chromosomes 4 and 11 (ALL1/AF4). 
This subset of data is the &lt;a href="http://dclong.github.io/media/spt/leukemia.rda"&gt;leukemia&lt;/a&gt; used in the paper.&lt;/p&gt;
&lt;p&gt;Biologists genetically mutated/changed the genotypes of barley. 
They could not change everywhere, so they changed 378 positions on the chromosome of barley. 
In the map, "A" and "B" are two types (sort of open and close). 
Because they know where the mutations are, they called them "markers"
(so that if a barley with a certain genotype has a higher expression level, then you may infer and
say, oh that may be caused by the 145th marker, etc.). 
The map has 7 chromosomes of barley, 1H, 2H, ..., 7H. 
These numbers are locations of markers on the chromosomes, like coordinates. 
There are some missing values in the original map, a naive method was used to interpolate the missing
values and produced this dataset &lt;a href="http://dclong.github.io/media/spt/marker.rda"&gt;marker&lt;/a&gt;. &lt;/p&gt;</content><category term="research"></category><category term="sequential permutation test"></category><category term="biostatistics"></category><category term="Acute Lymphocyctic Leukemia"></category><category term="package"></category><category term="marker"></category><category term="dclong.spt"></category><category term="R"></category><category term="barley"></category><category term="false discovery rate"></category><category term="FDR"></category></entry><entry><title>How to Submit R Packages to CRAN</title><link href="http://www.legendu.net/en/blog/submit-r-package-cran/" rel="alternate"></link><published>2015-03-03T10:16:02-08:00</published><updated>2015-03-03T10:16:02-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-03:/en/blog/submit-r-package-cran/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
Submit using &lt;a href="http://xmpalantir.wu.ac.at/cransubmit/"&gt;web form&lt;/a&gt; or using ftp following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Upload the .tar.gz file using &lt;strong&gt;anonymous&lt;/strong&gt; as log-in name 
and your &lt;strong&gt;e-mail address&lt;/strong&gt; as password 
to &lt;a href="ftp://CRAN.R-project.org/incoming/"&gt;ftp://CRAN.R-project.org/incoming/&lt;/a&gt;. 
"ftp" is prefereed to "sftp". &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send a message to &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#67;&amp;#82;&amp;#65;&amp;#78;&amp;#64;&amp;#82;&amp;#45;&amp;#112;&amp;#114;&amp;#111;&amp;#106;&amp;#101;&amp;#99;&amp;#116;&amp;#46;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#67;&amp;#82;&amp;#65;&amp;#78;&amp;#64;&amp;#82;&amp;#45;&amp;#112;&amp;#114;&amp;#111;&amp;#106;&amp;#101;&amp;#99;&amp;#116;&amp;#46;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt; about it. 
The email …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
Submit using &lt;a href="http://xmpalantir.wu.ac.at/cransubmit/"&gt;web form&lt;/a&gt; or using ftp following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Upload the .tar.gz file using &lt;strong&gt;anonymous&lt;/strong&gt; as log-in name 
and your &lt;strong&gt;e-mail address&lt;/strong&gt; as password 
to &lt;a href="ftp://CRAN.R-project.org/incoming/"&gt;ftp://CRAN.R-project.org/incoming/&lt;/a&gt;. 
"ftp" is prefereed to "sftp". &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send a message to &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#67;&amp;#82;&amp;#65;&amp;#78;&amp;#64;&amp;#82;&amp;#45;&amp;#112;&amp;#114;&amp;#111;&amp;#106;&amp;#101;&amp;#99;&amp;#116;&amp;#46;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#67;&amp;#82;&amp;#65;&amp;#78;&amp;#64;&amp;#82;&amp;#45;&amp;#112;&amp;#114;&amp;#111;&amp;#106;&amp;#101;&amp;#99;&amp;#116;&amp;#46;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt; about it. 
The email should contain the package name and version in the subject line. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="ftp"></category><category term="sftp"></category><category term="programming"></category><category term="submit"></category><category term="package"></category><category term="CRAN"></category></entry><entry><title>An Input Bug in Ruby</title><link href="http://www.legendu.net/en/blog/input-bug-ruby/" rel="alternate"></link><published>2015-03-03T10:14:11-08:00</published><updated>2015-03-03T10:14:11-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-03:/en/blog/input-bug-ruby/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If you run a ruby program though Bash 
and the ruby program read multiple inputs from the console, 
all inputs will be the same as the first argument. 
I'm not very sure how to solve this problem.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/bug.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If you run a ruby program though Bash 
and the ruby program read multiple inputs from the console, 
all inputs will be the same as the first argument. 
I'm not very sure how to solve this problem.&lt;/p&gt;</content><category term="programming"></category><category term="Bash"></category><category term="Ruby"></category><category term="bug"></category><category term="terminal"></category><category term="IO"></category></entry><entry><title>MATLAB for Visualization</title><link href="http://www.legendu.net/en/blog/graphics-in-MATLAB/" rel="alternate"></link><published>2015-03-03T10:08:36-08:00</published><updated>2015-03-03T10:08:36-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-03:/en/blog/graphics-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To display a new graph on on top of an old one, 
you can use command &lt;code&gt;hold on&lt;/code&gt;. 
In this way, 
you can create multiple plots in a same window. 
Though &lt;code&gt;plot&lt;/code&gt; can already do multiple plot, command &lt;code&gt;hold on&lt;/code&gt; 
can be very useful when you want to add some …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To display a new graph on on top of an old one, 
you can use command &lt;code&gt;hold on&lt;/code&gt;. 
In this way, 
you can create multiple plots in a same window. 
Though &lt;code&gt;plot&lt;/code&gt; can already do multiple plot, command &lt;code&gt;hold on&lt;/code&gt; 
can be very useful when you want to add some new points 
or curves to an existing graph (e.g. a histogram).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;subplot&lt;/code&gt; displays multiple plots in the same window,
which is similar to settings &lt;code&gt;par(mfrow=c(2,2))&lt;/code&gt; or &lt;code&gt;par(mfcol=c(2,3))&lt;/code&gt; in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;hist&lt;/code&gt; and &lt;code&gt;histc&lt;/code&gt; produces histograms.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;staris&lt;/code&gt; produces step graph.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;plot&lt;/code&gt; plots &lt;code&gt;2-D&lt;/code&gt; graph 
while function &lt;code&gt;surf&lt;/code&gt; plots &lt;code&gt;3-D&lt;/code&gt; graphs. 
Function &lt;code&gt;surf&lt;/code&gt; is usually used in conjugate with function &lt;code&gt;meshgrid&lt;/code&gt; 
which can create a matrix of points over which the surface is to be plotted. 
You can also use &lt;code&gt;ndgrid&lt;/code&gt; instead of &lt;code&gt;meshgrid&lt;/code&gt; to generate a matrix of points.
However, 
&lt;code&gt;ndgrid&lt;/code&gt; is usually higher dimensions and the usage is a little different from &lt;code&gt;meshgrid&lt;/code&gt;, 
so you have to be careful if you wan to use it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After plotting figures using &lt;code&gt;plot&lt;/code&gt;, 
you can use &lt;code&gt;title&lt;/code&gt; to add titles for the figures, 
&lt;code&gt;axis&lt;/code&gt; to set configurations for the axies,
and &lt;code&gt;xlabel&lt;/code&gt; and &lt;code&gt;ylabel&lt;/code&gt; to set labels for the x and y axes. 
You can also use &lt;code&gt;set&lt;/code&gt; to set all configurations for the plots. 
To do this, 
you have to first get the handle of the elements in the plots that you want to modify, 
and then apply &lt;code&gt;set&lt;/code&gt; on it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;inpolygon&lt;/code&gt; can check whether given points are inside a polygon or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;spy&lt;/code&gt; visualizes sparse matrices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;image&lt;/code&gt; can not only display images but also make mosaic plot
(sometimes called heat plot or level plot) of a matrices. 
For example, to show the mosaic plot of matrix &lt;code&gt;x&lt;/code&gt;, 
you can use &lt;code&gt;image(x,'CDataMap','CDataMapping','scaled')&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="image"></category><category term="visualization"></category><category term="programming"></category><category term="plot"></category><category term="graphics"></category><category term="MATLAB"></category></entry><entry><title>Passing Arrays Between R and Other Programming Languages</title><link href="http://www.legendu.net/en/blog/r-interface-other-languages/" rel="alternate"></link><published>2015-03-02T13:10:12-08:00</published><updated>2015-03-02T13:10:12-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-03-02:/en/blog/r-interface-other-languages/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
A matrix or an array in R is essentially a vector with dimension attribute. 
For this reason, no matter you pass a vector, matrix or an array
to an external call, you essentially pass a 1 dimensional array to the call. 
As a coinsequence, 
it's usually not conveneint to pass …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
A matrix or an array in R is essentially a vector with dimension attribute. 
For this reason, no matter you pass a vector, matrix or an array
to an external call, you essentially pass a 1 dimensional array to the call. 
As a coinsequence, 
it's usually not conveneint to pass 2 dimensional arrays between R and other programming languages. 
To pass arrays from R to an external call, 
always use 1 dimensional array.
If the 1-d array you pass to an external call stores data of a 2-d array, 
you have to pass extra arguments about the
dimension information to the external call.&lt;/p&gt;
&lt;p&gt;In C, an array name is an address. 
There's no way to figure out the length of the array from its address, 
so you have to pass information about the length of array to a C function if you want to call it from R. 
An array is an object in Java, and you can access its length attribute, so you don't have to pass
information about the length to a Java method if you want to call it in R.
Because of the way that R calls C functions, there's simple no way to return a
2-d array from a C function to R. However, since an 2-d array in Java is an
object, you can return it to R. Applying function &lt;code&gt;.jevalArray&lt;/code&gt; on the 2-d array
object, you get a vector of addresses. Applying function &lt;code&gt;.jevalArray&lt;/code&gt; on these
addresses again (most conveniently with the help of function &lt;code&gt;sapply&lt;/code&gt; or
&lt;code&gt;lapply&lt;/code&gt;), you get values of the 2-d array. For example, suppose &lt;code&gt;x&lt;/code&gt; is an 2-d
array object returned from a Java method to R, you can use the following code to
get its content.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jevalArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,.&lt;/span&gt;&lt;span class="n"&gt;jevalArray&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If a C function returns an array of unkown length, there is no directly way to
return it to R. There are two ways to solve this problem. First, if you know the
maximum length of the array to be returned, you can pass an array with this
length from R to C to accept the returned result. Second, you can write data
from C into a file and then read the data into R. &lt;/p&gt;
&lt;p&gt;From these aspect, interfacing with Java in R is more convenient than
interfacing with C in R. However, R offers APIs written in C for generating
random numbers and manipulating states of random number generators. Another
thing is that you probably have to debug and modify C code and Java code when
you call them in R. For C, you have to unload and reload dynamic libraries; for
Java, you have to restart the JVM. For some reason I'm not sure about (probably
because of other loaded libraries requiring rJava package), restarting the JVM
may not work. These are advantages and disadvantages of interfacing with C and
Java in R. You can choose the most convenient one for you work. &lt;/p&gt;</content><category term="array"></category><category term="R"></category><category term="C/C++"></category><category term="programming"></category><category term="Java"></category></entry><entry><title>RStudio Does Not Start</title><link href="http://www.legendu.net/en/blog/rstudio-not-start/" rel="alternate"></link><published>2015-02-26T12:45:00-08:00</published><updated>2015-02-26T12:45:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-26:/en/blog/rstudio-not-start/</id><summary type="html">&lt;p&gt;Rstudio is the best cross-platform IDE for R so far. 
It is a lot like the IDE of MATLAB.
Once I came across the problem that Rstudio did not start. 
I search website for a solution but has no luck. 
I have seen broken configuration files prevent applications 
from working …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Rstudio is the best cross-platform IDE for R so far. 
It is a lot like the IDE of MATLAB.
Once I came across the problem that Rstudio did not start. 
I search website for a solution but has no luck. 
I have seen broken configuration files prevent applications 
from working correctly a lot.
So I tried removing the configuration directory ".rstudio-desktop" from my home directory, 
and Rstudio worked properly again!
This trick also works for many other applications, 
e.g., forefix, latex (temporary files), etc.&lt;/p&gt;</content><category term="IDE"></category><category term="R"></category><category term="statistics"></category><category term="software"></category><category term="configuration"></category><category term="RStudio"></category><category term="CRAN"></category></entry><entry><title>Dual Monitor for Linux Desktop</title><link href="http://www.legendu.net/en/blog/dual-monitor-for-linux-desktop/" rel="alternate"></link><published>2015-02-20T10:59:38-08:00</published><updated>2015-02-20T10:59:38-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/dual-monitor-for-linux-desktop/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;Type &lt;code&gt;xrandr&lt;/code&gt; or &lt;code&gt;xrandr -q&lt;/code&gt; in terminal to dispaly information of all available output device.
Then you can use the following commands to set dual display.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --auto &lt;/span&gt;
&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --same-as LVDS1 --auto&lt;/span&gt;
&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --mode 1024x800&lt;/span&gt;
&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;VGA1&lt;/code&gt; and &lt;code&gt;LVDS1&lt;/code&gt; should …&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;Type &lt;code&gt;xrandr&lt;/code&gt; or &lt;code&gt;xrandr -q&lt;/code&gt; in terminal to dispaly information of all available output device.
Then you can use the following commands to set dual display.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --auto &lt;/span&gt;
&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --same-as LVDS1 --auto&lt;/span&gt;
&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --mode 1024x800&lt;/span&gt;
&lt;span class="n"&gt;xrandr&lt;/span&gt; &lt;span class="c1"&gt;--output VGA1 --off&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;VGA1&lt;/code&gt; and &lt;code&gt;LVDS1&lt;/code&gt; should be replaced by with appropriate device names. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When use multi-monitors in Linux, 
you need to have close resolutions in order for same (mirorr) display to work well.&lt;/li&gt;
&lt;/ol&gt;</content><category term="DE"></category><category term="Linux"></category><category term="monitor"></category><category term="dual"></category></entry><entry><title>String in Java</title><link href="http://www.legendu.net/en/blog/string-in-java/" rel="alternate"></link><published>2015-02-20T10:58:20-08:00</published><updated>2015-02-20T10:58:20-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/string-in-java/</id><summary type="html">&lt;h2 id="string"&gt;String&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;String is a immutable class in Java. 
Extensive operations on strings (e.g., &lt;code&gt;+&lt;/code&gt; in a big loop) is usually very slow before Java 7
(the &lt;code&gt;+&lt;/code&gt; operator is optimized by the compiler automatically starting from Java 7).
To avoid this problem (in older versions of Java), 
you can use the …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="string"&gt;String&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;String is a immutable class in Java. 
Extensive operations on strings (e.g., &lt;code&gt;+&lt;/code&gt; in a big loop) is usually very slow before Java 7
(the &lt;code&gt;+&lt;/code&gt; operator is optimized by the compiler automatically starting from Java 7).
To avoid this problem (in older versions of Java), 
you can use the &lt;code&gt;StringBuilder&lt;/code&gt; class instead to improve performance. 
The &lt;code&gt;StringBuilder&lt;/code&gt; class is mutable. 
When you make operations on a &lt;code&gt;StringBuilder&lt;/code&gt; object, 
the original object is mutated (unlike the &lt;code&gt;String&lt;/code&gt; class)
and returns the (mutated) original object.
Except improvement of performance, 
the &lt;code&gt;StringBuilder&lt;/code&gt; class also offer many other useful methods 
for string operations that are not included in the &lt;code&gt;String&lt;/code&gt; class. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you want to read or write large text (e.g. more than 100M), 
you can use &lt;code&gt;BufferedRead&lt;/code&gt; and &lt;code&gt;BufferedWriter&lt;/code&gt; to improve performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no built-in sort method for String. 
To sort characters in a string,
you can first convert the string into a char array,
sort the char array and convert back.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You want to the equals method to compare string most of time 
unless you know for sure that comparing references is the right way.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Java"></category><category term="programming"></category><category term="string"></category><category term="character"></category></entry><entry><title>Exceptions in Java</title><link href="http://www.legendu.net/en/blog/exceptions-in-java/" rel="alternate"></link><published>2015-02-20T10:57:53-08:00</published><updated>2015-02-20T10:57:53-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/exceptions-in-java/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;You can suppress warnings of unchecked exceptions by using &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SuppressWarnings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;unchecked&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;but generally speaking, 
you cannot suppress warnings of checked exceptions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can use more than one &lt;code&gt;catch&lt;/code&gt; blocks if necessary
but you can only catch one exception in a catch block before Java 7.
Starting from Java 7, 
you …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;You can suppress warnings of unchecked exceptions by using &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SuppressWarnings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;unchecked&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;but generally speaking, 
you cannot suppress warnings of checked exceptions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can use more than one &lt;code&gt;catch&lt;/code&gt; blocks if necessary
but you can only catch one exception in a catch block before Java 7.
Starting from Java 7, 
you can catch multiple exceptions in a catch block.
For example,
The old style Java code&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FirstException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SecondException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="n"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;becomes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FirstException&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SecondException&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;in Java 7.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To guarantee that some code will be run eventually,
you have to put it into a &lt;code&gt;finally&lt;/code&gt; block before Java 7.
Starting from Java 7, 
filesystem resources are managed automatically 
so that you do not have to release them manually in a &lt;code&gt;finally&lt;/code&gt; block.
For example,
old style Java code&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;BufferedReader&lt;/span&gt; &lt;span class="nv"&gt;br&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;BufferedReader&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;FileReader&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;try&lt;/span&gt; {
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;br&lt;/span&gt;.&lt;span class="nv"&gt;readLine&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
} &lt;span class="nv"&gt;finally&lt;/span&gt; {
   &lt;span class="nv"&gt;br&lt;/span&gt;.&lt;span class="nv"&gt;close&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;becomes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;try&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;BufferedReader&lt;/span&gt; &lt;span class="nv"&gt;br&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;BufferedReader&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;FileReader&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;path&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt; {
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;br&lt;/span&gt;.&lt;span class="nv"&gt;readLine&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;in Java 7.&lt;/p&gt;</content><category term="exception"></category><category term="programming"></category><category term="Java"></category></entry><entry><title>Tips for Excel</title><link href="http://www.legendu.net/en/blog/tips-for-excel/" rel="alternate"></link><published>2015-02-20T10:57:28-08:00</published><updated>2015-02-20T10:57:28-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/tips-for-excel/</id><summary type="html">&lt;h2 id="about-statistics-functions"&gt;About Statistics Functions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Excel is not a reliable software for statistical analysis. 
It's not even capable for simple operations such as calculating 
mean and standard deviation when numbers are very big 
(at least before version 2007, not sure about later versions). 
If you do have to use Excel for statistical …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="about-statistics-functions"&gt;About Statistics Functions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Excel is not a reliable software for statistical analysis. 
It's not even capable for simple operations such as calculating 
mean and standard deviation when numbers are very big 
(at least before version 2007, not sure about later versions). 
If you do have to use Excel for statistical analysis, 
you'd better verify the results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A bug in Excel 2007 (not sure about later versions) 
is that the degrees of freedoms of the Chisquare distribution can only be positive integers. 
If you pass a real number to related functions (density, cdf, etc), 
the degrees of freedom will first be coerced to an integer 
(I forget the exact behavior, but it's probably rounding down) and then do the calculation. 
No warning is shown in this process. Fotunately, 
the Gamma distribution behaves right in Excel. 
Be aware of the relationship between Chisquare distribution and Gamma distribution, you can circumambulate this bug. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It seems that the F distribution in Excel can only have integer
degrees of freedom. If not, the degrees of freedoms will changed to
integers first. I don't know how to circumvent this problem easily.
Sure we can write our own functions but it's not worth doing that.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To unhide a workbook, 
click the "View" tab and then click the "unhide" button in the window group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the hotkey CTRL + Left/Right/Up/Down Arrow to quickly jump to the end of a used range.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use macros/functions defined in a workbook if it is open. 
So you can use put all your macros/functions into a single workbook 
and just open it for use when needed.
Or you can put all your macros/functions into "PERSONAL.xlsb" which is a hidden workbook that is always open.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insert multiple lines at the same time, select multiple lines, right click and insert&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;after selecting a bunch of cells, right bottom, statistics, you can add more ...
However, 
hidden cells in the selection are ignore when calculating statistics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the Home tab, in the Editing group, click the arrow next to the Clear button Button image, and then do one of the following:
        To clear all contents, formats, and comments that are contained in the selected cells, click Clear All.
        To clear only the formats that are applied to the selected cells, click Clear Formats.
        To clear only the contents in the selected cells, leaving any formats and comments in place, click Clear Contents.
        To clear any comments that are attached to the selected cells, click Clear Comments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;counting number of selected cells: bottom right bar  trick -&amp;gt; select ... -&amp;gt; bottom right, summary &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;trust center -&amp;gt; trust location&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="chart"&gt;Chart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;If you select 1 row/column of data with k cells and insert a chart, 
you get a chart of 1 series at k locations. 
However, 
if you select a block of data with m rows and n columns, 
you get a chart of m series at n locations.&lt;/li&gt;
&lt;/ol&gt;</content><category term="statistics"></category><category term="MS Office"></category><category term="software"></category><category term="Excel"></category><category term="bug"></category><category term="tips"></category></entry><entry><title>Resizing Hard Disk of Guest Machine in Virtualbox</title><link href="http://www.legendu.net/en/blog/resizing-hard-disk-of-guest-machine-in-virtualbox/" rel="alternate"></link><published>2015-02-20T10:57:11-08:00</published><updated>2015-02-20T10:57:11-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/resizing-hard-disk-of-guest-machine-in-virtualbox/</id><summary type="html">&lt;p&gt;Suppose you have virtual hard disk in VirtualBox called &lt;code&gt;xp.vdi&lt;/code&gt;, 
you can resize it (megabytes) using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;VBoxManage&lt;/span&gt; &lt;span class="n"&gt;modifyhd&lt;/span&gt; &lt;span class="n"&gt;xp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vdi&lt;/span&gt; &lt;span class="c1"&gt;--resize 40960&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command currently doesn't support vmdk virtual disk. 
So if you have a virtual disk called &lt;code&gt;xp.vmdk&lt;/code&gt;,
you have to first convert it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Suppose you have virtual hard disk in VirtualBox called &lt;code&gt;xp.vdi&lt;/code&gt;, 
you can resize it (megabytes) using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;VBoxManage&lt;/span&gt; &lt;span class="n"&gt;modifyhd&lt;/span&gt; &lt;span class="n"&gt;xp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vdi&lt;/span&gt; &lt;span class="c1"&gt;--resize 40960&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command currently doesn't support vmdk virtual disk. 
So if you have a virtual disk called &lt;code&gt;xp.vmdk&lt;/code&gt;,
you have to first convert it into a vdi disk using command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;VBoxManage&lt;/span&gt; &lt;span class="n"&gt;clonehd&lt;/span&gt; &lt;span class="c1"&gt;--format VDI xp.vmdk xp.vdi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and then resize the vdi file using previous command.
If you want a (resized) vmdk virtual disk rather than a vdi virtual disk,
you can convert the resized vdi virtual disk to vmdk format using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;VBoxManage&lt;/span&gt; &lt;span class="n"&gt;clonehd&lt;/span&gt; &lt;span class="c1"&gt;--format vmdk xp.vdi xp.vmdk&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the above commands only resize the virtual disk,
it doesn't resizes partitions inside the virtual disk.
You must manually resize partiions. 
This is easy to do for Windows 7/8 guest machines. 
If have other type of guest machiens (e.g., XP),
you can use partition tools (e.g., GParted) to manually resize partitions.
Take GParted for example,
you can download it, 
mount it into a virtual CD/DVD, 
boot your guest machine into GParted,
and then use the graphical tool to resize partitions.
It's very intuitive once you get there.&lt;/p&gt;</content><category term="partition"></category><category term="gparted"></category><category term="virtualbox"></category><category term="software"></category><category term="vmdk"></category><category term="resize"></category><category term="resizing"></category></entry><entry><title>Which One Is the Best Strategy?</title><link href="http://www.legendu.net/en/blog/best-strategy/" rel="alternate"></link><published>2015-02-20T10:54:32-08:00</published><updated>2015-02-20T10:54:32-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/best-strategy/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Another interesting problem I met in statistic is: 
suppose we flip a coin which has probability 0.7 to be head again and again 
and two people choose two different sequences of length 3 (e.g. THH). 
The people whose sequence appears first wins. 
If you're allowed to choose first …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Another interesting problem I met in statistic is: 
suppose we flip a coin which has probability 0.7 to be head again and again 
and two people choose two different sequences of length 3 (e.g. THH). 
The people whose sequence appears first wins. 
If you're allowed to choose first, which sequence will you choose?&lt;/p&gt;
&lt;p&gt;I guess most people will choose sequence HHH. 
However, this sequence is beaten by THH. 
Suppose we first observe sequence HHH at step &lt;span class="math"&gt;\(n(&amp;gt;3)\)&lt;/span&gt;, 
then the outcome must be T at step &lt;span class="math"&gt;\(n-3\)&lt;/span&gt;, 
which means that we have observed THH at step &lt;span class="math"&gt;\(n-1\)&lt;/span&gt;. 
So for HHH to win against THH, 
it must appear at step 3. 
So the probability for HHH to beat THH is 0.7^3=0.343&amp;lt;0.5, 
i.e., HHH is not as good as THH.&lt;/p&gt;
&lt;p&gt;A nature question is that does there exist a best choice in this problem? 
The answer is no. 
I have done simulations in MATLAB to find the probability for a sequence to beat another. 
The simulation result shows that none of the 8 sequence can beat all other choices, 
which means that there is no benefit to choose a sequence first.&lt;/p&gt;
&lt;p&gt;Talking about the probability for one sequence to come out first against another one, 
there is a much better solution rather than simulation. 
I will make post about this good solution later.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="pattern"></category><category term="Markov chain"></category><category term="statistics"></category><category term="sequence"></category><category term="coin"></category><category term="stochastic"></category><category term="martingale"></category><category term="fun problems"></category><category term="MATLAB"></category><category term="best strategy"></category></entry><entry><title>High Performance Computing in Java</title><link href="http://www.legendu.net/en/blog/high-performance-computing-in-java/" rel="alternate"></link><published>2015-02-20T10:52:13-08:00</published><updated>2015-02-20T10:52:13-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/high-performance-computing-in-java/</id><summary type="html">&lt;h2 id="efficient-computing"&gt;Efficient Computing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Avoid resizing arrays and ArrayLists if the alternative does not cost
too much memory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid creating unnecessary objects if possible.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="parallel-computing"&gt;Parallel Computing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;After you open a pool, the threads in the pool might still exist and
run outside the scope (the method in which the pool is created …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="efficient-computing"&gt;Efficient Computing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Avoid resizing arrays and ArrayLists if the alternative does not cost
too much memory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid creating unnecessary objects if possible.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="parallel-computing"&gt;Parallel Computing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;After you open a pool, the threads in the pool might still exist and
run outside the scope (the method in which the pool is created). To
ensure that the pool is destroyed before the end of its scope
(before the program leaves the method in which the pool is created),
you must wait for termination of pool manually. Notice that some
other packages in java or some other languages might have
implemented thread pool differently, but generaly speaking, what
java does is the nature way. Depends on what you want to do, you
must decide whether to manually wait for termination of the pool
carefully.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Not all parallel code runs faster than serial code while parallel
code is almost surely much hard to develop, so you have to think
about your problem and decide whether it is worth writing parallel
code to solve your problem. Usually the process of generating random
numbers cannot be parallelized, so if the process of generating
random numbers is the bottleneck, it is no use to do parallel
computing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remember to use defensive copy for constructors and methods of
classes that implement &lt;code&gt;Runnable&lt;/code&gt;, except for these variables
through which threads communicate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Runtime&lt;/code&gt; in Java can help to find the number of processors that a
computer have. Notice that every Java application has a single
instance of class Runtime that allows the application to interface
with the environment in which the application is running. The
current runtime can be obtained from the &lt;code&gt;getRuntime&lt;/code&gt; method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never use more threads than the number of processor of the machine
on which the Java application will be run on. With the help of
&lt;code&gt;Runtime&lt;/code&gt; we can write universal code for parallel computing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should always synchronize shared objects among different threads
because of delay effect in parallel computing. If we can make
different threads independent, we'd do it because this not only make
the code easy and run faster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You should use thread pool to avoid the cost of creating new thread
if there are many different parts in parallel computing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="thread"></category><category term="Java"></category><category term="HPC"></category><category term="parallel"></category><category term="concurrency"></category><category term="high performance computing"></category></entry><entry><title>Tricky Problems in MATLAB</title><link href="http://www.legendu.net/en/blog/tricky-problems-in-MATLAB/" rel="alternate"></link><published>2015-02-20T10:41:22-08:00</published><updated>2015-02-20T10:41:22-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/tricky-problems-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Sometimes you might find that you can use some built-in function in
MATLAB at first, but later you cannot use it any. If so, you should
probably check whether you are doing parallel computing in MATLAB.
Parallel computing in MATLAB can cause some problem. What you can do
is to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Sometimes you might find that you can use some built-in function in
MATLAB at first, but later you cannot use it any. If so, you should
probably check whether you are doing parallel computing in MATLAB.
Parallel computing in MATLAB can cause some problem. What you can do
is to use other functions that MATLAB accept in parallel computing
to replace these which result in problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dlmwrite&lt;/code&gt; is convenient to write vector and matrix data to a file,
but it might lose accuracy especially when you do not specify the
accuracy attribute. So do not use &lt;code&gt;dlmwrite&lt;/code&gt; to write data into text
files when you works with high accuracy data, instead, you can use
binary data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt; has priority over &lt;code&gt;:&lt;/code&gt; in MATLAB which is different from R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When MATLAB starts, it set the random number generator to the
default one and set the seed to be the default seed. So if you run a
simulation, reboot MATLAB and run the same simulation, you will get
the same results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since most arithmetic objects in MATLAB are matrices, arithmetic
operations in MATLAB are basically matric operations. So &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;,
&lt;code&gt;\*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; are matrix addition operator, matrix subtraction
operator, matrix multiplication operator and matrix division
operator respectively. 
Notice that &lt;code&gt;/&lt;/code&gt; is also called right matrix division operator. Suppose
&lt;code&gt;B/A=X&lt;/code&gt;, it means that &lt;code&gt;XA=B&lt;/code&gt;. There is also another matrix division
operator &lt;span class="math"&gt;\(\backslash\)&lt;/span&gt;. Suppose &lt;span class="math"&gt;\(B\backslash A=X\)&lt;/span&gt;, it means that
&lt;code&gt;AX=B&lt;/code&gt;.
If you want to perform element wise
operation rather than matrix operations, you have to put
an extra dot (i.e. &lt;code&gt;.&lt;/code&gt;) before the corresponding matrix
operators.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="trick"></category><category term="trap"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>String in MATLAB</title><link href="http://www.legendu.net/en/blog/string-in-MATLAB/" rel="alternate"></link><published>2015-02-20T10:40:42-08:00</published><updated>2015-02-20T10:40:42-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/string-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To display special characters (e.g. &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt; and so on),
you have to use &lt;code&gt;sprintf&lt;/code&gt; to format it first. 
&lt;code&gt;fprintf&lt;/code&gt; does the job of formatting and printing together.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlike R, 
numbers in MATLAB will not be silently converted to strings when needed.
You must use the function &lt;code&gt;num2str&lt;/code&gt; to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To display special characters (e.g. &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt; and so on),
you have to use &lt;code&gt;sprintf&lt;/code&gt; to format it first. 
&lt;code&gt;fprintf&lt;/code&gt; does the job of formatting and printing together.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlike R, 
numbers in MATLAB will not be silently converted to strings when needed.
You must use the function &lt;code&gt;num2str&lt;/code&gt; to convert numbers to strings manually.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="string"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Convert PDF to EPS</title><link href="http://www.legendu.net/en/blog/convert-pdf-to-eps/" rel="alternate"></link><published>2015-02-20T10:37:41-08:00</published><updated>2015-02-20T10:37:41-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/convert-pdf-to-eps/</id><summary type="html">&lt;p&gt;There are tons of tools for converting PDF pictures to EPS pictures in Linux. 
The &lt;code&gt;pdf2ps&lt;/code&gt; command is a good one.
It produces EPS pictures without losing much resolution. 
The general purpose tools &lt;code&gt;convert&lt;/code&gt; does not produce as good quality EPS figures.&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are tons of tools for converting PDF pictures to EPS pictures in Linux. 
The &lt;code&gt;pdf2ps&lt;/code&gt; command is a good one.
It produces EPS pictures without losing much resolution. 
The general purpose tools &lt;code&gt;convert&lt;/code&gt; does not produce as good quality EPS figures.&lt;/p&gt;</content><category term="Image"></category><category term="eps"></category><category term="Linux"></category><category term="PDF"></category><category term="software"></category><category term="Graphics"></category></entry><entry><title>Performance Tips for C++</title><link href="http://www.legendu.net/en/blog/performance-tips-for-cpp/" rel="alternate"></link><published>2015-02-20T10:36:42-08:00</published><updated>2015-02-20T10:36:42-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/performance-tips-for-cpp/</id><summary type="html">&lt;h2 id="performance"&gt;Performance&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If there is some block of useless code, 
the compile is smart enough to ignore it and thus speed up the program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the option &lt;code&gt;-O2&lt;/code&gt; to generate optimized code when you are ready to publish your code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define variables only when needed to avoid the overhead of creating …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="performance"&gt;Performance&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If there is some block of useless code, 
the compile is smart enough to ignore it and thus speed up the program.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the option &lt;code&gt;-O2&lt;/code&gt; to generate optimized code when you are ready to publish your code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Define variables only when needed to avoid the overhead of creating and deleting temporary variables.
It is suggested that you put variables into the smallest possible enclosing brace. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When shuffling data, it is better to shuffle in place 
if objects/data to be shuffled are not expensive to copy 
(e.g., when data are double or integers).
Otherwise, it is better to shuffle indexes/iterators of the container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is STRONGLY suggested that you specify the size/capacity of a vector 
if you know it. 
Even if you do not know the exactly size of a vector, 
it is often a good idea to initialize the vector with an rough estimate of its final size. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="tips"></category><category term="performance"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Lambda Function in C++11</title><link href="http://www.legendu.net/en/blog/lambda-function-in-cpp11/" rel="alternate"></link><published>2015-02-20T10:35:46-08:00</published><updated>2015-02-20T10:35:46-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/lambda-function-in-cpp11/</id><summary type="html">&lt;h2 id="lambda-function"&gt;Lambda Function&lt;/h2&gt;
&lt;p&gt;Check [here[(https://github.com/dclong/cearn/tree/master/lambda) 
for illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When capture variables, 
you can define new variables in the &lt;code&gt;[]&lt;/code&gt; of a lambda expression.
For example, 
if a lambda function need the sum of two double variable &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, 
you …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="lambda-function"&gt;Lambda Function&lt;/h2&gt;
&lt;p&gt;Check [here[(https://github.com/dclong/cearn/tree/master/lambda) 
for illustrative examples for the following discussions. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;When capture variables, 
you can define new variables in the &lt;code&gt;[]&lt;/code&gt; of a lambda expression.
For example, 
if a lambda function need the sum of two double variable &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, 
you can use &lt;code&gt;[s=x+y]&lt;/code&gt; to capture the sum of 
these two variables (by value) instead of capture both of them. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently the &lt;code&gt;const&lt;/code&gt; keyword is not in the grammer for captures, 
so that if you cannot capture an object by const reference directly. 
A way to walk around this is to first make a const reference of that object, 
and then capture the const reference by reference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When an object is captured by value, 
it cannot be mutated by the lambda function. 
If you want the lambda function to be able to mutate the capture value, 
you should use the keyword &lt;code&gt;mutable&lt;/code&gt;, e.g., &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;mutable&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To capture a member variable &lt;code&gt;data&lt;/code&gt; in a class, 
you have to capture &lt;code&gt;this&lt;/code&gt; pointer,
i.e., 
you have to use either &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;or &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;](...)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that the ways are different.
In the way, 
when you use &lt;code&gt;data&lt;/code&gt;, 
it is actually &lt;code&gt;this-&amp;gt;data&lt;/code&gt;.
This means that &lt;code&gt;data&lt;/code&gt; is alwasy accessed via &lt;code&gt;this&lt;/code&gt; pointer,
so you can consider it as capture by reference. 
The second way is capture by value. 
Surely you make it capture by reference by adding &lt;code&gt;&amp;amp;&lt;/code&gt; before &lt;code&gt;d&lt;/code&gt;. 
This is the preferred over the first way of capturing &lt;code&gt;this&lt;/code&gt; 
if you just want to capture &lt;code&gt;data&lt;/code&gt; not other member variables. &lt;/p&gt;</content><category term="C++"></category><category term="lambda"></category><category term="programming"></category></entry><entry><title>Containers and Iterators in C++</title><link href="http://www.legendu.net/en/blog/containers-and-iterators-in-cpp/" rel="alternate"></link><published>2015-02-20T10:34:29-08:00</published><updated>2015-02-20T10:34:29-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/containers-and-iterators-in-cpp/</id><summary type="html">&lt;h2 id="containers"&gt;Containers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prefer &lt;code&gt;std::deque&lt;/code&gt; to &lt;code&gt;std::vector&lt;/code&gt; when the size of the container is unknow. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Suppose set &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are two set with the same type
and set &lt;code&gt;C&lt;/code&gt; is another set with the same value type but a different comparison function,
then it is still valid to insert …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="containers"&gt;Containers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Prefer &lt;code&gt;std::deque&lt;/code&gt; to &lt;code&gt;std::vector&lt;/code&gt; when the size of the container is unknow. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Suppose set &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are two set with the same type
and set &lt;code&gt;C&lt;/code&gt; is another set with the same value type but a different comparison function,
then it is still valid to insert results of set operations 
(union, difference, intersection, symmetric difference and so on)
on A and B into set &lt;code&gt;C&lt;/code&gt;.
It is just that values in C are sorted according to 
the comparison function of &lt;code&gt;C&lt;/code&gt; not comparison function of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is known to all that a set is sorted (according to its comparison function). 
You cannot sort the set in place using &lt;code&gt;std::sort&lt;/code&gt; with another comparison function.
To sort elements in the set with another comparison function, 
you have to create a new container (e.g. a vector), copy the elements over and sort them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;std::set::count&lt;/code&gt; to check whether a set contains a value or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Removing an element from a set/list/map only 
affects reference to the remove element not references to other elements.
However, 
removing an element from a vector affects references to elements after the removed elements. 
A good way to works with vector is to operate on it backwards. 
That is iterating a vector backwards, 
removing elements from a vector backwards, etc. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;std::map&lt;/code&gt; is similar to &lt;code&gt;std::set&lt;/code&gt; from many aspect. 
For example, 
&lt;code&gt;std::map&lt;/code&gt; contains values with unique and sorted keys while &lt;code&gt;std::set&lt;/code&gt; contains unique and sorted keys.;
both &lt;code&gt;std::map&lt;/code&gt; and &lt;code&gt;std::set&lt;/code&gt; have a &lt;code&gt;count&lt;/code&gt; method which helps to check whether a &lt;code&gt;map/set&lt;/code&gt; contains a key or not;
both &lt;code&gt;std::map&lt;/code&gt; and &lt;code&gt;std::set&lt;/code&gt; have a &lt;code&gt;find&lt;/code&gt; method which helps to find the position of a key in a &lt;code&gt;map/set&lt;/code&gt;.
Actually, 
a &lt;code&gt;std::set&lt;/code&gt; can be considered as a special case of &lt;code&gt;std::map&lt;/code&gt; where the value is of no interest. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;std::map::at&lt;/code&gt; method is preferred over the &lt;code&gt;std::map::operator[]&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Associative containers such as &lt;code&gt;std::map&lt;/code&gt; and &lt;code&gt;std::set&lt;/code&gt; have methods related binary search 
(e.g., &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt;) 
while sequence containers such as &lt;code&gt;std::vector&lt;/code&gt; and &lt;code&gt;std::list&lt;/code&gt; do not have these methods. 
If a sequence container is sorted (e.g., use &lt;code&gt;std::sort&lt;/code&gt;), 
you can apply functions &lt;code&gt;std::count&lt;/code&gt; and &lt;code&gt;std::find&lt;/code&gt; on it. 
Sequence containers have methods which can access and modify elements at the front and back of the containers 
(e.g., &lt;code&gt;std::front&lt;/code&gt;, &lt;code&gt;std::pop_front&lt;/code&gt;, &lt;code&gt;std::back&lt;/code&gt;, &lt;code&gt;std::pop_back&lt;/code&gt;) 
while associative containers do not have such methods. 
To access the first and last element of an associative container, 
you have to use iterators. 
For example, 
to get the last element of a set &lt;code&gt;x&lt;/code&gt;, 
you can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbegin&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="iterator"&gt;Iterator&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The difference between points/iterator is of type std::ptrdiff_t,
which is essentially a "signed" integer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The result of &lt;code&gt;std::reverse_iterator::base&lt;/code&gt; decreased 
by 1 is the corresponding (non-reversed) iterator. 
For example, 
if you want to erase the last element from a set &lt;code&gt;s&lt;/code&gt;, 
you can use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;erase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="c1"&gt;--(s.rbegin().base()));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;</content><category term="C++"></category><category term="programming"></category><category term="list"></category><category term="set"></category><category term="map"></category><category term="iterator"></category><category term="container"></category><category term="C/C++"></category><category term="vector"></category></entry><entry><title>Rescue Linux from GUI Freezing</title><link href="http://www.legendu.net/en/blog/rescue-linux-from-gui-freezing/" rel="alternate"></link><published>2015-02-20T10:30:22-08:00</published><updated>2015-02-20T10:30:22-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-20:/en/blog/rescue-linux-from-gui-freezing/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/computer.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The kernel of Linux is usually very stable, 
but the existing free desktop environments are craps. 
Amongs these desktop environments I tried 
(Gnome, Xfce, LXDE and so on), none is even close to the desktop environments in Windows and Mac.
I do not require desktop environments in Linux to be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/computer.gif" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The kernel of Linux is usually very stable, 
but the existing free desktop environments are craps. 
Amongs these desktop environments I tried 
(Gnome, Xfce, LXDE and so on), none is even close to the desktop environments in Windows and Mac.
I do not require desktop environments in Linux to be as fancy as desktop environments in Windows and Mac,
but they have to be usable and stable. 
These two basic requirements, unfortunately, seems unreachable from these desktop environment developers.
Tought their desktop environments are full of all kinds of flaws, 
they never fell shame to brag about their products. 
My experience with Linux desktops is that they crash very often. 
The most annoying case is that the X windows freezes and does not react to the keyboard and touchpad. 
It is not recommended to shutdown the machine by pressing the power button. 
To solve this problem, you can ssh into the machine from another one and kill the Xorg process. 
There arises several problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How do you ssh into your machine in any network? &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What if you do not have another machine on hand?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first problem often comes to how do you find the IP of the freezing machine?
If the machine is connected to your home network, 
you can just scan the network for connected machines. 
If the machine is connected to your work network, 
you often have a host name for your machine on the network. 
Scanning the network for ips is not a good idea in this case, 
because there are often many machines connected to your work network.
If the machine is connected to some network (e.g., public network),
it can be even harder to find the ip of your freezing machine.
My way to solve this problem is let the machine write its ip address 
into a file in Dropbox. 
So I can always know the ip of my machine no matter which network it is connected to. 
The second problem is not a problem if you have a (smart) phone with you. 
With a smartphone, you can install an application (e.g., connectBot) to login into 
Linux machine. 
If you only have a phone which cannot connect to internet, 
you can call someone who know Linux and you can trust and let him/her
login into your machine and kill the X window. 
If you hesitate to do that, well, just press the power button on your machine, 
hold it unitl your machine shut down. &lt;/p&gt;</content><category term="GUI"></category><category term="DE"></category><category term="Dropbox"></category><category term="X"></category><category term="Linux"></category><category term="SSH"></category><category term="desktop environment"></category></entry><entry><title>Tips for the IML Procedure in SAS</title><link href="http://www.legendu.net/en/blog/sas-iml-procedure/" rel="alternate"></link><published>2015-02-19T15:30:52-08:00</published><updated>2015-02-19T15:30:52-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-19:/en/blog/sas-iml-procedure/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/sas/sas.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;End an &lt;code&gt;IML&lt;/code&gt; procedure with &lt;code&gt;quit;&lt;/code&gt;.
You should never use &lt;code&gt;run;&lt;/code&gt; to end an IML procedure
because it is used for calling user-defined functions in IML procedures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Until SAS 9.3,
the &lt;code&gt;IML&lt;/code&gt; procedure does not support overloading functions or recursive functions. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define functions in the &lt;code&gt;IML&lt;/code&gt; procedure …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/sas/sas.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;End an &lt;code&gt;IML&lt;/code&gt; procedure with &lt;code&gt;quit;&lt;/code&gt;.
You should never use &lt;code&gt;run;&lt;/code&gt; to end an IML procedure
because it is used for calling user-defined functions in IML procedures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Until SAS 9.3,
the &lt;code&gt;IML&lt;/code&gt; procedure does not support overloading functions or recursive functions. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define functions in the &lt;code&gt;IML&lt;/code&gt; procedure, and the definition can be nested. 
That is you can define another function in a user-defined function. 
Note that the order of definition of functions matter (similar to C). 
A function must be defined before it is called. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;code&gt;IML&lt;/code&gt; procedure, 
every data object is a matrix.
There is no concept of vector in the IML procedure like R does.
However, elements of a matrix can be accessed by a single index (e.g., x[3]),
so you can a matrix with 1 row/column as if it is a vector (as in R).
When a matrix has multiple rows and columns, 
you can still access its elements using a single index,
but be aware that elements are read by ROW 
which is different from R.
For example, 
the following code prints out 2 and 10.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;proc iml;&lt;/span&gt;
    &lt;span class="k"&gt;x&lt;/span&gt; = {&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;, &lt;span class="m"&gt;10&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="m"&gt;1000&lt;/span&gt;};
    m = nrow(&lt;span class="k"&gt;x&lt;/span&gt;);
    n = ncol(&lt;span class="k"&gt;x&lt;/span&gt;);
    print (&lt;span class="k"&gt;x&lt;/span&gt;[&lt;span class="m"&gt;2&lt;/span&gt;]);
    print(&lt;span class="k"&gt;x&lt;/span&gt;[&lt;span class="m"&gt;4&lt;/span&gt;])&lt;span class="kr"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;quit;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;In SAS, 
data sets are global which means that any procedure can use a created data set.
However, 
variables defined in a &lt;code&gt;IML&lt;/code&gt; procedure is local, 
which means that variables defined in different &lt;code&gt;IML&lt;/code&gt; procedures are not shared. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define subroutines in a &lt;code&gt;IML&lt;/code&gt; procedure. 
A subroutine is just a bunch of statment putted together. 
A subroutine does not have any argument, 
which means that it must invoked without parentheses. 
A module/function can have argument(s), 
and must be invoked with parentheses. 
Another important difference is that 
variables defined in a function takes effect only in the function 
while variables in a module takes effect in the whole &lt;code&gt;IML&lt;/code&gt; procedure after its definition. 
Based on these comparision, 
function is more useful and better than module in the &lt;code&gt;IML&lt;/code&gt; procedure. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The slicing of vectors and matrices in the IML procedure is similar to that in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The name of a function in the &lt;code&gt;IML&lt;/code&gt; procedure can exceeds 8 characters, but I am not
sure about the maximum length.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;mattrib&lt;/code&gt; to modify attributes of matrix in the &lt;code&gt;IML&lt;/code&gt; procedure. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot print value of an expression directly in the IML procedure. 
You must either assign the value of the expression to a variable first or put the expression into parentheses. For example, 
proc iml;
    print 1+2;
quit;
raises an error while the following two ways of coding works.
proc iml;
    print (1+2);
quit;
proc iml;
    x = 1+2;
    print x;
quit;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot use the &lt;code&gt;put&lt;/code&gt; command to print value of variables in the IML procedure,
instead, 
you should use the &lt;code&gt;print&lt;/code&gt; command. 
However, 
unlike &lt;code&gt;put&lt;/code&gt;, 
&lt;code&gt;print&lt;/code&gt; cannot format (e.g., date9.) output values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can &lt;code&gt;||&lt;/code&gt; to combine matrix horizontally and &lt;code&gt;//&lt;/code&gt; to combine matrix vertically. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can define a same module multiple times in an IML procedure.
The last defintion will be used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
modules defined in an IML procedure is not visible to another IML procedure.
However,
you can store modules (to a library) defined in an IML procedure 
using the statement 
    store module=LocNonMissingRows; 
And you probably want to change the library for storing modules to a permanent one
before you storing a module.
You can do this using 
    reset storage=BlogDir.BlogModules; 
You can then use a stored module in aother IML procedure by loading it first.
    load module=LocNonMissingRows;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can read files using the &lt;code&gt;%include&lt;/code&gt; command in an IML procedure.
This means that you can define modules and put them into sas files 
and read them in when needed. 
This makes your SAS code more resuable and easier to manage.
You can also store user-defined modules 
and load them to be accessible later. 
However, it is not as convenient as &lt;code&gt;%include&lt;/code&gt;. 
And store a module to a permannet location make it inconvenint to update these moduels.
It is suggested that you always use &lt;code&gt;%include&lt;/code&gt; to read definition of modules from files.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="questions"&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;not very sure how to use default arguments in user-defined functions in the &lt;code&gt;IML&lt;/code&gt; procedure.&lt;/li&gt;
&lt;/ol&gt;</content><category term="SAS"></category><category term="matrix"></category><category term="programming"></category><category term="IML"></category></entry><entry><title>Boolean Values in C++</title><link href="http://www.legendu.net/en/blog/boolean-values-in-cpp/" rel="alternate"></link><published>2015-02-19T13:47:49-08:00</published><updated>2015-02-19T13:47:49-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-19:/en/blog/boolean-values-in-cpp/</id><summary type="html">&lt;h2 id="boolean-values"&gt;Boolean Values&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Boolean expressions are evaluated from left to right (the same in Java),
so it is totally OK to write code like &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;x.size() &amp;amp;amp;&amp;amp;amp; x[a]){&lt;/span&gt;
    ...
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;x&lt;/code&gt; is a vector.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There is no &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; and &lt;code&gt;||=&lt;/code&gt; operators in C++,
instead you can use &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt;.
Though …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="boolean-values"&gt;Boolean Values&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Boolean expressions are evaluated from left to right (the same in Java),
so it is totally OK to write code like &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;x.size() &amp;amp;amp;&amp;amp;amp; x[a]){&lt;/span&gt;
    ...
}
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;x&lt;/code&gt; is a vector.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There is no &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; and &lt;code&gt;||=&lt;/code&gt; operators in C++,
instead you can use &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt;.
Though &lt;code&gt;&amp;amp;=&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt; are not specially for boolean values, 
they work perfectly for boolean values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the numbers you work with support infinity or NaN, 
boolean expressions become tricky. 
For example, suppose &lt;code&gt;nan&lt;/code&gt; is a varialbe representing Nan,
both &lt;code&gt;2 &amp;lt; nan&lt;/code&gt; and &lt;code&gt;2 &amp;gt;= nan&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;,
which is not what we want. 
A safer way is to first check whether numbers involved are NaNs. 
Hopefully, ternary boolean type will be introduced into C++ in future. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="boolean"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Initializing Variables in C++</title><link href="http://www.legendu.net/en/blog/initializing-varialbes-in-cpp/" rel="alternate"></link><published>2015-02-19T13:45:33-08:00</published><updated>2015-02-19T13:45:33-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-19:/en/blog/initializing-varialbes-in-cpp/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;{}&lt;/code&gt; is more powerful than &lt;code&gt;()&lt;/code&gt; and thus is preferred over &lt;code&gt;()&lt;/code&gt;. 
You should use always use &lt;code&gt;{}&lt;/code&gt; except for a few cases where &lt;code&gt;()&lt;/code&gt; is necessary.
For example, 
if you want to create a vector of length 1000, 
you have to use &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;instead of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1000 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;{}&lt;/code&gt; is more powerful than &lt;code&gt;()&lt;/code&gt; and thus is preferred over &lt;code&gt;()&lt;/code&gt;. 
You should use always use &lt;code&gt;{}&lt;/code&gt; except for a few cases where &lt;code&gt;()&lt;/code&gt; is necessary.
For example, 
if you want to create a vector of length 1000, 
you have to use &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;instead of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which create a vector with one element 1000.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Objects in C++ are intialized to have some value when they are created,
i.e., an object in C++ always have a valid value. 
This is different from Java. 
In Java, objects are essentially references. 
If an object in Java does not point to any memory when initializing, 
it is &lt;code&gt;null&lt;/code&gt;. 
In C++, 
it is impossible to have &lt;code&gt;null&lt;/code&gt; object. 
You can only have &lt;code&gt;null&lt;/code&gt; pointers in C++.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Universal initialization list &lt;code&gt;{}&lt;/code&gt; is very powerful and convenient,
especially when working with containers. 
However you cannot initialize non-const reference using &lt;code&gt;{}&lt;/code&gt;
using g++ 4.7, 
which seems to be a bug. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="initialization"></category><category term="C++"></category><category term="programming"></category></entry><entry><title>Install the GSL Library</title><link href="http://www.legendu.net/en/blog/install-gsl-library/" rel="alternate"></link><published>2015-02-19T13:41:31-08:00</published><updated>2015-02-19T13:41:31-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-19:/en/blog/install-gsl-library/</id><summary type="html">&lt;p&gt;GSL is an advance C/C++ library that is widely used. 
To install GSL, 
you can download the source file and 
following instruction in the included README and INSTALL document. 
For Unix/Linux users, 
the GSL library is often availabe in the repository. 
For example, you can use the following …&lt;/p&gt;</summary><content type="html">&lt;p&gt;GSL is an advance C/C++ library that is widely used. 
To install GSL, 
you can download the source file and 
following instruction in the included README and INSTALL document. 
For Unix/Linux users, 
the GSL library is often availabe in the repository. 
For example, you can use the following command to install the GSL library in Debian.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;libgsl0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will install the GSL library to the default location, 
so that you do not have specify the &lt;code&gt;-I&lt;/code&gt; and &lt;code&gt;-L&lt;/code&gt; options for the GSL library. 
However, 
you still have to use the option &lt;code&gt;-lgsl&lt;/code&gt; and &lt;code&gt;-lgslcblas&lt;/code&gt; 
(can be replaced by other available BLAS libraries) in order to compile your code using GSL.&lt;/p&gt;</content><category term="Debian"></category><category term="C/C++"></category><category term="Linux"></category><category term="programming"></category><category term="GSL"></category></entry><entry><title>The Sum and Product Puzzle</title><link href="http://www.legendu.net/en/blog/the-sum-and-product-puzzle/" rel="alternate"></link><published>2015-02-04T23:47:19-08:00</published><updated>2015-02-04T23:47:19-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-04:/en/blog/the-sum-and-product-puzzle/</id><summary type="html">&lt;p&gt;I talked about an interesting problem &lt;a href="http://www.legendu.net/en/blog/sun-bin-pang-juan/"&gt;in this post&lt;/a&gt;.
I had onsite-inteviews from Wolfram at the end of April this year,
and I decided to talk how to solve the problem using Mathematica.
I did some research and realized that the problem is a well-known one
which is called the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I talked about an interesting problem &lt;a href="http://www.legendu.net/en/blog/sun-bin-pang-juan/"&gt;in this post&lt;/a&gt;.
I had onsite-inteviews from Wolfram at the end of April this year,
and I decided to talk how to solve the problem using Mathematica.
I did some research and realized that the problem is a well-known one
which is called the &lt;em&gt;Sum and Product Puzzle&lt;/em&gt; (aka the &lt;em&gt;Impossible Puzzle&lt;/em&gt;). 
The &lt;em&gt;Sum and Product Puzzle&lt;/em&gt; has several different versions. 
I reframe the one mentioned in my previous post as follows.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two numbers (not necessarily unique) between 2 and 99 are chosen. 
The sum of them is told to Sam and the product of them is told to Peter .&lt;/p&gt;
&lt;p&gt;Sam: "Now I don't know what the 2 numbers are, 
but I'm sure you don't know either."&lt;/p&gt;
&lt;p&gt;Peter: "I have to thank you for the information, 
because I did have no idea of what the 2 numbers are, 
but now I already know."&lt;/p&gt;
&lt;p&gt;Sam: "Now the same here."&lt;/p&gt;
&lt;p&gt;Question: what are the two numbers?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="notations"&gt;Notations&lt;/h2&gt;
&lt;p&gt;R: range of the 2 numbers, which is {2,3,. . . ,99} in this case&lt;/p&gt;
&lt;p&gt;x0 , y0: a (the) solution to the Puzzle&lt;/p&gt;
&lt;h2 id="mathematical-information-hidden-in-words"&gt;Mathematical Information Hidden in Words&lt;/h2&gt;
&lt;p&gt;"Now I don't know what the 2 numbers are, 
but I'm pretty sure you don't know either." &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x, y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each pair of &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt;, 
&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x',y'\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x'\times y'=x \times y\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's called the above conditions set I.&lt;/p&gt;
&lt;p&gt;"I have to thank you for the information, 
because I did have no idea of what the 2 numbers are, 
but now I already know."&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x, y\in R\)&lt;/span&gt; 
such that &lt;span class="math"&gt;\(x\times y=x_0\times y_0\)&lt;/span&gt; (already in conditions set I). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Among all pairs &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x\times y=x_0\times y_0\)&lt;/span&gt;, 
&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; an unique pair satisfying conditions set I. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's called the above conditions set II.&lt;/p&gt;
&lt;p&gt;"Now the same here"&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; multiple pairs of &lt;span class="math"&gt;\(x, y\in R\)&lt;/span&gt; 
such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt; (already in conditions set I). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Among all pairs &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt; such that &lt;span class="math"&gt;\(x+y=x_0+y_0\)&lt;/span&gt;, 
&lt;span class="math"&gt;\(\exists\)&lt;/span&gt; an unique pair satisfying conditions set II. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's called the above conditions set III.&lt;/p&gt;
&lt;h2 id="algorithm-to-solve-the-sum-and-product-puzzle"&gt;Algorithm to Solve the Sum and Product Puzzle&lt;/h2&gt;
&lt;p&gt;A/The solution (pair of &lt;span class="math"&gt;\(x_0\)&lt;/span&gt; and &lt;span class="math"&gt;\(y_0\)&lt;/span&gt;) 
must satisfies conditions set I, II and III at the same time. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Construct all possible combinations of &lt;span class="math"&gt;\(x,y\in R\)&lt;/span&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select pairs (among all possible pairs) that satisfy conditions set I, II and III at the same time. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="mathematica-code-for-the-sum-and-product-puzzle"&gt;Mathematica Code for the Sum and Product Puzzle&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TwoAddends&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s_Integer, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{lower, upper},&lt;/span&gt;
&lt;span class="n"&gt;   lower = range[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{i, s - i}, {i, Max[lower, s - upper&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Min&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;upper, s - lower, s/2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;TwoFactors&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p_Integer, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{lower, upper, div, n},&lt;/span&gt;
&lt;span class="n"&gt;   lower = range[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Select&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Divisors[p&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Max&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;lower, p/upper&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;Min&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;upper, p/lower, Sqrt[p&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{#, p/#} &amp;amp;amp;, div&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;S1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pair_List, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{s, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   s = Total[pair&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TwoAddends&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;And, Length[TwoFactors[Times @@ #, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;P1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pair_List, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{p, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   p = Times @@ pair;&lt;/span&gt;
&lt;span class="n"&gt;   candidates = TwoFactors[p, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Boole[S1[#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pair_List, range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{s, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   s = Total[pair&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TwoAddends&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Total&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Boole[P1[#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="err"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;SumProductPuzzle&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;range_List&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;{lower, upper, candidates},&lt;/span&gt;
&lt;span class="n"&gt;   lower = range[[1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;range&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;candidates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Table[{i, j}, {i, lower, upper}, {j, i, upper}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;Select&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;candidates, S1[#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;P1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;#, range&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All code and results for this project are hosted on GitHub at &lt;a href="https://github.com/dclong/sum_prod"&gt;sum_prod&lt;/a&gt;.
As I will continue to study this problem, 
it is the best place to find the most updated code and results for this problem.&lt;/p&gt;
&lt;h2 id="result"&gt;Result&lt;/h2&gt;
&lt;p&gt;Run the function &lt;code&gt;SumProductPuzzle&lt;/code&gt; to find a/the solution to the puzzle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;SumProductPuzzle[{2, 99}]&lt;/span&gt;
&lt;span class="cp"&gt;{{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="some-discussions-about-the-sum-and-product-puzzle"&gt;Some Discussions about the Sum and Product Puzzle&lt;/h2&gt;
&lt;p&gt;It is of great interest to find all ranges of the form &lt;span class="math"&gt;\([2, U]\)&lt;/span&gt;
such that there is an unique solution to the puzzle in these ranges.&lt;/p&gt;
&lt;p&gt;Use the following code to do computation in parallel&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;DistributeDefinitions&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;TwoAddends, TwoFactors, S1, P1, S2, SumProductPuzzle&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;rr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Table&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ParallelSubmit[{i}, SumProductPuzzle[{2, i}&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="err"&gt;}]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;WaitAll&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rr&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;The solution depends on the range (can have no, unique or multiple answers).&lt;/li&gt;
&lt;li&gt;There is no solution in [2, U] for &lt;span class="math"&gt;\(2 \le U \le 61\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;I have verified that an unique solution exists in [2, U] for &lt;span class="math"&gt;\(62 \le U \le 610\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;As the Mathematica code I wrote is more for illustrating my ideas 
and runs slowly.
I will reimplement the algorithm with previous calculated results cached in Java
to further study this problem.&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="puzzle"></category><category term="Mathematica"></category><category term="math"></category><category term="Work"></category><category term="fun problems"></category><category term="sum"></category><category term="product"></category></entry><entry><title>Download Debian Using Jigdo</title><link href="http://www.legendu.net/en/blog/download-debian-using-jigdo/" rel="alternate"></link><published>2015-02-03T19:59:19-08:00</published><updated>2015-02-03T19:59:19-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/download-debian-using-jigdo/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/linux/debian.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;You can save a lot of time using Jigdo to download Debian image 
especially when you have an old version of the image. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Mount the the old version of the image to a folder that you 
have access to, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt; &lt;span class="n"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iso&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;a href="http://cdimage.debian.org/cdimage/weekly-builds/amd64/jigdo-dvd/"&gt;Weekly …&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/linux/debian.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;You can save a lot of time using Jigdo to download Debian image 
especially when you have an old version of the image. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Mount the the old version of the image to a folder that you 
have access to, e.g.,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;mount&lt;/span&gt; &lt;span class="n"&gt;debian&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iso&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mnt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Go to &lt;a href="http://cdimage.debian.org/cdimage/weekly-builds/amd64/jigdo-dvd/"&gt;Weekly Builds of Debian Testing Image&lt;/a&gt; to copy the link
address of the jigdo file that you want to use. 
The first one is usually what you need. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run the following command in terminal. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;jigdo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;lite&lt;/span&gt; &lt;span class="n"&gt;link_to_jigdo_file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You will be asked about old vesions of images that you want to use
to accelerate downloading.
You can type in the path where you mounted the image. 
This process will be repeated until you don't have any more old version 
of CD/DVD images to use. Just press enter to continue and files not 
found in the old versions of images will be fetched throught internet. &lt;/p&gt;</content><category term="jigdo-lite"></category><category term="wget"></category><category term="debian image"></category><category term="jigdo"></category><category term="Linux"></category></entry><entry><title>Adjust Screen Brightness for Linux Desktops</title><link href="http://www.legendu.net/en/blog/adjust-screen-brightness-for-linux-desktops/" rel="alternate"></link><published>2015-02-03T19:57:46-08:00</published><updated>2015-02-03T19:57:46-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/adjust-screen-brightness-for-linux-desktops/</id><summary type="html">&lt;p&gt;For many computers and laptops installed with Linux desktops, 
you can use shortcuts (usually Fn + Brightness_keys) to adjust screen brightness.
This does not work for some laptops. 
Another way to adjust screen brightness is to use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;setpci&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;F4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;brightness_value&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The value …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For many computers and laptops installed with Linux desktops, 
you can use shortcuts (usually Fn + Brightness_keys) to adjust screen brightness.
This does not work for some laptops. 
Another way to adjust screen brightness is to use the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;setpci&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;F4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;brightness_value&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The value is between 00 to ff. 
However, this is not a universal way either, 
i.e., it does not work on all laptops. 
As you see, 
you have to have root permission in order to run the command. 
Generally speaking,
you are not recommnend to use the latter way if the shortcuts works. &lt;/p&gt;</content><category term="screen"></category><category term="Linux"></category><category term="brightness"></category></entry><entry><title>Make Your Linux Server Securer</title><link href="http://www.legendu.net/en/blog/make-your-linux-server-securer/" rel="alternate"></link><published>2015-02-03T19:57:25-08:00</published><updated>2015-02-03T19:57:25-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/make-your-linux-server-securer/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Define host access rules in &lt;code&gt;/etc/hosts.allow&lt;/code&gt; and &lt;code&gt;/etc/hosts.deny&lt;/code&gt;. 
Usually I only allow login to my private server from my home and work ip. 
If I have to login into my private server from some other network, 
I login to a computer at my workplace, 
login into …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Define host access rules in &lt;code&gt;/etc/hosts.allow&lt;/code&gt; and &lt;code&gt;/etc/hosts.deny&lt;/code&gt;. 
Usually I only allow login to my private server from my home and work ip. 
If I have to login into my private server from some other network, 
I login to a computer at my workplace, 
login into my private server from the computer at my workplace,
editing the access rules on my private server,
and then login into my private server from the new network directly. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable root SSH login (edit the file &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;).
With root SSH login disabled, 
a hacker has to guess both your login name and password,
which is much harder than guessing the password alone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a non-default port for the SSH server (edit the file &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;).
With a non-default port set up,
a hacker has to also guess the port number,
which makes the brute-forth break-in even harder.
You can use the command `sudo nmap -sS -O 127.0.0.1' to scan open ports.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the package &lt;code&gt;fail2ban&lt;/code&gt; to automatically ban ips which attemps to break into your server by brute-forth. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="security"></category><category term="Linux"></category><category term="server"></category></entry><entry><title>File Name of Bash Script</title><link href="http://www.legendu.net/en/blog/file-name-of-bash-script/" rel="alternate"></link><published>2015-02-03T19:54:45-08:00</published><updated>2015-02-03T19:54:45-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/file-name-of-bash-script/</id><summary type="html">&lt;p&gt;This post discusses the behavior of &lt;code&gt;$0&lt;/code&gt; and &lt;code&gt;BASH_SOURCE&lt;/code&gt; in bash using examples.
I created 3 executable bash files &lt;code&gt;a.sh&lt;/code&gt;, &lt;code&gt;b.sh&lt;/code&gt; and &lt;code&gt;c.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Content of &lt;code&gt;a.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo $0
echo $(readlink -f $0)
echo &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
echo $(readlink -f &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;b.sh&lt;/code&gt; is a symbolic of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post discusses the behavior of &lt;code&gt;$0&lt;/code&gt; and &lt;code&gt;BASH_SOURCE&lt;/code&gt; in bash using examples.
I created 3 executable bash files &lt;code&gt;a.sh&lt;/code&gt;, &lt;code&gt;b.sh&lt;/code&gt; and &lt;code&gt;c.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Content of &lt;code&gt;a.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo $0
echo $(readlink -f $0)
echo &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
echo $(readlink -f &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;b.sh&lt;/code&gt; is a symbolic of &lt;code&gt;a.sh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Content of &lt;code&gt;c.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;source a.sh
./a.sh
echo &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./a.sh &lt;span class="c1"&gt;# run a.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; a.sh &lt;span class="c1"&gt;# source in a.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./b.sh &lt;span class="c1"&gt;# run b.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; b.sh &lt;span class="c1"&gt;# source in b.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./c.sh &lt;span class="c1"&gt;# run c.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; c.sh &lt;span class="c1"&gt;# source in c.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;btsync&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dclong&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="$0"></category><category term="BASH_SOURCE"></category><category term="bash"></category><category term="Linux"></category></entry><entry><title>A Secure Way to Use Vino in Debian</title><link href="http://www.legendu.net/en/blog/a-secure-way-to-use-vino-in-debian/" rel="alternate"></link><published>2015-02-03T19:41:59-08:00</published><updated>2015-02-03T19:41:59-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/a-secure-way-to-use-vino-in-debian/</id><summary type="html">&lt;p&gt;VNC on Linux is not secure. 
Most implementations of VNC servers for Linux allows password only up to 8 characters. 
Such a VNC server is very vulnerable to brute-force attack. 
This article discuss a secure way to use VNC.
The VNC (vino) server is started only when needed,
thus reduce …&lt;/p&gt;</summary><content type="html">&lt;p&gt;VNC on Linux is not secure. 
Most implementations of VNC servers for Linux allows password only up to 8 characters. 
Such a VNC server is very vulnerable to brute-force attack. 
This article discuss a secure way to use VNC.
The VNC (vino) server is started only when needed,
thus reduce the chance of your server to be hacked.&lt;/p&gt;
&lt;p&gt;First install the vino server in debian using the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;vino&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Whenever you want to use VNC on the server, 
follow the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ssh into the server with X11 forwarding enabled. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="nv"&gt;@servername&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edit vino server settings by typing the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;vino&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;preference&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It will prompt a window for you to edit vino settings. 
Close the window after you are done. 
This step only has to done once and can be skipped 
if you don't want to change the settings.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Start the vino server using the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;DISPLAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vino&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vino&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect to your server using Remmina.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lock the screen of you Debian/Linux server 
when you have finished using VNC on your server. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop/kill the vino server by hot keys &lt;code&gt;CTRL + C&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="vino"></category><category term="Linux"></category><category term="vnc"></category><category term="network"></category></entry><entry><title>Add an Entry into the Right-click Menu in Windows</title><link href="http://www.legendu.net/en/blog/add-an-entry-into-the-right-click-menu-in-windows/" rel="alternate"></link><published>2015-02-03T19:30:50-08:00</published><updated>2015-02-03T19:30:50-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/add-an-entry-into-the-right-click-menu-in-windows/</id><summary type="html">&lt;p&gt;To add an entry into the right-click menu in Windows, 
edit the registry following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the registry.
You can search for &lt;code&gt;regedit&lt;/code&gt; in Windows Start menu and run it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the key
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;
in the registry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key with any name (e …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;To add an entry into the right-click menu in Windows, 
edit the registry following the steps below.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the registry.
You can search for &lt;code&gt;regedit&lt;/code&gt; in Windows Start menu and run it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Navigate to the key
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;
in the registry.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key with any name (e.g., rstudio) under 
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set a value (e.g., Rstudio) for the newly created key (rstudio)
in the right-side pane of the registry.
This value (Rstudio) shows up in the right-click menu whenever you right click.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create another key named &lt;code&gt;command&lt;/code&gt; under the newly created key (rstudio).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set the value of the newly created key &lt;code&gt;command&lt;/code&gt; 
to be the full path of the application
(e.g., &lt;code&gt;C:\Program Files\RStudio\bin\rstudio.exe&lt;/code&gt;)
that you want to launch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Windows"></category><category term="right-click menu"></category><category term="registry"></category><category term="regedit"></category></entry><entry><title>Missing Grub Menu of Windows Operating System</title><link href="http://www.legendu.net/en/blog/missing-grub-windows/" rel="alternate"></link><published>2015-02-03T19:10:47-08:00</published><updated>2015-02-03T19:10:47-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-02-03:/en/blog/missing-grub-windows/</id><summary type="html">&lt;p&gt;I came across this problem after I installed both Debian and Windows 7 system on my laptop.
After searching online, I found a solution to this problem. 
1. Open /etc/default/grub as root user and make sure the following line is somewhere in the file and uncommented:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;GRUB_DISABLE_OS_PROBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;false …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I came across this problem after I installed both Debian and Windows 7 system on my laptop.
After searching online, I found a solution to this problem. 
1. Open /etc/default/grub as root user and make sure the following line is somewhere in the file and uncommented:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;GRUB_DISABLE_OS_PROBER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Run command &lt;code&gt;update-grub2&lt;/code&gt; and then reboot your computer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This solution is not just for Windows and Linux dual boot. 
It is also for dual/multiple Linux operating systems boot. &lt;/p&gt;</content><category term="Windows"></category><category term="Linux"></category><category term="OS"></category><category term="Debian"></category></entry><entry><title>Lvalue Reference and Rvalue Reference</title><link href="http://www.legendu.net/en/blog/lvalue-rvalue-reference/" rel="alternate"></link><published>2015-01-15T02:17:12-08:00</published><updated>2015-01-15T02:17:12-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-01-15:/en/blog/lvalue-rvalue-reference/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/cpp/left-right.jpg" height="180" width="200" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="difference-betwen-lvalue-and-rvalue-reference"&gt;Difference betwen Lvalue and Rvalue Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Lvalue and Rvalue are terrible names. 
They are due to historical reasonal but people stuck with these names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lvalue reference has a name while a rvalue reference has no name, in other words, 
a lvalue reference is persistent while a rvalue reference is …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/cpp/left-right.jpg" height="180" width="200" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="difference-betwen-lvalue-and-rvalue-reference"&gt;Difference betwen Lvalue and Rvalue Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Lvalue and Rvalue are terrible names. 
They are due to historical reasonal but people stuck with these names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lvalue reference has a name while a rvalue reference has no name, in other words, 
a lvalue reference is persistent while a rvalue reference is temporary.
Let &lt;code&gt;f(vector&amp;lt;int&amp;gt; &amp;amp;&amp;amp; x)&lt;/code&gt; be a function/method (can be a constructor) 
which takes a rvalue reference as argument.
It is common to misunderstand &lt;code&gt;x&lt;/code&gt; as a rvalue reference. 
When a rvalue reference/temporary object is passed to &lt;code&gt;f&lt;/code&gt;, 
it is moved to &lt;code&gt;x&lt;/code&gt;,
however, &lt;code&gt;x&lt;/code&gt; itself is not a rvalue reference/temporary object because it has a name.
&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; only means that it is OK to move &lt;code&gt;x&lt;/code&gt;, but does not mean that &lt;code&gt;x&lt;/code&gt; is a rvalue reference/temporary object.
And at the place where you intend to move &lt;code&gt;x&lt;/code&gt;, 
you must use &lt;code&gt;std::move&lt;/code&gt; manually to move it, 
otherwise, it get copied. 
Values return by functions/methods and expression are temporary values, 
so you do have to use &lt;code&gt;std::move&lt;/code&gt; to move them when you pass them 
to functions/emthods that take a rvalue reference as argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can take the address of a lvalue reference but you cannot take the address of a rvalue reference. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you apply &lt;code&gt;std::move&lt;/code&gt; on a primitive type variable (double, int and so on), 
it is usually lefted unchanged. 
This means that copy is usually the fastest way to implement
move on primitive types, but it is not guaranteed that copy is 
always used (different compiler might have different implementation on this). 
After being moved a variable still have a valid but unspecified value.
So do not use the value in a moved variable until you given it a new known value.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A lvalue referece cannot be moved. 
The reason is that such operation is not necessary. 
To move the object that the lvalue reference points to, 
one can move the object directly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot use a vecotor (similar for other containers) of lvalue references,
because lvalue references have to be initialized to point to valid objects when they are created. 
An alternative way is to use vector of pointers/iterators instead. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always use &lt;code&gt;const&lt;/code&gt; lvalue reference, unless you intend to change the referenced object. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="how-to-use-rvalue-reference"&gt;How to Use Rvalue Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do not write &amp;amp;&amp;amp; to return type of a function,
and there is no need to return a local variable using &lt;code&gt;std::move&lt;/code&gt;.
When return a local variable, it is automatically move in C++11. 
However, if the local variable is static, then it is not moved as expected.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you copy content of an argument in a function, 
overload it with rvalue reference and move the content.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you write a class with the copy constructor and the assignment operator, 
write also the move constructor and the move assignment operator.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="C/C++"></category><category term="reference"></category><category term="programming"></category></entry><entry><title>Time and Date in R</title><link href="http://www.legendu.net/en/blog/time-and-date-in-r/" rel="alternate"></link><published>2015-01-14T16:46:40-08:00</published><updated>2015-01-14T16:46:40-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-01-14:/en/blog/time-and-date-in-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;as.Date&lt;/code&gt; and &lt;code&gt;strptime&lt;/code&gt; convert string to dates. 
For these functions to work right, 
you must use the right format.&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;as.Date&lt;/code&gt; and &lt;code&gt;strptime&lt;/code&gt; convert string to dates. 
For these functions to work right, 
you must use the right format.&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="date"></category><category term="time"></category><category term="programming"></category><category term="CRAN"></category></entry><entry><title>Compare R with Other Languages on Data Manipulation</title><link href="http://www.legendu.net/en/blog/pass-array-r-other-language/" rel="alternate"></link><published>2015-01-13T13:14:35-08:00</published><updated>2015-01-13T13:14:35-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2015-01-13:/en/blog/pass-array-r-other-language/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
Here I compare R with other languages such as C/C++, Java, MATLAB, Python and so
on data manipulation. I list a few advantages and disadvantages of R on data
manipulation compared with other programming languages. &lt;/p&gt;
&lt;p&gt;Generally speaking, it is very convenient to manipulate data in R. Using function
&lt;code&gt;read …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;
Here I compare R with other languages such as C/C++, Java, MATLAB, Python and so
on data manipulation. I list a few advantages and disadvantages of R on data
manipulation compared with other programming languages. &lt;/p&gt;
&lt;p&gt;Generally speaking, it is very convenient to manipulate data in R. Using function
&lt;code&gt;read.table&lt;/code&gt; (and other derived functions), you can read numerical and
character data into a data frame from a text file at the same time. Though other
programming languages can do this too, most of them are not as simple and convenient
as R. For example, you can read in a table in MATLAB using function &lt;code&gt;dlmread&lt;/code&gt;,
but the data has to be of the same type. Function &lt;code&gt;xlsread&lt;/code&gt; in MATLAB can read
numerical and character values at the same type, but as its name indicates, it
relies on the Microsoft Excel software. What is more, &lt;code&gt;xlsread&lt;/code&gt; read data into a
cell which does not have row names and column names attributes. The first row of
the data (usually stands for the headers) is read into the cell as the first row
of data. This is inconvenient. 
A matrix and data frame in R can have both column names and row names.
They make extracting and recording data very convenient in R.
MATLAB is close to R in the sense that its matrix data structure is comparable
to the matrix data structure in R, and its structure array data structure is
comparable to the data frame data structure in R. However, you can only extract
rows from a structure array but not columns. The cell data structure in MATLAB
is another data structure that is comparable to the data frame data structre in
R, however, as I mentioned before it doesn't have row names and column names
attributes. All these things make it a hessle to work on data with different
types at the same time in MATLAB. &lt;/p&gt;
&lt;p&gt;Python has some libraries (e.g., pandas and pydataframe) that offer similar
object as data frame in R and similar functions as &lt;code&gt;read.table&lt;/code&gt; and
&lt;code&gt;write.table&lt;/code&gt; (and their derived functions) in R. One advatange of Python over R
is that it has better support of object oriented programming than R. Working on
vector alike object in python is more convenient than in R many times. For example, you can
easily insert an element into a list in Python with the &lt;code&gt;insert&lt;/code&gt; method while in
R you have to extract parts of a vector/list and then recombine them with the
elements you want to insert. &lt;/p&gt;
&lt;p&gt;Support of string in C awful. Java has a better support of string, however, I
don't know whether there are libraries offering convenient ways to read and write data like 
&lt;code&gt;read.table&lt;/code&gt; and &lt;code&gt;write.table&lt;/code&gt; in R. Honestly speaking, I doubt. What's more,
compiled langugaes are not as convenient as script languages to explore data.&lt;/p&gt;
&lt;p&gt;Given these things discussed above, Python and R
are good choices if you have to deal with both numerical and character data at the same time.&lt;/p&gt;</content><category term="Python"></category><category term="C++"></category><category term="programming"></category><category term="statistics"></category><category term="Java"></category><category term="string"></category><category term="data frame"></category><category term="R"></category><category term="OOP"></category><category term="MATLAB"></category><category term="CRAN"></category></entry><entry><title>Interact with System Clipboard in Vim</title><link href="http://www.legendu.net/en/blog/interact-between-different-vim-sessions/" rel="alternate"></link><published>2014-12-26T10:35:12-08:00</published><updated>2014-12-26T10:35:12-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-12-26:/en/blog/interact-between-different-vim-sessions/</id><summary type="html">&lt;p&gt;The following are ways for a Vim session 
to interact (copy/cut, paste) with other Vim sessions or other applications.&lt;/p&gt;
&lt;h2 id="use-x-windows-clipboard-directly"&gt;Use X Windows Clipboard Directly&lt;/h2&gt;
&lt;p&gt;If you prefer to use X windows clipboard as the default buffer for Vim,
put &lt;code&gt;set clipboard=unnamedplus&lt;/code&gt; in your &lt;code&gt;.vimrc&lt;/code&gt; file.
This obviously makes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The following are ways for a Vim session 
to interact (copy/cut, paste) with other Vim sessions or other applications.&lt;/p&gt;
&lt;h2 id="use-x-windows-clipboard-directly"&gt;Use X Windows Clipboard Directly&lt;/h2&gt;
&lt;p&gt;If you prefer to use X windows clipboard as the default buffer for Vim,
put &lt;code&gt;set clipboard=unnamedplus&lt;/code&gt; in your &lt;code&gt;.vimrc&lt;/code&gt; file.
This obviously makes your Vim talk to the system clipboard (all the time).
However, 
this makes different Vim sessions interact with each other 
which might or might not what you want.
Generally speaking,
this is not recommended if you want to interact with system clipboard within Vim.&lt;/p&gt;
&lt;h2 id="use-vim-buffers-recommended"&gt;Use Vim Buffers (recommended)&lt;/h2&gt;
&lt;p&gt;You need to install a GUI version of Vim (e.g., &lt;code&gt;vim-gnome&lt;/code&gt;) 
before you use this way to interact with the system clipboard.
You can simply use the &lt;code&gt;+&lt;/code&gt; (sometimes &lt;code&gt;*&lt;/code&gt;) register. 
For example, 
you can use &lt;code&gt;"+yy&lt;/code&gt; to copy the current line in Vim to the system clipboard
and &lt;code&gt;"+p&lt;/code&gt; to paste from from the system clipboard to Vim.&lt;/p&gt;
&lt;h2 id="the-shift-key"&gt;The SHIFT Key&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Hold &lt;code&gt;SHIFT&lt;/code&gt; while you select text in Vim using mouse. 
You can then right click on the selection and choose &lt;code&gt;Copy&lt;/code&gt; to copy it to the system clipboard, 
or you can use &lt;code&gt;CTRL + SHFIT + C&lt;/code&gt; to copy the selection to the system clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can right click and choose &lt;code&gt;paste&lt;/code&gt; in Vim to pate from the system clipboard into Vim, 
or you can use &lt;code&gt;CTRL + SHIFT + V&lt;/code&gt; to paste from the system clipboard into Vim.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Another way to copy from Vim to a text editor is to first select text in Vim with &lt;code&gt;SHFIT&lt;/code&gt; pressed, 
and then middle-click in the text editor.
Notice that &lt;code&gt;CTRL + V&lt;/code&gt; won't work, 
because you did not use &lt;code&gt;CTRL + SHFIT + C&lt;/code&gt; (or &lt;code&gt;right click -&amp;gt; paste&lt;/code&gt;) to copy the selection to the system clipboard.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="use-a-temporary-bufferfile"&gt;Use a Temporary Buffer/File&lt;/h2&gt;
&lt;p&gt;It's very convenient to copy/cut and paste text between different buffers/files of a same Vim session. 
So you can use temporary buffer/file to interact with other Vim sessions or other applications.&lt;/p&gt;
&lt;h2 id="see-also"&gt;See Also&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard"&gt;http://vim.wikia.com/wiki/Accessing_the_system_clipboard&lt;/a&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="software"></category><category term="Linux"></category><category term="clipboard"></category><category term="copy"></category><category term="paste"></category></entry><entry><title>Stick Breaking Problems</title><link href="http://www.legendu.net/en/blog/stick-breaking-problems/" rel="alternate"></link><published>2014-12-16T19:47:59-08:00</published><updated>2014-12-16T19:47:59-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-12-16:/en/blog/stick-breaking-problems/</id><summary type="html">&lt;p&gt;The following is a popular brain teaser problem about probability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Randomly select two points on a unit stick to break it into 3 pieces,
what is the probability that the 3 pieces can form a triangle?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The critical thing here is how are the two points selected. 
The most popular …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The following is a popular brain teaser problem about probability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Randomly select two points on a unit stick to break it into 3 pieces,
what is the probability that the 3 pieces can form a triangle?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The critical thing here is how are the two points selected. 
The most popular (and probably default) way is that 
&lt;span class="math"&gt;\(X_1, X_2 \overset{iid}{\sim} U(0, 1)\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; are the distances from the two points to the left end of the stick.
There some other interesting ways of selecting the points,
and I will study the 3 cases in this post.&lt;/p&gt;
&lt;h2 id="independent-uniformly-distributed"&gt;Independent Uniformly Distributed&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be the distances from the two points to the left end of the stick.
In this situation we assume that 
&lt;span class="math"&gt;\(X_1, X_2 \overset{iid}{\sim} U(0, 1).\)&lt;/span&gt;&lt;/p&gt;
&lt;h3 id="method-i-exclusive-method"&gt;Method I: Exclusive Method&lt;/h3&gt;
&lt;p&gt;Let 
&lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(l_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(l_3\)&lt;/span&gt; 
be the lengths of the 3 pieces from the left end of the stick.
To form a triangle, 
&lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(l_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(l_3\)&lt;/span&gt; have to satisfy the following conditions.&lt;/p&gt;
&lt;div class="math"&gt;$$l_1 + l_2 &amp;gt; l_3,$$&lt;/div&gt;
&lt;div class="math"&gt;$$l_2 + l_3 &amp;gt; l_1,$$&lt;/div&gt;
&lt;div class="math"&gt;$$l_3 + l_1 &amp;gt; l_2.$$&lt;/div&gt;
&lt;p&gt;Or equivalently,
&lt;/p&gt;
&lt;div class="math"&gt;$$0 &amp;lt; l_1, l_2, l_3 &amp;lt; \frac{1}{2}.$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= P(0 &amp;lt; l_1, l_2, l_3 &amp;lt; \frac{1}{2}) \nonumber \newline 
                   &amp;amp;= 1 - P(l_1 \ge \frac{1}{2} | l_2 \ge \frac{1}{2} | l_3 \ge \frac{1}{2}) \nonumber \newline 
                   &amp;amp;= 1 - \left(P(l_1 \ge \frac{1}{2}) + P(l_2 \ge \frac{1}{2}) + P(l_3 \ge \frac{1}{2})\right). \nonumber \newline 
\end{align}&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P(l_1 \ge \frac{1}{2}) &amp;amp;= P(min\\{X_1, X_2\\} \ge \frac{1}{2}) = P(X_1 \ge \frac{1}{2}, X_2 \ge \frac{1}{2}) \nonumber \newline 
                       &amp;amp;= P(X_1 \ge \frac{1}{2}) P(X_2 \ge \frac{1}{2}) \nonumber \newline 
                       &amp;amp;= \frac{1}{2} \times \frac{1}{2} = \frac{1}{4}. \nonumber
\end{align}&lt;/div&gt;
&lt;p&gt;&lt;span class="math"&gt;\(l_3\)&lt;/span&gt; is symmetric to &lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, 
so 
&lt;span class="math"&gt;\(P(l_3 \ge \frac{1}{2}) = \frac{1}{4}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;It can be shown (see Method II) that &lt;span class="math"&gt;\(P(l_2 \ge \frac{1}{2}) = \frac{1}{4}\)&lt;/span&gt;,
so 
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= 1 - \left(P(l_1 \ge \frac{1}{2}) + P(l_2 \ge \frac{1}{2}) + P(l_3 \ge \frac{1}{2})\right) \nonumber \newline 
                       &amp;amp;= 1 - \left(\frac{1}{4} + \frac{1}{4} + \frac{1}{4}\right) = \frac{1}{4} = 0.25. \nonumber
\end{align}&lt;/div&gt;
&lt;h3 id="method-ii-visualization"&gt;Method II: Visualization&lt;/h3&gt;
&lt;p&gt;&lt;div align="middle"&gt;
    &lt;figure&gt;
        &lt;img src="http://dclong.github.io/media/fun_problems/triangle/triangle.jpg" 
        alt="Probability to Form a Triangle" 
        height="400" width="400"/&gt;
        &lt;figcaption&gt;
            Figure 1: Probability to Form a Triangle.
        &lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be defined as above. 
For the convenience of visualization, 
Figure 1 uses &lt;span class="math"&gt;\(X\)&lt;/span&gt; to stand for &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; to stand for &lt;span class="math"&gt;\(X_2\)&lt;/span&gt;.
The pair &lt;span class="math"&gt;\((X, Y)\)&lt;/span&gt; is uniformly distributed 
in the unit square &lt;span class="math"&gt;\([0,1] \times [0,1]\)&lt;/span&gt;
as shown in Figure 1.
To form a triangle, 
&lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; need to satisfy the following conditions.
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
              |X - Y| &amp;amp;&amp;lt; \frac{1}{2}, \newline
    (X - \frac{1}{2}) &amp;amp;  (Y - \frac{1}{2}) &amp;lt; 0
\end{align}&lt;/div&gt;
&lt;p&gt;Condition (1) requires that the middle part of the 3 pieces 
cannot be greater than &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;.
It is equivalent to 
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
    Y &amp;amp;&amp;gt; x - \frac{1}{2}, \newline
    Y &amp;amp;&amp;lt; x + \frac{1}{2},
\end{align}&lt;/div&gt;
&lt;p&gt;
which corresponds to the hexagon in the middle of the unit square 
(consisting of &lt;span class="math"&gt;\(B_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(B_2\)&lt;/span&gt;, &lt;span class="math"&gt;\(T_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(T_2\)&lt;/span&gt;).
Condition (2) requires that &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; cannot be 
both smaller than &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt; 
or bother greater than &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;,
which excludes areas &lt;span class="math"&gt;\(B_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(B_2\)&lt;/span&gt;.
So when &lt;span class="math"&gt;\(X\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y\)&lt;/span&gt; falls into &lt;span class="math"&gt;\(T_1\)&lt;/span&gt; or &lt;span class="math"&gt;\(T_2\)&lt;/span&gt; (grean areas),
the 3 pieces of sticks can form a triangle. 
It is easy to see that the area/probability is &lt;span class="math"&gt;\(\frac{1}{4}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(l_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(l_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(l_3\)&lt;/span&gt; be defined as in Method I.
&lt;span class="math"&gt;\(l_1 &amp;gt; \frac{1}{2}\)&lt;/span&gt; corresponds to the area &lt;span class="math"&gt;\(B_2\)&lt;/span&gt; 
whose area/probability is &lt;span class="math"&gt;\(\frac{1}{4}\)&lt;/span&gt;;
&lt;span class="math"&gt;\(l_2 &amp;gt; \frac{1}{2}\)&lt;/span&gt; corresponds to the areas &lt;span class="math"&gt;\(A_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(A_2\)&lt;/span&gt;.
Their areas/probabilities sums to &lt;span class="math"&gt;\(\frac{1}{4}\)&lt;/span&gt;.
&lt;span class="math"&gt;\(l_3 &amp;gt; \frac{1}{2}\)&lt;/span&gt; corresponds to the area &lt;span class="math"&gt;\(B_1\)&lt;/span&gt;
whose area/probability is &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The R code used to generate Figure 1 is given below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;solid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="k"&gt;without&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xlab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ylab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; 
&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;
&lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;green&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;slope&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;vertical&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;horizontal&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="n"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grayed&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt; &lt;span class="n"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grayed&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt; &lt;span class="n"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;grayed&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;inner&lt;/span&gt; &lt;span class="n"&gt;green&lt;/span&gt; &lt;span class="n"&gt;triangles&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="n"&gt;triangle&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;A1&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;A1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt; &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="n"&gt;triangle&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;A2&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;A2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt; &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;B1&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;B1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt; &lt;span class="k"&gt;right&lt;/span&gt; &lt;span class="n"&gt;gray&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;B2&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;B2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;inner&lt;/span&gt; &lt;span class="n"&gt;green&lt;/span&gt; &lt;span class="n"&gt;triangles&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;T1&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;T2&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;green&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;y = x + 0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;green&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;y = x - 0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="method-iii-order-statistics"&gt;Method III: Order Statistics&lt;/h3&gt;
&lt;p&gt;&lt;div align="middle"&gt;
    &lt;figure&gt;
        &lt;img src="http://dclong.github.io/media/fun_problems/triangle/order_stat.jpg" 
        alt="Probability to Form a Triangle" 
        height="400" width="400"/&gt;
        &lt;figcaption&gt;
            Figure 2: Probability to Form a Triangle.
        &lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/div&gt;
Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be as defined above.
Let &lt;span class="math"&gt;\(X_{(1)} = min\{X_1, X_2\}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)} = max\{X_1, X_2\}\)&lt;/span&gt;,
then 
&lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; 
are order statistics.
From the theorem of order statistics we know that 
the join density of 
&lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; 
is constant 2 with support &lt;span class="math"&gt;\(0 &amp;lt; X_{(1)} &amp;lt; X_{(2)} &amp;lt; 1\)&lt;/span&gt;.
To form an triangle, 
&lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; have to satisfy the following condition.
&lt;/p&gt;
&lt;div class="math"&gt;$$
    0 &amp;lt; x_{(1)} &amp;lt; \frac{1}{2} &amp;lt; X_{(2)} &amp;lt; X_{(1)} + \frac{1}{2}.
$$&lt;/div&gt;
&lt;p&gt;
The probability for the 3 pieces of sticks to form an triangle is thus&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation}
    \int_{0}^{\frac{1}{2}} \int_{\frac{1}{2}}^{x_1+\frac{1}{2}} 2\, dx_2\,dx_1  
    = \int_{0}^{\frac{1}{2}} 2x_1 dx_1 = x_1^2|_{0}^{\frac{1}{2}} = \frac{1}{4}. 
\end{equation}&lt;/div&gt;
&lt;p&gt;The support of the joint density of &lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt; 
is the big triangle in Figure 2. 
For the convenience of visualization,
Figure 2 uses &lt;span class="math"&gt;\(X\)&lt;/span&gt; to stand for &lt;span class="math"&gt;\(X_{(1)}\)&lt;/span&gt; 
and &lt;span class="math"&gt;\(Y\)&lt;/span&gt;  to stand for &lt;span class="math"&gt;\(X_{(2)}\)&lt;/span&gt;.
The integral domain of (5) is the green area T in Figure 2.&lt;/p&gt;
&lt;p&gt;The R code to generate Figure 2 is given below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;par&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;solid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xlab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ylab&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;segments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;segments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;abline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;middle&lt;/span&gt; &lt;span class="n"&gt;triangle&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;y = x + 0.5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;y = x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="dependent-uniformly-distributed"&gt;Dependent Uniformly Distributed&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; be defined as above. 
In this situation we assume that 
&lt;/p&gt;
&lt;div class="math"&gt;$$X_1 \sim U(0, 1),$$&lt;/div&gt;
&lt;div class="math"&gt;$$X_2 | X_1  \sim U(X_1, 1).$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= \int_{0}^{\frac{1}{2}} \frac{1}{1-x_1} \int_{\frac{1}{2}}^{x_1+\frac{1}{2}} dx_2\, dx_1 \nonumber \newline  
        &amp;amp;= \int_{0}^{\frac{1}{2}} \frac{x_1}{1-x_1}dx_1 = log2 - \frac{1}{2} \approx 0.1931. \nonumber
\end{align}&lt;/div&gt;
&lt;p&gt;The Dirichlet distribution is a distribution 
that is frequently used in Bayesian non-parametric models.
It has a stick-breaking construction. 
Let &lt;span class="math"&gt;\(Y_1 = X_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y_2 = X_2 - X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_3 = 1 - X_1 - X_2\)&lt;/span&gt;.
The specification of the joint distribution of &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_2\)&lt;/span&gt; 
sounds a lot like a the construction of a Dirichlet distribution,
however, it is not!
Given &lt;span class="math"&gt;\(Y_1 = X_1 \sim U(0, 1) \overset{d}{=} B(1, 1)\)&lt;/span&gt;, 
if &lt;span class="math"&gt;\(Y_2 \sim (1-Y_1)B(\alpha, \beta)\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(\alpha + \beta = 1\)&lt;/span&gt;, 
then the joint distribution of &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_3\)&lt;/span&gt; is Dirichlet distribution
with concentration parameters 1, &lt;span class="math"&gt;\(\alpha\)&lt;/span&gt; and &lt;span class="math"&gt;\(\beta\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id="dirichlet-distributed"&gt;Dirichlet Distributed&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt;, &lt;span class="math"&gt;\(Y_2\)&lt;/span&gt; and &lt;span class="math"&gt;\(Y_3\)&lt;/span&gt; be defined as above. 
In this situation we assume that 
&lt;/p&gt;
&lt;div class="math"&gt;$$(Y_1, Y_2, Y_3) \sim Dir(1, \frac{1}{2}, \frac{1}{2}),$$&lt;/div&gt;
&lt;p&gt;
that is 
&lt;/p&gt;
&lt;div class="math"&gt;$$X_1 \sim U(0, 1),$$&lt;/div&gt;
&lt;div class="math"&gt;$$X_2 | X_1  \sim X_1 + (1-X_1) U(\frac{1}{2}, \frac{1}{2}).$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
P_{\bigtriangleup} &amp;amp;= \int_{0}^{\frac{1}{2}} \int_{\frac{1}{2}-x_1}^{\frac{1}{2}} \frac{1}{\pi} x_2^{1/2}(1-x_1-x_2)^{1/2} dx_2\, dx_1 \nonumber \newline
&amp;amp;= \frac{2}{\pi} - \frac{1}{2} \approx 0.1366. \nonumber
\end{align}&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="fun problems"></category><category term="stick breaking"></category><category term="probability"></category><category term="statistics"></category><category term="triangle"></category><category term="Dirichlet distribution"></category><category term="graph"></category><category term="plot"></category><category term="visualization"></category><category term="R"></category></entry><entry><title>Cartesian Product in SAS</title><link href="http://www.legendu.net/en/blog/cartesian%20product%20in%20sas/" rel="alternate"></link><published>2014-10-23T15:52:51-07:00</published><updated>2014-10-23T15:52:51-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-10-23:/en/blog/cartesian product in sas/</id><summary type="html">&lt;p&gt;Suppose we have 2 variables &lt;code&gt;x = ("a", "b", "c")&lt;/code&gt; and &lt;code&gt;y = (1, 2, 3)&lt;/code&gt;,
and we want to create a dataset containing the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in SAS.
This can be achieved by manually input the Cartesian product of x and y in a data step.
However …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Suppose we have 2 variables &lt;code&gt;x = ("a", "b", "c")&lt;/code&gt; and &lt;code&gt;y = (1, 2, 3)&lt;/code&gt;,
and we want to create a dataset containing the Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; in SAS.
This can be achieved by manually input the Cartesian product of x and y in a data step.
However,
this is infeasible when &lt;code&gt;x&lt;/code&gt; and/or &lt;code&gt;y&lt;/code&gt; is very large or &lt;code&gt;x&lt;/code&gt; and/or &lt;code&gt;y&lt;/code&gt; can only be determined at run time. 
Here I provide 2 two general ways to generate Cartesian product of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="use-outer-join-of-sql"&gt;Use Outer Join of SQL&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;input&lt;/span&gt; &lt;span class="n"&gt;x$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;datalines&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt;
&lt;span class="k"&gt;c&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;input&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;datalines&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="k"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;cart&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;
    &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
    &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="use-loop-in-data-step"&gt;Use Loop in Data Step&lt;/h2&gt;
&lt;p&gt;If one of the 2 variables (whose Cartesian product is to be calculated) 
has an explicit expression (e.g., &lt;span class="math"&gt;\(y_i = i\)&lt;/span&gt;), 
then we can also use a loop in a data step to calculate the Cartesian product.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;$&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;datalines&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;a&lt;/span&gt;
&lt;span class="nv"&gt;b&lt;/span&gt;
&lt;span class="nv"&gt;c&lt;/span&gt;
&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="nv"&gt;cart&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;output&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Note: the loop trick a frequently used one in SAS to convert a "fat" data to a "thin" data.)&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="programming"></category><category term="SAS"></category><category term="Cartesian product"></category></entry><entry><title>Copy Arrays in Java</title><link href="http://www.legendu.net/en/blog/copy-array-java/" rel="alternate"></link><published>2014-10-19T13:48:18-07:00</published><updated>2014-10-19T13:48:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-10-19:/en/blog/copy-array-java/</id><summary type="html">&lt;p&gt;There are several different ways to copy arrays of object (primitive types) in Java. 
However, 
the fastest way seems to be &lt;code&gt;System.arraycopy&lt;/code&gt;. 
This methed is implemented using native code and only performs a shallow copy. 
Acutally most methods for copying arrays in Java perform shallow copy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;There are several different ways to copy arrays of object (primitive types) in Java. 
However, 
the fastest way seems to be &lt;code&gt;System.arraycopy&lt;/code&gt;. 
This methed is implemented using native code and only performs a shallow copy. 
Acutally most methods for copying arrays in Java perform shallow copy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;copies&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt; 
&lt;span class="k"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arraycopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="array"></category><category term="copy"></category><category term="Java"></category><category term="programming"></category></entry><entry><title>Type Cast in Java</title><link href="http://www.legendu.net/en/blog/type-cast-in-java/" rel="alternate"></link><published>2014-10-02T10:50:55-07:00</published><updated>2014-10-02T10:50:55-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-10-02:/en/blog/type-cast-in-java/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;You cannot cast between integer and boolean values. 
However it is trivia to convert data between integer and boolean. 
For example,
&lt;code&gt;int i = b ? 1 : 0;&lt;/code&gt; convert a boolean value &lt;code&gt;b&lt;/code&gt; into an integer value &lt;code&gt;i&lt;/code&gt;, 
and &lt;code&gt;boolean b = i != 0&lt;/code&gt; convert an integer value &lt;code&gt;i&lt;/code&gt; into a boolean value …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;You cannot cast between integer and boolean values. 
However it is trivia to convert data between integer and boolean. 
For example,
&lt;code&gt;int i = b ? 1 : 0;&lt;/code&gt; convert a boolean value &lt;code&gt;b&lt;/code&gt; into an integer value &lt;code&gt;i&lt;/code&gt;, 
and &lt;code&gt;boolean b = i != 0&lt;/code&gt; convert an integer value &lt;code&gt;i&lt;/code&gt; into a boolean value &lt;code&gt;b&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;</content><category term="type cast"></category><category term="programming"></category><category term="Java"></category></entry><entry><title>String in Different Programming Languages</title><link href="http://www.legendu.net/en/blog/summary-string-popular-programming-language/" rel="alternate"></link><published>2014-09-14T16:34:30-07:00</published><updated>2014-09-14T16:34:30-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-09-14:/en/blog/summary-string-popular-programming-language/</id><summary type="html">&lt;p&gt;A string is essentially a sequence of characters. 
This is how string is implemented in many programming languages (string in Java is different).
For this reason, you can operate string like an array in some programming languages.
This post is a shallow summary on strings in different programming languages.
For …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A string is essentially a sequence of characters. 
This is how string is implemented in many programming languages (string in Java is different).
For this reason, you can operate string like an array in some programming languages.
This post is a shallow summary on strings in different programming languages.
For a deep discussion, please check other posts. &lt;/p&gt;
&lt;h2 id="representate"&gt;Representate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: double quotes (single quotes for char type)&lt;/li&gt;
&lt;li&gt;Java: double quotes (single quotes for char type)&lt;/li&gt;
&lt;li&gt;Bash: single or double quotes (double quotes allows expansion of varialbes while single quotes not) &lt;/li&gt;
&lt;li&gt;Python: single or double quotes (exchangeable)&lt;/li&gt;
&lt;li&gt;Ruby: single or double quotes (single preserve escapes while double interpret them)&lt;/li&gt;
&lt;li&gt;R: single or double quotes (exchangeable)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="substring"&gt;Substring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: use iterators and constructor of the std::string class&lt;/li&gt;
&lt;li&gt;Java: substring() as a method&lt;/li&gt;
&lt;li&gt;Bash: &lt;code&gt;${str:0:3}&lt;/code&gt; where &lt;code&gt;str&lt;/code&gt; is a string variable&lt;/li&gt;
&lt;li&gt;Python: used like an array &lt;code&gt;str[2:]&lt;/code&gt;, &lt;code&gt;str[:2]&lt;/code&gt;, &lt;code&gt;x[:-2]&lt;/code&gt;, ...&lt;/li&gt;
&lt;li&gt;Ruby: &lt;code&gt;slice()&lt;/code&gt; as a method or used like an array str[3..-1], str[2,3], ...&lt;/li&gt;
&lt;li&gt;R: &lt;code&gt;substr()&lt;/code&gt; as a function&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="concatenate"&gt;Concatenate&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: +&lt;/li&gt;
&lt;li&gt;Java: +&lt;/li&gt;
&lt;li&gt;Bash: &lt;code&gt;"${str1}other_str"&lt;/code&gt; where &lt;code&gt;str1&lt;/code&gt; is a string variable. If no white space, double quotes can be omitted&lt;/li&gt;
&lt;li&gt;Python: +&lt;/li&gt;
&lt;li&gt;Ruby: + &lt;/li&gt;
&lt;li&gt;R: paste() as a function&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="length"&gt;Length&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;C++: size() as a method&lt;/li&gt;
&lt;li&gt;Java: length() as a method&lt;/li&gt;
&lt;li&gt;Bash: &lt;code&gt;${#v}&lt;/code&gt; where &lt;code&gt;v&lt;/code&gt; is a variable in bash &lt;/li&gt;
&lt;li&gt;Python: len() as a function&lt;/li&gt;
&lt;li&gt;Ruby: length() as a method&lt;/li&gt;
&lt;/ul&gt;</content><category term="Python"></category><category term="programming"></category><category term="Java"></category><category term="string"></category><category term="bash"></category><category term="Ruby"></category><category term="R"></category></entry><entry><title>What are the Two Integers?</title><link href="http://www.legendu.net/en/blog/find-the-two-indivisible-numbers/" rel="alternate"></link><published>2014-09-08T11:41:48-07:00</published><updated>2014-09-08T11:41:48-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-09-08:/en/blog/find-the-two-indivisible-numbers/</id><summary type="html">&lt;p&gt;I met a friend majored in math on a bus home today. 
He held a piece of paper with a question 
(probably an interview question since he is trying to find a job recently).
He asked the question to me and I found it to be an interesting one. &lt;/p&gt;
&lt;p&gt;A …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I met a friend majored in math on a bus home today. 
He held a piece of paper with a question 
(probably an interview question since he is trying to find a job recently).
He asked the question to me and I found it to be an interesting one. &lt;/p&gt;
&lt;p&gt;A very large positive integer is divisible by all 
but two of the integers &lt;/p&gt;
&lt;div class="math"&gt;$$1, 2, 3, \dots, 10000,$$&lt;/div&gt;
&lt;p&gt;and the two excepted numbers are consecutive integers.
What are the two integers?&lt;/p&gt;
&lt;p&gt;I did not get the answer before my friend get off the bus. 
However, as soon as arriving home I get the key to the questions. 
The outline of my thoughts leading to the answer is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Assume the question is valid, 
i.e., there is a unique answer to this problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both of the two numbers (indivisible to the large integer) 
have prime factorization of the form: &lt;span class="math"&gt;\(a^b\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(b\)&lt;/span&gt; is the largest possible value. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since one of two consecutive integers is even, 
one of the two numbers (indivisible to the large integer) has
the form &lt;span class="math"&gt;\(2^b\)&lt;/span&gt; and thus is &lt;span class="math"&gt;\(2^{13}=8192\)&lt;/span&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The other number must be either &lt;code&gt;8193&lt;/code&gt; or &lt;code&gt;8191&lt;/code&gt;. 
Since &lt;code&gt;8193&lt;/code&gt; is divisible to &lt;code&gt;3&lt;/code&gt; but not &lt;code&gt;9&lt;/code&gt; 
(&lt;code&gt;8 + 1 + 9 + 3 = 21&lt;/code&gt; is a multiple of &lt;code&gt;3&lt;/code&gt; but not &lt;code&gt;9&lt;/code&gt;), 
it does not have the form mentioned in step 2.
So the other number is &lt;code&gt;8191&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="puzzle"></category><category term="fun problems"></category><category term="number"></category></entry><entry><title>General Tips for MATLAB</title><link href="http://www.legendu.net/en/blog/general-tips-for-MATLAB/" rel="alternate"></link><published>2014-09-08T10:35:47-07:00</published><updated>2014-09-08T10:35:47-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-09-08:/en/blog/general-tips-for-MATLAB/</id><summary type="html">&lt;h2 id="skills"&gt;Skills&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB support profiling running time of code, 
so that you what to work on to optimize your code.s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is expensive to allocate a new block of memory (not only in MATLAB
but also in other programming laguages), 
so you should avoid allocating new blocks of memory all …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="skills"&gt;Skills&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB support profiling running time of code, 
so that you what to work on to optimize your code.s&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is expensive to allocate a new block of memory (not only in MATLAB
but also in other programming laguages), 
so you should avoid allocating new blocks of memory all the time. 
It is better to allocate a big block of memory once and forever 
if you know the actually size of memory that you have to use 
(e.g. usually you know the size of arrays and matrices that you are going to use) 
than to allocate small blocks of memory many times. 
If it is impossible to avoid allocating new blocks of memory, 
it is better to allocate a bigger memory than needed each time. 
In this way, you waste space but might save much time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use block &lt;code&gt;try ... catch ... end&lt;/code&gt; to handle code that might throw exception in MATLAB. 
You should be aware of the importance of handling exception. 
In many cases you just cannot afford to stop running code, 
for example the program written for a rocket should not stop running when exception happens. 
Even for statistician, 
it is very important to handle exceptions. 
For example, if you run a code which might takes 2 month, 
but your code throws out an exception after running a month. 
Do you want the program to the stop running after half the the long task has been done? 
So a better ways is always handle any exceptions that throws out. 
Some exceptions might result from hardware (e.g. no enough disk space). 
In this case, 
you can let your code notify you (e.g. via email or text message) 
and then wait for you fix the problem and then continue running.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sometimes you might want to write a user-defined function 
with variable (even unknown) number of arguments. 
There are some functions helpful for this in MATLAB. 
&lt;code&gt;nargin&lt;/code&gt; and &lt;code&gt;nargout&lt;/code&gt; returns the number of input variables and output variables; 
&lt;code&gt;nargcheck&lt;/code&gt; and &lt;code&gt;nargoutchk&lt;/code&gt; validate number of input and output arguments respectively; 
&lt;code&gt;varargin&lt;/code&gt; and &lt;code&gt;varargout&lt;/code&gt; stand for input and output argument lists respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;break, return goto and error&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, MATLAB use "short" format to display out, 
which uses only four decimal digits for numbers. 
To change the display format, you can use &lt;code&gt;format&lt;/code&gt;. 
For example, you can use &lt;code&gt;format('longG')&lt;/code&gt; to make MATLAB give more readable outputs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can execute system command by invoke &lt;code&gt;system&lt;/code&gt;, 
which is similar to R. 
For example, 
to shutdown computer 1 hour after computing in MATLAB is done in Windows operating system, 
you can add &lt;code&gt;shutdown('shutdown/s /t 3600')&lt;/code&gt; at the end of your code 
or just type it into the console while the code is running. 
Similarly, 
you can invoke &lt;code&gt;dos&lt;/code&gt; to run dos command and &lt;code&gt;perl&lt;/code&gt; to execute perl script.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;computer&lt;/code&gt; to get information about the computer on which MATLAB is running.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="programming"&gt;Programming&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MATLAB supports boolean variables. 
(I somehow have an impression that MATLAB does not support variables 
and one must use 1 or 0 instead. 
I am not sure whether boolean variables are introduced in newer versions of MATLAB or not.)
A boolean variable has 3 possible values: &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;unknown&lt;/code&gt; 
(more programming languages are supporting ternary boolean variables).
You have to be very careful about the &lt;code&gt;unknown&lt;/code&gt; value.
It can be error-prone sometimes.
Logical comparisons can be assigned to (boolean) variables directly. 
Numerical values are casted to boolean values when needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The syntax of MATLAB is kind of a mix of &lt;code&gt;Visual Basic&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;statements&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;defines a function named &lt;code&gt;f&lt;/code&gt; in MATLAB. 
To get all 3 return values of &lt;code&gt;f&lt;/code&gt;, 
you must call it in the form of &lt;code&gt;[rv1, rv2, rv3] = f(arg1, arg2, arg3, arg4);&lt;/code&gt;;
to get the first 2 return values of &lt;code&gt;f&lt;/code&gt;, 
you call it in the form of &lt;code&gt;[rv1, rv2] = f(arg1, arg2, arg3, arg4);&lt;/code&gt;, so on and so forth.
Notice that you cannot use a vector with length &lt;code&gt;k&lt;/code&gt; to extract the first &lt;code&gt;k&lt;/code&gt; return values of &lt;code&gt;f&lt;/code&gt;. 
The reason is that the types of return values are unkown and can be of any types. 
The tricky part is that when you extract the return values of &lt;code&gt;f&lt;/code&gt; using a vector of length &lt;code&gt;k&lt;/code&gt;,
it is possible that no error or warning message is displayed. 
The first return value of &lt;code&gt;f&lt;/code&gt; is assigned to the vector or all elements of the vector
(if it is an slicing of an array).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The first function defined in a m-file is the main function 
and will be called when the m-file is called.
All subsequent functions in the m-file can only be called by the main function.
It is recommended that you named a m-file after the main function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are two types of objects in MATLAB: value object and handle object. 
A value object behaves like being passed by value 
while a handle object is passed by reference. 
By default objects (matrix, array and so on) in MATLAB are value objects. 
However, even if a value object behaves like being passed by value, 
if it is not modify inside a function when passed to the function, 
no copy will be made into the workspace of the function. 
This system is so called copy-on-write, 
which might save much memory if the matrices or arrays passed are huge. 
The famous statistical software R will always make a copy of a argument 
if it is passed by value.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MATLAB does not check the passing of parameters to functions. 
Whether the parameters passed to a function are illegal can only be decide at run time, 
which is the way that most interpret language use.
If your code takes lots of time to be run (e.g. a big simulation),
you'd better first downgrade the complexity of the problem and run a test code, 
otherwise you might find that there is in your code after you have run your code for a long time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, 
variables appear in a user-defined function 
and variables in the workspace are local variable, 
which means that you cannot use variables from the workspace in a user-defined function
nor can you use variables from a user-defined function in the workspace. 
To make a variable global, 
you can use command &lt;code&gt;global&lt;/code&gt;, e.g. to make variable &lt;code&gt;x&lt;/code&gt; global you can use &lt;code&gt;global x;&lt;/code&gt;. 
If a variable is global, 
you can use it everywhere if you have made the necessary declaration 
(e.g. you have to declare that a variable is global in a user-defined function, 
if you want to use it as global.), 
and its value will be the same everywhere 
(This is because no matter where you use it, 
it points to the same place in the memory).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To run a bunch of code, you can put the code into a M file or you can define a function. 
Sometimes, 
there are a few of small pieces of code that you use a lot 
but they are too short and will be used only in a single work 
that you hesitate to write them into M files or to write them as functions. 
What you can do is to define them as inline functions or function handles. 
Inline functions work only for very simple functions. 
Every symbol appear in a inline function string is treated as a variable, 
so you cannot pass data into a inline function except for constants. 
Function handle is more flexible way to deal with this situation. 
You can use any object in the workspace in a function handle. 
What's more, a function handle cannot be changed after it is defined. 
For example, if a function handle uses an object in the workspace, 
it remains the same even if you change the object or remove it from the workspace, 
which is usually what we expect. 
So generally speaking function handles are more flexible 
and useful than inline functions, 
but surely it is slower than inline functions. 
Function handles are usually used to wrap existing functions for convenient use. 
For example, 
in statistics data is usually passed to a likelihood function as a parameter 
because global variable is generally not a good idea. 
When you optimize a likelihood function, 
you do not want to optimize over the data parameter. 
To handle this situation, please refer to section &lt;code&gt;optimization&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eval&lt;/code&gt; evaluate string containing MATLAB expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The passing of a function as an argument of another function 
is achieved through function handle in MATLAB. 
To get the function handle of an existing function (not a function handle), 
you can simply add a prefix &lt;code&gt;@&lt;/code&gt; to it.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="tips"></category><category term="skills"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Probability to Get a Complete Deck of Cards?</title><link href="http://www.legendu.net/en/blog/chance-complete-decks-poker/" rel="alternate"></link><published>2014-08-17T17:54:37-07:00</published><updated>2014-08-17T17:54:37-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-08-17:/en/blog/chance-complete-decks-poker/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/poker/poker.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a poker games requires 4 decks of poker.
After the game, the cards are put back into the 4 decks randomly.
Now there is another game which requires only 1 deck of poker,
so we want to open some decks of the poker and find a complete set of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/poker/poker.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a poker games requires 4 decks of poker.
After the game, the cards are put back into the 4 decks randomly.
Now there is another game which requires only 1 deck of poker,
so we want to open some decks of the poker and find a complete set of cards.
Since people are lazy, 
we do not want to open all the 4 decks of poker.
If we open 2 decks of cards, 
what is the probability that we can get a complete set of cards?&lt;/p&gt;
&lt;p&gt;It is hard to solve this specific problem directly.
The viewpoint of treating a deck of cards as a whole is especially a barrier for solving this problem.
Here is the fancy idea.
We can generalize this problem as follows.
Suppose there are &lt;span class="math"&gt;\(N\)&lt;/span&gt; distinct cards in a deck of poker.
Now &lt;span class="math"&gt;\(M\)&lt;/span&gt; decks of pokers are mixed together and then put back.
If we draw &lt;span class="math"&gt;\(n\)&lt;/span&gt; cards randomly,
what is the probability that we get &lt;span class="math"&gt;\(m\)&lt;/span&gt; types (cards of the same color and suit are consider to be the same type) of cards?
Now to answer the question that how much chance we can get a complete set of cards if we open &lt;span class="math"&gt;\(k\)&lt;/span&gt; decks of poker,
we just need to calculate the probability of getting &lt;span class="math"&gt;\(N\)&lt;/span&gt; types of cards,
if we draw &lt;span class="math"&gt;\(kN\)&lt;/span&gt; cards randomly from these mixed cards.&lt;/p&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(A_{n,m}\)&lt;/span&gt; to stand for the event of getting &lt;span class="math"&gt;\(m\)&lt;/span&gt; types of cards when &lt;span class="math"&gt;\(n\)&lt;/span&gt; cards are randomly drawn,
and &lt;span class="math"&gt;\(P_{n,m}\equiv P(A_{n,m})\)&lt;/span&gt;.
Then conditioning on the number of types of cards we get in the first &lt;span class="math"&gt;\(n-1\)&lt;/span&gt; draws,
we have the following recursion formula
    &lt;/p&gt;
&lt;div class="math"&gt;$$
    P_{n,m}=P_{n-1,m}\frac{mM-n+1}{NM-n+1}+P_{n-1,m-1}\frac{(N-m+1)M}{NM-n+1}.
    $$&lt;/div&gt;
&lt;p&gt;
We can find a formula for general terms using method of generating functions.
Since there are two subscript changing at the same time,
it is much harder to solve this recursion formula.
However, 
as I mentioned before, 
we have actually solved the problem from
practical view because we have recursion formula and we know the initial values.
We can write a program to help us solve this problem.
The following is an implementation of the recursion formula in Mathematica.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;::&lt;span class="nv"&gt;illegal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;The number of selected exeeds the total number.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
@&lt;span class="nv"&gt;param&lt;/span&gt; &lt;span class="nv"&gt;nselected&lt;/span&gt;: &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;number&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;card&lt;/span&gt; &lt;span class="nv"&gt;selected&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
@&lt;span class="nv"&gt;param&lt;/span&gt; &lt;span class="nv"&gt;ndistinct&lt;/span&gt;: &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;number&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;distinct&lt;/span&gt; &lt;span class="nv"&gt;card&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;selected&lt;/span&gt; &lt;span class="nv"&gt;card&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
@&lt;span class="nv"&gt;param&lt;/span&gt; &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;: &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;total&lt;/span&gt; &lt;span class="nv"&gt;number&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;distinct&lt;/span&gt; &lt;span class="nv"&gt;card&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
@&lt;span class="nv"&gt;param&lt;/span&gt; &lt;span class="nv"&gt;Ncopies&lt;/span&gt;: &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;copies&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;poker&lt;/span&gt;.
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;[&lt;span class="nv"&gt;nselected_&lt;/span&gt;, &lt;span class="nv"&gt;ndistinct_&lt;/span&gt;, &lt;span class="nv"&gt;Ndistinct_&lt;/span&gt;, &lt;span class="nv"&gt;Ncopies_&lt;/span&gt;] :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Module&lt;/span&gt;[
    {&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt;, &lt;span class="nv"&gt;TotalChoices&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nb"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {}, &lt;span class="nv"&gt;n&lt;/span&gt;, &lt;span class="nv"&gt;nleft&lt;/span&gt;},
    &lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nselected, &lt;/span&gt;
        &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;::&lt;span class="nv"&gt;illegal&lt;/span&gt;]&lt;span class="c1"&gt;; &lt;/span&gt;
        &lt;span class="k"&gt;Return&lt;/span&gt;[&lt;span class="nv"&gt;False&lt;/span&gt;]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Ndistinct&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; ndistinct, Return[0]];&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;nselected&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; ndistinct, Return[0]];&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;ndistinct&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;Ncopies&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nselected, Return[0]];&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;ndistinct&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;,
        &lt;span class="k"&gt;Return&lt;/span&gt;[&lt;span class="nv"&gt;Ndistinct&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;Binomial&lt;/span&gt;[&lt;span class="nv"&gt;Ncopies&lt;/span&gt;, &lt;span class="nv"&gt;nselected&lt;/span&gt;] &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;Binomial&lt;/span&gt;[&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt;, &lt;span class="nv"&gt;nselected&lt;/span&gt;]]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;TotalChoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Binomial&lt;/span&gt;[&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt;, &lt;span class="nv"&gt;nselected&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;nselected&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;ndistinct&lt;/span&gt;,
        &lt;span class="k"&gt;Return&lt;/span&gt;[&lt;span class="nv"&gt;Binomial&lt;/span&gt;[&lt;span class="nv"&gt;Ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;ndistinct&lt;/span&gt;]&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="nv"&gt;ndistinct&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;TotalChoices&lt;/span&gt;]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= ndistinct, i++,&lt;/span&gt;
        &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nb"&gt;result&lt;/span&gt;, 
        &lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;Ncopies&lt;/span&gt;]]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= nselected - ndistinct + 1, i++,&lt;/span&gt;
        &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="mi"&gt;1&lt;/span&gt;]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;Ncopies&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= ndistinct, j++,&lt;/span&gt;
            &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;nleft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]]&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nleft&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;]]&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Ndistinct&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nleft&lt;/span&gt;
        ]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;Return&lt;/span&gt;[&lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;ndistinct&lt;/span&gt;]]]
]

&lt;span class="nv"&gt;In&lt;/span&gt;[&lt;span class="mi"&gt;5&lt;/span&gt;]:&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;[&lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;[&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="mi"&gt;54&lt;/span&gt;, &lt;span class="mi"&gt;54&lt;/span&gt;, &lt;span class="mi"&gt;4&lt;/span&gt;]]
&lt;span class="nv"&gt;Out&lt;/span&gt;[&lt;span class="mi"&gt;5&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;.&lt;span class="mi"&gt;19323&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;^-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="nv"&gt;In&lt;/span&gt;[&lt;span class="mi"&gt;6&lt;/span&gt;]:&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;[&lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;[&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;, &lt;span class="mi"&gt;54&lt;/span&gt;, &lt;span class="mi"&gt;54&lt;/span&gt;, &lt;span class="mi"&gt;4&lt;/span&gt;]]
&lt;span class="nv"&gt;Out&lt;/span&gt;[&lt;span class="mi"&gt;6&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;0190881&lt;/span&gt;
&lt;span class="nv"&gt;In&lt;/span&gt;[&lt;span class="mi"&gt;7&lt;/span&gt;]:&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;N&lt;/span&gt;[&lt;span class="nv"&gt;GeneralizedHyperGeometryProbability&lt;/span&gt;[&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;, &lt;span class="mi"&gt;54&lt;/span&gt;, &lt;span class="mi"&gt;54&lt;/span&gt;, &lt;span class="mi"&gt;4&lt;/span&gt;]]
&lt;span class="nv"&gt;Out&lt;/span&gt;[&lt;span class="mi"&gt;7&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;820296&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the following is another implementation of the recursion formula in R.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param nselected the number of card selected;&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param ndistinct the number of distinct card in the selected card;&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param Ndistinct the total number of distinct card;&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param Ncopies the copies of poker.&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;pghyper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;nselected&lt;/span&gt;, &lt;span class="nv"&gt;ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
    &lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nselected)&lt;/span&gt;
        &lt;span class="nv"&gt;stop&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;the number of selected exceeds the total number.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Ndistinct&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; ndistinct)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;nselected&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; ndistinct)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ndistinct&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;Ncopies&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; nselected)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;TotalChoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;choose&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt;, &lt;span class="nv"&gt;nselected&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ndistinct&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Ndistinct&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;choose&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;, &lt;span class="nv"&gt;nselected&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;TotalChoices&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;nselected&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;ndistinct&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
        &lt;span class="nv"&gt;dchoices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;choose&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;ndistinct&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;multiple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Ncopies&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="nv"&gt;ndistinct&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dchoices&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; multiple)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;multiple&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;TotalChoices&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;dchoices&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dchoices&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;TotalChoices&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;multiple&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
    }
    &lt;span class="nb"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;NULL&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;:&lt;span class="nv"&gt;ndistinct&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;, &lt;span class="nv"&gt;pghyper&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;Ndistinct&lt;/span&gt;, &lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;nselected&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ndistinct&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;{
        &lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;pghyper&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;,&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="nv"&gt;Ndistinct&lt;/span&gt;,&lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="nv"&gt;ndistinct&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
            &lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;
            &lt;span class="nv"&gt;nleft&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;TotalCardsNumber&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt;]&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nleft&lt;/span&gt;
            &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;]&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;Ndistinct&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;Ncopies&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;nleft&lt;/span&gt;
        }
    }
    &lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="nv"&gt;ndistinct&lt;/span&gt;]
}

&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; pghyper(54*1,54,54,4)&lt;/span&gt;
[&lt;span class="mi"&gt;1&lt;/span&gt;] &lt;span class="mi"&gt;9&lt;/span&gt;.&lt;span class="mi"&gt;19323&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; pghyper(54*2,54,54,4)&lt;/span&gt;
[&lt;span class="mi"&gt;1&lt;/span&gt;] &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;01908814&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; pghyper(54*3,54,54,4)&lt;/span&gt;
[&lt;span class="mi"&gt;1&lt;/span&gt;] &lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;8202961&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From the above result,
we can see that in the original problem the probability 
is only about &lt;span class="math"&gt;\(2\%\)&lt;/span&gt; for us to get a complete set of cards
if we only open 2 decks of pokers 
while the probability is about &lt;span class="math"&gt;\(82\%\)&lt;/span&gt; if we open one more deck of poker (i.e. open 3 decks of pokers).
So for a really lazy person, it seems that to open 3 decks of poker is a good choice.
Let &lt;span class="math"&gt;\(f(k)=P_{54k,54}, k=1,\ldots, 4\)&lt;/span&gt;.
The above result also suggests us that function &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; is a very odd function.
It is small when &lt;span class="math"&gt;\(k\)&lt;/span&gt; is smaller and then suddenly increases to a (relative) very big value,
and then it increases mildly to 1.
Now suppose there are 20 decks of poker (each has 54 cards) involved,
let's see how function &lt;span class="math"&gt;\(f(k)=P_{54k,54}\)&lt;/span&gt;, &lt;span class="math"&gt;\(k=1,\ldots, 20\)&lt;/span&gt;, behaves.
The plot of the function &lt;span class="math"&gt;\(f(k)=P_{54k,54}\)&lt;/span&gt;, &lt;span class="math"&gt;\(k=1,\ldots, 20\)&lt;/span&gt;, 
is shown is in the following figure. 
We can see that for very small &lt;span class="math"&gt;\(k\)&lt;/span&gt;, &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; is very small;
then &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; increase dramatically to a (relative) very big value and then it increase mildly to 1.
For other number of decks of poker, &lt;span class="math"&gt;\(f(k)\)&lt;/span&gt; has similar properties.
So in this kind of problems, definitely we will not have a big probability to success if open 1 or 2
decks of poker. However, we do not have to open too many decks of poker, e.g., 4 or 5 decks would
yield a remarkable success probability even if many (e.g., 100) decks of pokers are involved.
&lt;img alt="Probability" src="http://www.legendu.net/media/poker/probability.png"&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="statistics"></category><category term="recursion"></category><category term="probability"></category><category term="Mathematica"></category><category term="fun problems"></category><category term="poker"></category></entry><entry><title>Rcpp Rocks</title><link href="http://www.legendu.net/en/blog/rcpp-rocks/" rel="alternate"></link><published>2014-08-16T19:26:30-07:00</published><updated>2014-08-16T19:26:30-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-08-16:/en/blog/rcpp-rocks/</id><summary type="html">&lt;p&gt;Please see &lt;a href="https://bitbucket.org/dclong/r-learn/src/"&gt;here&lt;/a&gt; 
for some simple examples for learning Rcpp and related packages.&lt;/p&gt;
&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Though you can overload functions in a Rcpp module,
it causes problems when you export these overloaded functions.
This is because currently Rcpp cannot distinguish them when exporting them.
It is suggested that you do not …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Please see &lt;a href="https://bitbucket.org/dclong/r-learn/src/"&gt;here&lt;/a&gt; 
for some simple examples for learning Rcpp and related packages.&lt;/p&gt;
&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Though you can overload functions in a Rcpp module,
it causes problems when you export these overloaded functions.
This is because currently Rcpp cannot distinguish them when exporting them.
It is suggested that you do not overload functions that are to be exported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Module&lt;/code&gt; function in the "Rcpp" package 
might fail to load modules even if the C++ code is compiled successfully.
If this happens, 
you can try the option &lt;code&gt;mustStart = TRUE&lt;/code&gt;.
It is suggested that you always use this option when you use the &lt;code&gt;Module&lt;/code&gt; function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not import the namespace &lt;code&gt;std&lt;/code&gt; when using Rcpp. 
This causes name conflicts. 
It is also suggested that 
you always prefix functions with their namespace (even for Rcpp functions),
otherwise it is very error-prone.
For example, 
if you want to use the &lt;code&gt;std::abs&lt;/code&gt; function 
but you forget the namespace (&lt;code&gt;std::&lt;/code&gt;) prefix, 
the &lt;code&gt;Rcpp::abs&lt;/code&gt; will be used instead. 
Your code will probably compile without any error message,
but the results won't be right. 
This kind of bug is very trick.
You'd better avoid it at the first place.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following operations might cause segmentation fault and 
thus forces R to quit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Calling&lt;/span&gt; &lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;functions&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Unhandled&lt;/span&gt; &lt;span class="n"&gt;exceptions&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.,&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;bound&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;Rcpp&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;previous&lt;/span&gt; &lt;span class="n"&gt;save&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;workspace&lt;/span&gt; &lt;span class="k"&gt;without&lt;/span&gt; &lt;span class="n"&gt;compiling&lt;/span&gt; &lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="n"&gt;again&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These operations are very dangerous, 
because you lose unsaved data in the R workspace when R is forced to quit. 
So you have to be very careful when you use C++ functions. 
It is recommended that you handle exceptions in C++ code. 
If you do not know how to handle exceptions in C++ code,
a safer way but a little tedious way is to always call C++ functions using the &lt;code&gt;try&lt;/code&gt; function in R.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;In C++, 
methods for accessing elements of containers usually have both bound-checking 
and no-bound-checking versions. 
You should be aware that the no-bound-checking versions are more dangerous,
because your code might continue to run without any warning message after things to wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Passing data between R and C++ is made easy. 
You can pass vectors, matrices and lists 
between R and C++ directly with the help of Rcpp. 
Rcpp takes care of the data converting automatically.
When you use the "RcppArmadillo" package, 
the converting between R objects and "Armadillo" matrices is also done automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A list in R (and thus in Rcpp) is essentially a generic vector. 
You must know the structure of the list in order to work on it in Rcpp.
Each element of a &lt;code&gt;List&lt;/code&gt; in Rcpp is of type &lt;code&gt;SEXP&lt;/code&gt;. 
You have to first convert it to an Rcpp object 
and then work on it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use reference of List in Rcpp, 
but a const reference of List is not allowed. 
Also though you can make a const reference of elements of a List,
I think it is misleading. 
Because a cast is usually need, 
I think a copy is often made. 
It is always good practice to transform a List object 
to a more type-strict data structure in C++ before you operate on it. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A vector in Rcpp can have names and you access an element by its name. 
However, 
different from R, 
error happens if you access element using a non-existing name. 
To avoid this, 
you can first use the &lt;code&gt;containsElementNamed&lt;/code&gt; method 
of the Vector class to query whether an element 
with a specified name exists. 
Note that the &lt;code&gt;containsElementNamed&lt;/code&gt; method accepts &lt;code&gt;const char *&lt;/code&gt; as argument
not &lt;code&gt;std::string&lt;/code&gt;. 
However, 
you can use the &lt;code&gt;c_str&lt;/code&gt; method to convert std::string to &lt;code&gt;const char *&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no data structure in R corresponding to &lt;code&gt;std::set&lt;/code&gt; in C++. 
So when you &lt;code&gt;wrap&lt;/code&gt; a set to an R object, 
it becomes an array/vector in R.
If you want to convert, 
say, 
a vector in R to a &lt;code&gt;std::set&lt;/code&gt; in C++,
you have to first convert the vector in R 
to &lt;code&gt;std::vector&lt;/code&gt; or &lt;code&gt;Rcpp::NumericVector&lt;/code&gt; 
and then insert the vector into the set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is not convenient to get and operate on the names of a vector in Rcpp,
but you can pass the names of a vector/list to Rcpp as a vector from R. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use access R functions (in installed packages) easily in C++ code via Rcpp.
However, 
Rcpp is for extending R via C++, 
i.e., you have to come back to R. 
Trying to compile C++ code using Rcpp to and run binary code usually cause segmentation fault. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can pass R functions (including user-defined functions) to Rcpp as Function objects, 
which is really convenient. 
The following is a silly illustration example. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Function f(fun);&lt;/span&gt;
&lt;span class="nv"&gt;SEXP&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;as&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;int&amp;amp;gt;(x);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;wrap&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;rwrap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;cxxfunction&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;signature&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;fun&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;function&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="nv"&gt;code&lt;/span&gt;,&lt;span class="nv"&gt;plugin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Rcpp&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C++11 support is still experimental in most C++ compilers. 
To enable the support of C++11 in g++, you can add the option &lt;code&gt;-std=c++0x&lt;/code&gt; 
or &lt;code&gt;-std=c++11&lt;/code&gt; (depending on the version of the compiler). 
In Rcpp, support of C++11 can be done throught the &lt;code&gt;settings&lt;/code&gt; option 
of the &lt;code&gt;cxxfunction&lt;/code&gt;. The following is an illustration example.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;std::vector&amp;amp;lt;int&amp;amp;gt; v{1,2,3};&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;wrap&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;v&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;getPlugin&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Rcpp&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="mh"&gt;$e&lt;/span&gt;&lt;span class="nv"&gt;nv&lt;/span&gt;$&lt;span class="nv"&gt;PKG_CXXFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;paste&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-std=c++0x &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="mh"&gt;$e&lt;/span&gt;&lt;span class="nv"&gt;nv&lt;/span&gt;$&lt;span class="nv"&gt;PKG_CXXFLAGS&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;fcpp11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;cxxfunction&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;,&lt;span class="nv"&gt;includes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;#include &amp;amp;lt;vector&amp;amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;,&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To link libraries, 
you have to add options to the &lt;code&gt;settings&lt;/code&gt; argument of &lt;code&gt;cxxfunction&lt;/code&gt;.
The following is an example of linking the GSL library. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;as&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;int&amp;amp;gt;(r_n));&lt;/span&gt;
&lt;span class="nv"&gt;double&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;as&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;double&amp;amp;gt;(r_p));&lt;/span&gt;
&lt;span class="nv"&gt;std&lt;/span&gt;::&lt;span class="nv"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;double&amp;amp;gt; x(n);&lt;/span&gt;
&lt;span class="nv"&gt;ralpha_wrapper&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;.&lt;span class="nv"&gt;begin&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;, &lt;span class="nv"&gt;x&lt;/span&gt;.&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;, &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;wrap&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;includes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;readText&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;beta.cpp&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;getPlugin&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Rcpp&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="mh"&gt;$e&lt;/span&gt;&lt;span class="nv"&gt;nv&lt;/span&gt;$&lt;span class="nv"&gt;PKG_LIBS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;paste&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-lgsl -lgslcblas &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="mh"&gt;$e&lt;/span&gt;&lt;span class="nv"&gt;nv&lt;/span&gt;$&lt;span class="nv"&gt;PKG_LIBS&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="mh"&gt;$e&lt;/span&gt;&lt;span class="nv"&gt;nv&lt;/span&gt;$&lt;span class="nv"&gt;PKG_CXXFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;paste&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;-std=c++0x &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="mh"&gt;$e&lt;/span&gt;&lt;span class="nv"&gt;nv&lt;/span&gt;$&lt;span class="nv"&gt;PKG_CXXFLAGS&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;ralpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;cxxfunction&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;signature&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;r_n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;integer&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;r_p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;double&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;, 
                &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;, &lt;span class="nv"&gt;includes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;includes&lt;/span&gt;, &lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="traps"&gt;Traps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Missing namespace prefix when calling functions that present in different namespaces.
For example,
if you want to use &lt;code&gt;std::abs&lt;/code&gt; but forget the namespace prefix (&lt;code&gt;std::&lt;/code&gt;),
the function &lt;code&gt;Rcpp::abs&lt;/code&gt; will be used.
This is a very tricky bug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forget to synchronize the state of random number generators 
used in Rcpp with the one used in R. 
In this situation, 
random number generating functions in Rcpp always generate the same number. 
If you use random number generating functions in Rcpp but always get the same result, 
it's probably that you forget to synchronize the state of random number generators.
A simple way to synchronize the state of random number generators in Rcpp is to 
define a object of &lt;code&gt;RNGScope&lt;/code&gt; before you call random number generating functions.
For example,
you can put the statement &lt;code&gt;RNGScope scope;&lt;/code&gt; in the function/block that you have to call 
random number generating functions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="C++"></category><category term="list"></category><category term="programming"></category><category term="HPC"></category><category term="Rcpp"></category><category term="R"></category><category term="RcppArmadillo"></category><category term="Armadillo"></category><category term="rock"></category></entry><entry><title>Chance to Take One's Own Seat?</title><link href="http://www.legendu.net/en/blog/chance-take-own-seat/" rel="alternate"></link><published>2014-08-10T13:13:46-07:00</published><updated>2014-08-10T13:13:46-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-08-10:/en/blog/chance-take-own-seat/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/seat/seat.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are &lt;span class="math"&gt;\(N\)&lt;/span&gt; seats on a plane.
Suppose the first passengers is drunk and he takes a seat randomly.
For each of the other passengers, if his/her seat is not taken by other people,
then he/she sits on his/her own seat, otherwise he/she takes a seat …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/seat/seat.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;There are &lt;span class="math"&gt;\(N\)&lt;/span&gt; seats on a plane.
Suppose the first passengers is drunk and he takes a seat randomly.
For each of the other passengers, if his/her seat is not taken by other people,
then he/she sits on his/her own seat, otherwise he/she takes a seat randomly.
What is  the probability that the last passenger takes his/her own seat?&lt;/p&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(P_n\)&lt;/span&gt; to stand for the probability that the last passenger takes his/her own seat,
given that there're &lt;span class="math"&gt;\(n\)&lt;/span&gt; seats in total, i.e. &lt;span class="math"&gt;\(N=n\)&lt;/span&gt;.
If the first passenger takes his own seat,
then the last passenger will take his/her own seat.
If the first passenger takes the last passenger's seat,
then the last passenger cannot take his/her own seat (we know that he/she must take the first passenger's seat).
If the first passenger takes the &lt;span class="math"&gt;\(i^{th}, 1&amp;lt;i&amp;lt;n\)&lt;/span&gt; passenger's seat,
then for the &lt;span class="math"&gt;\(j^{th}\)&lt;/span&gt; passenger, &lt;span class="math"&gt;\(1&amp;lt; j\lt i\)&lt;/span&gt;, he/she will takes his/her own seat.
Now the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; passenger has to choose a seat randomly.
Since we don't care about whether the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; passenger takes his/her own seat or not,
we can pretend that the first passenger's seat is the &lt;span class="math"&gt;\(i^{th}\)&lt;/span&gt; passengers.
From this perspective, the problem has been changed to a same problem with &lt;span class="math"&gt;\(N=n-i+1\)&lt;/span&gt;.
So conditioning on the seat that the first passenger takes,
we have the following recursive formula:&lt;/p&gt;
&lt;div class="math"&gt;$$
P_n=\frac{1}{n}\times1+\frac{1}{n}\times0+\sum_{i=2}^{n-1}\frac{1}{n}P_{n-i+1}=\frac{1}{n}\sum_{i=1}^{n-1}P_i,\ n\ge2,
$$&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(P_1=1\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We can use method of generating function to find the formula of general terms.
However, if we notice from the recursive formula that &lt;span class="math"&gt;\(P_2=\frac{1}{2}\)&lt;/span&gt;,
&lt;span class="math"&gt;\(P_3=\frac{1}{2}\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_4=\frac{1}{2}\)&lt;/span&gt; and so on.
We can easily see that &lt;span class="math"&gt;\(P_i=\frac{1}{2}\)&lt;/span&gt; for &lt;span class="math"&gt;\(i\ge2\)&lt;/span&gt; is the
unique solution for the general terms.\
So as long as there're more than 1 people,
the probability that the last passenger takes his/her own seat is &lt;span class="math"&gt;\(\frac{1}{2}\)&lt;/span&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="statistics"></category><category term="recursion"></category><category term="probability"></category><category term="fun problems"></category><category term="seat"></category></entry><entry><title>Sun Bin PK Pang Juan</title><link href="http://www.legendu.net/en/blog/sun-bin-pang-juan/" rel="alternate"></link><published>2014-08-06T10:57:40-07:00</published><updated>2014-08-06T10:57:40-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-08-06:/en/blog/sun-bin-pang-juan/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pk/pk.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Dating back to the time when I was a sophomore, 
I read a very interesting problem from "Waming", 
which is a magazine of math department of USTC (University of Science and Technology of China).&lt;/p&gt;
&lt;p&gt;One day Guigu Zi (a famous ancient Chinese sophist, 
the teacher of Sun Bin and Pang …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pk/pk.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Dating back to the time when I was a sophomore, 
I read a very interesting problem from "Waming", 
which is a magazine of math department of USTC (University of Science and Technology of China).&lt;/p&gt;
&lt;p&gt;One day Guigu Zi (a famous ancient Chinese sophist, 
the teacher of Sun Bin and Pang Juan) came up with two numbers between 1 and 100, 
and told the product of the two numbers to Sun Bin, the sum to Pang Juan. 
The next day when Pang Juan ran into Sun Bin, he boasted, 
"Now I don't know what the 2 numbers are, 
but I'm pretty sure you don't know either." 
"I have to thank you for the information, 
because I did have no idea of what the 2 numbers are, but now I already know." 
responded Sun Bin. 
Pang Juan thought for a while, smiled and then said, 
"Now the same here." Question: what are the two numbers?&lt;/p&gt;
&lt;p&gt;If you think are a very smart people and very good at logic, you can spend some time think about this problem. 
My code (written in Mathmatica) for solving this problem is given below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;(*function filter possible combinations based on Pang Juan&amp;#39;s first words.*)&lt;/span&gt;
&lt;span class="n"&gt;PangJuan1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;comb_&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kn"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
        &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]];&lt;/span&gt;
        &lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;EvenQ&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;PrimeQ&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;Floor&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;}]]&lt;/span&gt;
    &lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="c"&gt;(*function filter possible combinations based on Sun Bin&amp;#39;s words.*)&lt;/span&gt;
&lt;span class="n"&gt;SunBin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;comb_&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; 
    &lt;span class="kn"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prod&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DivisorCombinations&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FlagLower&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FlagUpper&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;positions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
        &lt;span class="n"&gt;prod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]]*&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]];&lt;/span&gt;
        &lt;span class="n"&gt;divisors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Divisors&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prod&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="c"&gt;(*Build up all possible combinations*)&lt;/span&gt;
        &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;FlagLower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Floor&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="c"&gt;(*The smallest subscript of the bigger divisors*)&lt;/span&gt;
        &lt;span class="n"&gt;DivisorCombinations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
        &lt;span class="c"&gt;(*Find the upper subscript of the bigger divisors*)&lt;/span&gt;
        &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;FlagUpper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FlagLower&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
            &lt;span class="n"&gt;FlagUpper&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;amp&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;FlagUpper&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FlagUpper&lt;/span&gt;&lt;span class="o"&gt;++];&lt;/span&gt;
            &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
            &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FlagUpper&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;FlagLower&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;--,&lt;/span&gt;
                &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;
      &lt;span class="n"&gt;DivisorCombinations&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;]],&lt;/span&gt; 
       &lt;span class="n"&gt;divisors&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;]]}]&lt;/span&gt;
     &lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="c"&gt;(*There should be only one possible combination according the \&lt;/span&gt;
&lt;span class="c"&gt;imformation that Pang Juan provided in his first sentence*)&lt;/span&gt;
    &lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DivisorCombinations&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;}],&lt;/span&gt;
     &lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;PangJuan1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;DivisorCombinations&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
      &lt;span class="o"&gt;]&lt;/span&gt;
     &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="n"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="c"&gt;(*function filter possible combinations based on Pang Juan&amp;#39;s second words.*)&lt;/span&gt;
&lt;span class="n"&gt;PangJuan2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;comb_&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; 
  &lt;span class="kn"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AddendCombinations&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt;
   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="n"&gt;positions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
   &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
    &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]];&lt;/span&gt;
    &lt;span class="c"&gt;(*Build up all the possible combinations*)&lt;/span&gt;

    &lt;span class="n"&gt;AddendCombinations&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
    &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
     &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AddendCombinations&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
     &lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="n"&gt;If&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SunBin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AddendCombinations&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
     &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;
     &lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Delete&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;positions&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="n"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="c"&gt;(*construct all combinations and use the above three functions to \&lt;/span&gt;
&lt;span class="c"&gt;filter the right one*)&lt;/span&gt;
&lt;span class="n"&gt;GuiGuzi&lt;/span&gt;&lt;span class="bp"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kn"&gt;Module&lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;},&lt;/span&gt;
   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{};&lt;/span&gt;
   &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
    &lt;span class="n"&gt;For&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt;
      &lt;span class="n"&gt;AppendTo&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;}];&lt;/span&gt;
      &lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="c"&gt;(*Use the information that Pang Juan provide in his first sentence \&lt;/span&gt;
&lt;span class="c"&gt;to delete those impossible combinations*)&lt;/span&gt;

   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PangJuan1&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="c"&gt;(*Use the information that Sun Bin provide to delete those \&lt;/span&gt;
&lt;span class="c"&gt;impossible combinations*)&lt;/span&gt;
   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SunBin&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="c"&gt;(*Use the information that Pang Juan provide in his second sentenc \&lt;/span&gt;
&lt;span class="c"&gt;to delete those impossible combinations*)&lt;/span&gt;

   &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PangJuan2&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="n"&gt;Return&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
   &lt;span class="o"&gt;];&lt;/span&gt;
&lt;span class="c"&gt;(*run the porgram*)&lt;/span&gt;
&lt;span class="n"&gt;GuiGuzi&lt;/span&gt;&lt;span class="bp"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;{{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="puzzle"></category><category term="Mathematica"></category><category term="fun problems"></category><category term="math"></category><category term="number"></category><category term="sum"></category><category term="product"></category></entry><entry><title>Basketball Player</title><link href="http://www.legendu.net/en/blog/basketball-player/" rel="alternate"></link><published>2014-07-28T21:56:16-07:00</published><updated>2014-07-28T21:56:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-07-28:/en/blog/basketball-player/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/basketball-player/basketball.jpg" 
height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a basketball player make &lt;span class="math"&gt;\(N\)&lt;/span&gt; shots,
and we know that in the first &lt;span class="math"&gt;\(n(\le N)\)&lt;/span&gt; shots he sinked &lt;span class="math"&gt;\(m(\le n)\)&lt;/span&gt; shots.
If from the &lt;span class="math"&gt;\((n+1)^{th}\)&lt;/span&gt; shot, 
his ratio of sink a shot is his accumulative ratio before the shot,
e.g., suppose he sinked 40 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/basketball-player/basketball.jpg" 
height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose a basketball player make &lt;span class="math"&gt;\(N\)&lt;/span&gt; shots,
and we know that in the first &lt;span class="math"&gt;\(n(\le N)\)&lt;/span&gt; shots he sinked &lt;span class="math"&gt;\(m(\le n)\)&lt;/span&gt; shots.
If from the &lt;span class="math"&gt;\((n+1)^{th}\)&lt;/span&gt; shot, 
his ratio of sink a shot is his accumulative ratio before the shot,
e.g., suppose he sinked 40 shots in the first 50 shots,
then his ratio of sink the next shot is 80%.
What's the probability that he will make &lt;span class="math"&gt;\(M\)&lt;/span&gt; shots finally?&lt;/p&gt;
&lt;p&gt;Using the knowledge of permutation and combination, we can solve this problem directly.
Let &lt;span class="math"&gt;\(E_{m,n}\)&lt;/span&gt; be the event that &lt;span class="math"&gt;\(m\)&lt;/span&gt; success in the first &lt;span class="math"&gt;\(n\)&lt;/span&gt; shots.
It turns out to be that&lt;/p&gt;
&lt;div class="math"&gt;$$
P\left( E_{M,N}\mid E_{m,n}\right)
=\frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} } ,\ m\le M\le N-(n-m).
$$&lt;/div&gt;
&lt;p&gt;Notice that&lt;/p&gt;
&lt;div class="math"&gt;$$
P\left( E_{M,N}\mid E_{1,2}\right)=\frac{1}{N-1},\ 1\le M\le N-1.
$$&lt;/div&gt;
&lt;p&gt;i.e., the number of sinked shots &lt;span class="math"&gt;\(M\)&lt;/span&gt; is uniformly distributed on its support
given that the player only sinked 1 shot in the first 2 shots.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_k, n\le k\le N\)&lt;/span&gt; be the number of shots the player sinks in the first &lt;span class="math"&gt;\(k\)&lt;/span&gt; shots,
then the distribution of &lt;span class="math"&gt;\(X_{k+1}\)&lt;/span&gt; conditioning on &lt;span class="math"&gt;\(X_{k}\)&lt;/span&gt; is given in &lt;a href="http://dclong.github.io/media/basketball-player/table.pdf"&gt;Table 1&lt;/a&gt;.
Using the similar method as we've done in the first 3 problems,
we can easily find the first and second moment of &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; which are given below:&lt;/p&gt;
&lt;div class="math"&gt;$$
E(X_k\mid E_{m,n})=k\frac{m}{n},\ n\le k\le N;
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
E(X_k^2)=(k+1)k\frac{(m+1)m}{(n+1)n}-k\frac{m}{n},\ n\le k\le N.
$$&lt;/div&gt;
&lt;p&gt;So the variance of &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; is&lt;/p&gt;
&lt;div class="math"&gt;$$
Var(X_k)=EX_k^2-\left( E X_k\right)^2=k(k-n)\frac{m(n-m)}{n^2(n+1)},\ n\le k\le N.
$$&lt;/div&gt;
&lt;p&gt;From the above formulas, we can know that the expectation and variance
of the number of sinked shots are linear quadratic functions of &lt;span class="math"&gt;\(k\)&lt;/span&gt; respectively,
and both of them increase as &lt;span class="math"&gt;\(k\)&lt;/span&gt; increases.
This makes it hard for us to predict &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; when &lt;span class="math"&gt;\(k\)&lt;/span&gt; is big.
The 2-&lt;span class="math"&gt;\(\sigma\)&lt;/span&gt; intervals for &lt;span class="math"&gt;\(X_k\)&lt;/span&gt; is shown in the follow figure. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.legendu.net/media/basketball-player/interval.png" 
height="200" width="240" align="middle"/&gt;
&lt;!---
&lt;img alt="a picture" src="http://www.legendu.net/media/basketball-player/interval.png"&gt; 
--&gt;&lt;/p&gt;
&lt;p&gt;Since we know the distribution of the number of sinked shots 
given that the player sinked &lt;span class="math"&gt;\(m\)&lt;/span&gt; shots in the first &lt;span class="math"&gt;\(n\)&lt;/span&gt; shots,
we can calculate the first and second moments directly, 
which yields the following equations:&lt;/p&gt;
&lt;div class="math"&gt;$$
\sum_M \frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} }=1;
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
\sum_M M\frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} }=N\frac{m}{n};
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
\sum_M M^2\frac{ {N-M-1 \choose n-m-1} }{ {N-1 \choose n-1} }=(k+1)k\frac{(m+1)m}{(n+1)n}-k\frac{m}{n}.
$$&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="statistics"></category><category term="condition"></category><category term="probability"></category><category term="fun problems"></category><category term="basket ball player"></category></entry><entry><title>Some Useful Properties of Modified Bessel Functions of the First Kind</title><link href="http://www.legendu.net/en/blog/bessel-first-property/" rel="alternate"></link><published>2014-07-28T21:55:16-07:00</published><updated>2014-07-28T21:55:16-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-07-28:/en/blog/bessel-first-property/</id><summary type="html">&lt;p&gt;I have to deal with Modified Bessel functions of the first kind frequently in my research. 
Here I list some useful properties of them for future reference. 
    &lt;/p&gt;
&lt;div class="math"&gt;$$I_0'(x) = I_1(x)$$&lt;/div&gt;
&lt;div class="math"&gt;$$I_1'(x) = \frac{I_0(x)+I_2(x)}{2} $$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{I_1(x)}{I_0(x)}\uparrow \Leftrightarrow I_0(x)(I_0(x …&lt;/div&gt;</summary><content type="html">&lt;p&gt;I have to deal with Modified Bessel functions of the first kind frequently in my research. 
Here I list some useful properties of them for future reference. 
    &lt;/p&gt;
&lt;div class="math"&gt;$$I_0'(x) = I_1(x)$$&lt;/div&gt;
&lt;div class="math"&gt;$$I_1'(x) = \frac{I_0(x)+I_2(x)}{2} $$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{I_1(x)}{I_0(x)}\uparrow \Leftrightarrow I_0(x)(I_0(x)+I_2(x))-2I_1^2(x)&amp;gt;0,\forall x&amp;gt;0$$&lt;/div&gt;
&lt;div class="math"&gt;$$\frac{I_1(x)-I_2(x)}{I_0(x)-I_1(x)}\uparrow$$&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(I_n(x)\)&lt;/span&gt; is the modified Bessel function of order &lt;span class="math"&gt;\(n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For more properties about modified Bessel functions of the first kind, 
please refer to &lt;a href="http://mathworld.wolfram.com/ModifiedBesselFunctionoftheFirstKind.html"&gt;Wolfram MathWorld&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="derivative"></category><category term="monotone"></category><category term="Research"></category><category term="Mathematica"></category><category term="positive"></category><category term="Bessel functions"></category></entry><entry><title>Parallel Computing in MATLAB</title><link href="http://www.legendu.net/en/blog/parallel-computing-in-MATLAB/" rel="alternate"></link><published>2014-06-19T19:45:42-07:00</published><updated>2014-06-19T19:45:42-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-06-19:/en/blog/parallel-computing-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;It is very easy to do parallel computing in MATLAB. 
Usually what you have to do is to change &lt;code&gt;for&lt;/code&gt; to &lt;code&gt;parfor&lt;/code&gt; 
for the loop that you want to run in parallel. 
The parallel code can also be run on a single thread and you will not lose much efficiency …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;It is very easy to do parallel computing in MATLAB. 
Usually what you have to do is to change &lt;code&gt;for&lt;/code&gt; to &lt;code&gt;parfor&lt;/code&gt; 
for the loop that you want to run in parallel. 
The parallel code can also be run on a single thread and you will not lose much efficiency, 
so you are always encouraged to write parallel code in MATLAB. 
However, to benefit from parallel computing, 
you must open pool of MATLAB sessions first either manually or automatically in your code. 
To open a pool of 4 MATLAB sessions manually, 
you can use the following code&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;% before R2013b&lt;/span&gt;
&lt;span class="n"&gt;matlabpool&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;local&amp;#39;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="c"&gt;% from R2013b&lt;/span&gt;
&lt;span class="n"&gt;parpool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;local&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To close a pool of MATLAB sessions manually, 
you can use&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;matlabpool&lt;/span&gt; &lt;span class="k"&gt;close&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you want to make your MATLAB parallel code portable, 
you'd better open the pool of MATLAB sessions manually 
instead of open it automatically in your code, 
because different computers have different number of cores.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Though parallel computing in MATLAB is easy, 
it is hard to fix problems if there is any. 
Here is some strategies that you can use 
to avoid problems in parallel computing in MATLAB. 
If a reduced variable does not work well, 
you can use a sliced variable instead, 
and it is more efficient, generally speaking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MATLAB complains if your code is not written appropriately. 
To avoid variable problems in parallel computing in MATLAB, 
you can use the following strategies.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make a full copy of the array you want to use into each thread.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a sliced array instead of sum variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="HPC"></category><category term="parallel"></category><category term="concurrency"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Automated Phone Bill Using Ruby Program</title><link href="http://www.legendu.net/en/blog/automated-verizon-bill-using-ruby/" rel="alternate"></link><published>2014-06-18T08:17:18-07:00</published><updated>2014-06-18T08:17:18-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-06-18:/en/blog/automated-verizon-bill-using-ruby/</id><summary type="html">&lt;p&gt;I have decided to try different programming languages. 
I learn Python a month ago. 
I would like to say that Python is great scripting language. 
The only thing I do not like so far is inconsistent about methods and functions.
It is annoying to remember whether a call should be …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have decided to try different programming languages. 
I learn Python a month ago. 
I would like to say that Python is great scripting language. 
The only thing I do not like so far is inconsistent about methods and functions.
It is annoying to remember whether a call should be made by method or by function. 
I started learning Ruby a few weeks ago.
I have to say that the syntax of Rudy looks weird to me at first,
and I even doubted whether it is worth my effort to learn this language since I already 
know how to program in Python. 
But I have long heard about cool stuff such as Ruby on Rails, Cucumber and so on. 
So I finally convinced myself to continue on studying Ruby. 
As I mentioned in another post, the best way to learn a language is to use it.
I have been thinking about writing a program to parse the statement (in pdf) of 
my Verizon family plan, calculating bill for each member and send email to notify
the bill each of them has to pay automatically. 
I had a R script which can do the calculation part provided that I type some
information manually. 
I decided to make my job as the primary user of the family plan easier.
I am happy that I left this coding job to Ruby for practise. 
&lt;a href="https://github.com/dclong/Ruby-Verizon"&gt;My code&lt;/a&gt; is on GitHub.
If the code does not run, 
you have to install a few ruby packages in order to use it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="n"&gt;actionmailer&lt;/span&gt; &lt;span class="n"&gt;highline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code only works for current Verizon family plan statement. 
I wish Verizon not to change the format of the family plan statement so that
this program can be used by people like me for a long time, otherwise I have to
make this program more robust to support statement in other format as well.&lt;/p&gt;</content><category term="Python"></category><category term="programming"></category><category term="Verizon"></category><category term="Ruby"></category><category term="email"></category><category term="phone"></category></entry><entry><title>Tips for C++ Compilers</title><link href="http://www.legendu.net/en/blog/tips-gcc-compiler/" rel="alternate"></link><published>2014-03-07T11:33:07-08:00</published><updated>2014-03-07T11:33:07-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2014-03-07:/en/blog/tips-gcc-compiler/</id><summary type="html">&lt;h2 id="gcc"&gt;GCC&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;User option &lt;code&gt;-lpthread&lt;/code&gt; to link the thread library when your code use the thread library. 
If you do not use, the option &lt;code&gt;-lpthread&lt;/code&gt;, you can probably compile your coe without any 
error or warning, but you will probably get the following error when you run the code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;terminate&lt;/span&gt; &lt;span class="k"&gt;called …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="gcc"&gt;GCC&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;User option &lt;code&gt;-lpthread&lt;/code&gt; to link the thread library when your code use the thread library. 
If you do not use, the option &lt;code&gt;-lpthread&lt;/code&gt;, you can probably compile your coe without any 
error or warning, but you will probably get the following error when you run the code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;terminate&lt;/span&gt; &lt;span class="k"&gt;called&lt;/span&gt; &lt;span class="k"&gt;after&lt;/span&gt; &lt;span class="n"&gt;throwing&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;std::system_error&amp;#39;&lt;/span&gt;
  &lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;  &lt;span class="k"&gt;Operation&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;permitted&lt;/span&gt;
  &lt;span class="n"&gt;Aborted&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User option &lt;code&gt;-std=c++0x&lt;/code&gt; to compile C++11 code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some thumb rules for compiler optimization:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;when you need to debug, use the option &lt;code&gt;-O0&lt;/code&gt; 
(and the option &lt;code&gt;-g&lt;/code&gt; to generate debugging symbols.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when you are preparing to ship it, 
use the option &lt;code&gt;-O2&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when you really care about performance (e.g., for use on Gentoo), 
use the option &lt;code&gt;-O3&lt;/code&gt;. 
However, this is not always safe. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;when you need to put it on an embedded system, use &lt;code&gt;-Os&lt;/code&gt; 
(optimize for size, not for efficiency.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;use to &lt;code&gt;-D&lt;/code&gt; to predefine macros&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="clang"&gt;Clang&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;use libc++ instead libstdc++&lt;/li&gt;
&lt;/ol&gt;</content><category term="C++"></category><category term="programming"></category><category term="GCC"></category><category term="thread"></category><category term="compiler"></category><category term="link"></category></entry><entry><title>General Tips for R</title><link href="http://www.legendu.net/en/blog/general-tips-for-r/" rel="alternate"></link><published>2013-12-05T00:29:52-08:00</published><updated>2013-12-05T00:29:52-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-12-05:/en/blog/general-tips-for-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Many R functions have lots of arguments which allows you get a full
control of their behaviors, so before you ask whether there is any R
function which have a little different behavior from a R function
you know, you'd better first check the arguments of the function you
know …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Many R functions have lots of arguments which allows you get a full
control of their behaviors, so before you ask whether there is any R
function which have a little different behavior from a R function
you know, you'd better first check the arguments of the function you
know.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Many R functions are generic functions (e.g. &lt;code&gt;plot&lt;/code&gt;, &lt;code&gt;residuals&lt;/code&gt;, &lt;code&gt;coef&lt;/code&gt;, etc), 
which means that they can be
applied to different types of objects, and the behavior varies
according to the type of objects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="tips"></category><category term="R"></category><category term="generic"></category><category term="programming"></category><category term="argument"></category></entry><entry><title>Distributions in R</title><link href="http://www.legendu.net/en/blog/distributions-in-r/" rel="alternate"></link><published>2013-12-05T00:22:23-08:00</published><updated>2013-12-05T00:22:23-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-12-05:/en/blog/distributions-in-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The definition of geometric distribution in R is not the same as the common definition. 
A random variable of geometric distribution in R starts from zero, 
i.e. geometric distribution in R is defined as the number of failures before we succeed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A random variable of negative binomial distribution &lt;span class="math"&gt;\(NB …&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The definition of geometric distribution in R is not the same as the common definition. 
A random variable of geometric distribution in R starts from zero, 
i.e. geometric distribution in R is defined as the number of failures before we succeed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A random variable of negative binomial distribution &lt;span class="math"&gt;\(NB(r,p)\)&lt;/span&gt; in R 
is defined as the number of failures before we succeed for &lt;code&gt;r&lt;/code&gt; times,
where &lt;code&gt;p&lt;/code&gt; is the success probability in each trial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The definition of hyper-geometric is the same as common but be careful with the parameters!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="distribution"></category><category term="R"></category><category term="programming"></category><category term="statistics"></category></entry><entry><title>Random Number Generating in R</title><link href="http://www.legendu.net/en/blog/rng-in-r/" rel="alternate"></link><published>2013-12-05T00:21:35-08:00</published><updated>2013-12-05T00:21:35-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-12-05:/en/blog/rng-in-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Functions for sampling random numbers from distributions 
    share a same "basic" random number generator (RNG). 
    If one set a seed for the "basic" RNG in use, 
    it affects all functions for generating observations from distributions. 
    The kind of "basic" RNG can be queried and set by &lt;code&gt;RNGkind&lt;/code&gt;. 
    The default RNG …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Functions for sampling random numbers from distributions 
    share a same "basic" random number generator (RNG). 
    If one set a seed for the "basic" RNG in use, 
    it affects all functions for generating observations from distributions. 
    The kind of "basic" RNG can be queried and set by &lt;code&gt;RNGkind&lt;/code&gt;. 
    The default RNG in R is Mersenne-Twister.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When doing a big simulation, 
    some people like to split the simulation into smart parts 
    and run each part on a different machine. 
    Theorectically speaking, 
    this can cause problems, 
    because random numbers generated on different machines might not come 
    from disjoint parts of a same seed 
    (or even not a same kind of random number generator). 
    Parallel computing is an alternative to this approach.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="programming"></category><category term="RNG"></category></entry><entry><title>Alike Objects/Functions in R</title><link href="http://www.legendu.net/en/blog/alike-objects-in-r/" rel="alternate"></link><published>2013-12-05T00:19:25-08:00</published><updated>2013-12-05T00:19:25-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-12-05:/en/blog/alike-objects-in-r/</id><summary type="html">&lt;h2 id="matrix-vs-data-frame"&gt;Matrix VS Data Frame:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The data in a matrix must be of the same type while different columns 
in a data frame can have different types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A data frame is much bigger than a matrix with the same dimension. 
If possible, always use matrix instead of data frame to do …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="matrix-vs-data-frame"&gt;Matrix VS Data Frame:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The data in a matrix must be of the same type while different columns 
in a data frame can have different types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A data frame is much bigger than a matrix with the same dimension. 
If possible, always use matrix instead of data frame to do computation.
Especially, 
when you creating arrays using the function &lt;code&gt;array&lt;/code&gt;,
you should avoid using a data frame as the data source 
(even if all columns of the data frame have the same type).
A way to work around this is to first convert a data frame to a matrix 
and then use the matrix as the data source.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A data frame has names for rows and columns by default while a matrix not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="sub-vs-gsub"&gt;&lt;code&gt;sub&lt;/code&gt; VS &lt;code&gt;gsub&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;sub&lt;/code&gt; substitute only the first occurence of the string 
that matches the given pattern 
while function &lt;code&gt;gsub&lt;/code&gt; substitute all occurences of strings that matches the given pattern.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="warning-vs-warnings"&gt;&lt;code&gt;warning&lt;/code&gt; VS &lt;code&gt;warnings&lt;/code&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The function &lt;code&gt;warning&lt;/code&gt; shows a user-defined warning message 
while the function &lt;code&gt;warnings&lt;/code&gt; displays previously generated warning messages.&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="regex"></category><category term="data frame"></category><category term="matrix"></category><category term="R"></category><category term="warning"></category></entry><entry><title>How Many People Stay in the Same Position?</title><link href="http://www.legendu.net/en/blog/same-position-permutation/" rel="alternate"></link><published>2013-11-17T15:16:03-08:00</published><updated>2013-11-17T15:16:03-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-11-17:/en/blog/same-position-permutation/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/people/same.jpg" width="240" height="200" align="right"&gt;&lt;/p&gt;
&lt;p&gt;There are 100 seats on a plane.
If each of the 100 passengers randomly take a seat,
how many people will have his/her own seat on average?&lt;/p&gt;
&lt;p&gt;There is a classic way to solve this problem, 
which is to decompose a (complicated) random variable into a sum of simple …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/people/same.jpg" width="240" height="200" align="right"&gt;&lt;/p&gt;
&lt;p&gt;There are 100 seats on a plane.
If each of the 100 passengers randomly take a seat,
how many people will have his/her own seat on average?&lt;/p&gt;
&lt;p&gt;There is a classic way to solve this problem, 
which is to decompose a (complicated) random variable into a sum of simple random variables.
This is an important trick. 
See &lt;a href="http://www.legendu.net/en/blog/calculate-covariance-between-multinomial-categories-by-hand/"&gt;this post&lt;/a&gt; 
for the use of this trick to calculate the covariance 
of observastions in two categories in a multinomial distribution.&lt;/p&gt;
&lt;p&gt;Let's generalize this problem to assume that 
there are &lt;span class="math"&gt;\(n\)&lt;/span&gt; seats and &lt;span class="math"&gt;\(n\)&lt;/span&gt; passengers. 
Let &lt;span class="math"&gt;\(Y_i=I(\text{passenger } i \text{ takes its seat})\)&lt;/span&gt;, &lt;span class="math"&gt;\(1\le i \le n\)&lt;/span&gt;,
where &lt;span class="math"&gt;\(I\)&lt;/span&gt; is an indicator function. 
&lt;span class="math"&gt;\(Y_i\)&lt;/span&gt;'s are exchangeable, 
which means that for a fixed &lt;span class="math"&gt;\(k\)&lt;/span&gt; (&lt;span class="math"&gt;\(1\le k\le n\)&lt;/span&gt;), 
any subset of &lt;span class="math"&gt;\(\\{Y_i: 1\le i \le n\\}\)&lt;/span&gt; with &lt;span class="math"&gt;\(k\)&lt;/span&gt; elements has the same distribution.
Specially,
it's easy to see that &lt;/p&gt;
&lt;div class="math"&gt;$$
Y_i\overset{iid}{\sim}\text{Bernoulli}(\frac{1}{n}),
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
Y_iY_j\overset{iid}{\sim}Bernoulli(\frac{1}{n(n-1)}), i\ne j.
$$&lt;/div&gt;
&lt;p&gt;So we have &lt;/p&gt;
&lt;div class="math"&gt;$$
EY_i=\frac{1}{n},
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
EY_iY_j=\frac{1}{n(n-1)}, i\ne j, 
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
Var(Y_i)=\frac{n-1}{n^2},
$$&lt;/div&gt;
&lt;div class="math"&gt;$$
Cov(Y_1,Y_2)=EY_1Y_2-EY_1EY_2=\frac{1}{n^2(n-1)}.
$$&lt;/div&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(X_n\equiv\sum_{i=1}^nY_i\)&lt;/span&gt;, 
which is the number of passengers taking their own seats.
From above results we know that&lt;/p&gt;
&lt;div class="math"&gt;$$
E(X_n)=E\left( \sum_{i=1}^nY_i\right)=\sum_{i=1}^n E Y_i=n E Y_1=n\frac{1}{n}=1,
$$&lt;/div&gt;
&lt;div class="math"&gt;\begin{align}
Var\left( X_n\right) &amp;amp;= Var\left( \sum_{i=1}^nY_i\right)
                =\sum_{i=1}^n Var(Y_i)+\sum_{i\ne j}Cov(Y_i,Y_j) \nonumber \newline
                     &amp;amp;=  nVar(Y_1)+n(n-1)Cov(Y_1,Y_2) \nonumber \newline
                     &amp;amp;=  n\frac{n-1}{n^2}+n(n-1)\frac{1}{n^2(n-1)}=1. \nonumber
\end{align}&lt;/div&gt;
&lt;p&gt;Surprisingly, both the mean and the variance of &lt;span class="math"&gt;\(X_n\)&lt;/span&gt; is 1,
which suggests that we can predict &lt;span class="math"&gt;\(X_n\)&lt;/span&gt;,
i.e. the number of integers that have the same position as their
original position very well.&lt;/p&gt;
&lt;p&gt;The above solution is elegant. 
However, 
I'd like to try to solve this problem using my preferred universal procedure.
Let &lt;span class="math"&gt;\(Y_i\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_i\)&lt;/span&gt;, &lt;span class="math"&gt;\(1\le i \le n\)&lt;/span&gt;, be as defined above. 
Conditioning &lt;span class="math"&gt;\(X_n\)&lt;/span&gt; on &lt;span class="math"&gt;\(Y_1\)&lt;/span&gt; gives us a recursive/differtial equation.
If &lt;span class="math"&gt;\(Y_1=1\)&lt;/span&gt; (with probability &lt;span class="math"&gt;\(\frac{1}{n}\)&lt;/span&gt;), 
i.e., the first passenger sits on its seat,
then &lt;span class="math"&gt;\(X_n = 1 + X_{n-1}\)&lt;/span&gt;;
It's a little tricky when &lt;span class="math"&gt;\(Y_1=0\)&lt;/span&gt; (with probability &lt;span class="math"&gt;\(1-\frac{1}{n}\)&lt;/span&gt;),
i.e., the first passenger sits on other people's seat. 
Assume the first passenger takes &lt;span class="math"&gt;\(k^{th}\)&lt;/span&gt; (&lt;span class="math"&gt;\(2\le k\le n\)&lt;/span&gt;) passenger's seat.
If we pretend that seat 1 is the &lt;span class="math"&gt;\(k^{th}\)&lt;/span&gt; passenger's seat,
then we have &lt;span class="math"&gt;\(X_n = X_{n-1}\)&lt;/span&gt;. 
However, seat 1 is not &lt;span class="math"&gt;\(k^{th}\)&lt;/span&gt; passenger's seat,
and we cannot count it into &lt;span class="math"&gt;\(X_{n-1}\)&lt;/span&gt;. 
Let &lt;span class="math"&gt;\(E_k\equiv I(\text{passenger } k \text{ sits on seat 1})\)&lt;/span&gt;. 
We only miss count &lt;span class="math"&gt;\(X_{n-1}\)&lt;/span&gt; by extra 1 when &lt;span class="math"&gt;\(E_k=1\)&lt;/span&gt;, 
so when &lt;span class="math"&gt;\(Y_1=0\)&lt;/span&gt; we have 
&lt;/p&gt;
&lt;div class="math"&gt;$$
X_n = X_{n-1} - E_k.
$$&lt;/div&gt;
&lt;p&gt;
It's easy to see that &lt;span class="math"&gt;\(E_k\sim\text{Bernoulli}(\frac{1}{n-1})\)&lt;/span&gt;. 
So using the conditional expectation formula, we have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
EX_n &amp;amp;= E(E(X_n|Y_1))\nonumber\newline 
     &amp;amp;= E\left(\frac{1}{n}(1 + X_{n-1}) + (1-\frac{1}{n}) (X_{n-1} - E_k)\right)\nonumber\newline
     &amp;amp;=EX_{n-1},
\end{align}&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(EX_1=1\)&lt;/span&gt;.
This is the simplest recursive/differential equation. 
Anyone can immediately see that &lt;span class="math"&gt;\(EX_n=1, \forall n\ge1\)&lt;/span&gt; is the solution to this recursive/differential equation.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="same position"></category><category term="statistics"></category><category term="probability"></category><category term="linear recursion"></category><category term="fun problems"></category><category term="conditional expectation"></category><category term="permutation"></category></entry><entry><title>Calculate Covariance Between Multinomial Categories by Hand</title><link href="http://www.legendu.net/en/blog/calculate-covariance-between-multinomial-categories-by-hand/" rel="alternate"></link><published>2013-11-17T15:14:27-08:00</published><updated>2013-11-17T15:14:27-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-11-17:/en/blog/calculate-covariance-between-multinomial-categories-by-hand/</id><summary type="html">&lt;p&gt;Let &lt;span class="math"&gt;\((X_1, \ldots, X_k)\sim\text{Multinomial}(n, p_1, \ldots, p_k)\)&lt;/span&gt;. 
I'll show how to calculate &lt;span class="math"&gt;\(Cov(X_i, X_j), i\ne j\)&lt;/span&gt;. 
The main purpose of doing this is to illustrate the little trick 
of reducing complexity of problems by decomposing a complicated random variable 
into simple ones. &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\((Y_ …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Let &lt;span class="math"&gt;\((X_1, \ldots, X_k)\sim\text{Multinomial}(n, p_1, \ldots, p_k)\)&lt;/span&gt;. 
I'll show how to calculate &lt;span class="math"&gt;\(Cov(X_i, X_j), i\ne j\)&lt;/span&gt;. 
The main purpose of doing this is to illustrate the little trick 
of reducing complexity of problems by decomposing a complicated random variable 
into simple ones. &lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\((Y_{i1}, \ldots, Y_{ik})\overset{iid}{\sim}\text{Multinomial}(1, p_1, \ldots, p_k), i\ge1\)&lt;/span&gt;,
then 
&lt;/p&gt;
&lt;div class="math"&gt;$$
X_j = \sum_{i=1}^n Y_{ij}, 1\le j \le k.
$$&lt;/div&gt;
&lt;p&gt;
So,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{align}
Cov(X_i,X_j) &amp;amp;= Cov(\sum_{l=1}^n Y_{li}, \sum_{m=1}^n Y_{mj})\nonumber\newline
             &amp;amp;= \sum_{l=1}^n\sum_{m=1}^n Cov(Y_{li}, Y_{mj})\nonumber\newline
             &amp;amp;= \sum_{m=1}^n Cov(Y_{mi}, Y_{mj})\nonumber\newline
             &amp;amp;= nCov(Y_{1i}, Y_{1j}) = n(EY_{1i}Y_{1j} - EY_{1i}EY_{1j})\nonumber\newline
             &amp;amp;= -np_ip_j\nonumber\newline
\end{align}&lt;/div&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="fun problem"></category><category term="statistics"></category><category term="probability"></category><category term="multinomial"></category><category term="covariance"></category></entry><entry><title>Creative Use of Keepassx -- Odd Skills?</title><link href="http://www.legendu.net/en/blog/creative-use-of-keepassx-odd-skills/" rel="alternate"></link><published>2013-10-30T22:15:37-07:00</published><updated>2013-10-30T22:15:37-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-30:/en/blog/creative-use-of-keepassx-odd-skills/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/logo/keepassx.jpeg"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I had to schedule an event on Doodle.
I wanted to fill in all possible regular meeting times 
(starting at 8:00 am with 30 minutes interval).
I am such a lazy guy who never want to repeat the same thing for more than 3 times.
Typing all these time …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/logo/keepassx.jpeg"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I had to schedule an event on Doodle.
I wanted to fill in all possible regular meeting times 
(starting at 8:00 am with 30 minutes interval).
I am such a lazy guy who never want to repeat the same thing for more than 3 times.
Typing all these time slots in Doodle was obvious a pain for me.
I immediately came out with the idea of simulating keyboard events. 
I started search in gooled for such a tool in Linux, 
then I immediately realized that I already had such a tool -- keepassx. 
Odd enough, keepassx is a tool for managing passwords!
That's right! 
keepassx allows one to send customized keys to windows.
This is what I wanted. 
Readers might think aloud: 
"Huh, 
so you transformed the work of repeated typing in Doodle into repeated typing in keepassx?"
The answer is letting R 
(or any script language you're familiar with) 
to generate the string for you!
Another advantage of this way is that you work is saved in keepassx.
Scheduling events with the same time slots in future is greatly simplified.
Though I might have used less time to get the work done 
by just typing in Doodle,
I enjoyed getting my worked done creatively. 
And as mentioned above, 
my work is saved. 
I have killed many birds (scheduling similar events in future) with one stone.&lt;/p&gt;</content><category term="skills"></category><category term="Linux"></category><category term="software"></category><category term="fun problems"></category></entry><entry><title>Inverse of a Special Class of Matrices with High Dimensions</title><link href="http://www.legendu.net/en/blog/inverse-of-matrix/" rel="alternate"></link><published>2013-10-30T22:12:02-07:00</published><updated>2013-10-30T22:12:02-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-30:/en/blog/inverse-of-matrix/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/math/matrix-inverse.png"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;One day, my officemate Tieming asked me about a problem that she met in her research. 
Suppose &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is a symmetric matrix of huge dimension 
and &lt;span class="math"&gt;\(\boldsymbol{D}\)&lt;/span&gt; is a diagonal matrix with nonnegative diagonal elements. 
The inverse of &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is already known, 
how can we calculate the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/math/matrix-inverse.png"
width="200" height="160" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;One day, my officemate Tieming asked me about a problem that she met in her research. 
Suppose &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is a symmetric matrix of huge dimension 
and &lt;span class="math"&gt;\(\boldsymbol{D}\)&lt;/span&gt; is a diagonal matrix with nonnegative diagonal elements. 
The inverse of &lt;span class="math"&gt;\(\boldsymbol{B}\)&lt;/span&gt; is already known, 
how can we calculate the inverse of &lt;span class="math"&gt;\(\boldsymbol{B}+\boldsymbol{D}\)&lt;/span&gt; efficiently? 
I thought for a while and found a good way to solve the problem. 
See solution in &lt;a href="http://dclong.github.io/media/inverse-of-matrix.pdf"&gt;Inverse of Matrix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I haven't implemented the algorithm yet, 
but a roughly estimate of the complexity of this algorithm tells me that even R can handle it. 
I will write a R function to do this later when I have time.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="inverse"></category><category term="fun problems"></category><category term="matrix"></category><category term="math"></category><category term="statistics"></category><category term="R"></category><category term="high dimension"></category></entry><entry><title>Which One Is the Best Strategy? (continued)</title><link href="http://www.legendu.net/en/blog/best-strategy-2/" rel="alternate"></link><published>2013-10-30T15:13:01-07:00</published><updated>2013-10-30T15:13:01-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-30:/en/blog/best-strategy-2/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose we flip a coin which has probability 0.7 to be head again 
and again and two people choose two different sequences of length 3 (e.g., THH). 
The people whose sequence appears first wins. 
If you are allowed to choose first, which sequence will you choose?&lt;/p&gt;
&lt;p&gt;I discussed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/pattern/coin.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose we flip a coin which has probability 0.7 to be head again 
and again and two people choose two different sequences of length 3 (e.g., THH). 
The people whose sequence appears first wins. 
If you are allowed to choose first, which sequence will you choose?&lt;/p&gt;
&lt;p&gt;I discussed about the following interesting probability problem in my post 
&lt;a href="http://dclong.github.io/en/blog/best-strategy/"&gt;Which One is the Best Strategy?&lt;/a&gt; before.
I mentioned that there are better ways to solve this problem. 
I will talk about these methods here. &lt;/p&gt;
&lt;p&gt;In this problem, we have to calculate the probabilities for two given sequences to come out first. 
There are at least two ways to do this. 
The first way is to use Markov Chain, which is simple and direct. 
As long as we can write down the transition matrix,
we can calculate the limiting probabilities in various ways.
Since this process is similar to Example ??, I will just skip it here. 
The other way is by introducing a new random variable &lt;span class="math"&gt;\(M = min\{X_1 , X_2 \}\)&lt;/span&gt;, 
where &lt;span class="math"&gt;\(X_1\)&lt;/span&gt; and &lt;span class="math"&gt;\(X_2\)&lt;/span&gt; are the steps needed for the two patterns to first come out. 
Conditioning on the event &lt;span class="math"&gt;\(E_1 \equiv \text{pattern 1 comes out first}\)&lt;/span&gt;, 
we get an equation involves &lt;span class="math"&gt;\(P_1 \equiv P (E_1 )\)&lt;/span&gt;, &lt;span class="math"&gt;\(E(M )\)&lt;/span&gt; 
and the expected time for some patterns (pattern 1, pattern 2 and probably some new patterns) to occur. 
Similarly, conditioning on the event &lt;span class="math"&gt;\(E_2 \equiv \text{pattern 2 comes out first}\)&lt;/span&gt;, 
we get an equation involves &lt;span class="math"&gt;\(P_2 \equiv P (E_2 )\)&lt;/span&gt;, &lt;span class="math"&gt;\(E(M )\)&lt;/span&gt;
and the expected time of some patterns (pattern 1, pattern 2 and probably
some new patterns) to occur. 
In addition, we have the constraint &lt;span class="math"&gt;\(P_1 + P_2 = 1\)&lt;/span&gt;. 
I have already talked about how to calculate the expected time for a sequence to occur 
in the post &lt;a href="http://dclong.github.io/en/blog/how-long-observe-pattern/"&gt;How Long Does It Take to Observe a Sequence?&lt;/a&gt;,
so what we have to do is just to solve a group of linear equations. &lt;/p&gt;
&lt;p&gt;Before doing any calculation, I guess many people will choose pattern "HHH". 
However, this pattern is beaten by "THH". 
There's an easy way to show this. 
Suppose we first observe sequence HHH at step &lt;span class="math"&gt;\(n(&amp;gt;3)\)&lt;/span&gt;, 
then the outcome must be "T" at step &lt;span class="math"&gt;\(n − 3\)&lt;/span&gt;,
which means that we have observed "THH" at step &lt;span class="math"&gt;\(n − 1\)&lt;/span&gt;. 
So for "HHH" to win against "THH", it must appear at step 3. 
So the probability for "HHH" to beat "THH" is &lt;span class="math"&gt;\(0.7^3 = 0.343 &amp;lt; 0.5\)&lt;/span&gt;, 
i.e. "HHH" is not as good as "THH".
This method is very neat, but unfortunately it does not work for all pairs of patterns. 
To compare other pairs of patterns, 
we can use function "PatternFirstComeOurProbability" in the code of the post 
&lt;a href="http://dclong.github.io/en/blog/how-long-observe-pattern/"&gt;How Long Does It Take to Observe a Sequence?&lt;/a&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PatternFirstComeOutProbability&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;219&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;343&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;657&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From the above result we can see that the chance for pattern "HHH" to beat
pattern "THH" is &lt;span class="math"&gt;\(343/1000 = 0.343 &amp;lt; 0.5\)&lt;/span&gt; which matches the results I got
before.&lt;/p&gt;
&lt;p&gt;Now we already know that pattern "HHH" is beaten by pattern "THH". 
A nature question people might ask is that cannot pattern "THH" beat all other
patterns? The answer is no, and actually there's no pattern which can beat all
other patterns in this problem. 
The following Mathematica code will help us
to calculate the probability for a pattern to come our first when compared to
some other pattern.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;patterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Tuples&lt;/span&gt;[{&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;}, &lt;span class="mi"&gt;3&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;ProbMatrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="nv"&gt;Null&lt;/span&gt;, {&lt;span class="mi"&gt;8&lt;/span&gt;}, {&lt;span class="mi"&gt;8&lt;/span&gt;}]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; 8, i++,&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= 8, j++,&lt;/span&gt;
        &lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
        &lt;span class="nv"&gt;PatternFirstComeOutProbability&lt;/span&gt;[{&lt;span class="nv"&gt;patterns&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]], &lt;span class="nv"&gt;patterns&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;]]}, {&lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;}, {&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;, &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;}]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;ProbMatrix&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;j&lt;/span&gt;]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;probs&lt;/span&gt;[[&lt;span class="mi"&gt;2&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;ProbMatrix&lt;/span&gt;[[&lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;probs&lt;/span&gt;[[&lt;span class="mi"&gt;3&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
    ]
]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= 8, i++,&lt;/span&gt;
    &lt;span class="nv"&gt;AppendTo&lt;/span&gt;[&lt;span class="nv"&gt;ProbMatrix&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]],
    &lt;span class="nv"&gt;Min&lt;/span&gt;[&lt;span class="nv"&gt;Drop&lt;/span&gt;[&lt;span class="nv"&gt;ProbMatrix&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]],
    &lt;span class="nv"&gt;Flatten&lt;/span&gt;[&lt;span class="nv"&gt;Position&lt;/span&gt;[&lt;span class="nv"&gt;ProbMatrix&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]], &lt;span class="nv"&gt;Null&lt;/span&gt;]]]]]
]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;StringJoin&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;@ &lt;span class="nv"&gt;IntegerString&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;@ &lt;span class="nv"&gt;patterns&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;TableForm&lt;/span&gt;[&lt;span class="nv"&gt;ProbMatrix&lt;/span&gt;, &lt;span class="nv"&gt;TableHeadings&lt;/span&gt; &lt;span class="o"&gt;-&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; {AppendTo[names, &amp;quot;Min&amp;quot;], names}]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The result of the above code is presented in 
&lt;a href="http://dclong.github.io/media/pattern/pattern-first-out-probability.pdf"&gt;Table 1&lt;/a&gt;. 
From Table 1, we can see
that none of the 8 rows has values that're all at least 0.5, which means that none
of the 8 patterns can beat all other patterns. 
Though we cannot find a pattern
which can always give you a higher chance to win against other patterns, we still
have to make a decision. Suppose we have to let our competitor know which
pattern we choose , and he/she is smart enough (which means that he/she will
always make the best choice based the pattern we choose), we want to choose
the pattern which yields highest winning probability. So we have to choose
the pattern which is the best (yields the highest winning probability) in the
worst situation. This is kind of like the Mini-Max rule in decision theory. The
following Mathematica code help us find the right pattern.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;Position&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ProbMatrix&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="k"&gt;All&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]],&lt;/span&gt; &lt;span class="k"&gt;Max&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ProbMatrix&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="k"&gt;All&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]]]]]]]&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So if the other player is smart enough, we should choose pattern "THH".
Though in this problem we only compare two patterns at a time, function
"PatternFirstComeOurProbability" can handle the case when multiple patterns
are involved. For example, suppose 3 people are in this game and they choose
pattern "THH", "HHH" and "TTT" respectively. Running function 
"PatternFirstComeOurProbability" in Mathematica yields the following result.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PatternFirstComeOutProbability&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;30441&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;7270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;418509&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;727000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;343&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5913&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;72700&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;18721&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;575666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;343&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0813343&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That is the probabilities for the 3 people to win are about 0.576, 0.343 and 0.081
respectively.
Indeed function "PatternFirstComeOurProbability" is powerful, but it also
has a limitation. It might give us wrong results when patterns with different
lengths are compared with function PatternFirstComeOurProbability. 
For example, pattern "HT" will definitely appear before pattern "HHTH", however,
function PatternFirstComeOurProbability doesn't give us the right answer.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PatternFirstComeOutProbability&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These kind of situations are easy to handle. A always safe way compare patterns
with differen lengths is to change the problem to one in which all patterns have
the same length. For example, instead of letting function PatternFirstComeOur-
Probability compare patterns "HH" and "HTH", we can let it compare patterns
"HHT", "HHH" and "HTT".
Based on the above idea, it's easy to write a function which is able to handle
all situations, however, this is trivia and I don't think it's worth my time. Time
is finite while knowledge is infinite. We should spend time on more valuable
things.&lt;/p&gt;
&lt;p&gt;Actually we've killed multiple birds with one stone in this problem. We can
also calculate the expected time for a pattern to show up, given that some
other pattern has already occurred, 
see function PatternAdditionalExpected Time. 
However, this function have a similar issue as function PatternFirst-
ComeOurProbability has. And what's more, we have to carefully define what
"addition step needed" means.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Mathematica"></category><category term="pattern"></category><category term="Markov chain"></category><category term="statistics"></category><category term="probability"></category><category term="sequence"></category><category term="coin"></category><category term="fun problems"></category></entry><entry><title>Expected Gain of Tossing a Dice</title><link href="http://www.legendu.net/en/blog/dice-expected-gain/" rel="alternate"></link><published>2013-10-30T09:37:39-07:00</published><updated>2013-10-30T09:37:39-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-30:/en/blog/dice-expected-gain/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/dice/dice.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose you toss a symmetric dice. 
You are allowed to quit the game and
get money which equals the total points you get at any time if 6 has never
showed up. Whenever 6 shows up, the game is over and you get nothing. For
example, if the first three …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/dice/dice.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose you toss a symmetric dice. 
You are allowed to quit the game and
get money which equals the total points you get at any time if 6 has never
showed up. Whenever 6 shows up, the game is over and you get nothing. For
example, if the first three tosses turn out to be 2, 3 and 5 you can quit the
game immediately and gain 10 dollars or you can choose to continue the game.
What is the expected gains of this game?&lt;/p&gt;
&lt;p&gt;First we have to decide how to play the game, i.e. when to quit the game.
Suppose &lt;span class="math"&gt;\(T\)&lt;/span&gt; is the total points we get now.
If we choose to continue the game, the distribution of our profit is presented in &lt;a href="http://dclong.github.io/media/dice/tables.pdf"&gt;Table 1&lt;/a&gt;.
So our net profit is &lt;span class="math"&gt;\(\frac{15-T}{6}\)&lt;/span&gt; if we choose to continue the game,
which suggests us quit the game when &lt;span class="math"&gt;\(T\ge15\)&lt;/span&gt;.
Let's use &lt;span class="math"&gt;\(W\)&lt;/span&gt; to denote the final gain in this game,
then &lt;span class="math"&gt;\(W\)&lt;/span&gt; can be either 0 or some element in &lt;span class="math"&gt;\(A\equiv\{15, 16, 17, 18, 19\}\)&lt;/span&gt;.
To find the expected gains,
we have to find the distribution of &lt;span class="math"&gt;\(W\)&lt;/span&gt;,
i.e. we have to find &lt;span class="math"&gt;\(P(W=i)\)&lt;/span&gt;, &lt;span class="math"&gt;\(i\in A\)&lt;/span&gt;.
There're at least two ways to do this.
One of them is to use the powerful tool Markov Chain and the other is to use recursion formula.&lt;/p&gt;
&lt;h2 id="method-i-markov-chain"&gt;Method I: Markov Chain&lt;/h2&gt;
&lt;p&gt;Let's use &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt;, &lt;span class="math"&gt;\(n\in \mathbb{N}\)&lt;/span&gt; to stand for the total points we get at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;.
Let &lt;span class="math"&gt;\(X_0=0\)&lt;/span&gt;; &lt;span class="math"&gt;\(X_k=s\)&lt;/span&gt; (just a symbol to avoid confusion with the other states of &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt;) for &lt;span class="math"&gt;\(k\ge n\)&lt;/span&gt; if the tossing result turns out to 6 at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;;
&lt;span class="math"&gt;\(X_k=t\)&lt;/span&gt; for &lt;span class="math"&gt;\(k\ge n\)&lt;/span&gt; if &lt;span class="math"&gt;\(X_n=t\in A\)&lt;/span&gt;.
It's easy to check that &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt; is a Markov Chain and its limiting distribution is what we are interested in.
The transition probability matrix of &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt; is given in &lt;a href="http://dclong.github.io/media/dice/tables.pdf"&gt;Table 1&lt;/a&gt;.
The probabilities that &lt;span class="math"&gt;\(W=i\)&lt;/span&gt; where &lt;span class="math"&gt;\(i\in A\)&lt;/span&gt;,
are the probabilities that &lt;span class="math"&gt;\(X_n\)&lt;/span&gt; ends in the corresponding states,
i.e. &lt;span class="math"&gt;\(lim_n P(X_n=i)\)&lt;/span&gt;, &lt;span class="math"&gt;\(i\in A\)&lt;/span&gt;.
To find these limiting probabilities, we need to find the limit of &lt;span class="math"&gt;\(P^n\)&lt;/span&gt; (actually we only care about the limit property of the second row of the transition matrix since &lt;span class="math"&gt;\(X_0=0\)&lt;/span&gt;).
With the help of R, we can easily find these probabilities which are given below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;         &lt;span class="mi"&gt;16&lt;/span&gt;         &lt;span class="mi"&gt;17&lt;/span&gt;         &lt;span class="mi"&gt;18&lt;/span&gt;         &lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;13128076&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10092009&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;07407628&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;04813533&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;02337223&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So the average gain of this game is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;probs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="o"&gt;%*%&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;153738&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="method-ii-recursion-formula"&gt;Method II: Recursion Formula&lt;/h2&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(\{X_n\}\)&lt;/span&gt;, &lt;span class="math"&gt;\(n\in \mathbb{N}\)&lt;/span&gt; and &lt;span class="math"&gt;\(A\)&lt;/span&gt; be the same as in Method I.
Let &lt;span class="math"&gt;\(E_{t,n}\)&lt;/span&gt; be the event that &lt;span class="math"&gt;\(X_n=t, X_{n-1}&amp;lt;t\)&lt;/span&gt; 
and &lt;span class="math"&gt;\(P_{t,n}\equiv P(E_{t,n})\)&lt;/span&gt;,
then &lt;span class="math"&gt;\(P_{t,n}\)&lt;/span&gt; stands for the probability that we first achieve total points &lt;span class="math"&gt;\(t\)&lt;/span&gt; at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;.
Specially for &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_{t,n}\)&lt;/span&gt; stand for the probability that the game ends with total points at step &lt;span class="math"&gt;\(n\)&lt;/span&gt;.
Let &lt;span class="math"&gt;\(P_t\equiv \sum_{n\ge0} P_{t,n}\)&lt;/span&gt;, then &lt;span class="math"&gt;\(P_t\)&lt;/span&gt;, &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt; are what we're interested in.
Conditioning &lt;span class="math"&gt;\(E_{t,n}\)&lt;/span&gt; on the value &lt;span class="math"&gt;\(X_{n-1}\)&lt;/span&gt; takes, we have the following recursion formula
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{t,n}=\frac{1}{6}P_{t-1,n-1}+\frac{1}{6}P_{t-2,n-1} +\frac{1}{6}P_{t-3,n-1}\\
    +\frac{1}{6}P_{t-4,n-1} +\frac{1}{6}P_{t-5,n-1},\text{ for } 0&amp;lt;t\le 15,\ n\ge1.  
$$&lt;/div&gt;
&lt;p&gt;Because the game is over when &lt;span class="math"&gt;\(t\ge15\)&lt;/span&gt;,
we have different formulas for &lt;span class="math"&gt;\(t&amp;gt;15\)&lt;/span&gt; and &lt;span class="math"&gt;\(n\ge1\)&lt;/span&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{16,n}=\frac{1}{6}P_{14,n-1}+\frac{1}{6}P_{13,n-1}+\frac{1}{6}P_{12,n-1}+\frac{1}{6}P_{11,n-1},
$$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{17,n}=\frac{1}{6}P_{14,n-1}+\frac{1}{6}P_{13,n-1}+\frac{1}{6}P_{12,n-1}, $$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{18,n}=\frac{1}{6}P_{14,n-1}+\frac{1}{6}P_{13,n-1},$$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{19,n}=\frac{1}{6}P_{14,n-1}.  $$&lt;/div&gt;
&lt;p&gt;It's obvious that &lt;span class="math"&gt;\(P_{t,0}=0\)&lt;/span&gt; for &lt;span class="math"&gt;\(t&amp;gt;0\)&lt;/span&gt;.
Sum the above formulas over &lt;span class="math"&gt;\(n\)&lt;/span&gt; from 1 to &lt;span class="math"&gt;\(\infty\)&lt;/span&gt; we have
&lt;/p&gt;
&lt;div class="math"&gt;$$
P_{t}=\frac{1}{6}P_{t-1}+\frac{1}{6}P_{t-2}+\frac{1}{6}P_{t-3}
+\frac{1}{6}P_{t-4}+\frac{1}{6}P_{t-5},\text{ for } 0&amp;lt;t\le 15,
$$&lt;/div&gt;
&lt;div class="math"&gt;$$ P_{16}=\frac{1}{6}P_{14}+\frac{1}{6}P_{13}+\frac{1}{6}P_{12}+\frac{1}{6}P_{11}, $$&lt;/div&gt;
&lt;div class="math"&gt;$$P_{17}=\frac{1}{6}P_{14}+\frac{1}{6}P_{13}+\frac{1}{6}P_{12},$$&lt;/div&gt;
&lt;div class="math"&gt;$$P_{18}=\frac{1}{6}P_{14}+\frac{1}{6}P_{13},$$&lt;/div&gt;
&lt;div class="math"&gt;$$P_{19}=\frac{1}{6}P_{14}.$$&lt;/div&gt;
&lt;p&gt;To solve this system, we have to ascertain the initial values.
It's not hard to find values for &lt;span class="math"&gt;\(P_0,\ldots,P_4\)&lt;/span&gt;, however,
we can make things even easier by extending the recursion formula forward to term
&lt;span class="math"&gt;\(P_{-4}\)&lt;/span&gt;.
Under this extension, the initial conditions for this system are as follows&lt;/p&gt;
&lt;div class="math"&gt;$$ P_{-4}=P_{-3}=P_{-2}=P_{-1}=0 \text{ and } P_0=1.  $$&lt;/div&gt;
&lt;p&gt;Now we can find values for &lt;span class="math"&gt;\(P_t\)&lt;/span&gt;, &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt; easily.
One way is to use method of generating functions to find the general term for &lt;span class="math"&gt;\(P_t\)&lt;/span&gt; when &lt;span class="math"&gt;\(t\le15\)&lt;/span&gt; and then calculate &lt;span class="math"&gt;\(P_t\)&lt;/span&gt; for &lt;span class="math"&gt;\(t\in A\)&lt;/span&gt;.
Another easier way and more practical way is use computer to find these values directly based on these formulas given above.
The implementation in Mathmatica and the corresponding result are as follows. 
Notice that their is a built-in function called &lt;code&gt;LinearRecurrence&lt;/code&gt; in Mathematica which 
does a similar job to the function &lt;code&gt;LinearRecursion&lt;/code&gt; here. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;::&lt;span class="nv"&gt;SmallOrder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;The order of the linear recursive equation must be at least 2.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;::&lt;span class="nv"&gt;NotMatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;The length of argument &amp;#39;coef&amp;#39; doesn&amp;#39;t match the length of &amp;#39;initial&amp;#39;.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;[&lt;span class="nv"&gt;n_&lt;/span&gt;, &lt;span class="nv"&gt;ini_&lt;/span&gt;, &lt;span class="nv"&gt;coef_&lt;/span&gt;: &lt;span class="nv"&gt;Null&lt;/span&gt;, &lt;span class="nv"&gt;start_&lt;/span&gt;: &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;irev_&lt;/span&gt;: &lt;span class="nv"&gt;False&lt;/span&gt;, &lt;span class="nv"&gt;crev_&lt;/span&gt;: &lt;span class="nv"&gt;False&lt;/span&gt;] :&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;Module&lt;/span&gt;[{&lt;span class="nv"&gt;nmax&lt;/span&gt;, &lt;span class="nb"&gt;result&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="nv"&gt;coefficient&lt;/span&gt;, &lt;span class="nv"&gt;order&lt;/span&gt;, &lt;span class="nv"&gt;index&lt;/span&gt;, &lt;span class="nv"&gt;initials&lt;/span&gt;},
    &lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;ini&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; 2, Message[LinearRecursion::SmallOrder]; Return[]];&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;coef&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;Null&lt;/span&gt;,
        &lt;span class="nv"&gt;coefficient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;, {&lt;span class="nv"&gt;order&lt;/span&gt;}],
        &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;Length&lt;/span&gt;[&lt;span class="nv"&gt;coef&lt;/span&gt;] &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;order&lt;/span&gt;,
            &lt;span class="nv"&gt;Message&lt;/span&gt;[&lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;::&lt;span class="nv"&gt;NotMatch&lt;/span&gt;]&lt;span class="c1"&gt;; Return[],&lt;/span&gt;
            &lt;span class="nv"&gt;coefficient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;coef&lt;/span&gt;
        ]
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;irev&lt;/span&gt;, &lt;span class="nv"&gt;initials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Reverse&lt;/span&gt;[&lt;span class="nv"&gt;ini&lt;/span&gt;], &lt;span class="nv"&gt;initials&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ini&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;crev&lt;/span&gt;, &lt;span class="nv"&gt;coefficient&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Reverse&lt;/span&gt;[&lt;span class="nv"&gt;coefficient&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;nmax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Max&lt;/span&gt;[&lt;span class="nv"&gt;index&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;If&lt;/span&gt;[&lt;span class="nv"&gt;nmax&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= order, Return[initials[[index]]]];&lt;/span&gt;
    &lt;span class="nb"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="mi"&gt;0&lt;/span&gt;, {&lt;span class="nv"&gt;nmax&lt;/span&gt;}]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;, {&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;order&lt;/span&gt;}]]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;initials&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;For&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;order&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;= nmax, i++,&lt;/span&gt;
        &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;i&lt;/span&gt;]] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="nv"&gt;j&lt;/span&gt;, {&lt;span class="nv"&gt;j&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;order&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;}]]].&lt;span class="nv"&gt;coefficient&lt;/span&gt;
    ]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nb"&gt;result&lt;/span&gt;[[&lt;span class="nv"&gt;index&lt;/span&gt;]]
]

&lt;span class="nv"&gt;In&lt;/span&gt;[&lt;span class="mi"&gt;142&lt;/span&gt;]:&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;ini&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {&lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;}&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;coef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;, &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;}&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;c1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;coef&lt;/span&gt;[[&lt;span class="mi"&gt;1&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;c2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;coef&lt;/span&gt;[[&lt;span class="mi"&gt;2&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;c3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;coef&lt;/span&gt;[[&lt;span class="mi"&gt;3&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;c4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;coef&lt;/span&gt;[[&lt;span class="mi"&gt;4&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;c5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;coef&lt;/span&gt;[[&lt;span class="mi"&gt;5&lt;/span&gt;]]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;[&lt;span class="mi"&gt;11&lt;/span&gt;, &lt;span class="nv"&gt;ini&lt;/span&gt;, &lt;span class="nv"&gt;coef&lt;/span&gt;, &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p12&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;[&lt;span class="mi"&gt;12&lt;/span&gt;, &lt;span class="nv"&gt;ini&lt;/span&gt;, &lt;span class="nv"&gt;coef&lt;/span&gt;, &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p13&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;[&lt;span class="mi"&gt;13&lt;/span&gt;, &lt;span class="nv"&gt;ini&lt;/span&gt;, &lt;span class="nv"&gt;coef&lt;/span&gt;, &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p14&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;[&lt;span class="mi"&gt;14&lt;/span&gt;, &lt;span class="nv"&gt;ini&lt;/span&gt;, &lt;span class="nv"&gt;coef&lt;/span&gt;, &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p15&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;LinearRecursion&lt;/span&gt;[&lt;span class="mi"&gt;15&lt;/span&gt;, &lt;span class="nv"&gt;ini&lt;/span&gt;, &lt;span class="nv"&gt;coef&lt;/span&gt;, &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p16&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;c5&lt;/span&gt; &lt;span class="nv"&gt;p11&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;c4&lt;/span&gt; &lt;span class="nv"&gt;p12&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;c3&lt;/span&gt; &lt;span class="nv"&gt;p13&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;c2&lt;/span&gt; &lt;span class="nv"&gt;p14&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p17&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;c5&lt;/span&gt; &lt;span class="nv"&gt;p12&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;c4&lt;/span&gt; &lt;span class="nv"&gt;p13&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;c3&lt;/span&gt; &lt;span class="nv"&gt;p14&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p18&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;c5&lt;/span&gt; &lt;span class="nv"&gt;p13&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;c4&lt;/span&gt; &lt;span class="nv"&gt;p14&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;p19&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;c5&lt;/span&gt; &lt;span class="nv"&gt;p14&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;probs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {&lt;span class="nv"&gt;p15&lt;/span&gt;, &lt;span class="nv"&gt;p16&lt;/span&gt;, &lt;span class="nv"&gt;p17&lt;/span&gt;, &lt;span class="nv"&gt;p18&lt;/span&gt;, &lt;span class="nv"&gt;p19&lt;/span&gt;}&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;gain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;probs&lt;/span&gt;.&lt;span class="nv"&gt;Table&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;, {&lt;span class="nv"&gt;i&lt;/span&gt;, &lt;span class="mi"&gt;15&lt;/span&gt;, &lt;span class="mi"&gt;19&lt;/span&gt;}]

&lt;span class="nv"&gt;Out&lt;/span&gt;[&lt;span class="mi"&gt;159&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="mi"&gt;2893395172951&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;470184984576&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The implementation in R and the corresponding result are as below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param n is the subscript of the array to be calculated&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param ini is the initial values vector starting from the first term&lt;/span&gt;
#&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt; @param  coef is the coefficients vector in the linear recursion equation&lt;/span&gt;
&lt;span class="nv"&gt;fibo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;function&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;,&lt;span class="nv"&gt;ini&lt;/span&gt;,&lt;span class="nv"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;rep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ini&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;,&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;,&lt;span class="nv"&gt;irev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;FALSE&lt;/span&gt;,&lt;span class="nv"&gt;crev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;FALSE&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
    &lt;span class="nv"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ini&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;order&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;2)&lt;/span&gt;
    &lt;span class="nv"&gt;stop&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;the order of the difference equation must be at least 2.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;length&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="nv"&gt;order&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;stop&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;the lengths of the coefficents vector and the initial&lt;/span&gt;
    &lt;span class="nv"&gt;values&lt;/span&gt; &lt;span class="nv"&gt;vector&lt;/span&gt; &lt;span class="nv"&gt;must&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;same&lt;/span&gt;.&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="nv"&gt;nmax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;max&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;nmax&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;=order)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ini&lt;/span&gt;[&lt;span class="nv"&gt;n&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;irev&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;ini&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;rev&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ini&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;crev&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;rev&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;rep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="nv"&gt;nmax&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;:&lt;span class="nv"&gt;order&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;ini&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;order&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:&lt;span class="nv"&gt;nmax&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;]&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;order&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;:&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;]&lt;span class="o"&gt;%*%&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;[&lt;span class="nv"&gt;n&lt;/span&gt;]&lt;span class="ss"&gt;)&lt;/span&gt;
}

&lt;span class="nv"&gt;ini&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;,&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;coef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;rep&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;,&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;c1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;[&lt;span class="mi"&gt;1&lt;/span&gt;]
&lt;span class="nv"&gt;c2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;[&lt;span class="mi"&gt;2&lt;/span&gt;]
&lt;span class="nv"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;[&lt;span class="mi"&gt;3&lt;/span&gt;]
&lt;span class="nv"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;[&lt;span class="mi"&gt;4&lt;/span&gt;]
&lt;span class="nv"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;coef&lt;/span&gt;[&lt;span class="mi"&gt;5&lt;/span&gt;]
&lt;span class="nv"&gt;p11&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;fibo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;,&lt;span class="nv"&gt;ini&lt;/span&gt;,&lt;span class="nv"&gt;coef&lt;/span&gt;,&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;p12&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;fibo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;,&lt;span class="nv"&gt;ini&lt;/span&gt;,&lt;span class="nv"&gt;coef&lt;/span&gt;,&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;fibo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;,&lt;span class="nv"&gt;ini&lt;/span&gt;,&lt;span class="nv"&gt;coef&lt;/span&gt;,&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;p14&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;fibo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;,&lt;span class="nv"&gt;ini&lt;/span&gt;,&lt;span class="nv"&gt;coef&lt;/span&gt;,&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;p15&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;fibo&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;,&lt;span class="nv"&gt;ini&lt;/span&gt;,&lt;span class="nv"&gt;coef&lt;/span&gt;,&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;p16&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p12&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;c2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p14&lt;/span&gt;
&lt;span class="nv"&gt;p17&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p12&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;c3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p14&lt;/span&gt;
&lt;span class="nv"&gt;p18&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p13&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;c4&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p14&lt;/span&gt;
&lt;span class="nv"&gt;p19&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;c5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;p14&lt;/span&gt;
&lt;span class="nv"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;p15&lt;/span&gt;,&lt;span class="nv"&gt;p16&lt;/span&gt;,&lt;span class="nv"&gt;p17&lt;/span&gt;,&lt;span class="nv"&gt;p18&lt;/span&gt;,&lt;span class="nv"&gt;p19&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;gain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;probs&lt;/span&gt;&lt;span class="o"&gt;%*%&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;:&lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; gain&lt;/span&gt;
[,&lt;span class="mi"&gt;1&lt;/span&gt;]
[&lt;span class="mi"&gt;1&lt;/span&gt;,] &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="mi"&gt;153738&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can easily generalize this problem by assume the dice to be a nonsymmetric one with &lt;span class="math"&gt;\(f\)&lt;/span&gt; faces having arbitrary points on it.
Both of the two above methods can apply to the generalized problem,
however the second method is simpler for this kind of problems.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Mathematica"></category><category term="recursion"></category><category term="statistics"></category><category term="probability"></category><category term="Markov chain"></category><category term="fun problems"></category></entry><entry><title>Randomly Select an Integer?!</title><link href="http://www.legendu.net/en/blog/integer-probability-measure/" rel="alternate"></link><published>2013-10-29T17:23:24-07:00</published><updated>2013-10-29T17:23:24-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-10-29:/en/blog/integer-probability-measure/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/number/numbers.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I found this "probability" problem when I read a person's blog. &lt;/p&gt;
&lt;p&gt;What's probability that two randomly chosen nature numbers are relatively prime?&lt;/p&gt;
&lt;p&gt;It is claimed that there is a very elegant solution for this problem. 
This problem reminds me another one. 
Some people asked for an example of a 0-probability …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/number/numbers.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;I found this "probability" problem when I read a person's blog. &lt;/p&gt;
&lt;p&gt;What's probability that two randomly chosen nature numbers are relatively prime?&lt;/p&gt;
&lt;p&gt;It is claimed that there is a very elegant solution for this problem. 
This problem reminds me another one. 
Some people asked for an example of a 0-probability event 
that is not impossible on &lt;a href="http://www.legendu.net/en/tag/fun-problems.html"&gt;COS&lt;/a&gt;. 
And a person said "randomly pick an integer from all integers".
While this example sounds like a neat one, 
it is invalid actually. 
The example assumes that there exists a probablity measure on all integers
such that the measure for each integer is that same. 
However, such a probabiliy measure does not exists. 
This is easy to see. 
Suppose the probability measure for each integer is 0, 
then from countable additivity the probability measure for all integers is 0, 
which is contrary to the fact that the probability measure for the whole set is 1. 
Suppose the probability measure for each integer is &lt;span class="math"&gt;\(\delta&amp;gt;0\)&lt;/span&gt;, 
then from countable additivity the probability measure for all integers is &lt;span class="math"&gt;\(\infty\)&lt;/span&gt;,
which is also contrary to the fact that the probability measure for the whole set is 1.
Coming back to the problem mentioned in the title, 
it essentially makes the assumption there there exists a probability measure on
nature numbers such that each the measure on each number is the same. 
From my previous argument we know such a probability measure does not exist, 
thus this problem is nonsense. 
Bummer! What is the ELEGANT solution? &lt;/p&gt;
&lt;p&gt;A reframed (valid) question is as follows.&lt;/p&gt;
&lt;p&gt;Let &lt;span class="math"&gt;\(n\)&lt;/span&gt; be a (large) positive integer. 
What's the probability that 2 randomly chosen integers 
between (inclusive) 1 and &lt;span class="math"&gt;\(n\)&lt;/span&gt; are relatively prime? 
And does the probability has a limit as &lt;span class="math"&gt;\(n\)&lt;/span&gt; goes to infinity?
If so, what's the limiting probability?&lt;/p&gt;
&lt;p&gt;I will think about how to solve this reframed (valid) question when I have time. 
Possibly the ELEGANT solution mentioned before is a solution to this problem.&lt;/p&gt;
&lt;p&gt;PS: Ask the question that randomly pick an number from all integers, what is the probability
that the number is even. 
I bet most people will answer 0.5.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="random"></category><category term="statistics"></category><category term="nature number"></category><category term="probability"></category><category term="relatively prime"></category><category term="fun problems"></category></entry><entry><title>Fix Microphone Problem of Skype in Debian</title><link href="http://www.legendu.net/en/blog/fix-skype-microphone-problem-in-debian/" rel="alternate"></link><published>2013-08-21T00:00:00-07:00</published><updated>2013-08-21T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-08-21:/en/blog/fix-skype-microphone-problem-in-debian/</id><summary type="html">&lt;p&gt;Install Pulseaudio if you only have ALSA. 
ALSA alone does NOT work with skype whatever people 
on the #Debian channel might think and tell you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pulseaudio&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install pulseaudio volume control&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pavucontrol&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run Skype.&lt;/p&gt;
&lt;p&gt;Go to the Sound devices sections. 
Click on the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Install Pulseaudio if you only have ALSA. 
ALSA alone does NOT work with skype whatever people 
on the #Debian channel might think and tell you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pulseaudio&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install pulseaudio volume control&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pavucontrol&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run Skype.&lt;/p&gt;
&lt;p&gt;Go to the Sound devices sections. 
Click on the Open PulseAudio Volume Control button. 
pavucontrol will open.&lt;/p&gt;
&lt;p&gt;In every tab maximize ALL the volume sliders.
Go to the configuration tab. Mine has two sections. 
One is called RV710/730. 
Turn this off in the dropdown menu below it.
The other one is called "Internal Audio". 
Choose "Analog Stereo Duplex" in the dropdown menu.
When you go back to the "Input Devices" tab now, 
you will see that there is an setting for "Internal Audio Analog Stereo". 
Crank this to 100%.
In the "Output Devices" tab, 
choose the "Analog Output" port from the dropdown menu. 
Crank the front left as well as front right channel to the max 100%.&lt;/p&gt;</content><category term="audio"></category><category term="Software"></category><category term="Linux"></category></entry><entry><title>Culture of My Summer Intern Team</title><link href="http://www.legendu.net/en/blog/team-culture-of-Credit-portfolio-risk-analysis/" rel="alternate"></link><published>2013-08-01T00:00:00-07:00</published><updated>2013-08-01T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2013-08-01:/en/blog/team-culture-of-Credit-portfolio-risk-analysis/</id><summary type="html">&lt;p&gt;I work as a student intern in the Credit Portfolio Risk Analysis group 
in a bank this summer.
One Friday afternoon,
Jimmy, the manager of my manager, 
asked me to his office and talked about our team cultures.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ownership &lt;br&gt;
Whenever you have a project, 
you are the ownner. 
Be proud …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;I work as a student intern in the Credit Portfolio Risk Analysis group 
in a bank this summer.
One Friday afternoon,
Jimmy, the manager of my manager, 
asked me to his office and talked about our team cultures.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ownership &lt;br&gt;
Whenever you have a project, 
you are the ownner. 
Be proud of it, do your best, and make a difference.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teamwork&lt;br&gt;
The bank wants a strong team rather than strong individuals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom Service&lt;br&gt;
Custom service is the most important thing for the team.
We need to build good relationships with customs and earn their trust.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge Sharing&lt;br&gt;
Be willing to share your knowledge with other team members,
and be willing to learn from other team members.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Continuous Learning &lt;br&gt;
"Every night before you go to sleep, 
ask yourself, 
what have I learned today?"
&lt;p align="right"&gt;
-- Jimmy
&lt;/p&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="work"></category><category term="office"></category><category term="team culture"></category></entry><entry><title>MATLAB IDE</title><link href="http://www.legendu.net/en/blog/MATLAB-ide/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/MATLAB-ide/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Command &lt;code&gt;help&lt;/code&gt; offers help on functions, classes, packages and so on, 
but it support command style only, 
i.e. it can only be used without parentheses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Shift+F1&lt;/code&gt; hot key in command window opens the function browser in MATLAB. 
The &lt;code&gt;F1&lt;/code&gt; hot key opens the help document for function …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Command &lt;code&gt;help&lt;/code&gt; offers help on functions, classes, packages and so on, 
but it support command style only, 
i.e. it can only be used without parentheses.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Shift+F1&lt;/code&gt; hot key in command window opens the function browser in MATLAB. 
The &lt;code&gt;F1&lt;/code&gt; hot key opens the help document for function
where the cursor is. 
The &lt;code&gt;Ctrl+SPACE&lt;/code&gt; hot key pop out parameter hint for the function where the cursor is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Ctrl+C&lt;/code&gt; hot key in command window halts the current execution if any. 
This is helpful if you want to stop a time-consuming evaluation, 
e.g. when you forget to put an semicolon 
after an expression which produces a very large output. 
Note that this can also be dangerous 
if you do want to run a time-consuming program in MATLAB. 
A safe way is to lock the computer 
if you do not have to use it while the code is running, 
or at least you should minimize the MATLAB command window 
so that it will not be interrupted by your misoperation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="IDE"></category><category term="software"></category><category term="MATLAB"></category></entry><entry><title>Linear Algebra in MATLAB</title><link href="http://www.legendu.net/en/blog/linear-algebra-in-MATLAB/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/linear-algebra-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unlike most other programming languages, 
to get elements of an array in MATLAB, 
you have to parentheses to specify index. 
See more information in &lt;a href="http://dclong.github.io/en/2012/05/containers-summary-in-popular-languages/"&gt;this post&lt;/a&gt;.
If you want to get or set elements of a cell in MATLAB, 
you have to use curly braces. 
If you use parentheses to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unlike most other programming languages, 
to get elements of an array in MATLAB, 
you have to parentheses to specify index. 
See more information in &lt;a href="http://dclong.github.io/en/2012/05/containers-summary-in-popular-languages/"&gt;this post&lt;/a&gt;.
If you want to get or set elements of a cell in MATLAB, 
you have to use curly braces. 
If you use parentheses to extract elements of a cell,
the result will still be a cell.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vrrotmat2vec&lt;/code&gt; converts a rotation matrix to its axis-angle representation. 
Conversely, 
&lt;code&gt;vrrotvec2mat&lt;/code&gt; converts an axis-angle
(the axis do not have to be a unit one, as long as it is not a zero vector) 
representation of a rotation matrix to a matrix form.
There are also many other representations of a rotation matrix, 
e.g. Euler angle representation and quaternion representation.
&lt;code&gt;dcm2angle&lt;/code&gt; and &lt;code&gt;angle2dcm&lt;/code&gt; converts between a rotation matrix and its Euler angle representation; 
&lt;code&gt;quat2dcm&lt;/code&gt; and &lt;code&gt;dcm2quat&lt;/code&gt; converts between a rotation matrix and its quaternion representation;
&lt;code&gt;quat2angle&lt;/code&gt; and &lt;code&gt;angle2quat&lt;/code&gt; converts between the Euler angle representation 
and quaternion representation of a rotation matrix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;all&lt;/code&gt; to check whether the elements of a vector 
(either a column vector or a row vector) are all &lt;code&gt;true&lt;/code&gt; (or non-zero values). 
How ever if you apply &lt;code&gt;all&lt;/code&gt; on an matrix or a multi-dimensional array, 
you will get vectors or arrays of boolean values depending on the dimension you specified. 
To check whether all elements of a matrix or multi-dimensional array are &lt;code&gt;true&lt;/code&gt; 
(or non-zero values), 
you have use &lt;code&gt;all&lt;/code&gt; more than once. 
For example, 
if &lt;code&gt;bmat&lt;/code&gt; is a boolean matrix in MATLAB, 
you can use &lt;code&gt;all(all(bmat))&lt;/code&gt; to check whether all elements of &lt;code&gt;bmat&lt;/code&gt; are &lt;code&gt;true&lt;/code&gt;. 
&lt;code&gt;any&lt;/code&gt; works similarly to &lt;code&gt;all&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;size&lt;/code&gt; to get the dimensions of an array. 
You can specify more output variables than necessary for &lt;code&gt;size&lt;/code&gt;, 
and these redundant variables will have value &lt;code&gt;1&lt;/code&gt;. 
If you specify less output variables than the dimension of the array, 
then the last output variable is the product of these left dimensions. 
To get the &lt;span class="math"&gt;\(k^&lt;code&gt;th&lt;/code&gt;\)&lt;/span&gt; dimension of an array &lt;code&gt;a&lt;/code&gt;, 
you can simply use &lt;code&gt;size(a,k)&lt;/code&gt;. 
If you are just interested in the first two dimensions of a multi-dimensional array &lt;code&gt;a&lt;/code&gt;, 
then you can use &lt;span class="math"&gt;\([n_1, n_2, \sim]\)&lt;/span&gt; to extract the first two dimensions, 
where &lt;span class="math"&gt;\(\sim\)&lt;/span&gt; means that the left dimensions will be ignored.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To get the largest dimension of an array, 
you can use &lt;code&gt;length&lt;/code&gt;, 
which is different from R that uses &lt;code&gt;length&lt;/code&gt; to get the total number of elements in an array or list. 
To get the total number of elements of an array in MATLAB, you have to use &lt;code&gt;numel&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arrayfun&lt;/code&gt; applies a given function to each element of an array,
which is similar to &lt;code&gt;apply&lt;/code&gt; in R. 
&lt;code&gt;arrayfun&lt;/code&gt; in MATLAB is not as convenient as &lt;code&gt;apply&lt;/code&gt; in R 
which can also apply a function to marginals of an arrays instead of only elements of the array,
however there are some functions (mostly statistical summary functions) 
in MATLAB that allows you to work on specified marginals of an array, 
e.g. &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;mean&lt;/code&gt; and so on. 
Use these functions can avoid inconvenient loops in MATLAB. 
Sometimes, 
you might want to pass extra parameters to the function 
that is to be applied to each element of an array. 
&lt;To do this, please refer to ...&gt;
Similar to &lt;code&gt;arrayfun&lt;/code&gt;, &lt;code&gt;cellfun&lt;/code&gt; applies a given function to each element in a cell array. 
From my experience, &lt;code&gt;cellfun&lt;/code&gt; has advantage when its elements have different sizes (or even types), 
which make coding simpler. 
It does not seem to speed up the code compared to loops. 
There is also another &lt;code&gt;spfun&lt;/code&gt; which applies a given function to non-zero elements of a sparse matrix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In &lt;code&gt;R&lt;/code&gt; a vectors is very flexible, 
and it can be a row vector or a column vector depends on different situations.
A vector in R is different from a matrix.
In MATLAB a vector is a matrix (either $1\times n)' or $n\times1)') 
and thus there are both column vectors and row vectors in MATLAB.
Function and operations usually behave differently on row vector and column vector in MATLAB. 
Since a vector in MATLAB is essentially a matrix, operations on vectors must
be compatible matrix operations. Since in Mathematics vectors are
column vectors by default, you'd better use column vectors in MATLAB
if both row and column vectors are OK.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;isempty&lt;/code&gt; to check whether an array is empty in MATLAB, &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;null&lt;/code&gt; calculates the null space of a matrix.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;repmat&lt;/code&gt; replicates and tile array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eigs&lt;/code&gt; is frequently used to find the eigenvalues of sparse square
matrices. Because a sparse square matrix usually has a very large
dimension, it has a large amount (the same as its dimension) of
eigenvalues. Usually only a few of them are interesting. To
calculate the $k)' large eigenvalue of a sparse matrix &lt;code&gt;spm&lt;/code&gt;, you
can use &lt;code&gt;eigs(spm,k)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="algebra"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Numerical Analysis in MATLAB</title><link href="http://www.legendu.net/en/blog/numerical-analysis-in-MATLAB/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/numerical-analysis-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fmincon&lt;/code&gt; finds minimum of constrained nonlinear multivariate function.
&lt;code&gt;fminunc&lt;/code&gt; finds minimum of unconstrained nonlinear multivariate function.
&lt;code&gt;fgoalattain&lt;/code&gt; solves multiobjective goal attainment problems; 
&lt;code&gt;fminimax&lt;/code&gt; solves minimax constraint problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you use one of these functions mentioned above to do optimizations, 
you might want to pass extra parameters to the objective function …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fmincon&lt;/code&gt; finds minimum of constrained nonlinear multivariate function.
&lt;code&gt;fminunc&lt;/code&gt; finds minimum of unconstrained nonlinear multivariate function.
&lt;code&gt;fgoalattain&lt;/code&gt; solves multiobjective goal attainment problems; 
&lt;code&gt;fminimax&lt;/code&gt; solves minimax constraint problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you use one of these functions mentioned above to do optimizations, 
you might want to pass extra parameters to the objective function. 
You can do this directly in R, 
however, 
you have to this indirectly in MATLAB. 
To pass extra parameters to the objective function, 
there are 3 different ways: anonymous function, nested function and global variable. 
I think anonymous function is the best an most nature way to do it. 
Suppose you have defined an objective function &lt;code&gt;myObjFun(x,a,b,c)&lt;/code&gt;, 
and you want to do optimization for given &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;. 
You can first specify values for &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;, 
define a function handle &lt;code&gt;f=@(x)myObjFun(x,a,b,c)&lt;/code&gt;, 
and then optimize function handle &lt;code&gt;f&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;quadl&lt;/code&gt; can be used to numerically calculate integrals. 
To calculate integrals symbolically, 
you can use &lt;code&gt;int&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Error when Launching MATLAB in Linux</title><link href="http://www.legendu.net/en/blog/problem-when-launching-MATLAB/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/problem-when-launching-MATLAB/</id><summary type="html">&lt;p&gt;See &lt;a href="http://www.mathworks.com/support/solutions/en/data/1-F68FSA/index.html?solution=1-F68FSA"&gt;here&lt;/a&gt;
for more information.&lt;/p&gt;</summary><content type="html">&lt;p&gt;See &lt;a href="http://www.mathworks.com/support/solutions/en/data/1-F68FSA/index.html?solution=1-F68FSA"&gt;here&lt;/a&gt;
for more information.&lt;/p&gt;</content><category term="Linux"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Sending Email in MATLAB</title><link href="http://www.legendu.net/en/blog/send-email-in-MATLAB/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/send-email-in-MATLAB/</id><summary type="html">&lt;p&gt;It is very easy to send emails in MATLAB. 
To do this, you can just call &lt;code&gt;sendmail&lt;/code&gt;. 
However, 
usually you need to set preference for sending emails using &lt;code&gt;setpref&lt;/code&gt; first. 
Here is one example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;Define&lt;/span&gt; &lt;span class="nv"&gt;these&lt;/span&gt; &lt;span class="nv"&gt;variables&lt;/span&gt; &lt;span class="nv"&gt;appropriately&lt;/span&gt;:
&lt;span class="nv"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;username@gmail.com&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;; %Your GMail email address&lt;/span&gt;
&lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;password&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;; %Your GMail …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;It is very easy to send emails in MATLAB. 
To do this, you can just call &lt;code&gt;sendmail&lt;/code&gt;. 
However, 
usually you need to set preference for sending emails using &lt;code&gt;setpref&lt;/code&gt; first. 
Here is one example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nv"&gt;Define&lt;/span&gt; &lt;span class="nv"&gt;these&lt;/span&gt; &lt;span class="nv"&gt;variables&lt;/span&gt; &lt;span class="nv"&gt;appropriately&lt;/span&gt;:
&lt;span class="nv"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;username@gmail.com&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;; %Your GMail email address&lt;/span&gt;
&lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;password&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;; %Your GMail password&lt;/span&gt;
&lt;span class="o"&gt;%%&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;Then&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;code&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;up&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;preferences&lt;/span&gt; &lt;span class="nv"&gt;properly&lt;/span&gt;:
&lt;span class="nv"&gt;setpref&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Internet&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;E_mail&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="nv"&gt;mail&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;setpref&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Internet&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SMTP_Server&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;smtp.gmail.com&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;setpref&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Internet&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SMTP_Username&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="nv"&gt;mail&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;setpref&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Internet&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;SMTP_Password&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;java&lt;/span&gt;.&lt;span class="nv"&gt;lang&lt;/span&gt;.&lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;getProperties&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;props&lt;/span&gt;.&lt;span class="nv"&gt;setProperty&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;mail.smtp.auth&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;true&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;props&lt;/span&gt;.&lt;span class="nv"&gt;setProperty&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;mail.smtp.socketFactory.class&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;javax.net.ssl.SSLSocketFactory&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;props&lt;/span&gt;.&lt;span class="nv"&gt;setProperty&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;mail.smtp.socketFactory.port&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;465&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;%%&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;Send&lt;/span&gt; &lt;span class="nv"&gt;email&lt;/span&gt;. &lt;span class="nv"&gt;The&lt;/span&gt; &lt;span class="nv"&gt;first&lt;/span&gt; &lt;span class="nv"&gt;argument&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;recipient&lt;/span&gt;.
&lt;span class="nv"&gt;sendmail&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;receiver@gmail.com&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Test from MATLAB&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;,&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Hello! This is a test from MATLAB!&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="MATLAB"></category><category term="programming"></category><category term="email"></category></entry><entry><title>Special Functions in MATLAB</title><link href="http://www.legendu.net/en/blog/special-functions-in-MATLAB/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/special-functions-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sin&lt;/code&gt; calculates sine of arguments in radian 
while &lt;code&gt;sind&lt;/code&gt; calculates sine of arguments in degrees; 
&lt;code&gt;asin&lt;/code&gt; calculates inverse of sine resulting in radian 
while &lt;code&gt;asind&lt;/code&gt; calculates inverse of sine resulting in degrees. 
Other triangular functions behave similarly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The modified Bessel function of the first kind &lt;code&gt;$I_n(x)$&lt;/code&gt; 
is implemented as …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sin&lt;/code&gt; calculates sine of arguments in radian 
while &lt;code&gt;sind&lt;/code&gt; calculates sine of arguments in degrees; 
&lt;code&gt;asin&lt;/code&gt; calculates inverse of sine resulting in radian 
while &lt;code&gt;asind&lt;/code&gt; calculates inverse of sine resulting in degrees. 
Other triangular functions behave similarly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The modified Bessel function of the first kind &lt;code&gt;$I_n(x)$&lt;/code&gt; 
is implemented as &lt;code&gt;besseli&lt;/code&gt; in MATLAB. 
Notice that for large value &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;$I_n(x)$&lt;/code&gt; is huge, 
so it is better to use scaled Bessel function for large &lt;code&gt;x&lt;/code&gt;. 
To do this, you just need specify an extra argument for &lt;code&gt;besseli&lt;/code&gt;. 
Notice that other kind of Bessel functions are also implemented in MATLAB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Incomplete Beta function is implemented as &lt;code&gt;betainc&lt;/code&gt; 
and incomplete Gamma function is implemented as &lt;code&gt;gammainc&lt;/code&gt; in MATLAB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The logarithm of Gamma function is implemented as &lt;code&gt;gammaln&lt;/code&gt; 
and the logarithm of Beta function is implemented as &lt;code&gt;betaln&lt;/code&gt; in MATLAB.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cart2sph, cart2pol, pol2crt, sph2cart, hsv2rgb&lt;/code&gt; and &lt;code&gt;rgb2hsv&lt;/code&gt; can
transform coordinates between different coordinate systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mfun&lt;/code&gt; can help evaluate special mathematica functions numerically,
but you should be aware of the fact that the result return by
calling &lt;code&gt;mfun&lt;/code&gt; is not as accurate as invoking these special function
directly in MATLAB, especially when a function is near its root and
its arguments are relatively large. Also &lt;code&gt;mfunlist&lt;/code&gt; can list special
functions for use with &lt;code&gt;mfun&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="function"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>MATLAB for Statisticians</title><link href="http://www.legendu.net/en/blog/statistics-in-MATLAB/" rel="alternate"></link><published>2012-12-04T00:00:00-08:00</published><updated>2012-12-04T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-04:/en/blog/statistics-in-MATLAB/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are generally two ways to generate uniform and normal random numbers in MATLAB. 
One ways is to use [functions] &lt;code&gt;randn&lt;/code&gt; (for standard normal distribution) 
and &lt;code&gt;rand&lt;/code&gt; (for standard uniform distribution). 
The other way is to use [functions] &lt;code&gt;unirnd&lt;/code&gt; and &lt;code&gt;normrnd&lt;/code&gt; 
(there are also functions end with "rnd" for generating …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are generally two ways to generate uniform and normal random numbers in MATLAB. 
One ways is to use [functions] &lt;code&gt;randn&lt;/code&gt; (for standard normal distribution) 
and &lt;code&gt;rand&lt;/code&gt; (for standard uniform distribution). 
The other way is to use [functions] &lt;code&gt;unirnd&lt;/code&gt; and &lt;code&gt;normrnd&lt;/code&gt; 
(there are also functions end with "rnd" for generating random numbers from other distributions). 
The difference between these two different kinds of functions is that 
the first group of functions generate only "standard" distributions 
while the second group of functions generate distribution with any parameters. 
So the group of functions end with "rnd" is recommended to use.
In old versions (2010a and earlier) of MATLAB, 
these random number generating functions end with "rnd" might cause problems 
in parallel computing. 
Then you want to use these two basic functions &lt;code&gt;rand&lt;/code&gt; and &lt;code&gt;randn&lt;/code&gt;, 
and use all kinds of technics to generate random variables you want.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;randsample&lt;/code&gt; generates a random sample 
from a given collection of data with or without replacement. 
It also support weighted sampling with replacement, 
but does not support weighted sampling without replacement. 
There is another very similar but more powerful function called &lt;code&gt;datasample&lt;/code&gt; 
which support weighted sampling (both with and without replacement). 
Note that both these two functions can generate random permutations 
which was frequently done using &lt;code&gt;randperm&lt;/code&gt; in MATLAB of older versions. 
For old versions (before 2011b) of MATLAB, 
you can use &lt;code&gt;randi&lt;/code&gt; to generate random indexes 
and extract corresponding elements of arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When MATLAB starts, 
it set the random number generator to the default one 
and set the seed to be the default seed. 
So if you run a simulation, 
reboot MATLAB and run the same simulation, 
you will get the same results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tabular&lt;/code&gt; counts the frequency of observations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;iqr&lt;/code&gt; calculates the interquartile range of given data.
There is a similar function called &lt;code&gt;IQR&lt;/code&gt; in R.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="statistics"></category><category term="programming"></category><category term="MATLAB"></category></entry><entry><title>Java Programming Style</title><link href="http://www.legendu.net/en/blog/java-programming-style/" rel="alternate"></link><published>2012-12-03T00:00:00-08:00</published><updated>2012-12-03T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-12-03:/en/blog/java-programming-style/</id><summary type="html">&lt;h2 id="good-writing-style"&gt;Good Writing Style&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is recommend to always use &lt;code&gt;{}&lt;/code&gt; if even there is only one statement inside it. 
The reason is that you never know whether you are going to add more statements into it or not. 
And it will make the code more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feel free to declare the …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="good-writing-style"&gt;Good Writing Style&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is recommend to always use &lt;code&gt;{}&lt;/code&gt; if even there is only one statement inside it. 
The reason is that you never know whether you are going to add more statements into it or not. 
And it will make the code more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feel free to declare the variable in the smallest &lt;code&gt;{}&lt;/code&gt; block possible. 
The compiler will optimize this kind of code for us. 
So it is better to make the code more readable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is always good to write code similar to how you would solve the problem naturely. 
It is easy to make mistakes when we try to make the code more concise. 
Unless you can dramatically improve the performance of the code, 
do not change the code for conciseness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid using a same name for a different types (instance, local and argument) of variables.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="style"></category><category term="Java"></category><category term="programming"></category></entry><entry><title>R for Numerical Analysis</title><link href="http://www.legendu.net/en/blog/r-for-numerical-analysis/" rel="alternate"></link><published>2012-11-21T00:00:00-08:00</published><updated>2012-11-21T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-21:/en/blog/r-for-numerical-analysis/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Usually when we check whether two double values equal or not, we
would check whether they're close enough or not. This is due to
possible information loss of double values stored in computer.
However, in R we can directly use &lt;code&gt;==&lt;/code&gt; to check whether two objects
(including double values) equal or …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Usually when we check whether two double values equal or not, we
would check whether they're close enough or not. This is due to
possible information loss of double values stored in computer.
However, in R we can directly use &lt;code&gt;==&lt;/code&gt; to check whether two objects
(including double values) equal or not. This is because for double
values, R will automatically check whether they are close or not
instead of checking whether they are equal like other languages do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;optim&lt;/code&gt; and &lt;code&gt;optimize&lt;/code&gt; can be used to find the minimum and
maximum value of a function. By default these two functions find the
minimum value. But we can use control=list(fnscale=-1) in optim and
maximum=T in optimize to find the maximum value. Surely there are
some difference between these functions. First we give an original
value of the parameter for the function &lt;code&gt;optim&lt;/code&gt; while we give an
interval of the parameter for the function &lt;code&gt;optimize&lt;/code&gt;. Second and
also most important, the function &lt;code&gt;optimize&lt;/code&gt; can only do the
optimization over one variable while the function &lt;code&gt;optim&lt;/code&gt; can do the
optimization over multiple variables. However, when we use &lt;code&gt;optim&lt;/code&gt;
to do optimization over multiple variables, we must put these
variables into a single vector.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use function &lt;code&gt;uniroot&lt;/code&gt; to find the roots of a given function,
and we can use function &lt;code&gt;optim&lt;/code&gt; or &lt;code&gt;optimize&lt;/code&gt; to find the maximum or
minimum value of a function.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="optimization"></category><category term="programming"></category><category term="numerical analyis"></category><category term="R"></category></entry><entry><title>R System and Configurations</title><link href="http://www.legendu.net/en/blog/r-system-and-configurations/" rel="alternate"></link><published>2012-11-21T00:00:00-08:00</published><updated>2012-11-21T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-11-21:/en/blog/r-system-and-configurations/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To allow opening R from a directory in R in Windows system, we can
modify the registry. More specifically, we can add a command name
(to be appear in the right-click menu) under
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Backgroup\shell&lt;/code&gt;, and then
add a subkey &lt;code&gt;command&lt;/code&gt; under it. Last, we just need to …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/r/r.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To allow opening R from a directory in R in Windows system, we can
modify the registry. More specifically, we can add a command name
(to be appear in the right-click menu) under
&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Backgroup\shell&lt;/code&gt;, and then
add a subkey &lt;code&gt;command&lt;/code&gt; under it. Last, we just need to change the
default value to be the command that we want to run each time we
click the menu item.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are many ways to change configurations of R. For example, to
change the default working directory of R in Windows, you can change
the properties of the shortcut of R software, which also applies to
other softwares in Windows. Another way is to put some code which
changes the default working directory into file &lt;code&gt;Rprofile.site&lt;/code&gt; 
(The code inside this file will be run on the startup of R.).
The latter way can also be used to set other configurations for R,
and it is preferred to other ways of setting configurations for R,
because it is a universal way and is guaranteed to work (If you set configurations for R in other ways and at the same
time, set configurations in file &lt;code&gt;Rprofile.site&lt;/code&gt;, these
configurations in file &lt;code&gt;Rprofile.site&lt;/code&gt; will be in effect.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;R.Version&lt;/code&gt; can display the version information of R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;args&lt;/code&gt; can show the arguments of functions in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can use function &lt;code&gt;Sys.sleep&lt;/code&gt; to suspend execution of R for given
time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By default, function &lt;code&gt;ls&lt;/code&gt; returns non-hidden objects 
(By default, &lt;code&gt;ls&lt;/code&gt; does not return objects whose names start with a
dot. For this reason I call these objects whose name start with a
dot hidden objects.) in current
environment. For example if we use &lt;code&gt;ls()&lt;/code&gt; in a function, then it
only returns these non-hidden objects defined in the function. To
get non-hidden object in the top level environment (R workspace),
you can use &lt;code&gt;ls(pos=1)&lt;/code&gt;; to get non-hidden objects in a package, we
can use &lt;code&gt;ls(pos="package:pkgname")&lt;/code&gt;. Sometimes, you might want to
see all objects including these hidden ones in an environment. To do
so, you can use the option &lt;code&gt;all.anmes=T&lt;/code&gt;. Notice that &lt;code&gt;ls&lt;/code&gt; also support
regular expression (use the option &lt;code&gt;pattern&lt;/code&gt;), which enables you to find
objects in R workspace faster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In order to be convenient, usually we would like to specify short
names of executables. Sometimes this could lead to failure because
some functions in R do not accept short names of executables, e.g.
&lt;code&gt;shell.exec&lt;/code&gt;, which is really stupid. A good way to solve the
problem is to use function &lt;code&gt;Sys.which&lt;/code&gt; to find the full name of
executables. Conversely, function &lt;code&gt;basename&lt;/code&gt; can get the base name
of a path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;system&lt;/code&gt; calls invokes a system command, but the command passed to
it must be an executable (extensions &lt;code&gt;.exe&lt;/code&gt; or &lt;code&gt;.com&lt;/code&gt;) or a batch
file (extensions &lt;code&gt;.cmd&lt;/code&gt; or &lt;code&gt;.bat&lt;/code&gt;). Redirection, pipes, DOS internal
commands and so on cannot be used with &lt;code&gt;system&lt;/code&gt;. &lt;code&gt;shell&lt;/code&gt; is a more
user-friendly wrapper for &lt;code&gt;system&lt;/code&gt; which is more powerful (support
redirection, pipes, DOS internal commands and so on). If you want to
make use of Windows file association, use &lt;code&gt;shell.exec&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;search&lt;/code&gt; returns search path for R, which includes loaded
packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;demo&lt;/code&gt; is helpful to show how to use a function or package,
however, it creates many global variables which is annoying. Using
function &lt;code&gt;example&lt;/code&gt; can solve this problem, but it seems that these
functions are not exactly the same. I'm a little confused about
these two functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R support partial matching on tags, which means that usually you
do not have to use full names for arguments of a R function. You can
use partial names for arguments. However, always be careful when a R
function takes &lt;code&gt;ldots&lt;/code&gt; as an argument.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Function &lt;code&gt;Sys.setenv&lt;/code&gt; and &lt;code&gt;Sys.unsetenv&lt;/code&gt; can set and unset
environment variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Sys.info&lt;/code&gt; contains information about the operating system. Variable
&lt;code&gt;.Platform&lt;/code&gt; contains information about R system 
(Actually information related to R system are usually stored in
variables starting with dot).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Sys.time&lt;/code&gt; returns the system time, i.e. the time of the computer on
which the code is run. There is another function called &lt;code&gt;system.time&lt;/code&gt;
which can calculate how much time an evaluation takes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gc&lt;/code&gt; collect garbage. R is infamous for extensive memory using. If
you delete some big objects in R workspace, you'd better use &lt;code&gt;gc()&lt;/code&gt;
to manually trigger the garbage collection.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the good us of &lt;code&gt;source&lt;/code&gt; with local = TRUE ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;options&lt;/code&gt; allows one to get and set a variety of global options
which affect the way in which R computes and displays ints results.
For example, &lt;code&gt;options(width=40)&lt;/code&gt; forces R to format its output
results to have at most 40 characters (if possible). Notice that
this can be very helpful if you use Sweave. For example, if the
outputs of some R code in Sweave is too long, you can add a similar
command as above to format the R outputs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="R"></category><category term="configuration"></category><category term="programming"></category><category term="system"></category></entry><entry><title>Pointers in C++</title><link href="http://www.legendu.net/en/blog/pointers-in-cpp/" rel="alternate"></link><published>2012-10-21T00:00:00-07:00</published><updated>2012-10-21T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-21:/en/blog/pointers-in-cpp/</id><summary type="html">&lt;h2 id="pointers"&gt;Pointers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No pointer, no polymorphism.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ is notorious for raw pointers. 
While pointers can boost up the speed of programs, 
it invites a trillion chances for making mistakes. 
You should avoid using raw pointers, 
instead, 
consider using &lt;code&gt;unique_ptr&lt;/code&gt;, &lt;code&gt;shared_ptr&lt;/code&gt; and &lt;code&gt;weak_ptr&lt;/code&gt;.
They are almost as efficient as raw pointers …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="pointers"&gt;Pointers&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;No pointer, no polymorphism.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ is notorious for raw pointers. 
While pointers can boost up the speed of programs, 
it invites a trillion chances for making mistakes. 
You should avoid using raw pointers, 
instead, 
consider using &lt;code&gt;unique_ptr&lt;/code&gt;, &lt;code&gt;shared_ptr&lt;/code&gt; and &lt;code&gt;weak_ptr&lt;/code&gt;.
They are almost as efficient as raw pointers but much safer to use. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If &lt;code&gt;p&lt;/code&gt; is a dynamically allocated array, 
you have to use &lt;code&gt;delete[] p&lt;/code&gt; to delete it when it is no longer required. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto_ptr&lt;/code&gt; objects cannot be stored in STL containers, 
because they are not copy-construable or assignable.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="C++"></category><category term="programming"></category><category term="pointer"></category></entry><entry><title>Write Portable C++ Code</title><link href="http://www.legendu.net/en/blog/write-portable-cpp-code/" rel="alternate"></link><published>2012-10-21T00:00:00-07:00</published><updated>2012-10-21T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-10-21:/en/blog/write-portable-cpp-code/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Addresses on 64 and 32 OS are different, 
so you have to be careful when your program have to deal with address. 
For example, 
if you take the difference of two pointers/iterators, 
you should type &lt;code&gt;std::ptrdiff_t&lt;/code&gt; (which is essentially a singed integer type). 
Using an arbitrary integer type …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Addresses on 64 and 32 OS are different, 
so you have to be careful when your program have to deal with address. 
For example, 
if you take the difference of two pointers/iterators, 
you should type &lt;code&gt;std::ptrdiff_t&lt;/code&gt; (which is essentially a singed integer type). 
Using an arbitrary integer type makes you code non-portable. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;std::size_t&lt;/code&gt; represents the unsigned native integer size 
on the current architecture (i.e. 16-bit, 32-bit or 64-bit) compiling the code. 
So, to make your code portable,
you should decare indexing variables in loops as &lt;code&gt;std::size_t&lt;/code&gt; instead of &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;unsigned int&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="C++"></category><category term="programming"></category><category term="portable"></category></entry><entry><title>Automated Verizon Phone Bill (Continued)</title><link href="http://www.legendu.net/en/blog/automated-verizon-phone-bill-continued/" rel="alternate"></link><published>2012-09-05T00:00:00-07:00</published><updated>2012-09-05T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-09-05:/en/blog/automated-verizon-phone-bill-continued/</id><summary type="html">&lt;p&gt;I have switched to the "Share Everything" plan of Verizon two weeks ago,
and I got a little complex bill this month due to people leaving and joining my family plan. 
My ruby program for parsing phone bill still works well. 
It is actually surprising smarter than I thought on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have switched to the "Share Everything" plan of Verizon two weeks ago,
and I got a little complex bill this month due to people leaving and joining my family plan. 
My ruby program for parsing phone bill still works well. 
It is actually surprising smarter than I thought on this complicated bill. 
Big congratulations to myself!&lt;/p&gt;</content><category term="phone"></category><category term="verizon"></category><category term="Ruby"></category><category term="programming"></category></entry><entry><title>Load User-written Script into Ruby</title><link href="http://www.legendu.net/en/blog/load-script-ruby/" rel="alternate"></link><published>2012-08-25T00:00:00-07:00</published><updated>2012-08-25T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-25:/en/blog/load-script-ruby/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;By default the current working directoly is not in the search path of Ruby. 
To load a user-written script named "script.rb" into Ruby, 
you can use the command &lt;code&gt;require './script.rb'&lt;/code&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;By default the current working directoly is not in the search path of Ruby. 
To load a user-written script named "script.rb" into Ruby, 
you can use the command &lt;code&gt;require './script.rb'&lt;/code&gt;.&lt;/p&gt;</content><category term="search path"></category><category term="require"></category><category term="programming"></category><category term="load"></category><category term="package"></category><category term="Ruby"></category></entry><entry><title>Tips for Ruby</title><link href="http://www.legendu.net/en/blog/tips-ruby/" rel="alternate"></link><published>2012-08-25T00:00:00-07:00</published><updated>2012-08-25T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-25:/en/blog/tips-ruby/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="200" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="array"&gt;Array&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;push&lt;/code&gt; inserts an element to the back of the arry; 
the method &lt;code&gt;insert&lt;/code&gt; inserts an element to any place of the array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;pop&lt;/code&gt; removes the last element of the array;
the method &lt;code&gt;delete&lt;/code&gt; removes any specified element from the array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;concat&lt;/code&gt; combines the …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="200" align="right"/&gt;&lt;/p&gt;
&lt;h2 id="array"&gt;Array&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;push&lt;/code&gt; inserts an element to the back of the arry; 
the method &lt;code&gt;insert&lt;/code&gt; inserts an element to any place of the array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;pop&lt;/code&gt; removes the last element of the array;
the method &lt;code&gt;delete&lt;/code&gt; removes any specified element from the array.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;concat&lt;/code&gt; combines the array with another one;
the method &lt;code&gt;join&lt;/code&gt; concatenates all elements in the array separated 
by the specified delimiter. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="string"&gt;String&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the method &lt;code&gt;to_i&lt;/code&gt; to convert a string to integer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You use both single and double quotes to denote string. 
The difference is that single quotes preserves 
escape characters while double quotes interprete escape characters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;end_with?&lt;/code&gt; check whether a string ends with the specified string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;upcase&lt;/code&gt; returns a copy of the string with lower case letters
replaced with their upper case letters; 
the method &lt;code&gt;downcase&lt;/code&gt; returns a copy of the string with upper case letters 
replaced with their lower case letters;
the method &lt;code&gt;swapcase&lt;/code&gt; return a copy of the string with lower case letters 
replaced with their upper case letters and upper case character replaced with 
their lower case letters. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the method &lt;code&gt;strip&lt;/code&gt; to remove leading and trailing white spaces.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="input-and-output"&gt;Input and Output&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Both the function &lt;code&gt;puts&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; display the content of objects 
on the console. The difference is that the function &lt;code&gt;puts&lt;/code&gt; add a new line
to the end if their is no one while &lt;code&gt;print&lt;/code&gt; not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;gets&lt;/code&gt; read in input from the console. 
You can use the &lt;code&gt;chomp&lt;/code&gt; method to ignore new lines,
i.e., you can use &lt;code&gt;gets.chomp&lt;/code&gt; to read a single line from the console.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="file-and-directory"&gt;File and Directory&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You can use the method &lt;code&gt;Dir.entries&lt;/code&gt; to query files and subdirectories
in a directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The method &lt;code&gt;File.delete&lt;/code&gt; removes files specified files. 
The number of files passed as arguments is returned. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="flow-control"&gt;Flow Control&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You cannot use &lt;code&gt;else if&lt;/code&gt; in Ruby, instead you can use &lt;code&gt;elsif&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="object-and-class"&gt;Object and Class&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code&gt;methods&lt;/code&gt; to query all methods of an object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd not define a function with the same as some directly usable function/method in Ruby.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="array"></category><category term="IO"></category><category term="Ruby"></category><category term="programming"></category><category term="string"></category></entry><entry><title>String in C++11</title><link href="http://www.legendu.net/en/blog/cpp-auto-string/" rel="alternate"></link><published>2012-08-20T00:00:00-07:00</published><updated>2012-08-20T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-20:/en/blog/cpp-auto-string/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto s = "abcd"&lt;/code&gt; creats &lt;code&gt;const char *&lt;/code&gt; not string, so use &lt;code&gt;auto&lt;/code&gt; with caution. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since a string in C++ is an array of chars, 
you can operate it like an array. 
For example, you can use range-based for loop and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is recommended that you use &lt;code&gt;std::string&lt;/code&gt; in …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;auto s = "abcd"&lt;/code&gt; creats &lt;code&gt;const char *&lt;/code&gt; not string, so use &lt;code&gt;auto&lt;/code&gt; with caution. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since a string in C++ is an array of chars, 
you can operate it like an array. 
For example, you can use range-based for loop and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is recommended that you use &lt;code&gt;std::string&lt;/code&gt; in function which are not intended to be 
interfaces, and you use &lt;code&gt;const char *&lt;/code&gt; as parameters of function that are intended to be 
interfaces (e.g., compiled as shared library and so on).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use &lt;code&gt;==&lt;/code&gt; to compare whether the content of two &lt;code&gt;std::string&lt;/code&gt; are the same,
but you cannot use &lt;code&gt;==&lt;/code&gt; to compare the content of &lt;code&gt;const char *&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="auto"></category><category term="iteration"></category><category term="programming"></category><category term="C/C++"></category><category term="string"></category><category term="loop"></category><category term="char"></category></entry><entry><title>Make Eclipse Support C++11</title><link href="http://www.legendu.net/en/blog/eclipse-cpp11/" rel="alternate"></link><published>2012-08-20T00:00:00-07:00</published><updated>2012-08-20T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-08-20:/en/blog/eclipse-cpp11/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a new C++ project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default options for everything&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once created, right-click the project and go to "Properties"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ Build -&amp;gt; Settings -&amp;gt; Tool Settings -&amp;gt; GCC C++ Compiler -&amp;gt; Miscellaneous -&amp;gt; Other Flags. 
Put -std=c++0x at the end. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C++ General -&amp;gt; Paths and Symbols -&amp;gt; Symbols -&amp;gt; GNU C++. 
Click "Add..." and paste &lt;code&gt;__GXX_EXPERIMENTAL_CXX0X__ …&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/eclipse/cdt.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make a new C++ project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Default options for everything&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once created, right-click the project and go to "Properties"&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C/C++ Build -&amp;gt; Settings -&amp;gt; Tool Settings -&amp;gt; GCC C++ Compiler -&amp;gt; Miscellaneous -&amp;gt; Other Flags. 
Put -std=c++0x at the end. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;C++ General -&amp;gt; Paths and Symbols -&amp;gt; Symbols -&amp;gt; GNU C++. 
Click "Add..." and paste &lt;code&gt;__GXX_EXPERIMENTAL_CXX0X__&lt;/code&gt; (ensure to append and prepend two underscores) 
into "Name" and leave "Value" blank.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hit Apply, do whatever it asks you to do, then hit OK.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="C/C++"></category><category term="software"></category><category term="eclipse"></category></entry><entry><title>Make Plots in SAS</title><link href="http://www.legendu.net/en/blog/sas-plot/" rel="alternate"></link><published>2012-07-11T00:00:00-07:00</published><updated>2012-07-11T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-11:/en/blog/sas-plot/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/sas/sas.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are functions to add points, lines and legends to an existing plot in R.
In SAS, there is no way to do this. 
What you can do is to add plotting commands in the plotting procedure and rerun your code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Staring from version 9.2, SAS offers new procedures …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/sas/sas.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;There are functions to add points, lines and legends to an existing plot in R.
In SAS, there is no way to do this. 
What you can do is to add plotting commands in the plotting procedure and rerun your code. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Staring from version 9.2, SAS offers new procedures such as PROC SGPLOT and PROC SGPANEL for making plots.
PROC SGPLOT (sophisticated graphical plot) produces high quality plots. 
PROC SGPANEL divides the window into several parts and make plots on these sub area.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is possible to call R from SAS which means that you can use R to make plots in SAS if you like. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="image"></category><category term="SAS"></category><category term="graphics"></category><category term="programming"></category></entry><entry><title>How Many Balls Do We Need?</title><link href="http://www.legendu.net/en/blog/how-many-balls-do-we-need/" rel="alternate"></link><published>2012-07-10T00:00:00-07:00</published><updated>2012-07-10T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-10:/en/blog/how-many-balls-do-we-need/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/ball-in-box.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes until &lt;span class="math"&gt;\(n(\le m)\)&lt;/span&gt; of them are occupied,
what is the expectation of the number of balls needed?&lt;/p&gt;
&lt;p&gt;See my neat solution &lt;a href="http://dclong.github.io/media/ball-box/balls.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left …&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/ball-in-box.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes until &lt;span class="math"&gt;\(n(\le m)\)&lt;/span&gt; of them are occupied,
what is the expectation of the number of balls needed?&lt;/p&gt;
&lt;p&gt;See my neat solution &lt;a href="http://dclong.github.io/media/ball-box/balls.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="statistics"></category><category term="probability"></category><category term="fun problems"></category></entry><entry><title>Number of Records?</title><link href="http://www.legendu.net/en/blog/number-of-records/" rel="alternate"></link><published>2012-07-10T00:00:00-07:00</published><updated>2012-07-10T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-10:/en/blog/number-of-records/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/records/break-record.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose there are &lt;span class="math"&gt;\(n\)&lt;/span&gt; distinct numbers &lt;span class="math"&gt;\(x_1,\ldots, x_n\)&lt;/span&gt;,
 and &lt;span class="math"&gt;\(y_1, \ldots, y_n\)&lt;/span&gt; is a random permutations of them.
 If &lt;span class="math"&gt;\(\exists k\)&lt;/span&gt; such that &lt;span class="math"&gt;\(y_k&amp;lt;y_i, \forall 1\le i&amp;lt;k\)&lt;/span&gt;,
 then we say that &lt;span class="math"&gt;\(y_k\)&lt;/span&gt; is a record 
 (we always count &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; as a record).
 What is the expected …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/records/break-record.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;Suppose there are &lt;span class="math"&gt;\(n\)&lt;/span&gt; distinct numbers &lt;span class="math"&gt;\(x_1,\ldots, x_n\)&lt;/span&gt;,
 and &lt;span class="math"&gt;\(y_1, \ldots, y_n\)&lt;/span&gt; is a random permutations of them.
 If &lt;span class="math"&gt;\(\exists k\)&lt;/span&gt; such that &lt;span class="math"&gt;\(y_k&amp;lt;y_i, \forall 1\le i&amp;lt;k\)&lt;/span&gt;,
 then we say that &lt;span class="math"&gt;\(y_k\)&lt;/span&gt; is a record 
 (we always count &lt;span class="math"&gt;\(y_1\)&lt;/span&gt; as a record).
 What is the expected number of records in &lt;span class="math"&gt;\(y_1, \ldots, y_n\)&lt;/span&gt;?&lt;/p&gt;
&lt;p&gt;See my neat solution &lt;a href="http://dclong.github.io/media/records/records.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="statistics"></category><category term="records"></category><category term="probability"></category><category term="permutation"></category><category term="fun problems"></category></entry><entry><title>How Many Empty Boxes?</title><link href="http://www.legendu.net/en/blog/how-many-empty-boxes/" rel="alternate"></link><published>2012-07-08T00:00:00-07:00</published><updated>2012-07-08T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-08:/en/blog/how-many-empty-boxes/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/empty-box.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put &lt;span class="math"&gt;\(n(\ge1)\)&lt;/span&gt; balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes, 
what is the expectation of the number of empty boxes?&lt;/p&gt;
&lt;p&gt;See my neat answer &lt;a href="http://dclong.github.io/media/ball-box/empty-box.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em …&lt;/script&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ball-box/empty-box.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;If we randomly put &lt;span class="math"&gt;\(n(\ge1)\)&lt;/span&gt; balls into &lt;span class="math"&gt;\(m(\ge1)\)&lt;/span&gt; boxes, 
what is the expectation of the number of empty boxes?&lt;/p&gt;
&lt;p&gt;See my neat answer &lt;a href="http://dclong.github.io/media/ball-box/empty-box.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="expectation"></category><category term="ball"></category><category term="box"></category><category term="probability"></category><category term="fun problems"></category><category term="statistic"></category></entry><entry><title>Thread Safe Random Number Generator</title><link href="http://www.legendu.net/en/blog/thread-safe-random-number-generator/" rel="alternate"></link><published>2012-07-08T00:00:00-07:00</published><updated>2012-07-08T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-07-08:/en/blog/thread-safe-random-number-generator/</id><summary type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;In statistical simulation, a thread safe random number generator is often useful. 
Thread safty can be achieved by synchronize public methods of random number generator engines. 
In C++, 
this can be done through mutex (see more about my post on multithreading in C++). 
I implemented a &lt;a href="http://www.legendu.net/media/rng/smt.h"&gt;Thread Safe Random Number …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://www.legendu.net/media/rng/random-number-generator.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;In statistical simulation, a thread safe random number generator is often useful. 
Thread safty can be achieved by synchronize public methods of random number generator engines. 
In C++, 
this can be done through mutex (see more about my post on multithreading in C++). 
I implemented a &lt;a href="http://www.legendu.net/media/rng/smt.h"&gt;Thread Safe Random Number Generator&lt;/a&gt; (based on the Mersenne Twister RNG).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#&lt;span class="nv"&gt;ifndef&lt;/span&gt; &lt;span class="nv"&gt;DCLONG_SMT_H_&lt;/span&gt;
#&lt;span class="nv"&gt;define&lt;/span&gt; &lt;span class="nv"&gt;DCLONG_SMT_H_&lt;/span&gt;

#&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;random&amp;amp;gt;&lt;/span&gt;
#&lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;mutex&amp;amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;using&lt;/span&gt; &lt;span class="nv"&gt;namespace&lt;/span&gt; &lt;span class="nv"&gt;std&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; class UIntType, size_t w, size_t n, size_t m, size_t r,&lt;/span&gt;
&lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;u&lt;/span&gt;, &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;d&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;s&lt;/span&gt;,
&lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;, &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;l&lt;/span&gt;, &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; class smt : public mersenne_twister_engine&amp;amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;amp;gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;private&lt;/span&gt;:
        &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;mutex&lt;/span&gt; &lt;span class="nv"&gt;_mutex&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;public&lt;/span&gt;:
        &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;operator&lt;/span&gt;&lt;span class="ss"&gt;()()&lt;/span&gt;{
            &lt;span class="nv"&gt;lock_guard&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;mutex&amp;amp;gt; lck(_mutex);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;mersenne_twister_engine&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;amp;gt;::operator()();&lt;/span&gt;
        }
}&lt;span class="c1"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;; class UIntType, size_t w, size_t n, size_t m, size_t r,&lt;/span&gt;
&lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;u&lt;/span&gt;, &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;d&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;s&lt;/span&gt;,
&lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;t&lt;/span&gt;, &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;, &lt;span class="nv"&gt;size_t&lt;/span&gt; &lt;span class="nv"&gt;l&lt;/span&gt;, &lt;span class="nv"&gt;UIntType&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;
&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; mutex smt&amp;amp;lt;UIntType,w,n,m,r,a,u,d,s,b,t,c,l,f&amp;amp;gt;::_mutex;&lt;/span&gt;

&lt;span class="nv"&gt;typedef&lt;/span&gt; &lt;span class="nv"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;uint32_t,32,351,175,19,0xccab8ee7,&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;xffffffff&lt;/span&gt;,&lt;span class="mi"&gt;7&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;x31b6ab00&lt;/span&gt;,&lt;span class="mi"&gt;15&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;xffe50000&lt;/span&gt;,&lt;span class="mi"&gt;17&lt;/span&gt;,&lt;span class="mi"&gt;1812433253&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; smt11213b;&lt;/span&gt;

&lt;span class="nv"&gt;typedef&lt;/span&gt; &lt;span class="nv"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;uint32_t,32,624,397,31,0x9908b0df,&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;xffffffff&lt;/span&gt;,&lt;span class="mi"&gt;7&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;x9d2c5680&lt;/span&gt;,&lt;span class="mi"&gt;15&lt;/span&gt;,&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;xefc60000&lt;/span&gt;,&lt;span class="mi"&gt;18&lt;/span&gt;,&lt;span class="mi"&gt;1812433253&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; smt19937;&lt;/span&gt;

#&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;defined&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;BOOST_NO_INT64_T&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;amp&lt;/span&gt;&lt;span class="c1"&gt;;&amp;amp;amp; !defined(BOOST_NO_INTEGRAL_INT64_T)&lt;/span&gt;
&lt;span class="nv"&gt;typedef&lt;/span&gt; &lt;span class="nv"&gt;smt&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;lt&lt;/span&gt;&lt;span class="c1"&gt;;uint64_t,64,312,156,31,&lt;/span&gt;
&lt;span class="nv"&gt;UINT64_C&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;xb5026f5aa96619e9&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="mi"&gt;29&lt;/span&gt;,&lt;span class="nv"&gt;UINT64_C&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;x5555555555555555&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="mi"&gt;17&lt;/span&gt;,
&lt;span class="nv"&gt;UINT64_C&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;x71d67fffeda60000&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="mi"&gt;37&lt;/span&gt;,&lt;span class="nv"&gt;UINT64_C&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;xfff7eee000000000&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;,&lt;span class="mi"&gt;43&lt;/span&gt;,
&lt;span class="nv"&gt;UINT64_C&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6364136223846793005&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; smt19937_64;&lt;/span&gt;
#&lt;span class="k"&gt;endif&lt;/span&gt;

#&lt;span class="k"&gt;endif&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To test whether this random number generator is truely thread safe, 
I generated a bunch of integer from negative binomial distribution 
using both this random number generator and mt19937_64 
with a same seed (on which the random number generator implemented here is based) 
as the underlying engines, 
and compare whether they are the same set. 
Surprisingly, 
the two sets of integers I got were different. 
I was very confused and ask this problem to &lt;a href="http://bartoszmilewski.com/"&gt;Bartosz Milewski&lt;/a&gt; 
who published a series of video tutorials on multithreading in C++11. 
After discussing with Bartosz Milewski, 
he pointed out that the problem was because 
the negative binomial distribution calls the method &lt;code&gt;operator()()&lt;/code&gt; multiple times 
to generate a single random integer. 
This does not mean that anything is wrong with the implementation of the negative binomial distribution. 
It is thread safe as long as the underlying random number generator it uses is thread safe. 
Due to the fact that a negative binomial distribution calls the method &lt;code&gt;operator()()&lt;/code&gt; 
of the underlying random number generator multiple times to generate a single integer, 
the random numbers it generates based on a synchronized random number generator
is not necessarily the same set as the one 
that the corresponding serial random number generator generates from the same seed. 
I verified that the numbers generated by the negative binomial distribution 
using the thread safe random number generator here come from the right distribution. 
Another way to validate the implementation of the thread safe random number generator here is that 
if a distribution call the method &lt;code&gt;operator()()&lt;/code&gt; only once to generate a random number, 
then the numbers it generates based on smt and mt19937_64 should be the same set. 
I verified that this is true for a bernoulli distribution. &lt;/p&gt;
&lt;p&gt;Short after I implemented this thread safe random number generator, 
I found betters ways to generate random numbers in parallel. 
The basic is to make the random number engine to jump forward a long enough distance quickly. 
Currently many popular random number generators can jump forward a long enough distance 
in a acceptable short time. 
For example, 
the Mersenne Twister can jump forward in milliseconds. 
For more information, please see &lt;a href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/#dSFMT"&gt;SFMT&lt;/a&gt;.&lt;/p&gt;</content><category term="C++"></category><category term="RNG"></category><category term="programming"></category><category term="thread"></category><category term="distribution"></category><category term="HPC"></category><category term="fun problems"></category><category term="MT"></category><category term="Concurrency"></category></entry><entry><title>Tips for Multithreading/Concurrency Programming in C++11</title><link href="http://www.legendu.net/en/blog/cpp11-concurrency-tips/" rel="alternate"></link><published>2012-06-24T00:00:00-07:00</published><updated>2012-06-24T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-24:/en/blog/cpp11-concurrency-tips/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you use g++ to compile your parallel program which uses the thread library,
you need to use the option &lt;code&gt;-lpthread&lt;/code&gt;. 
For more information, see the post &lt;a href="http://dclong.github.io/en/2012/06/tips-gcc-compiler/"&gt;GNU/GCC&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;join&lt;/code&gt; method of threads guarantees happen-before relationship between threads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can pass either a function (can be lambda function) and …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you use g++ to compile your parallel program which uses the thread library,
you need to use the option &lt;code&gt;-lpthread&lt;/code&gt;. 
For more information, see the post &lt;a href="http://dclong.github.io/en/2012/06/tips-gcc-compiler/"&gt;GNU/GCC&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;join&lt;/code&gt; method of threads guarantees happen-before relationship between threads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can pass either a function (can be lambda function) and an object which implement the 
operator &lt;code&gt;()&lt;/code&gt; to a thread. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;future&lt;/code&gt; class in C++11 is similar to the &lt;code&gt;future&lt;/code&gt; class in Java. 
The difference is that in C++11 we have another class named &lt;code&gt;promise&lt;/code&gt; 
which can work together with &lt;code&gt;future&lt;/code&gt; to return values from threads while 
in Java you do not need a promise and can just let methods (to be called by 
threads) return values. In C++11, there is another class &lt;code&gt;async&lt;/code&gt; which is 
close to what Java does. You do not have to use a promise and you can let 
functions/methods (to be called by threads) return values directly. &lt;code&gt;async&lt;/code&gt; 
is kind of like thread pool in Java, but not exactly the same. 
In C++11, you do not have much control on what many threads to with &lt;code&gt;async&lt;/code&gt; 
while in Java, you have better control on that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To protect shared data between threads in C++11, you have to use the &lt;code&gt;mutex&lt;/code&gt; (mutual exclusion)
class which is similar to the &lt;code&gt;ReentrantLock&lt;/code&gt; class in Java. Actually the
&lt;code&gt;ReentrantLock&lt;/code&gt; class in Java is essentially mutex. 
There is a common misunderstanding about &lt;strong&gt;lock&lt;/strong&gt; in Java.
The locking/unlocking is a conceptual thing that happens via programmer
discipline: basically if you make a method synchronized to prevent a read/write
conflict on a variable, then you have to ensure that every access to that
variable is throught a synchronized method/block of the same object. That forces
every threads to acquire mutex of the object and ensures mutual exclusion. 
Directly use of the &lt;code&gt;lock&lt;/code&gt; and &lt;code&gt;unlock&lt;/code&gt; methods of mutex is not encouraged in 
C++11 though, this is becuase if exception occurs between the locked block, 
the resource will never be unlock resulting dead lock. 
In Java this is gracefully addressed by introducing a &lt;code&gt;finally&lt;/code&gt; block in
addition to the &lt;code&gt;try ... catch ...&lt;/code&gt; blocks. 
A commonly used way to proctect shared data in C++11 is to use the &lt;code&gt;lock_guard&lt;/code&gt; 
class. For example you can put the following code in the functions/methods that 
need to be access by thread mutual exclusively&lt;/p&gt;
&lt;p&gt;std::lock_guard&lt;std::mutex&gt; lck(_mutex);&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;where &lt;code&gt;_mutex&lt;/code&gt; is a shared object of the &lt;code&gt;mutex&lt;/code&gt; class among these
functions/methods. The deconstructor of the &lt;code&gt;lock_guard&lt;/code&gt; unlocks the lock so
this guarantees that no dead lock happens. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It seems that parallel code in c++ is as efficient as in java (in the sense of code speedup)? &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;std::async&lt;/code&gt; together with &lt;code&gt;std::future&lt;/code&gt; is an alternative to 
&lt;code&gt;std::thread&lt;/code&gt; and shared variables when implementing parallel algorithms. 
Using &lt;code&gt;std::async&lt;/code&gt; and &lt;code&gt;std::future&lt;/code&gt;, one avoids to lock/unlock variables 
and thus avoids false sharing problems, so it sometimes a better alternative
to &lt;code&gt;std::thread&lt;/code&gt; and shared variables. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you pass the address of a method to a thread or async, 
you must use the full name of the function, 
i.e., you have to use class name as the prefix. 
Also, you have to pass &lt;code&gt;this&lt;/code&gt; as the second parameter to thread/async
if the method is a non-static method. 
This is because a non-static method need a instance to run. 
(I'm not very sure whether this is true for static methods)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You'd better not pass overloaded functions to thread or async in a class,
because it is hard for the thread or async to know which one is the right method to call.
I'm not sure whether there is way to solve this problem or not ...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It seems that object used mutex cannot be copied? 
So if you write a thread safe class using mutex, 
you'd better override the default copy constructor of the class,
or you can make the mutex static. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Parallel program often requires shared varialbes which should be access by references. 
By default objects are passed by value (i.e. copied) in C++, 
so you have to be careful when you write parallel code in C++,
otherwise, it is easy to make mistakes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prefer asynchronized buffering when dealing with high-latency operations. 
A good article from Herb Sutter can be found 
&lt;a href="http://www.drdobbs.com/architecture-and-design/know-when-to-use-an-active-object-instea/227500074?pgno=1"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="programming"></category><category term="C/C++"></category><category term="Java"></category><category term="HPC"></category><category term="async"></category><category term="mutex"></category><category term="future"></category><category term="concurrency"></category><category term="promise"></category></entry><entry><title>Parallel Computing in Java</title><link href="http://www.legendu.net/en/blog/parallel-computing-java/" rel="alternate"></link><published>2012-06-11T00:00:00-07:00</published><updated>2012-06-11T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-11:/en/blog/parallel-computing-java/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/java/multithreading.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The following are a few tips for multithreading parallel computing in Java.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Instance fields, static fields and elements of arrays are stored in heap
memory and thus can be shared between different threads. 
Local variables and parameter variables are never shared between threads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If race condition happens (read and write …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/java/multithreading.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;The following are a few tips for multithreading parallel computing in Java.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Instance fields, static fields and elements of arrays are stored in heap
memory and thus can be shared between different threads. 
Local variables and parameter variables are never shared between threads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If race condition happens (read and write to the same shared variable by 
different threads), 
you must protect the shared resource (object), which can be done through synchronized
method, locking/unlocking or atomic variables. 
When a thread excecute a synchronized method or block, 
it requires a mutex (mutual exclusion) of the object. 
This does not prevent all other threads from accessing the object 
but only these threads who also require mutex of the same object. 
If the object has public fileds and other unsynchronized methos,
other threads can still access these fileds or methods at the same time.
This means that nothing is acutally locked when you use synchronized method or locking/unlocking.
The locking/unlocking is a conceptual thing that happens via programmer discipline: 
basically if you make a method synchronized to prevent a read/write conflict on a variable, 
then you have to ensure that &lt;strong&gt;every&lt;/strong&gt; access to that variable is throught a synchronized method/block of the same object. 
That forces every threads to acquire mutex of the object and ensures mutual exclusion. 
The misunderstanding about locking/unlocking leads to buggy code which try to protect shared
object using synchronized method/block outside it. 
If a synchronized method/block is used to protect shared object, 
it must be inside the object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elements of arrays are independent variables and thus no synchronization 
is needed if different threads access elements with different indices. 
Similar rule applies to different instance variables of an object.
However, false sharing can happen if two threads access variables that are 
stored close in the memory (more accurate, in a same cache line). 
Though false sharing does not make your parallel code invalid, 
it downgrade the efficiency of the code. 
The following are some strategies to allievate false sharing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you let different threads to access different elements of an array, 
you can cut the array into non-interleaving parts 
(e.g., &lt;code&gt;0-(k-1)&lt;/code&gt; and &lt;code&gt;k-(n-1)&lt;/code&gt;) and let different threads work on different pieces. 
Or you can use thread-local copies of the array. 
This does not kill falsing sharing. 
The essential way to avoid falsing sharing is to avoid different threads accessing a same cache line. 
To avoid false sharing completely, you can separate parts of the array (to be 
accessed by diffrent threads) using dummy elements. 
A general rule is to make the sepration segment twice the size of cache line 
(which is usually 64 bytes).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use future object to return results from threads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can align varialbes at the beginning of cache lines.&lt;br&gt;
While this is supported in C/C++, it is not well supported in Java.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;join&lt;/code&gt; method of threads and the &lt;code&gt;awaitTermination&lt;/code&gt; method of thread pool (if return true)
guarantees happen-before relationship between threads. In other words, if you
call the join method of a thread, then the changed made by the threads is
seenable by the code after the &lt;code&gt;join&lt;/code&gt; method. This is also true for the method 
&lt;code&gt;awaitTermination&lt;/code&gt; given that it returns &lt;code&gt;true&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If no barrie (join of threads, termination of thread pool) is set, the order of execuation of thread is underterminant. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have to call the &lt;code&gt;signal&lt;/code&gt; or the &lt;code&gt;signallAll&lt;/code&gt; method in some thread if you every called
the &lt;code&gt;await&lt;/code&gt; method in another thread. There is no need to call these two notifying methods
if you never called the &lt;code&gt;await&lt;/code&gt; method in a thread. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When doing multithreading parallel computing, there is no benefit to use
more thread than the number of available cores on the computer on which the
code is to be run. You can use the following code the get the number of available
cores on a computer.  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;int coresNumber = Runtime.getRuntime().availableProcessors();&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the future class, you can return results from threads. 
The advantage of using future class is that you do not have to
destroy threads or thread pool to retrieve result. 
The threads/thread pool created are/is resuable.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you create an object of Runnable or Callable and pass it to a thread or submit 
it to a thread pool, it is better to make deep copies of arguments passed to the 
constructor of the object. There are two reasons for this. First, shallow copy
makes the object shared and might result in race condition. Second, the object
might be destroied while the threads which require the object are still running. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following is a Java method which create a thread pool of fixed number of threads, 
add tasks into the pool, shutdown the pool and wait for all jobs to be finished.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;parSimulateIndependent&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt; &lt;span class="nv"&gt;outputFile&lt;/span&gt;,&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;maxNumberOfThreads&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;throws&lt;/span&gt; &lt;span class="nv"&gt;IOException&lt;/span&gt;{
    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;initialize&lt;/span&gt; &lt;span class="nv"&gt;output&lt;/span&gt;, &lt;span class="nv"&gt;must&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;here&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;avoid&lt;/span&gt; &lt;span class="nv"&gt;possible&lt;/span&gt; &lt;span class="nv"&gt;issues&lt;/span&gt;
    &lt;span class="nv"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;SPTOutput&lt;/span&gt;[&lt;span class="nv"&gt;numberOfSimulations&lt;/span&gt;][]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;thread&lt;/span&gt; &lt;span class="nv"&gt;pool&lt;/span&gt;
    &lt;span class="nv"&gt;ExecutorService&lt;/span&gt; &lt;span class="nv"&gt;pool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Executors&lt;/span&gt;.&lt;span class="nv"&gt;newFixedThreadPool&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;maxNumberOfThreads&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;simulationIndex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; simulationIndex&amp;amp;lt;numberOfSimulations; ++simulationIndex){&lt;/span&gt;
        &lt;span class="nv"&gt;generateIndependentData&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;writeData&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;simulationIndex&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;generateRandomIndexOfCombinations&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;execute&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;SPTsRunnable&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;combinations&lt;/span&gt;,&lt;span class="nv"&gt;data&lt;/span&gt;,&lt;span class="nv"&gt;randomIndexOfCombinations&lt;/span&gt;, &lt;span class="nv"&gt;sizeOfFirstGroup&lt;/span&gt;,&lt;span class="nv"&gt;sequentialTerminationCriteria&lt;/span&gt;,&lt;span class="nv"&gt;output&lt;/span&gt;,&lt;span class="nv"&gt;simulationIndex&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;shutdown&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;isTerminated&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt;{
        &lt;span class="nv"&gt;try&lt;/span&gt; {
            &lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;awaitTermination&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;, &lt;span class="nv"&gt;TimeUnit&lt;/span&gt;.&lt;span class="nv"&gt;SECONDS&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Some thread in the pool was interrupted.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Below is another example which distribute jobs to threads manually.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;private&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;runJobs&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;threadsNumber&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
    &lt;span class="nv"&gt;Thread&lt;/span&gt;[] &lt;span class="nv"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;[&lt;span class="nv"&gt;threadsNumber&lt;/span&gt;]&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;array&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;threadsNumber&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;eachPlusOne&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;array&lt;/span&gt;.&lt;span class="nv"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;threadsNumber&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;endIndex&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;amp;lt; extra; ++i) {&lt;/span&gt;
        &lt;span class="nv"&gt;endIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;eachPlusOne&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;SetElementRunnable&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;, &lt;span class="nv"&gt;startIndex&lt;/span&gt;, &lt;span class="nv"&gt;endIndex&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;].&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;endIndex&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;extra&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;amp;lt; threadsNumber; ++i) {&lt;/span&gt;
        &lt;span class="nv"&gt;endIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;Thread&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;SetElementRunnable&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;, &lt;span class="nv"&gt;startIndex&lt;/span&gt;, &lt;span class="nv"&gt;endIndex&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;t&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;].&lt;span class="nv"&gt;start&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;startIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;endIndex&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;threadsNumber&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;amp;gt;= 0; --i) {&lt;/span&gt;
        &lt;span class="nv"&gt;try&lt;/span&gt; {
            &lt;span class="nv"&gt;t&lt;/span&gt;[&lt;span class="nv"&gt;i&lt;/span&gt;].&lt;span class="nv"&gt;join&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
            &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Thread &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; was interrupted.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the run method of the SetElementRunnable class is given below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;run&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;{
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;startIndex&lt;/span&gt;&lt;span class="c1"&gt;; index&amp;amp;lt;endIndex; ++index){&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i&amp;amp;lt;1000000000; ++i){&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; j&amp;amp;lt;100000000; ++j){&lt;/span&gt;
                &lt;span class="nv"&gt;Math&lt;/span&gt;.&lt;span class="nv"&gt;sqrt&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;j&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;.&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
        }
        &lt;span class="nv"&gt;array&lt;/span&gt;[&lt;span class="nv"&gt;index&lt;/span&gt;] &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice that different threads acess different elements of a shared array, 
so no synchronization is need. 
Another lock-free approach is to use atomic variables (operations to the variable is atomic). 
The following example sums integers in parallel using the AtomicInteger class.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;class&lt;/span&gt; &lt;span class="nv"&gt;TestSumRunnable&lt;/span&gt; {
    &lt;span class="nv"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;String&lt;/span&gt;[] &lt;span class="nv"&gt;args&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;step&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; step &amp;amp;lt; 10000; ++step) {&lt;/span&gt;
            &lt;span class="nv"&gt;AtomicInteger&lt;/span&gt; &lt;span class="nv"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;AtomicInteger&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;coresNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Runtime&lt;/span&gt;.&lt;span class="nv"&gt;getRuntime&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;.&lt;span class="nv"&gt;availableProcessors&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="nv"&gt;ExecutorService&lt;/span&gt; &lt;span class="nv"&gt;pool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Executors&lt;/span&gt;.&lt;span class="nv"&gt;newFixedThreadPool&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;coresNumber&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="c1"&gt;; i &amp;amp;lt; 1000; ++i) {&lt;/span&gt;
                &lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;execute&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt; &lt;span class="nv"&gt;SumRunnable&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sum&lt;/span&gt;, &lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="ss"&gt;))&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;shutdown&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;isTerminated&lt;/span&gt;&lt;span class="ss"&gt;())&lt;/span&gt; {
                &lt;span class="nv"&gt;try&lt;/span&gt; {
                &lt;span class="nv"&gt;pool&lt;/span&gt;.&lt;span class="nv"&gt;awaitTermination&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;, &lt;span class="nv"&gt;TimeUnit&lt;/span&gt;.&lt;span class="nv"&gt;SECONDS&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                } &lt;span class="nv"&gt;catch&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;InterruptedException&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="nv"&gt;e&lt;/span&gt;.&lt;span class="nv"&gt;printStackTrace&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
                }
            }
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;sum&lt;/span&gt;.&lt;span class="nv"&gt;get&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;499500&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; {
                &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;err&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;Wrong!&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
            }
            &lt;span class="nv"&gt;System&lt;/span&gt;.&lt;span class="nv"&gt;out&lt;/span&gt;.&lt;span class="nv"&gt;println&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;step &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;step&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt; done.&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;;&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The run method of the SumRunnable class is as follows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;void&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getAndAdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addend&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the above 3 examples, both thread pool and user-managed threads were used. 
Using thread pool is more convenient and is scalable for general purpose jobs. 
However, if you know that all jobs requires almost the same time to run, using
user-managed threads is more efficient because it creates much fewer objects.
This is often true in statistics simulations. &lt;/p&gt;</content><category term="lock"></category><category term="programming"></category><category term="thread"></category><category term="race condition"></category><category term="Java"></category><category term="HPC"></category><category term="parallel"></category><category term="concurrency"></category><category term="mutex"></category></entry><entry><title>Define Operator in R</title><link href="http://www.legendu.net/en/blog/overload-operator-r/" rel="alternate"></link><published>2012-06-08T00:00:00-07:00</published><updated>2012-06-08T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-08:/en/blog/overload-operator-r/</id><summary type="html">&lt;p&gt;One thing I do not like R is that operations on String in R 
are not as convenient as in other programming langauges such as Java, Python and Ruby. 
In these 3 programming languages, 
you can simply use &lt;code&gt;+&lt;/code&gt; to concatenate strings while in R you have to use the function …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One thing I do not like R is that operations on String in R 
are not as convenient as in other programming langauges such as Java, Python and Ruby. 
In these 3 programming languages, 
you can simply use &lt;code&gt;+&lt;/code&gt; to concatenate strings while in R you have to use the function &lt;code&gt;paste&lt;/code&gt;.
The inconvenience result from unable to overload functions and operators in R. 
However, you can still define/override operators in R. 
For example,
the following code renew the definition of &lt;code&gt;+&lt;/code&gt; to concatenate two strings.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;+&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;paste&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="R"></category><category term="operator"></category><category term="overloading"></category><category term="override"></category><category term="programming"></category></entry><entry><title>Send Email in Ruby</title><link href="http://www.legendu.net/en/blog/send-email-ruby/" rel="alternate"></link><published>2012-06-07T00:00:00-07:00</published><updated>2012-06-07T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-06-07:/en/blog/send-email-ruby/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;A few days ago, I started writing my first Ruby program which read my Verizon
family plan statements, calculate bills for each member and send emails to
notify them. The part of reading PDF document and calculating bill is easy. I
stuck at the sending email part. There are many …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/ruby/ruby.png" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;A few days ago, I started writing my first Ruby program which read my Verizon
family plan statements, calculate bills for each member and send emails to
notify them. The part of reading PDF document and calculating bill is easy. I
stuck at the sending email part. There are many Ruby libraries for sending
emails, but I want one that allows me to use my Gmail account. For security
reasons, I use a backup Gmail for sending emails. So I want a Ruby library which
allows me to set the "Reply-to" header, the "From" header and can send emails to
multiple recipients at a time. I tried a few options, such as "net/smtp",
"mikell/mail", "pony" and finally I was recommended the library "actionmailer".
Among all these libraries, "actionmailer" meets my requirement well and has good
documentation. The following the function I wrote to send email to members in my
family plan.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;email_bills&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;subject&lt;/span&gt;,&lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
    &lt;span class="nv"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;action_mailer&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;ActionMailer&lt;/span&gt;::&lt;span class="nv"&gt;Base&lt;/span&gt;.&lt;span class="nv"&gt;raise_delivery_errors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;true&lt;/span&gt;
    &lt;span class="nv"&gt;ActionMailer&lt;/span&gt;::&lt;span class="nv"&gt;Base&lt;/span&gt;.&lt;span class="nv"&gt;delivery_method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; :&lt;span class="nv"&gt;smtp&lt;/span&gt;
    &lt;span class="nv"&gt;member_emails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;dclong@iastate.edu,lisa19850925@gmail.com,lynnyu2009@gmail.com,klins@iastate.edu&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    # &lt;span class="nv"&gt;member_emails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;duchuanlong@gmail.com&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    # &lt;span class="nv"&gt;read&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;firedragon.du@gmail.com&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;read_password&lt;/span&gt;
    &lt;span class="nv"&gt;ActionMailer&lt;/span&gt;::&lt;span class="nv"&gt;Base&lt;/span&gt;.&lt;span class="nv"&gt;smtp_settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; {
        :&lt;span class="nv"&gt;address&lt;/span&gt;   &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; &amp;quot;smtp.gmail.com&amp;quot;,&lt;/span&gt;
        :&lt;span class="nv"&gt;port&lt;/span&gt;      &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; 587,&lt;/span&gt;
        :&lt;span class="nv"&gt;domain&lt;/span&gt;    &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; &amp;quot;gmail.com&amp;quot;,&lt;/span&gt;
        :&lt;span class="nv"&gt;authentication&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; :plain,&lt;/span&gt;
        :&lt;span class="nv"&gt;user_name&lt;/span&gt;      &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; &amp;quot;firedragon.du@gmail.com&amp;quot;,&lt;/span&gt;
        :&lt;span class="nv"&gt;password&lt;/span&gt;       &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; password,&lt;/span&gt;
        :&lt;span class="nv"&gt;enable_starttls_auto&lt;/span&gt; &lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;; true&lt;/span&gt;
    }
    &lt;span class="nv"&gt;mail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;ActionMailer&lt;/span&gt;::&lt;span class="nv"&gt;Base&lt;/span&gt;.&lt;span class="nv"&gt;mail&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;:&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;gt&lt;/span&gt;&lt;span class="c1"&gt;;member_emails)&lt;/span&gt;
    &lt;span class="nv"&gt;mail&lt;/span&gt;.&lt;span class="nv"&gt;from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;duchuanlong@gmail.com&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;mail&lt;/span&gt;.&lt;span class="nv"&gt;reply_to&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;duchuanlong@gmail.com&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="nv"&gt;mail&lt;/span&gt;.&lt;span class="nv"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;subject&lt;/span&gt;
    &lt;span class="nv"&gt;mail&lt;/span&gt;.&lt;span class="nv"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;
    &lt;span class="nv"&gt;mail&lt;/span&gt;.&lt;span class="nv"&gt;deliver&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="nv"&gt;def&lt;/span&gt; &lt;span class="nv"&gt;read_password&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;
    &lt;span class="nv"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;highline/import&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;ask&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Please enter the password for &amp;quot;firedragon.du@gmail.com&amp;quot;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;{
        &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;q&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="nv"&gt;q&lt;/span&gt;.&lt;span class="nv"&gt;echo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    }
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="smtp"></category><category term="programming"></category><category term="Verizon"></category><category term="PDF"></category><category term="Ruby"></category><category term="email"></category></entry><entry><title>Read CPU Temperature in Linux</title><link href="http://www.legendu.net/en/blog/linux-read-cpu-temperature/" rel="alternate"></link><published>2012-05-19T00:00:00-07:00</published><updated>2012-05-19T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-19:/en/blog/linux-read-cpu-temperature/</id><summary type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/hot.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;First you have to install package "lm-sensors". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;lm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sensors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To detect the cpu temperature, type the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;modprobe&lt;/span&gt; &lt;span class="n"&gt;coretemp&lt;/span&gt;
&lt;span class="n"&gt;sensors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more instructions on this top, 
see &lt;a href="http://www.cyberciti.biz/faq/howto-linux-get-sensors-information/"&gt;nixCraft&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="http://dclong.github.io/media/computer/hot.jpg" height="200" width="240" align="right"/&gt;&lt;/p&gt;
&lt;p&gt;First you have to install package "lm-sensors". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wajig&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;lm&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sensors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To detect the cpu temperature, type the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;modprobe&lt;/span&gt; &lt;span class="n"&gt;coretemp&lt;/span&gt;
&lt;span class="n"&gt;sensors&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For more instructions on this top, 
see &lt;a href="http://www.cyberciti.biz/faq/howto-linux-get-sensors-information/"&gt;nixCraft&lt;/a&gt;.&lt;/p&gt;</content><category term="modprobe"></category><category term="sensors"></category><category term="CPU"></category><category term="Linux"></category><category term="temperature"></category></entry><entry><title>Abuse of Vector in R</title><link href="http://www.legendu.net/en/blog/abuse-vector-r/" rel="alternate"></link><published>2012-05-16T00:00:00-07:00</published><updated>2012-05-16T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-05-16:/en/blog/abuse-vector-r/</id><summary type="html">&lt;p&gt;R is a language that is friendly to vector operation, 
so vector is an important data structure in R. 
A single data (of basic types, e.g., numeric or character) is essentially a
vector of length 1. A matrix or an array in R is essentially a vector. 
R make …&lt;/p&gt;</summary><content type="html">&lt;p&gt;R is a language that is friendly to vector operation, 
so vector is an important data structure in R. 
A single data (of basic types, e.g., numeric or character) is essentially a
vector of length 1. A matrix or an array in R is essentially a vector. 
R make extensive use of vectors. A vector in R can either be a column vector or
a row vector depending on how you write the code. This is perhaps OK with most
people though it invites chances to make mistakes. One annoying thing about
vector is that When you extract a row or a column from a
matrix, you get a vector. 
I think this is one place that R abuse vectors. When you extract a sub matrix,
you want it to be a matrix as well most of the time. Even if you do want a
vector, most functions in R coerce a matrix to vector automatically, so return a
matrix instead of a vector doesn't hurt. MATLAB goes to another
extreem on vectors. There is no separate data structre for vector in MATLAB. 
A vector in MATLAB is either a matrix with 1 row or a matrix with 1 column. &lt;/p&gt;
&lt;p&gt;R is famous for its simple and flexible syntax, however, it's too
flexible and as coinsequence that it's slow compared to many other programming 
languages, and it's easy to make tricky mistakes in R. &lt;/p&gt;</content><category term="programming"></category><category term="matrix"></category><category term="data sturcture"></category><category term="data"></category><category term="vector"></category><category term="R"></category></entry><entry><title>Install Softwares in Linux</title><link href="http://www.legendu.net/en/blog/install-software-linux/" rel="alternate"></link><published>2012-04-30T00:00:00-07:00</published><updated>2012-04-30T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2012-04-30:/en/blog/install-software-linux/</id><summary type="html">&lt;p&gt;Sometime when you install softwares in Linux, 
you get an error message saying that you do not have permission while you used sudo or the root account. 
This probably means that you do not have full access to some installation files.
An easy way to solve this problem is to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometime when you install softwares in Linux, 
you get an error message saying that you do not have permission while you used sudo or the root account. 
This probably means that you do not have full access to some installation files.
An easy way to solve this problem is to change file permissions of these installation files.
For example, 
suppose "inst" is the directory containing installation files, 
you can 
change file access use the following command and try installation again.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="mi"&gt;755&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Linux"></category><category term="softwares"></category><category term="permission"></category></entry><entry><title>Tips for VB/VB.net</title><link href="http://www.legendu.net/en/blog/tips-vb.net/" rel="alternate"></link><published>2011-08-31T00:00:00-07:00</published><updated>2011-08-31T00:00:00-07:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2011-08-31:/en/blog/tips-vb.net/</id><summary type="html">&lt;h2 id="about-string-functions"&gt;About String Functions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The uniform random variables generated by VB is pretty good.
At least it's acceptable according to the test in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String functions that return a string can be used with a dollar sign at the end, 
which is a faster version of the corresponding function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;h2 id="about-string-functions"&gt;About String Functions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The uniform random variables generated by VB is pretty good.
At least it's acceptable according to the test in R.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String functions that return a string can be used with a dollar sign at the end, 
which is a faster version of the corresponding function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;trim&lt;/code&gt; gets rid of leading and trailing spaces.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;instr&lt;/code&gt; supports both case sensitive and case insensitive comparisons.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The function &lt;code&gt;split&lt;/code&gt; can split a string into a string array.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="tips"></category><category term="VB/VB.net"></category><category term="programming"></category><category term="string"></category></entry><entry><title>Combination and Permutation Related Functions in R</title><link href="http://www.legendu.net/en/blog/combination-and-permutation-in-r/" rel="alternate"></link><published>2010-11-20T00:00:00-08:00</published><updated>2010-11-20T00:00:00-08:00</updated><author><name>Ben Chuanlong Du</name></author><id>tag:www.legendu.net,2010-11-20:/en/blog/combination-and-permutation-in-r/</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;expand.grid&lt;/code&gt; creates a data frame from all possible combinations of supplied vectors or factors. 
For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="n"&gt;Var1&lt;/span&gt; &lt;span class="n"&gt;Var2&lt;/span&gt; &lt;span class="n"&gt;Var3&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;1 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;expand.grid&lt;/code&gt; creates a data frame from all possible combinations of supplied vectors or factors. 
For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   &lt;span class="n"&gt;Var1&lt;/span&gt; &lt;span class="n"&gt;Var2&lt;/span&gt; &lt;span class="n"&gt;Var3&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;     &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;     &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;    &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;    &lt;span class="n"&gt;a&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;    &lt;span class="n"&gt;b&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="o"&gt;-&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;combn&lt;/code&gt; generates all combinations of &lt;span class="math"&gt;\(n\)&lt;/span&gt; elements taking &lt;span class="math"&gt;\(m\)&lt;/span&gt; at a time.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' }, Macros: {} }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="R"></category><category term="statisitcs"></category><category term="combination"></category><category term="permutation"></category><category term="programming"></category></entry></feed>